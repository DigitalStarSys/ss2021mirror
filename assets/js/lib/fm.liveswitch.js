!function(name,dependencies,definition){if("object"==typeof exports){for(var i=0;i<dependencies.length;i++)require("./"+dependencies[i]);module.exports=definition()}else"function"==typeof define&&define.amd?define(name,dependencies,definition):this[name]=definition()}("fm.liveswitch",[],(function(){"undefined"==typeof global||global.window||(global.window=global,global.document={cookie:""}),"undefined"==typeof global||global.navigator||(global.navigator={userAgent:" "}),this.fm=this.fm||{},function(fm){!function(liveswitch){var ArrayExtensions=function(){function ArrayExtensions(){}return ArrayExtensions.prototype.getTypeString=function(){return"[fm.liveswitch.ArrayExtensions]"},ArrayExtensions.getCount=function(array){return array.length},ArrayExtensions.add=function(array,value){array.push(value)},ArrayExtensions.remove=function(array,value){for(var i=0;i<array.length;i++){if(array[i]===value)return array.splice(i,1),!0}return!1},ArrayExtensions.removeAt=function(array,index){array.splice(index,1)},ArrayExtensions.insert=function(array,index,value){array.splice(index,0,value)},ArrayExtensions.toArray=function(array){return this.clone(array)},ArrayExtensions.clear=function(array){array.splice(0,array.length)},ArrayExtensions.addRange=function(array,values){for(var _i=0,values_1=values;_i<values_1.length;_i++){var v=values_1[_i];array.push(v)}},ArrayExtensions.getRange=function(array,index,count){for(var newArray=new Array(count),i=0;i<newArray.length;i++)newArray[i]=array[i+index];return newArray},ArrayExtensions.contains=function(array,value){for(var _i=0,array_1=array;_i<array_1.length;_i++){if(array_1[_i]===value)return!0}return!1},ArrayExtensions.newArray=function(values){return this.clone(values)},ArrayExtensions.clone=function(array){for(var newArray=new Array(array.length),i=0;i<newArray.length;i++)newArray[i]=array[i];return newArray},ArrayExtensions.map=function(array,callback){for(var newArray=new Array(array.length),i=0;i<newArray.length;i++)newArray[i]=callback(array[i],i,array);return newArray},ArrayExtensions}();liveswitch.ArrayExtensions=ArrayExtensions}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AsyncLoggerBase=function(){function AsyncLoggerBase(tag){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var tag_1=__arguments[0];if(fm.liveswitch.Global.equals(tag_1,null))throw new fm.liveswitch.Exception("The tag parameter cannot be null.");this.setTag(tag_1)}return AsyncLoggerBase.prototype.getTypeString=function(){return"[fm.liveswitch.AsyncLoggerBase]"},AsyncLoggerBase.processLogEvent=function(logEvent){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.LogConfiguration.getHasProviders()&&fm.liveswitch.LogConfiguration.getTagLogLevel(logEvent.getTag())<=logEvent.getLevel())for(var _i=0,_a=fm.liveswitch.LogConfiguration.getLogProviders();_i<_a.length;_i++){var provider=_a[_i];provider.log(logEvent)}},AsyncLoggerBase.prototype.debug=function(){if(1==arguments.length){var message=arguments[0];this.doLog(fm.liveswitch.LogLevel.Debug,null,message,null)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isError(arguments[1]))){message=arguments[0];var ex=arguments[1];this.doLog(fm.liveswitch.LogLevel.Debug,null,message,ex)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){var scope=arguments[0];message=arguments[1];this.doLog(fm.liveswitch.LogLevel.Debug,scope,message,null)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");scope=arguments[0],message=arguments[1],ex=arguments[2];this.doLog(fm.liveswitch.LogLevel.Debug,scope,message,ex)}},AsyncLoggerBase.prototype.doLog=function(level,scope,message,exception){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.doQueueLogEvent(new fm.liveswitch.LogEvent(fm.liveswitch.DateTime.getUtcNow(),this.getTag(),scope,level,message,exception,fm.liveswitch.ManagedThread.getCurrentThreadId()))},AsyncLoggerBase.prototype.error=function(){if(1==arguments.length){var message=arguments[0];this.doLog(fm.liveswitch.LogLevel.Error,null,message,null)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isError(arguments[1]))){message=arguments[0];var ex=arguments[1];this.doLog(fm.liveswitch.LogLevel.Error,null,message,ex)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){var scope=arguments[0];message=arguments[1];this.doLog(fm.liveswitch.LogLevel.Error,scope,message,null)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");scope=arguments[0],message=arguments[1],ex=arguments[2];this.doLog(fm.liveswitch.LogLevel.Error,scope,message,ex)}},AsyncLoggerBase.prototype.fatal=function(){if(1==arguments.length){var message=arguments[0];this.doLog(fm.liveswitch.LogLevel.Fatal,null,message,null)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isError(arguments[1]))){message=arguments[0];var ex=arguments[1];this.doLog(fm.liveswitch.LogLevel.Fatal,null,message,ex)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){var scope=arguments[0];message=arguments[1];this.doLog(fm.liveswitch.LogLevel.Fatal,scope,message,null)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");scope=arguments[0],message=arguments[1],ex=arguments[2];this.doLog(fm.liveswitch.LogLevel.Fatal,scope,message,ex)}},AsyncLoggerBase.prototype.getIsDebugEnabled=function(){if(0==arguments.length)return this.isLogEnabled(fm.liveswitch.LogLevel.Debug);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.getIsErrorEnabled=function(){if(0==arguments.length)return this.isLogEnabled(fm.liveswitch.LogLevel.Error);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.getIsFatalEnabled=function(){if(0==arguments.length)return this.isLogEnabled(fm.liveswitch.LogLevel.Fatal);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.getIsInfoEnabled=function(){if(0==arguments.length)return this.isLogEnabled(fm.liveswitch.LogLevel.Info);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.getIsVerboseEnabled=function(){if(0==arguments.length)return this.isLogEnabled(fm.liveswitch.LogLevel.Verbose);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.getIsWarnEnabled=function(){if(0==arguments.length)return this.isLogEnabled(fm.liveswitch.LogLevel.Warn);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.info=function(){if(1==arguments.length){var message=arguments[0];this.doLog(fm.liveswitch.LogLevel.Info,null,message,null)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isError(arguments[1]))){message=arguments[0];var ex=arguments[1];this.doLog(fm.liveswitch.LogLevel.Info,null,message,ex)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){var scope=arguments[0];message=arguments[1];this.doLog(fm.liveswitch.LogLevel.Info,scope,message,null)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");scope=arguments[0],message=arguments[1],ex=arguments[2];this.doLog(fm.liveswitch.LogLevel.Info,scope,message,ex)}},AsyncLoggerBase.prototype.isLogEnabled=function(level){if(1==arguments.length)return fm.liveswitch.LogConfiguration.getTagLogLevel(this.getTag())<=level;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AsyncLoggerBase.prototype.log=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.LogEvent]"))){var logEvent=arguments[0];this.doQueueLogEvent(logEvent)}else if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var message=arguments[0];this.doLog(fm.liveswitch.LogLevel.Info,null,message,null)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var scope=arguments[0];message=arguments[1];this.doLog(fm.liveswitch.LogLevel.Info,scope,message,null)}},AsyncLoggerBase.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},AsyncLoggerBase.prototype.verbose=function(){if(1==arguments.length){var message=arguments[0];this.doLog(fm.liveswitch.LogLevel.Verbose,null,message,null)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isError(arguments[1]))){message=arguments[0];var ex=arguments[1];this.doLog(fm.liveswitch.LogLevel.Verbose,null,message,ex)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){var scope=arguments[0];message=arguments[1];this.doLog(fm.liveswitch.LogLevel.Verbose,scope,message,null)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");scope=arguments[0],message=arguments[1],ex=arguments[2];this.doLog(fm.liveswitch.LogLevel.Verbose,scope,message,ex)}},AsyncLoggerBase.prototype.warn=function(){if(1==arguments.length){var message=arguments[0];this.doLog(fm.liveswitch.LogLevel.Warn,null,message,null)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isError(arguments[1]))){message=arguments[0];var ex=arguments[1];this.doLog(fm.liveswitch.LogLevel.Warn,null,message,ex)}else if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){var scope=arguments[0];message=arguments[1];this.doLog(fm.liveswitch.LogLevel.Warn,scope,message,null)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");scope=arguments[0],message=arguments[1],ex=arguments[2];this.doLog(fm.liveswitch.LogLevel.Warn,scope,message,ex)}},AsyncLoggerBase}();liveswitch.AsyncLoggerBase=AsyncLoggerBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={}));var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});!function(fm){!function(liveswitch){var AsyncLogger=function(_super){function AsyncLogger(tag){return _super.call(this,tag)||this}return __extends(AsyncLogger,_super),AsyncLogger.prototype.getTypeString=function(){return"[fm.liveswitch.AsyncLogger]"},AsyncLogger.prototype.doQueueLogEvent=function(logEvent){window.setTimeout((function(){fm.liveswitch.AsyncLoggerBase.processLogEvent(logEvent)}),1)},AsyncLogger.prototype.flush=function(){},AsyncLogger}(fm.liveswitch.AsyncLoggerBase);liveswitch.AsyncLogger=AsyncLogger}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AtomicInteger=function(){function AtomicInteger(startValue){this._value=0==arguments.length?0:startValue}return AtomicInteger.prototype.compareAndSwap=function(expected,newValue){var oldValue=this._value;return this._value==expected&&(this._value=newValue),oldValue},AtomicInteger.prototype.getValue=function(){return this._value},AtomicInteger.prototype.add=function(value){return this._value=this._value+value,this._value},AtomicInteger.prototype.subtract=function(value){return this._value=this._value-value,this._value},AtomicInteger.prototype.increment=function(){return this._value=this._value+1,this._value},AtomicInteger.prototype.decrement=function(){return this._value=this._value-1,this._value},AtomicInteger}();liveswitch.AtomicInteger=AtomicInteger}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AtomicLong=function(){function AtomicLong(startValue){this._value=0==arguments.length?0:startValue}return AtomicLong.prototype.compareAndSwap=function(expected,newValue){var oldValue=this._value;return this._value==expected&&(this._value=newValue),oldValue},AtomicLong.prototype.getValue=function(){return this._value},AtomicLong.prototype.add=function(value){return this._value=this._value+value,this._value},AtomicLong.prototype.subtract=function(value){return this._value=this._value-value,this._value},AtomicLong.prototype.increment=function(){return this._value=this._value+1,this._value},AtomicLong.prototype.decrement=function(){return this._value=this._value-1,this._value},AtomicLong}();liveswitch.AtomicLong=AtomicLong}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Base64=function(){function Base64(){}return Base64.prototype.getTypeString=function(){return"[fm.liveswitch.Base64]"},Base64.encode=function(b){return b?this.encodeIt(b,0,b.length):null},Base64.encodeBuffer=function(buffer){return buffer?this.encodeIt(buffer.getData(),buffer.getIndex(),buffer.getLength()):null},Base64.decode=function(s){return s&&Base64._base64Regex.test(s)?this.decodeIt(s):null},Base64.tryEncode=function(b,result){try{var encoded=Base64.encode(b);return result.setValue(encoded),!!encoded}catch(error){return result.setValue(null),!1}},Base64.tryEncodeBuffer=function(buffer,result){try{var encoded=Base64.encodeBuffer(buffer);return result.setValue(encoded),!!encoded}catch(error){return result.setValue(null),!1}},Base64.tryDecode=function(s,result){try{var decoded=Base64.decode(s);return result.setValue(decoded),!!decoded}catch(error){return result.setValue(null),!1}},Base64.b64ToUint6=function(cc){return cc>64&&cc<91?cc-65:cc>96&&cc<123?cc-71:cc>47&&cc<58?cc+4:43===cc?62:47===cc?63:0},Base64.decodeIt=function(str64,blocksSize){if("undefined"==typeof Uint8Array)return null;for(var str=str64.replace(/[^A-Za-z0-9\+\/]/g,""),slen=str.length,blen=blocksSize?Math.ceil((3*slen+1>>2)/blocksSize)*blocksSize:3*slen+1>>2,bytes=new Uint8Array(blen),n=0,bi=0,si=0;si<slen;si++){var mod4=3&si;if(n|=Base64.b64ToUint6(str.charCodeAt(si))<<18-6*mod4,3===mod4||slen-si==1){for(var mod3=0;mod3<3&&bi<blen;)bytes[bi]=n>>>(16>>>mod3&24)&255,mod3++,bi++;n=0}}return bytes},Base64.uint6ToB64=function(b){return b<26?b+65:b<52?b+71:b<62?b-4:62===b?43:63===b?47:65},Base64.encodeIt=function(bytes,index,length){if("undefined"==typeof Uint8Array)return null;for(var str="",blen=length,n=0,bi=0;bi<blen;bi++){var mod3=bi%3;n|=bytes[index+bi]<<(16>>>mod3&24),2!==mod3&&length-bi!=1||(str+=String.fromCharCode(Base64.uint6ToB64(n>>>18&63),Base64.uint6ToB64(n>>>12&63),Base64.uint6ToB64(n>>>6&63),Base64.uint6ToB64(63&n)),n=0)}return str.replace(/A(?=A$|$)/g,"=")},Base64._base64Regex=/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]*)?$/,Base64}();liveswitch.Base64=Base64}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var BitAssistant=function(){function BitAssistant(){}return BitAssistant.prototype.getTypeString=function(){return"[fm.liveswitch.BitAssistant]"},BitAssistant.castByte=function(value){return value},BitAssistant.castInteger=function(value){return value},BitAssistant.castLong=function(value){return value},BitAssistant.leftShift=function(value,count){return value<<count},BitAssistant.leftShiftShort=function(value,count){return value<<count},BitAssistant.leftShiftInteger=function(value,count){return value<<count},BitAssistant.leftShiftLong=function(value,count){return value<<count},BitAssistant.rightShift=function(value,count){return value>>count},BitAssistant.rightShiftShort=function(value,count){return value>>count},BitAssistant.rightShiftInteger=function(value,count){return value>>count},BitAssistant.rightShiftLong=function(value,count){return value>>count},BitAssistant.sequencesAreEqual=function(){if(2==arguments.length){var array2=arguments[1];if(null==(array1=arguments[0])&&null==array2)return!0;if(null==array1||null==array2)return!1;if(array1.length!=array2.length)return!1;for(var i=0;i<array1.length;i++)if(array1[i]!=array2[i])return!1;return!0}var array1,offset1=arguments[1],offset2=(array2=arguments[2],arguments[3]),length_1=arguments[4];if(null==(array1=arguments[0])&&null==array2)return!0;if(null==array1||null==array2)return!1;if(array1.length<offset1+length_1||array2.length<offset2+length_1)return!1;for(i=0;i<length_1;i++)if(array1[offset1+i]!=array2[offset2+i])return!1;return!0},BitAssistant.sequencesAreEqualConstantTime=function(){if(2==arguments.length){var array2=arguments[1];if(null==(array1=arguments[0])&&null==array2)return!0;if(null==array1||null==array2)return!1;if(array1.length!=array2.length)return!1;for(var areEqual=!0,i=0;i<array1.length;i++)array1[i]!=array2[i]&&(areEqual=!1);return areEqual}var array1,offset1=arguments[1],offset2=(array2=arguments[2],arguments[3]),length_2=arguments[4];if(null==(array1=arguments[0])&&null==array2)return!0;if(null==array1||null==array2)return!1;if(array1.length<offset1+length_2||array2.length<offset2+length_2)return!1;for(areEqual=!0,i=0;i<length_2;i++)array1[offset1+i]!=array2[offset2+i]&&(areEqual=!1);return areEqual},BitAssistant.subArray=function(array,offset,count){if(void 0===count)return BitAssistant.subArray(array,offset,array.length-offset);var subarray=new Uint8Array(count);return BitAssistant.copy(array,offset,subarray,0,count),subarray},BitAssistant.reverse=function(array){array.reverse()},BitAssistant.copy=function(source,sourceIndex,destination,destinationIndex,length){destination.set(source.subarray(sourceIndex,sourceIndex+length),destinationIndex)},BitAssistant.set=function(array,index,length,value){array.fill(value,index,index+length)},BitAssistant.getHexString=function(){if(1==arguments.length){var array=arguments[0];return BitAssistant.getHexString(array,0,array.length)}array=arguments[0];for(var offset=arguments[1],length_3=arguments[2],s="",i=offset;i<offset+length_3;i++){var hex=(255&array[i]).toString(16);s+=hex=1===hex.length?"0"+hex:hex}return s},BitAssistant.getHexBytes=function(s){for(var a=[],i=0;i<s.length;i+=2)a.push(parseInt(s.substr(i,2),16));return new Uint8Array(a)},BitAssistant}();liveswitch.BitAssistant=BitAssistant}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var BooleanExtensions=function(){function BooleanExtensions(){}return BooleanExtensions.prototype.getTypeString=function(){return"[fm.liveswitch.BooleanExtensions]"},BooleanExtensions.toString=function(value,format){return value.toString()},BooleanExtensions}();liveswitch.BooleanExtensions=BooleanExtensions}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ByteCollection=function(){function ByteCollection(buffer){this._buffer=buffer?new Uint8Array(buffer):new Uint8Array(0)}return ByteCollection.prototype.getTypeString=function(){return"[fm.liveswitch.ByteCollection]"},ByteCollection.prototype.count=function(){return this._buffer.length},ByteCollection.prototype.add=function(b){var bufferA=this._buffer,newBuffer=new Uint8Array(bufferA.length+1);newBuffer.set(bufferA),newBuffer[bufferA.length]=b,this._buffer=newBuffer},ByteCollection.prototype.addRange=function(buffer){var byteCollection=fm.liveswitch.Global.tryCast(buffer,ByteCollection);byteCollection&&(buffer=byteCollection._buffer);var bufferA=this._buffer,bufferB=buffer,newBuffer=new Uint8Array(bufferA.length+bufferB.length);newBuffer.set(bufferA),newBuffer.set(bufferB,bufferA.length),this._buffer=newBuffer},ByteCollection.prototype.removeRange=function(index,count){var bufferA=this._buffer.subarray(0,index),bufferB=this._buffer.subarray(index+count),newBuffer=new Uint8Array(bufferA.length+bufferB.length);newBuffer.set(bufferA),newBuffer.set(bufferB,bufferA.length),this._buffer=newBuffer},ByteCollection.prototype.insertRange=function(index,buffer){var byteCollection=fm.liveswitch.Global.tryCast(buffer,ByteCollection);byteCollection&&(buffer=byteCollection._buffer);var bufferA=this._buffer.subarray(0,index),bufferB=buffer,bufferC=this._buffer.subarray(index),newBuffer=new Uint8Array(bufferA.length+bufferB.length+bufferC.length);newBuffer.set(bufferA),newBuffer.set(bufferB,bufferA.length),newBuffer.set(bufferC,bufferA.length+bufferB.length),this._buffer=newBuffer},ByteCollection.prototype.getRange=function(index,count){var buffer=new Uint8Array(count);return buffer.set(this._buffer.subarray(index,index+count)),buffer},ByteCollection.prototype.get=function(index){return this._buffer[index]},ByteCollection.prototype.toArray=function(){return new Uint8Array(this._buffer)},ByteCollection}();liveswitch.ByteCollection=ByteCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LogProvider=function(){function LogProvider(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchLogProviderInit(),this.setLevel(fm.liveswitch.LogLevel.Info),this.setProcessId(fm.liveswitch.Platform.getInstance().getProcessId())}return LogProvider.prototype.getTypeString=function(){return"[fm.liveswitch.LogProvider]"},LogProvider.prototype.fmliveswitchLogProviderInit=function(){this._processId=0},LogProvider.getLogLevelString=function(level){if(1==arguments.length){var _var0=level;return _var0==fm.liveswitch.LogLevel.Verbose?"VERBOSE":_var0==fm.liveswitch.LogLevel.Debug?"DEBUG  ":_var0==fm.liveswitch.LogLevel.Info?"INFO   ":_var0==fm.liveswitch.LogLevel.Warn?"WARN   ":_var0==fm.liveswitch.LogLevel.Error?"ERROR  ":_var0==fm.liveswitch.LogLevel.Fatal?"FATAL  ":"NONE   "}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.getPrefixTimestamp=function(timestamp){if(1==arguments.length)return fm.liveswitch.Iso8601Timestamp.dateTimeToIso8601(timestamp);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.getProduct=function(){if(0==arguments.length)return"LiveSwitch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.prototype.generateLogLine=function(logEvent){if(1==arguments.length){var product=fm.liveswitch.LogProvider.getProduct(),str2=fm.liveswitch.StringExtensions.format("[{0}][{1}][{2}] {3} [{4}][{5}] {6} {7}",[product,fm.liveswitch.NumberExtensions.toString(this.getProcessId()),fm.liveswitch.NumberExtensions.toString(logEvent.getThreadId()),fm.liveswitch.LogProvider.getLogLevelString(logEvent.getLevel()),fm.liveswitch.Global.equals(logEvent.getTag(),null)?"-":logEvent.getTag(),fm.liveswitch.Global.equals(logEvent.getScope(),null)?"-":logEvent.getScope(),fm.liveswitch.LogProvider.getPrefixTimestamp(logEvent.getTimestamp()),logEvent.getMessage()]);return fm.liveswitch.Global.equals(logEvent.getException(),null)||(str2=fm.liveswitch.StringExtensions.concat(str2,fm.liveswitch.StringExtensions.format("\n{0}",logEvent.getException().toString()))),str2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.prototype.getFilter=function(){if(0==arguments.length)return this._filter;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.prototype.getLevel=function(){if(0==arguments.length)return this._level;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.prototype.getPrefix=function(level,includeTimestamp){if(2==arguments.length){var logLevelString=fm.liveswitch.LogProvider.getLogLevelString(level);return includeTimestamp&&(logLevelString=fm.liveswitch.StringExtensions.format("{0} {1}",logLevelString,fm.liveswitch.LogProvider.getPrefixTimestamp(fm.liveswitch.DateTime.getUtcNow()))),logLevelString}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.prototype.getProcessId=function(){if(0==arguments.length)return this._processId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogProvider.prototype.log=function(logEvent){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(logEvent.getLevel()>=this.getLevel())try{var flag=!0;fm.liveswitch.Global.equals(this.getFilter(),null)||(flag=this.getFilter()(logEvent)),flag&&this.doLog(logEvent)}catch(obj1){}},LogProvider.prototype.setFilter=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._filter=value},LogProvider.prototype.setLevel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._level=value},LogProvider.prototype.setProcessId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._processId=fm.liveswitch.Global.toInt(value)},LogProvider}();liveswitch.LogProvider=LogProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConsoleLogProvider=function(_super){function ConsoleLogProvider(level){var _this=_super.call(this)||this;return void 0===level&&(level=fm.liveswitch.LogLevel.Warn),_this.setLevel(level),_this}return __extends(ConsoleLogProvider,_super),ConsoleLogProvider.prototype.getTypeString=function(){return"[fm.liveswitch.ConsoleLogProvider],"+_super.prototype.getTypeString.call(this)},ConsoleLogProvider.prototype.writeLine=function(text){window.console&&window.console.log&&window.console.log(text)},ConsoleLogProvider.prototype.doLog=function(logItem){if(window.console){var text=_super.prototype.generateLogLine.call(this,logItem);switch(logItem.getLevel()){case fm.liveswitch.LogLevel.Fatal:case fm.liveswitch.LogLevel.Error:if(window.console.error)return void window.console.error(text);break;case fm.liveswitch.LogLevel.Warn:if(window.console.warn)return void window.console.warn(text);break;case fm.liveswitch.LogLevel.Info:if(window.console.info)return void window.console.info(text);break;case fm.liveswitch.LogLevel.Debug:case fm.liveswitch.LogLevel.Verbose:if(window.console.debug)return void window.console.debug(text)}window.console.log(text)}},ConsoleLogProvider}(fm.liveswitch.LogProvider);liveswitch.ConsoleLogProvider=ConsoleLogProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Convert=function(){function Convert(){}return Convert.prototype.getTypeString=function(){return"[fm.liveswitch.Convert]"},Convert.toInt32=function(s,base){return parseInt(s,base)},Convert}();liveswitch.Convert=Convert}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CultureInfo=function(){function CultureInfo(){}return CultureInfo.getInvariantCulture=function(){return new CultureInfo},CultureInfo.getCurrentCulture=function(){return new CultureInfo},CultureInfo}();liveswitch.CultureInfo=CultureInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DateTime=function(){function DateTime(){if(1==arguments.length)if(fm.liveswitch.Util.isDate(arguments[0]))this._date=arguments[0];else{var ticks=arguments[0];this._date=new Date((ticks-621355968e9)/fm.liveswitch.Constants.getTicksPerMillisecond())}else if(arguments.length>=6){var year=arguments[0],month=arguments[1],day=arguments[2],hour=arguments[3],minute=arguments[4],second=arguments[5],millisecond=0;arguments.length>=7&&(millisecond=arguments[6]),this._date=new Date(Date.UTC(year,month-1,day,hour,minute,second,millisecond))}}return DateTime.prototype.getTypeString=function(){return"[fm.liveswitch.DateTime]"},DateTime.getNow=function(){return new DateTime(new Date)},DateTime.getUtcNow=function(){return new DateTime(new Date)},DateTime.prototype.getDate=function(){return this._date},DateTime.prototype.getTicks=function(){return 621355968e9+this._date.getTime()*fm.liveswitch.Constants.getTicksPerMillisecond()},DateTime.prototype.toUniversalTime=function(){return new DateTime(this._date)},DateTime.prototype.getYear=function(){return this._date.getUTCFullYear()},DateTime.prototype.getMonth=function(){return this._date.getUTCMonth()+1},DateTime.prototype.getDay=function(){return this._date.getUTCDate()},DateTime.prototype.getHour=function(){return this._date.getUTCHours()},DateTime.prototype.getMinute=function(){return this._date.getUTCMinutes()},DateTime.prototype.getSecond=function(){return this._date.getUTCSeconds()},DateTime.prototype.getMillisecond=function(){return this._date.getUTCMilliseconds()},DateTime.prototype.addHours=function(hours){return new DateTime(this.getTicks()+hours*fm.liveswitch.Constants.getTicksPerHour())},DateTime.prototype.addMinutes=function(minutes){return new DateTime(this.getTicks()+minutes*fm.liveswitch.Constants.getTicksPerMinute())},DateTime.prototype.addSeconds=function(seconds){return new DateTime(this.getTicks()+seconds*fm.liveswitch.Constants.getTicksPerSecond())},DateTime.prototype.addMilliseconds=function(milliseconds){return new DateTime(this.getTicks()+milliseconds*fm.liveswitch.Constants.getTicksPerMillisecond())},DateTime}();liveswitch.DateTime=DateTime}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DateTimeFormatInfo=function(){function DateTimeFormatInfo(){}return DateTimeFormatInfo.prototype.getTypeString=function(){return"[fm.liveswitch.DateTimeFormatInfo]"},DateTimeFormatInfo.getInvariantInfo=function(){return new DateTimeFormatInfo},DateTimeFormatInfo}();liveswitch.DateTimeFormatInfo=DateTimeFormatInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(DateTimeStyles){DateTimeStyles[DateTimeStyles.AssumeUniversal=1]="AssumeUniversal",DateTimeStyles[DateTimeStyles.AdjustToUniversal=2]="AdjustToUniversal"}(liveswitch.DateTimeStyles||(liveswitch.DateTimeStyles={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DispatchQueue=function(){function DispatchQueue(action){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this._action=action,this._count=new fm.liveswitch.AtomicLong}return DispatchQueue.prototype.getTypeString=function(){return"[fm.liveswitch.DispatchQueue]"},DispatchQueue.prototype.getQueueCount=function(){return this._count.getValue()},DispatchQueue.prototype.destroy=function(){},DispatchQueue.prototype.enqueue=function(item){var action=this._action,atomic=this._count;atomic.increment(),window.setTimeout((function(){try{action(item)}finally{atomic.decrement()}}),1)},DispatchQueue}();liveswitch.DispatchQueue=DispatchQueue}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DomLogProvider=function(_super){function DomLogProvider(container,level){var _this=_super.call(this)||this;return _this._container=container,void 0===level&&(level=fm.liveswitch.LogLevel.Warn),_this.setLevel(level),_this}return __extends(DomLogProvider,_super),DomLogProvider.prototype.getTypeString=function(){return"[fm.liveswitch.DomLogProvider],"+_super.prototype.getTypeString.call(this)},DomLogProvider.prototype.writeLine=function(text){var div=document.createElement("div");div.innerHTML=text.replace(/\n/g,"<br />"),this._container.appendChild(div)},DomLogProvider.prototype.doLog=function(logItem){var text=_super.prototype.generateLogLine.call(this,logItem);this.writeLine(text)},DomLogProvider}(fm.liveswitch.LogProvider);liveswitch.DomLogProvider=DomLogProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Encoding=function(){function Encoding(){}return Encoding.prototype.getTypeString=function(){return"[fm.liveswitch.Encoding]"},Encoding.getAscii=function(){return new Encoding},Encoding.getUtf8=function(){return new Encoding},Encoding.prototype.getString=function(bytes,index,count){void 0===index&&(index=0),void 0===count&&(count=bytes.length);for(var str="",i=index;i<index+count;){var c=void 0;if(bytes[i]<=127)c=bytes[i];else if(bytes[i]>>5==6)c=(31&bytes[i])<<6|63&bytes[++i];else if(bytes[i]>>4==14)c=(15&bytes[i])<<12|(63&bytes[++i])<<6|63&bytes[++i];else{for(var s=1;bytes[i]&32>>>s;)s++;for(c=bytes[i]&31>>>s;s-- >=0;)c=c<<6^63&bytes[++i]}str+=String.fromCharCode(c),i++}return str},Encoding.prototype.getBytes=function(str){if(!str)return null;for(var n=str.length,idx=0,utf8=new Uint8Array(new ArrayBuffer(4*n)),i=0;i<n;){var c=str.charCodeAt(i);if(c<=127)utf8[idx++]=c;else if(c<=2047)utf8[idx++]=192|c>>>6,utf8[idx++]=128|63&c;else if(c<=65535)utf8[idx++]=224|c>>>12,utf8[idx++]=128|c>>>6&63,utf8[idx++]=128|63&c;else{for(var j=4;c>>6*j;)j++;for(utf8[idx++]=65280>>>j&255|c>>>6*--j;j--;)utf8[idx++]=128|c>>>6*j&63}i++}return utf8.subarray(0,idx)},Encoding.prototype.getByteCount=function(str){return this.getBytes(str).length},Encoding}();liveswitch.Encoding=Encoding}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={}));var fmliveswitchGlobalError=function(_super){function fmliveswitchGlobalError(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(fmliveswitchGlobalError,_super),fmliveswitchGlobalError}(Error);!function(fm){!function(liveswitch){var Exception=function(_super){function Exception(message){var _this=_super.call(this,message)||this;return _this.message=message,_this.name="Exception",_this}return __extends(Exception,_super),Exception}(fmliveswitchGlobalError);liveswitch.Exception=Exception}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var FutureBase=function(){function FutureBase(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return FutureBase.prototype.getTypeString=function(){return"[fm.liveswitch.FutureBase]"},FutureBase.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FutureBase.prototype.getResult=function(){if(0==arguments.length)return this._result;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FutureBase.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FutureBase.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},FutureBase.prototype.setResult=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._result=value},FutureBase.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},FutureBase}();liveswitch.FutureBase=FutureBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Future=function(_super){function Future(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Future,_super),Future.prototype.getTypeString=function(){return"[fm.liveswitch.Future]"},Future}(fm.liveswitch.FutureBase);liveswitch.Future=Future}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Global=function(){function Global(){}return Global.prototype.getTypeString=function(){return"[fm.liveswitch.Global]"},Global.tryCast=function(x,t){return!x||x instanceof t?x:null},Global.tryCastArray=function(x){return!x||x instanceof Array?x:null},Global.tryCastObject=function(x){return!x||x instanceof Object?x:null},Global.tryCastString=function(x){return x&&"string"!=typeof x?null:x},Global.tryCastInt=function(x){return x&&isNaN(parseInt(x))?null:x},Global.tryCastFloat=function(x){return x&&isNaN(parseFloat(x))?null:x},Global.toInt=function(x){return x<0?Math.ceil(x):Math.floor(x)},Global.xor=function(x,y){return x!==y},Global.equals=function(x1,x2){return null==x1?null==x2:null==x2?null==x1:x1===x2},Global}();liveswitch.Global=Global}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Guid=function(){function Guid(guidString){this._guidString=void 0===guidString?"00000000-0000-0000-0000-000000000000":guidString}return Guid.prototype.getTypeString=function(){return"[fm.liveswitch.Guid]"},Guid.prototype.equals=function(guid){return guid.toString()===this._guidString},Guid.prototype.toString=function(){return this._guidString},Guid.newGuid=function(){return new Guid("xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(c){var r=16*Math.random()|0;return("x"===c?r:3&r|8).toString(16)})))},Guid.equals=function(guid1,guid2){return null==guid1?null==guid2:null==guid2?null==guid1:guid1.equals(guid2)},Guid.empty=new Guid,Guid}();liveswitch.Guid=Guid}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HashContextBase=function(){function HashContextBase(type){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type_1=__arguments[0];this.setType(type_1)}return HashContextBase.prototype.getTypeString=function(){return"[fm.liveswitch.HashContextBase]"},HashContextBase.compute=function(){if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataBuffer]"))){var type=arguments[0],input=arguments[1],buffer=(context=new fm.liveswitch.HashContext(type)).compute(input);return context.destroy(),buffer}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){type=arguments[0];var context,inputString=arguments[1];buffer=(context=new fm.liveswitch.HashContext(type)).compute(inputString);return context.destroy(),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HashContextBase.prototype.compute=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var input=arguments[0];return this.doCompute(input)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var inputString=arguments[0];return this.doCompute(fm.liveswitch.DataBuffer.wrap(fm.liveswitch.Utf8.encode(inputString)))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HashContextBase.prototype.destroy=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.doDestroy()},HashContextBase.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HashContextBase.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},HashContextBase}();liveswitch.HashContextBase=HashContextBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HashContext=function(_super){function HashContext(type){return _super.call(this,type)||this}return __extends(HashContext,_super),HashContext.prototype.getTypeString=function(){return"[fm.liveswitch.HashContext]"},HashContext.prototype.doCompute=function(input){if(this.getType()==fm.liveswitch.HashType.Md5)return null;if(this.getType()==fm.liveswitch.HashType.Sha1)return null;if(this.getType()==fm.liveswitch.HashType.Sha256){var hash=new fm.liveswitch.Sha256;hash.update(input.getData());var digest=hash.digest();return hash.clean(),fm.liveswitch.DataBuffer.wrap(digest)}throw new fm.liveswitch.Exception("Unknown hash type.")},HashContext.prototype.doDestroy=function(){},HashContext}(fm.liveswitch.HashContextBase);liveswitch.HashContext=HashContext}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HashExtensions=function(){function HashExtensions(){}return HashExtensions.prototype.getTypeString=function(){return"[fm.liveswitch.HashExtensions]"},HashExtensions.getCount=function(obj){var i=0;for(var key in obj)i++;return i},HashExtensions.getKeys=function(obj){var keys=[];for(var key in obj)keys.push(key);return keys},HashExtensions.getValues=function(obj){var values=[];for(var key in obj)values.push(obj[key]);return values},HashExtensions.tryGetValue=function(obj,key,holder){return!!HashExtensions.containsKey(obj,key)&&(holder.setValue(obj[key]),!0)},HashExtensions.containsKey=function(obj,key){return key in obj},HashExtensions.containsValue=function(obj,value){for(var key in obj)if(obj[key]===value)return!0;return!1},HashExtensions.add=function(obj,key,value){return obj[key]=value,value},HashExtensions.remove=function(obj,key){return!!HashExtensions.containsKey(obj,key)&&(delete obj[key],!0)},HashExtensions.clear=function(obj){for(var key in obj)delete obj[key]},HashExtensions}();liveswitch.HashExtensions=HashExtensions}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);var HmacSha256=function(){function HmacSha256(key){this.inner=new fm.liveswitch.Sha256,this.outer=new fm.liveswitch.Sha256,this.blockSize=this.inner.blockSize,this.digestLength=this.inner.digestLength;var pad=new Uint8Array(this.blockSize);if(key.length>this.blockSize)(new fm.liveswitch.Sha256).update(key).finish(pad).clean();else for(var i=0;i<key.length;i++)pad[i]=key[i];for(i=0;i<pad.length;i++)pad[i]^=54;this.inner.update(pad);for(i=0;i<pad.length;i++)pad[i]^=106;this.outer.update(pad),this.istate=new Uint32Array(8),this.ostate=new Uint32Array(8),this.inner._saveState(this.istate),this.outer._saveState(this.ostate);for(i=0;i<pad.length;i++)pad[i]=0}return HmacSha256.prototype.reset=function(){return this.inner._restoreState(this.istate,this.inner.blockSize),this.outer._restoreState(this.ostate,this.outer.blockSize),this},HmacSha256.prototype.clean=function(){for(var i=0;i<this.istate.length;i++)this.ostate[i]=this.istate[i]=0;this.inner.clean(),this.outer.clean()},HmacSha256.prototype.update=function(data){return this.inner.update(data),this},HmacSha256.prototype.finish=function(out){return this.outer.finished?this.outer.finish(out):(this.inner.finish(out),this.outer.update(out,this.digestLength).finish(out)),this},HmacSha256.prototype.digest=function(){var out=new Uint8Array(this.digestLength);return this.finish(out),out},HmacSha256}();liveswitch.HmacSha256=HmacSha256}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Holder=function(){function Holder(value){this._value=value}return Holder.prototype.getTypeString=function(){return"[fm.liveswitch.Holder]"},Holder.prototype.getValue=function(){return this._value},Holder.prototype.setValue=function(value){this._value=value},Holder}();liveswitch.Holder=Holder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpTransfer=function(){function HttpTransfer(){fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return HttpTransfer.prototype.getTypeString=function(){return"[fm.liveswitch.HttpTransfer]"},HttpTransfer.addOnSendFinish=function(value){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___onSendFinish,value)},HttpTransfer.addOnSendStart=function(value){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___onSendStart,value)},HttpTransfer.addQueryToUrl=function(){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),2==arguments.length){var url=arguments[0],key=arguments[1];return fm.liveswitch.HttpTransfer.addQueryToUrl(url,key,null)}if(3==arguments.length){url=arguments[0],key=arguments[1];var value=arguments[2];return fm.liveswitch.StringExtensions.isNullOrEmpty(key)?url:(fm.liveswitch.Global.equals(value,null)&&(value=fm.liveswitch.StringExtensions.empty),key=fm.liveswitch.Uri.escapeDataString(key),value=fm.liveswitch.Uri.escapeDataString(value),fm.liveswitch.StringExtensions.concat([url,fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.indexOf(url,"?",fm.liveswitch.StringComparison.OrdinalIgnoreCase),-1)?"?":"&",key,"=",value]))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransfer.getRandomWildcardCharacter=function(){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),0==arguments.length){var wildcardCharacters=fm.liveswitch.HttpTransfer.getWildcardCharacters(),startIndex=(new fm.liveswitch.Randomizer).next(fm.liveswitch.StringExtensions.getLength(wildcardCharacters));return fm.liveswitch.StringExtensions.substring(wildcardCharacters,startIndex,1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransfer.getWildcardCharacters=function(){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),0==arguments.length)return fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___wildcardCharacters;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransfer.removeOnSendFinish=function(value){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___onSendFinish,value)},HttpTransfer.removeOnSendStart=function(value){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___onSendStart,value)},HttpTransfer.replaceWildcards=function(url){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),1==arguments.length)return fm.liveswitch.StringExtensions.replace(url,"*",fm.liveswitch.HttpTransfer.getRandomWildcardCharacter());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransfer.setWildcardCharacters=function(value){if(fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___wildcardCharacters=value},HttpTransfer.prototype.doSend=function(requestArgs){if(1==arguments.length){var args=void 0;this.startRequest(requestArgs);try{args=fm.liveswitch.Global.equals(requestArgs.getBinaryContent(),null)?this.sendText(requestArgs):this.sendBinary(requestArgs)}catch(exception){var args2=new fm.liveswitch.HttpResponseArgs(requestArgs);args2.setException(exception),args=args2}return this.finishRequest(args),args}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransfer.prototype.doSendAsync=function(requestArgs,callback,attempt,retryLogScope){var _this=this;if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");attempt=fm.liveswitch.Global.toInt(arguments[2]);var action=null,action2=null;this.startRequest(requestArgs);try{fm.liveswitch.Global.equals(requestArgs.getBinaryContent(),null)?(fm.liveswitch.Global.equals(action2,null)&&(action2=function(responseArgs){_this.finishRequest(responseArgs),_this.sendAsyncCallback(requestArgs,responseArgs,callback,attempt,retryLogScope)}),this.sendTextAsync(requestArgs,action2)):(fm.liveswitch.Global.equals(action,null)&&(action=function(responseArgs){_this.finishRequest(responseArgs),_this.sendAsyncCallback(requestArgs,responseArgs,callback,attempt,retryLogScope)}),this.sendBinaryAsync(requestArgs,action))}catch(exception){var args=new fm.liveswitch.HttpResponseArgs(requestArgs);args.setException(exception),this.sendAsyncCallback(requestArgs,args,callback,attempt,retryLogScope)}},HttpTransfer.prototype.finishRequest=function(responseArgs){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.raiseOnSendFinish(responseArgs)},HttpTransfer.prototype.raiseOnSendFinish=function(responseArgs){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onSendFinish=fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer__onSendFinish;if(!fm.liveswitch.Global.equals(onSendFinish,null)){var p=new fm.liveswitch.HttpSendFinishArgs;p.setSender(responseArgs.getRequestArgs().getSender()),p.setRequestBinaryContent(responseArgs.getRequestArgs().getBinaryContent()),p.setRequestTextContent(responseArgs.getRequestArgs().getTextContent()),p.setResponseBinaryContent(responseArgs.getBinaryContent()),p.setResponseTextContent(responseArgs.getTextContent()),p.setResponseHeaders(responseArgs.getHeaders()),onSendFinish(p)}},HttpTransfer.prototype.raiseOnSendStart=function(requestArgs){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onSendStart=fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer__onSendStart;if(!fm.liveswitch.Global.equals(onSendStart,null)){var p=new fm.liveswitch.HttpSendStartArgs;p.setSender(requestArgs.getSender()),p.setRequestBinaryContent(requestArgs.getBinaryContent()),p.setRequestTextContent(requestArgs.getTextContent()),onSendStart(p)}},HttpTransfer.prototype.send=function(requestArgs){if(1==arguments.length){for(var num=0,scope=null,args=this.doSend(requestArgs);!fm.liveswitch.Global.equals(args.getException(),null)&&num<requestArgs.getMaxRetries();)num++,scope=fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""),fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___log.warn(scope,fm.liveswitch.StringExtensions.format("Synchronous HTTP request failed, but retrying... (attempt #{0}).",fm.liveswitch.NumberExtensions.toString(num)),args.getException()),args=this.doSend(requestArgs);return fm.liveswitch.Global.equals(args.getException(),null)||fm.liveswitch.Global.equals(scope,null)||(args.setRetries(num),fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___log.warn(scope,"Synchronous HTTP request failed, and retries exhausted.",args.getException())),args}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransfer.prototype.sendAsync=function(requestArgs,callback){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.doSendAsync(requestArgs,callback,0,null)},HttpTransfer.prototype.sendAsyncCallback=function(requestArgs,responseArgs,callback,attempt,retryLogScope){if(5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");attempt=fm.liveswitch.Global.toInt(arguments[3]),!fm.liveswitch.Global.equals(responseArgs.getException(),null)&&attempt<requestArgs.getMaxRetries()?(attempt++,retryLogScope=fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""),fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___log.warn(retryLogScope,fm.liveswitch.StringExtensions.format("Asynchronous HTTP request failed, but retrying... (attempt #{0}).",fm.liveswitch.NumberExtensions.toString(attempt)),responseArgs.getException()),this.doSendAsync(requestArgs,callback,attempt,retryLogScope)):(fm.liveswitch.Global.equals(responseArgs.getException(),null)||fm.liveswitch.Global.equals(retryLogScope,null)||(responseArgs.setRetries(attempt),fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___log.warn(retryLogScope,"Asynchronous HTTP request failed, and retries exhausted.",responseArgs.getException())),callback(responseArgs))},HttpTransfer.prototype.startRequest=function(requestArgs){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.raiseOnSendStart(requestArgs)},HttpTransfer.fmliveswitchHttpTransferInitialize=function(){fm.liveswitch.HttpTransfer.__fmliveswitchHttpTransferInitialized||fm.liveswitch.HttpTransfer.__fmliveswitchHttpTransferInitializing||(fm.liveswitch.HttpTransfer.__fmliveswitchHttpTransferInitializing=!0,HttpTransfer.fm_liveswitch_HttpTransfer___onSendFinish=[],HttpTransfer.fm_liveswitch_HttpTransfer___onSendStart=[],HttpTransfer.fm_liveswitch_HttpTransfer__onSendFinish=function(p0){for(var _i=0,_a=fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___onSendFinish;_i<_a.length;_i++){(0,_a[_i])(p0)}},HttpTransfer.fm_liveswitch_HttpTransfer__onSendStart=function(p0){for(var _i=0,_a=fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___onSendStart;_i<_a.length;_i++){(0,_a[_i])(p0)}},fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.HttpTransfer]")),fm.liveswitch.HttpTransfer.fm_liveswitch_HttpTransfer___wildcardCharacters="abcdefghijklmnopqrstuvwxyz",fm.liveswitch.HttpTransfer.__fmliveswitchHttpTransferInitialized=!0,fm.liveswitch.HttpTransfer.__fmliveswitchHttpTransferInitializing=!1)},HttpTransfer.__fmliveswitchHttpTransferInitialized=!1,HttpTransfer.__fmliveswitchHttpTransferInitializing=!1,HttpTransfer}();liveswitch.HttpTransfer=HttpTransfer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={}));return function(fm){!function(liveswitch){var Util=function(){function Util(){}return Util.prototype.getTypeString=function(){return"[fm.liveswitch.Util]"},Util.isNumber=function(obj){return"[object Number]"===Object.prototype.toString.call(obj)},Util.isString=function(obj){return"[object String]"===Object.prototype.toString.call(obj)},Util.isBoolean=function(obj){return"[object Boolean]"===Object.prototype.toString.call(obj)},Util.isNull=function(obj){return"[object Null]"===Object.prototype.toString.call(obj)},Util.isUndefined=function(obj){return"[object Undefined]"===Object.prototype.toString.call(obj)},Util.isNullOrUndefined=function(obj){return Util.isNull(obj)||Util.isUndefined(obj)},Util.isFunction=function(obj){return"[object Function]"===Object.prototype.toString.call(obj)},Util.isArray=function(obj){return"[object Array]"===Object.prototype.toString.call(obj)},Util.isUint8Array=function(obj){return"[object Uint8Array]"===Object.prototype.toString.call(obj)},Util.isDate=function(obj){return"[object Date]"===Object.prototype.toString.call(obj)},Util.isRegExp=function(obj){return"[object RegExp]"===Object.prototype.toString.call(obj)},Util.isError=function(obj){try{if(function(obj){return obj instanceof Error}(obj))return!0}catch(_a){}try{var objName=Object.prototype.toString.call(obj);return/\[object .*(Error|Exception)\]/.test(objName)}catch(_b){}return!1},Util.isObject=function(obj){return"[object Object]"===Object.prototype.toString.call(obj)},Util.isObjectType=function(obj,typeString){return Util.isObject(obj)&&Util.isFunction(obj.getTypeString)&&obj.getTypeString().indexOf(typeString)>-1},Util.isArrayType=function(obj,typeString){return Util.isArray(obj)&&(0==obj.length||Util.isNullOrUndefined(obj[0])||Util.isObjectType(obj[0],typeString))},Util.isPlainObject=function(obj){if(!obj||"[object Object]"!==Object.prototype.toString.call(obj)||obj.nodeType||obj===obj.window)return!1;try{if(obj.constructor&&!Object.prototype.hasOwnProperty.call(obj,"constructor")&&!Object.prototype.hasOwnProperty.call(obj.constructor.prototype,"isPrototypeOf"))return!1}catch(error){return!1}var key;for(key in obj);return void 0===key||Object.prototype.hasOwnProperty.call(obj,key)},Util.canAttachProperties=function(instance,obj){for(var key in obj){obj[key];var setter=instance["set"+key.charAt(0).toUpperCase()+key.substring(1)];if(!setter||"[object Function]"!==Object.prototype.toString.call(setter))return!1}return!0},Util.attachProperties=function(instance,obj){for(var key in obj){var value=obj[key],setter=instance["set"+key.charAt(0).toUpperCase()+key.substring(1)];setter&&"[object Function]"===Object.prototype.toString.call(setter)?setter.call(instance,value):(setter=instance.setExtensionValue)&&"[object Function]"===Object.prototype.toString.call(setter)?"[object Function]"===Object.prototype.toString.call(value)?fm.liveswitch.Log.warn('Property "'+key+'" did not match any known setter and has a function as its value. Please verify your callback names are correct.'):(setter.call(instance,key,value),fm.liveswitch.Log.debug('Property "'+key+'" did not match any known setter and is assumed to be an extension value.')):fm.liveswitch.Log.debug('Property "'+key+'" did not match any known setter and was ignored.')}return instance},Util.isIE=function(){return!!document.protocol},Util.isIE6=function(){return Util.isIE()&&!window.XMLHttpRequest},Util.isIE7=function(){return Util.isIE()&&window.XMLHttpRequest&&!document.implementation},Util.isIE8=function(){return Util.isIE()&&document.implementation&&document.implementation.hasFeature&&!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")},Util.isIE9=function(){return Util.isIE()&&document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")},Util.isEdge=function(){return null!=navigator.userAgent.match(/edge\//i)},Util.isChrome=function(){return null!=navigator.userAgent.match(/chrome/i)},Util.isFirefox=function(){return navigator.userAgent.toLowerCase().indexOf("firefox")>-1},Util.isSafari9=function(){return Util.isSafari()&&null!=navigator.userAgent.match(/version\/9\.\d(\.\d+)*(mobile\/[a-zA-Z0-9]+)? safari/i)},Util.isSafari10=function(){return Util.isSafari()&&null!=navigator.userAgent.match(/version\/10\.\d(\.\d+)*(mobile\/[a-zA-Z0-9]+)? safari/i)},Util.isSafari11=function(){return Util.isSafari()&&null!=navigator.userAgent.match(/version\/11\.\d(\.\d+)*(mobile\/[a-zA-Z0-9]+)? safari/i)},Util.isSafari12=function(){return Util.isSafari()&&null!=navigator.userAgent.match(/version\/12\.\d(\.\d+)*(mobile\/[a-zA-Z0-9]+)? safari/i)},Util.isSafari12_1=function(){return Util.isSafari()&&null!=navigator.userAgent.match(/version\/12\.1(\.\d+)*(mobile\/[a-zA-Z0-9]+)? safari/i)},Util.isSafari=function(){return!Util.isChrome()&&!Util.isEdge()&&null!=navigator.userAgent.match(/version\/[^\s]+( mobile\/[^\s]+)? safari\/[^\s]+/i)},Util.isOpera=function(){return null!=navigator.userAgent.match(/Opera Mini/i)},Util.isWindows=function(){return null!=navigator.userAgent.match(/IEMobile/i)},Util.isAndroid=function(){return null!=navigator.userAgent.match(/Android/i)},Util.isBlackBerry=function(){return null!=navigator.userAgent.match(/BlackBerry/i)},Util.isiOS=function(){return null!=navigator.userAgent.match(/iPhone|iPad|iPod/i)||0!=navigator.maxTouchPoints&&Util.isSafari()},Util.isMobile=function(){return Util.isAndroid()||Util.isBlackBerry()||Util.isiOS()||Util.isOpera()||Util.isWindows()},Util.hasActiveX=function(checkFiltering){var hasActiveX=void 0!==window.ActiveXObject;return checkFiltering&&hasActiveX&&void 0!==window.external.msActiveXFilteringEnabled&&window.external.msActiveXFilteringEnabled()&&(hasActiveX=!1,fm.liveswitch.Log.debug("ActiveX is filtered and cannot be used.")),hasActiveX},Util.hasJava=function(){return null!=Util.getJavaVersion()},Util.getJavaVersion=function(){if(Util.isIE()&&Util.hasActiveX())return Util.isJavaWebStartInstalledActiveX("1.9.0")?"1.9.0":Util.isJavaWebStartInstalledActiveX("1.8.0")?"1.8.0":Util.isJavaWebStartInstalledActiveX("1.7.0")?"1.7.0":Util.isJavaWebStartInstalledActiveX("1.6.0")?"1.6.0":Util.isJavaWebStartInstalledActiveX("1.5.0")?"1.5.0":Util.isJavaWebStartInstalledActiveX("1.4.2")?"1.4.2":null;var version=null,mimes=window.navigator.mimeTypes;if(mimes)for(var i=0;i<mimes.length;i++){var t=mimes[i].type;if(t.indexOf("java")>0&&t.indexOf("jpi")>0&&t.indexOf("applet")>0){var parts=t.split("=");version=parts[parts.length-1]}}return version},Util.isJavaWebStartInstalledActiveX=function(version){try{return Util.hasActiveX()&&null!==new ActiveXObject("JavaWebStart.isInstalled."+version+".0")}catch(error){return!1}},Util.isXD=function(url1,url2){try{if(void 0!==url2){var host1=Util.getHost(url1),host2=Util.getHost(url2);return Util.compareHost(host1,host2)}if(!Util._xdCache[url1]){var handlerHost=Util.getHost(url1),thisHost=Util.getHost();Util._xdCache[url1]=Util.compareHost(handlerHost,thisHost)?"y":"n"}return"y"===Util._xdCache[url1]}catch(error){return!1}},Util.getHost=function(url){if(!url)return Util.getCurrentHost();var parsed=Util.parseUrl(url);return parsed.protocol?parsed:Util.getCurrentHost()},Util.compareHost=function(host1,host2){return host1.server!==host2.server||(host1.port||host2.port)&&host1.port!==host2.port},Util.getCurrentHost=function(){var l=document.location;return{protocol:l.protocol,server:l.hostname,port:l.port}},Util.parseUrl=function(url){var parts=/(((http|ws)s?:)\/\/)?([\-\w\.\*]+)+(:(\d+))?(\/([^\?]*(\?\S+)?)?)?/i.exec(url);if(parts.length<6)throw new fm.liveswitch.Exception("Invalid URL ("+url+").");return{prefix:parts[1],protocol:parts[2],server:parts[4],postfix:parts[5],port:parts[6],path:parts[7]}},Util.absolutizeUrl=function(url){if(!url)return url;var parsed=Util.parseUrl(url);if(parsed.protocol)return-1===parsed.server.indexOf("*")||(url=parsed.prefix+Util.wildcard(parsed.server),parsed.postfix&&(url+=parsed.postfix),parsed.path&&(url+=parsed.path)),url;var l=document.location,base=l.protocol+"//"+l.host;return"/"===url.charAt(0)?base+url:base+l.pathname.substring(0,l.pathname.lastIndexOf("/")+1)+url},Util.wildcard=function(str){return str.replace("*",Util.getWildcard())},Util.getWildcard=function(){return null===Util._wildcard&&(Util._wildcard=Util.randomChar(Util._chars)),Util._wildcard},Util.randomChar=function(str){return str?str.charAt(Math.floor(Math.random()*str.length)):str},Util.observe=function(element,event,handler){element.addEventListener?element.addEventListener(event,handler,!1):element.attachEvent?element.attachEvent("on"+event,handler):element["on"+event]=handler},Util.unobserve=function(element,event,handler){element.removeEventListener?element.removeEventListener(event,handler,!1):element.detachEvent("on"+event,handler)},Util.observeAttr=function(element,handler){var MutationObserver=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;if(MutationObserver){new MutationObserver((function(mutations,observer){for(var _i=0,mutations_1=mutations;_i<mutations_1.length;_i++){var mutation=mutations_1[_i];handler.call(mutation.target,mutation.attributeName)}})).observe(element,{subtree:!1,attributes:!0})}else!function(){var p=document.createElement("p"),flag=!1;if(p.addEventListener)p.addEventListener("DOMAttrModified",(function(){return flag=!0}),!1);else{if(!p.attachEvent)return!1;p.attachEvent("onDOMAttrModified",(function(){return flag=!0}))}return p.setAttribute("id","target"),flag}()?"onpropertychange"in document.body&&Util.observe(element,"propertychange",(function(e){handler.call(element,window.event.propertyName)})):Util.observe(element,"DOMAttrModified",(function(e){handler.call(element,e.attrName)}))},Util.construct=function(func,args){return function(func,args,ctor){ctor.prototype=func.prototype;var child=new ctor,result=func.apply(child,args);return Object(result)===result?result:child}(func,args,(function(){}))},Util.extend=function(dest,src){for(var key in src)dest[key]=src[key];return dest},Util.addOnLoad=function(fn){Util._readyRun?window.setTimeout(fn,1):Util._loadFunctions.push(fn)},Util.ready=function(){Util._readyRun||(Util._readyRun=!0,window.setTimeout((function(){for(var _i=0,_a=Util._loadFunctions;_i<_a.length;_i++){(0,_a[_i])()}}),1))},Util.bindReady=function(){if(!Util._readyBound)if(Util._readyBound=!0,"complete"===document.readyState)window.setTimeout((function(){Util.ready()}),1);else if(document.addEventListener){var loaded=function(){document.removeEventListener("DOMContentLoaded",loaded,!1),Util.ready()};document.addEventListener("DOMContentLoaded",loaded,!1);var load=function(){window.removeEventListener("load",load,!1),Util.ready()};window.addEventListener("load",load,!1)}else if(document.attachEvent){var readyStateChange=function(){"complete"===document.readyState&&(document.detachEvent("onreadystatechange",readyStateChange),Util.ready())};document.attachEvent("onreadystatechange",readyStateChange);var topLevel=void 0;try{topLevel=null===window.frameElement}catch(undefined){}if(document.documentElement.doScroll&&topLevel){var checkReady=function(){if(!Util._loaded){try{document.documentElement.doScroll("left")}catch(error){return void window.setTimeout(checkReady,0)}Util.ready()}};checkReady()}}else Util.ready()},Util.initialize=function(){Util.__initialized||(Util._loaded||Util.addOnLoad((function(){Util._loaded=!0})),Util.bindReady()),Util.__initialized=!0},Util._xdCache={},Util._chars="abcdefghijklmnopqrstuvwxyz",Util._loadFunctions=[],Util._wildcard=null,Util._readyRun=!1,Util._readyBound=!1,Util._loaded=!1,Util.__initialized=!1,Util}();liveswitch.Util=Util,Util.initialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpWebRequestTransfer=function(_super){function HttpWebRequestTransfer(){return _super.call(this)||this}return __extends(HttpWebRequestTransfer,_super),HttpWebRequestTransfer.prototype.getTypeString=function(){return"[fm.liveswitch.HttpWebRequestTransfer],"+_super.prototype.getTypeString.call(this)},HttpWebRequestTransfer.setDisableCors=function(disableCors){HttpWebRequestTransfer._disableCors=disableCors},HttpWebRequestTransfer.getDisableCors=function(){return HttpWebRequestTransfer._disableCors||!1},HttpWebRequestTransfer.setDisablePostMessage=function(disablePostMessage){HttpWebRequestTransfer._disablePostMessage=disablePostMessage},HttpWebRequestTransfer.getDisablePostMessage=function(){return HttpWebRequestTransfer._disablePostMessage||!1},HttpWebRequestTransfer.setDisableJsonp=function(disableJsonp){HttpWebRequestTransfer._disableJsonp=disableJsonp},HttpWebRequestTransfer.getDisableJsonp=function(){return HttpWebRequestTransfer._disableJsonp||!1},HttpWebRequestTransfer.setForceJsonp=function(forceJsonp){HttpWebRequestTransfer._forceJsonp=forceJsonp},HttpWebRequestTransfer.getForceJsonp=function(){return HttpWebRequestTransfer._forceJsonp||!1},HttpWebRequestTransfer.canCors=function(){return window.XMLHttpRequest&&"withCredentials"in new XMLHttpRequest},HttpWebRequestTransfer.canPostMessage=function(){return!fm.liveswitch.Util.isIE6()&&!fm.liveswitch.Util.isIE7()&&!!window.postMessage},HttpWebRequestTransfer.prototype.sendTextAsync=function(requestArgs,callback){var _this=this;return fm.liveswitch.Util.addOnLoad((function(){return _this.process(requestArgs,callback)}))},HttpWebRequestTransfer.prototype.sendText=function(requestArgs){return this.process(requestArgs,null)},HttpWebRequestTransfer.prototype.sendBinaryAsync=function(requestArgs,callback){var _this=this;return fm.liveswitch.Util.addOnLoad((function(){return _this.process(requestArgs,callback)}))},HttpWebRequestTransfer.prototype.sendBinary=function(requestArgs){return this.process(requestArgs,null)},HttpWebRequestTransfer.prototype.process=function(requestArgs,callback){var hwrt=HttpWebRequestTransfer,url=requestArgs.getUrl();requestArgs._processed||(url=fm.liveswitch.Util.absolutizeUrl(url),requestArgs.setUrl(url),requestArgs._processed=!0);var sender=requestArgs.getSender(),disableCors=hwrt.getDisableCors()||!!sender&&sender.getDisableCors(),disablePostMessage=hwrt.getDisablePostMessage()||!!sender&&sender.getDisablePostMessage(),disableJsonp=hwrt.getDisableJsonp()||!!sender&&sender.getDisableJsonp(),forceJsonp=hwrt.getForceJsonp()||!!sender&&sender.getForceJsonp(),fn=fm.liveswitch.Xhr.send,cors=!1,pm=!1;if(fm.liveswitch.Util.isXD(url)&&(disableCors||!hwrt.canCors()||hwrt._corsFailCache[url]?disablePostMessage||!hwrt.canPostMessage()||hwrt._pmFailCache[url]?fn=fm.liveswitch.Jsonp.send:(pm=!0,fn=fm.liveswitch.PostMessage.send):cors=!0,disableJsonp&&fn===fm.liveswitch.Jsonp.send)){var responseArgs=new fm.liveswitch.HttpResponseArgs(requestArgs);return responseArgs.setException(new fm.liveswitch.Exception("Could not send HTTP request. All transports failed.")),callback&&callback(responseArgs),responseArgs}return forceJsonp&&(fn=fm.liveswitch.Jsonp.send),this.sendInternal(fn,cors,pm,requestArgs,callback)},HttpWebRequestTransfer.prototype.sendInternal=function(fn,cors,pm,requestArgs,callback){var _this=this,responseArgs=new fm.liveswitch.HttpResponseArgs(requestArgs);responseArgs.setException(new fm.liveswitch.Exception("Environment does not support synchronous requests."));var url=requestArgs.getUrl(),frameUrl=requestArgs.getDynamicProperties().frameUrl;frameUrl&&!requestArgs._processedFrame&&(frameUrl=fm.liveswitch.Util.absolutizeUrl(frameUrl),requestArgs.getDynamicProperties().frameUrl=frameUrl,requestArgs._processedFrame=!0),frameUrl=frameUrl||url;var method="GET";switch(requestArgs.getMethod()){case fm.liveswitch.HttpMethod.Head:method="HEAD";break;case fm.liveswitch.HttpMethod.Post:method="POST";break;case fm.liveswitch.HttpMethod.Put:method="PUT";break;case fm.liveswitch.HttpMethod.Patch:method="PATCH";break;case fm.liveswitch.HttpMethod.Delete:method="DELETE"}var options={sync:!callback,url:url,frameUrl:frameUrl,method:method,content:requestArgs.getTextContent(),contentBinary:requestArgs.getBinaryContent(),headers:requestArgs.getHeaders().toHash(),timeout:requestArgs.getTimeout(),robustResponse:!0,onRequestCreated:function(request){var onRequestCreated=requestArgs.getOnRequestCreated();if(onRequestCreated){var args=new fm.liveswitch.HttpRequestCreatedArgs;args.setRequestArgs(requestArgs),args.setSender(requestArgs.getSender()),args.setRequest(request),onRequestCreated(args),options.content=requestArgs.getTextContent(),options.contentBinary=requestArgs.getBinaryContent(),options.headers=requestArgs.getHeaders().toHash(),options.timeout=requestArgs.getTimeout()}return options},onResponseReceived:function(response){var onResponseReceived=requestArgs.getOnResponseReceived();if(onResponseReceived){var args=new fm.liveswitch.HttpResponseReceivedArgs;args.setRequestArgs(requestArgs),args.setSender(requestArgs.getSender()),args.setResponse(response),onResponseReceived(args)}},onSuccess:function(e){if(0===e.statusCode&&cors)return HttpWebRequestTransfer._corsSuccessCache[url]||(HttpWebRequestTransfer._corsFailCache[url]=!0),void(callback?_this.sendTextAsync(requestArgs,callback):responseArgs=_this.sendText(requestArgs));cors?(HttpWebRequestTransfer._corsSuccessCache[url]=!0,delete HttpWebRequestTransfer._corsFailCache[url]):pm&&(HttpWebRequestTransfer._pmSuccessCache[url]=!0,delete HttpWebRequestTransfer._pmFailCache[url]),responseArgs.setException(null),responseArgs.setTextContent(e.content),e.hasOwnProperty("contentBinary")&&responseArgs.setBinaryContent(e.contentBinary),responseArgs.setStatusCode(e.statusCode);var headers=responseArgs.getHeaders();for(var headerName in e.headers)headers.set(headerName,e.headers[headerName]);callback&&callback(responseArgs)},onFailure:function(e){if(cors&&!HttpWebRequestTransfer._corsSuccessCache[url])return HttpWebRequestTransfer._corsFailCache[url]=!0,void(callback?_this.sendTextAsync(requestArgs,callback):responseArgs=_this.sendText(requestArgs));if(pm&&(e.local||!HttpWebRequestTransfer._pmSuccessCache[url]))return HttpWebRequestTransfer._pmFailCache[url]=!0,void(callback?_this.sendTextAsync(requestArgs,callback):responseArgs=_this.sendText(requestArgs));var exception=new fm.liveswitch.Exception(e.message);responseArgs.setException(exception),callback&&callback(responseArgs)}};return fn(options),responseArgs},HttpWebRequestTransfer.prototype.shutdown=function(){},HttpWebRequestTransfer._corsFailCache={},HttpWebRequestTransfer._corsSuccessCache={},HttpWebRequestTransfer._pmFailCache={},HttpWebRequestTransfer._pmSuccessCache={},HttpWebRequestTransfer._disableCors=!1,HttpWebRequestTransfer._disablePostMessage=!1,HttpWebRequestTransfer._disableJsonp=!1,HttpWebRequestTransfer._forceJsonp=!1,HttpWebRequestTransfer.getPlatformCode=function(){return"js"},HttpWebRequestTransfer}(fm.liveswitch.HttpTransfer);liveswitch.HttpWebRequestTransfer=HttpWebRequestTransfer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var InternalConcurrentDictionary=function(){function InternalConcurrentDictionary(hashCallback){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var hashCallback_1=__arguments[0];this.__hashFunction=hashCallback_1,this.__dict={}}return InternalConcurrentDictionary.prototype.getTypeString=function(){return"[fm.liveswitch.InternalConcurrentDictionary]"},InternalConcurrentDictionary.prototype.getIsEmpty=function(){return 0==this.getCount()},InternalConcurrentDictionary.prototype.getKeys=function(){var array=[],pairs=fm.liveswitch.HashExtensions.getValues(this.__dict);for(var pair in pairs)pairs[pair].getItem1&&array.push(pairs[pair].getItem1());return array},InternalConcurrentDictionary.prototype.getValues=function(){var array=[],pairs=fm.liveswitch.HashExtensions.getValues(this.__dict);for(var pair in pairs)pairs[pair].getItem2&&array.push(pairs[pair].getItem2());return array},InternalConcurrentDictionary.prototype.getCount=function(){return fm.liveswitch.HashExtensions.getCount(this.__dict)},InternalConcurrentDictionary.prototype.containsKey=function(key){var hash=this.__hashFunction(key);return fm.liveswitch.HashExtensions.containsKey(this.__dict,hash)},InternalConcurrentDictionary.prototype.getOrAdd=function(key,valueFactory){var hash=this.__hashFunction(key),holder=new fm.liveswitch.Holder(null);if(fm.liveswitch.HashExtensions.tryGetValue(this.__dict,hash,holder))return holder.getValue().getItem2();var pair=new fm.liveswitch.MutablePair(key,valueFactory(key));return fm.liveswitch.HashExtensions.add(this.__dict,hash,pair),pair.getItem2()},InternalConcurrentDictionary.prototype.addOrUpdate=function(key,addValue,updateValueFactory){var hash=this.__hashFunction(key),holder=new fm.liveswitch.Holder(null);if(fm.liveswitch.HashExtensions.tryGetValue(this.__dict,hash,holder))return(pair=holder.getValue()).setItem2(updateValueFactory(key,pair.getItem2())),pair.getItem2();var pair=new fm.liveswitch.MutablePair(key,addValue);return fm.liveswitch.HashExtensions.add(this.__dict,hash,pair),addValue},InternalConcurrentDictionary.prototype.tryAdd=function(key,value){if(2==arguments.length){var hash=this.__hashFunction(key);if(fm.liveswitch.HashExtensions.containsKey(this.__dict,hash))return!1;var pair=new fm.liveswitch.MutablePair(key,value);return fm.liveswitch.HashExtensions.add(this.__dict,hash,pair),!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentDictionary.prototype.tryGetValue=function(key,holder){var hash=this.__hashFunction(key),innerHolder=new fm.liveswitch.Holder(null);return!!fm.liveswitch.HashExtensions.tryGetValue(this.__dict,hash,innerHolder)&&(holder.setValue(innerHolder.getValue().getItem2()),!0)},InternalConcurrentDictionary.prototype.tryRemove=function(key,value){if(2==arguments.length){var hash=this.__hashFunction(key),holder=new fm.liveswitch.Holder(null);return!!fm.liveswitch.HashExtensions.tryGetValue(this.__dict,hash,holder)&&(value.setValue(holder.getValue().getItem2()),fm.liveswitch.HashExtensions.remove(this.__dict,hash),!0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentDictionary.prototype.tryUpdate=function(key,newValue,comparisonValue){var hash=this.__hashFunction(key),holder=new fm.liveswitch.Holder(null);if(fm.liveswitch.HashExtensions.tryGetValue(this.__dict,hash,holder)){var pair=holder.getValue();if(pair.getItem2()===comparisonValue)return pair.setItem2(newValue),!0}return!1},InternalConcurrentDictionary.prototype.clear=function(){fm.liveswitch.HashExtensions.clear(this.__dict)},InternalConcurrentDictionary}();liveswitch.InternalConcurrentDictionary=InternalConcurrentDictionary}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Json=function(){function Json(){}return Json.prototype.getTypeString=function(){return"[fm.liveswitch.Json]"},Json._reviver=function(key,value){if(value&&"string"==typeof value&&Json._dateRegex.test(value)){var ticksAndZone=value.match(Json._dateRegex)[1],delim=ticksAndZone.indexOf("-")>-1?"-":"+",parts=ticksAndZone.split(delim),ticks=parseInt(parts[0],10);return new Date(ticks)}return value},Json._buildReviver=function(reviver){var _this=this;return this.useMicrosoftDateFormat?null!=reviver?function(key,value){return reviver(key,_this._reviver(key,value))}:this._reviver:reviver},Json.deserialize=function(){var args=Array.prototype.slice.call(arguments);return 0===args.length||null===args[0]||""===args[0]?null:(args[1]=Json._buildReviver(args[1]),JSON.parse.apply(Json,args))},Json.serialize=function(){if(Json.useMicrosoftDateFormat){var dateToJSON=Date.prototype.toJSON;Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?"/Date("+this.getTime()+"-0000)/":null};try{var j=JSON.stringify.apply(Json,arguments);if("undefined"===j)throw new fm.liveswitch.Exception("Cannot serialize undefined to JSON. Try using null instead.");return j.replace(/\//g,"\\/")}finally{Date.prototype.toJSON=dateToJSON}}return JSON.stringify.apply(Json,arguments)},Json.useMicrosoftDateFormat=!0,Json._dateRegex=/^\/Date\((\d+[\-|\+]?\d{0,4})\)\/$/,Json}();liveswitch.Json=Json}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Jsonp=function(){function Jsonp(){}return Jsonp.prototype.getTypeString=function(){return"[fm.liveswitch.Jsonp]"},Jsonp.getNextCallback=function(options){var name="cb"+Jsonp._callbackCount++;return Jsonp._cb[name]=function(response){try{var content;if(options.onResponseReceived&&options.onResponseReceived(null),options.onSuccess)if(options.robustResponse)(content=response[options.contentParameterName])?"string"!=typeof content&&(content=fm.liveswitch.Json.serialize(content)):content="",options.onSuccess({content:content,contentBinary:null,statusCode:response[options.statusCodeParameterName]||200,headers:response[options.headersParameterName]||{}});else(content=response)?"string"!=typeof content&&(content=fm.liveswitch.Json.serialize(content)):content="",options.onSuccess({content:content,contentBinary:null,statusCode:200,headers:{}})}catch(error){throw error}finally{Jsonp.cleanup((options.useFrame?"parent.":"")+"fm.liveswitch.Jsonp._cb."+name,options.useFrame)}},(options.useFrame?"parent.":"")+"fm.liveswitch.Jsonp._cb."+name},Jsonp.failureHandler=function(options,callbackName,message){options.onFailure&&options.onFailure({message:message,local:!1}),Jsonp.cleanup(callbackName,options.useFrame)},Jsonp.send=function(options){(options=fm.liveswitch.Util.extend({url:"",method:"POST",content:null,headers:{},timeout:15e3,canSegmentJsonArray:!1,robustResponse:!1,callbackParameterName:"jsonp",contentParameterName:"content",methodParameterName:"method",headersParameterName:"headers",statusCodeParameterName:"statusCode",cacheBusterParameterName:"_cb",onRequestCreated:null,onResponseReceived:null,onFailure:null,onSuccess:null},options||{})).useFrame=!0;var callbackName=Jsonp.getNextCallback(options);try{options.useFrame&&(Jsonp._scriptFrameDestroyer||(Jsonp._scriptFrameDestroyer=window.setInterval((function(){if(null!==Jsonp._scriptFrame&&(Jsonp._pastScriptFrames.push(Jsonp._scriptFrame),Jsonp._scriptFrame=null,Jsonp._scriptFrameLoaded=!1,2===Jsonp._pastScriptFrames.length)){var pastScriptFrame=Jsonp._pastScriptFrames[0];for(var prop in pastScriptFrame)delete pastScriptFrame[prop];document.body.removeChild(pastScriptFrame),Jsonp._pastScriptFrames.splice(0,1)}}),3e5)));var script_1,container=document.getElementsByTagName("head")[0];if(options.useFrame){Jsonp._scriptFrame||(Jsonp._scriptFrame=document.createElement("iframe"),Jsonp._scriptFrame.style.display="none",Jsonp._scriptFrame.src="PLEASE_IGNORE_THIS_404.htm",document.body.appendChild(Jsonp._scriptFrame));var doc=Jsonp._scriptFrame.contentWindow.document;if(!doc)throw"Could not create script frame.";script_1=doc.createElement("script")}else script_1=document.createElement("script");script_1.type="text/javascript",script_1.charset="utf-8",script_1.id=callbackName;var url=options.url;if(url=fm.liveswitch.HttpTransfer.addQueryToUrl(url,options.methodParameterName,options.method),url=fm.liveswitch.HttpTransfer.addQueryToUrl(url,options.headersParameterName,fm.liveswitch.Json.serialize(options.headers)),url=fm.liveswitch.HttpTransfer.addQueryToUrl(url,options.callbackParameterName,callbackName),url=fm.liveswitch.HttpTransfer.addQueryToUrl(url,options.cacheBusterParameterName,(new Date).getTime().toString()),(url=fm.liveswitch.HttpTransfer.addQueryToUrl(url,options.contentParameterName,options.content)).length>Jsonp.maxUrlLength&&alert("URL length "+url.length+" exceeds maximum for JSON-P ("+Jsonp.maxUrlLength+")."),script_1.src=url,options.onRequestCreated&&options.onRequestCreated(null),window.setTimeout((function(){Jsonp.callbackExists(callbackName)&&Jsonp.failureHandler(options,callbackName,"JSON-P request timed out.")}),options.timeout),options.useFrame)if(Jsonp._scriptFrameLoaded)try{Jsonp._scriptFrame.contentWindow.document.body.appendChild(script_1)}catch(error){Jsonp.failureHandler(options,callbackName,"JSON-P request failed. Could not access script frame.")}else fm.liveswitch.Util.observe(Jsonp._scriptFrame,"load",(function(){window.setTimeout((function(){try{Jsonp._scriptFrame.contentWindow.document.body.appendChild(script_1)}catch(error){Jsonp.failureHandler(options,callbackName,"JSON-P request failed. Could not access script frame.")}}),10),Jsonp._scriptFrameLoaded=!0}));else container.appendChild(script_1)}catch(error){Jsonp.failureHandler(options,callbackName,"JSON-P request failed. "+(error.message||error.error||error.description||error))}},Jsonp.cleanup=function(callbackName,useFrame){var parts=callbackName.split("."),name=parts[parts.length-1];Jsonp._cb[name]=null,delete Jsonp._cb[name];try{var script=void 0;if(useFrame){var scriptFrames=Jsonp._pastScriptFrames.concat([]);null!==Jsonp._scriptFrame&&scriptFrames.push(Jsonp._scriptFrame);for(var doc=void 0,i=scriptFrames.length-1;i>=0&&((doc=scriptFrames[i].contentWindow.document)&&(script=doc.getElementById(callbackName)),!script);i--);script&&doc.body.removeChild(script)}else(script=document.getElementById(callbackName))&&document.getElementsByTagName("head")[0].removeChild(script)}catch(error){fm.liveswitch.Log.error("Could not remove script element.",error)}},Jsonp.callbackExists=function(callbackName){var parts=callbackName.split("."),name=parts[parts.length-1];return fm.liveswitch.HashExtensions.containsKey(Jsonp._cb,name)},Jsonp.maxUrlLength=2048,Jsonp._scriptFrame=null,Jsonp._scriptFrameLoaded=!1,Jsonp._callbackCount=0,Jsonp._cb={},Jsonp._pastScriptFrames=[],Jsonp._scriptFrameDestroyer=0,Jsonp}();liveswitch.Jsonp=Jsonp}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MacContextBase=function(){function MacContextBase(type){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type_2=__arguments[0];this.setType(type_2)}return MacContextBase.prototype.getTypeString=function(){return"[fm.liveswitch.MacContextBase]"},MacContextBase.compute=function(type,key,input){if(3==arguments.length){var context=new fm.liveswitch.MacContext(type,key),buffer=context.compute(input);return context.destroy(),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MacContextBase.prototype.compute=function(input){if(1==arguments.length)return this.doCompute(input);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MacContextBase.prototype.destroy=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.doDestroy()},MacContextBase.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MacContextBase.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},MacContextBase}();liveswitch.MacContextBase=MacContextBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MacContext=function(_super){function MacContext(type,key){var _this=_super.call(this,type)||this;return _this._key=key,_this}return __extends(MacContext,_super),MacContext.prototype.getTypeString=function(){return"[fm.liveswitch.MacContext]"},MacContext.prototype.doCompute=function(input){if(this.getType()==fm.liveswitch.MacType.HmacMd5)return null;if(this.getType()==fm.liveswitch.MacType.HmacSha1)return null;if(this.getType()==fm.liveswitch.MacType.HmacSha256){var hmac=new fm.liveswitch.HmacSha256(this._key.getData());hmac.update(input.getData());var digest=hmac.digest();return hmac.clean(),fm.liveswitch.DataBuffer.wrap(digest)}throw new fm.liveswitch.Exception("Unknown MAC type.")},MacContext.prototype.doDestroy=function(){},MacContext}(fm.liveswitch.MacContextBase);liveswitch.MacContext=MacContext}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedStopwatch=function(){function ManagedStopwatch(){this.startTime=0,this.stopTime=0}return ManagedStopwatch.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedStopwatch]"},ManagedStopwatch.dispatch=function(action){window.setTimeout((function(){action()}),1)},ManagedStopwatch.getTimestamp=function(){return(new Date).getTime()*fm.liveswitch.Constants.getTicksPerMillisecond()},ManagedStopwatch.prototype.getElapsedTicks=function(){return this.getElapsedMilliseconds()*fm.liveswitch.Constants.getTicksPerMillisecond()},ManagedStopwatch.prototype.getElapsedMilliseconds=function(){return 0==this.startTime?0:0==this.stopTime?(new Date).getTime()-this.startTime:this.stopTime-this.startTime},ManagedStopwatch.prototype.start=function(){this.startTime=(new Date).getTime(),this.stopTime=0},ManagedStopwatch.prototype.stop=function(){this.stopTime=(new Date).getTime()},ManagedStopwatch.prototype.restart=function(){this.start()},ManagedStopwatch}();liveswitch.ManagedStopwatch=ManagedStopwatch}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedThread=function(){function ManagedThread(){}return ManagedThread.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedThread]"},ManagedThread.getCurrentThreadId=function(){return 1},ManagedThread.dispatch=function(action){window.setTimeout((function(){action()}),1)},ManagedThread}();liveswitch.ManagedThread=ManagedThread}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MathAssistant=function(){function MathAssistant(){}return MathAssistant.prototype.getTypeString=function(){return"[fm.liveswitch.MathAssistant]"},MathAssistant.getPi=function(){return Math.PI},MathAssistant.getE=function(){return Math.E},MathAssistant.abs=function(val){return Math.abs(val)},MathAssistant.acos=function(val){return Math.acos(val)},MathAssistant.asin=function(val){return Math.asin(val)},MathAssistant.atan=function(val){return Math.atan(val)},MathAssistant.atan2=function(y,x){return Math.atan2(y,x)},MathAssistant.ceil=function(val){return Math.ceil(val)},MathAssistant.cos=function(val){return Math.cos(val)},MathAssistant.cosh=function(val){return(Math.exp(val)+Math.exp(-val))/2},MathAssistant.exp=function(val){return Math.exp(val)},MathAssistant.floor=function(val){return Math.floor(val)},MathAssistant.log=function(val){return Math.log(val)},MathAssistant.log10=function(val){return Math.log(val)/Math.LN10},MathAssistant.max=function(val1,val2){return Math.max(val1,val2)},MathAssistant.min=function(val1,val2){return Math.min(val1,val2)},MathAssistant.pow=function(x,y){return Math.pow(x,y)},MathAssistant.round=function(value){return Math.round(value)},MathAssistant.sin=function(val){return Math.sin(val)},MathAssistant.sinh=function(val){return(Math.exp(val)-Math.exp(-val))/2},MathAssistant.sqrt=function(val){return Math.sqrt(val)},MathAssistant.tan=function(val){return Math.tan(val)},MathAssistant.tanh=function(val){return(Math.exp(val)-Math.exp(-val))/(Math.exp(val)+Math.exp(-val))},MathAssistant}();liveswitch.MathAssistant=MathAssistant}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NameValueCollection=function(){function NameValueCollection(value){if(this._value={},void 0!==value)for(var n in value)this._value[n]=value[n]}return NameValueCollection.prototype.getTypeString=function(){return"[fm.liveswitch.NameValueCollection]"},NameValueCollection.prototype.source=function(){return this._value},NameValueCollection.prototype.get=function(name){for(var n in this._value)if(n.toLowerCase()===name.toLowerCase())return this._value[n];return null},NameValueCollection.prototype.set=function(name,value){for(var n in this._value)if(n.toLowerCase()===name.toLowerCase())return void(this._value[n]=value);this._value[name]=value},NameValueCollection.prototype.getCount=function(){var i=0;for(var n in this._value)i++;return i},NameValueCollection.prototype.toHash=function(){return this._value},NameValueCollection.prototype.getKeys=function(){return this.getAllKeys()},NameValueCollection.prototype.getAllKeys=function(){var keys=[];for(var k in this._value)keys.push(k);return keys},NameValueCollection}();liveswitch.NameValueCollection=NameValueCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NumberExtensions=function(){function NumberExtensions(){}return NumberExtensions.prototype.getTypeString=function(){return"[fm.liveswitch.NumberExtensions]"},NumberExtensions.toString=function(value,formatOrCultureInfo){return value.toString()},NumberExtensions}();liveswitch.NumberExtensions=NumberExtensions}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ObjectExtensions=function(){function ObjectExtensions(){}return ObjectExtensions.prototype.getTypeString=function(){return"[fm.liveswitch.ObjectExtensions]"},ObjectExtensions.getType=function(obj){return new fm.liveswitch.Type(obj.getTypeString())},ObjectExtensions.getHashCode=function(obj){return"function"==typeof obj.getHashCode?obj.getHashCode():fm.liveswitch.Util.isString(obj)?fm.liveswitch.StringExtensions.getHashCode(obj):fm.liveswitch.StringExtensions.getHashCode(JSON.stringify(obj))},ObjectExtensions}();liveswitch.ObjectExtensions=ObjectExtensions}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ParseAssistant=function(){function ParseAssistant(){}return ParseAssistant.prototype.getTypeString=function(){return"[fm.liveswitch.ParseAssistant]"},ParseAssistant.parseByteValue=function(s){return parseInt(s)},ParseAssistant.parseShortValue=function(s){return parseInt(s)},ParseAssistant.parseIntegerValue=function(s){return parseInt(s)},ParseAssistant.parseLongValue=function(s){return parseInt(s)},ParseAssistant.parseFloatValue=function(s){return parseFloat(s)},ParseAssistant.parseDoubleValue=function(s){return parseFloat(s)},ParseAssistant.parseDecimalValue=function(s){return parseFloat(s)},ParseAssistant.parseBooleanValue=function(s){return"true"===s.toLowerCase()||"y"===s.toLowerCase()||"1"===s},ParseAssistant.parseGuidValue=function(s){return new fm.liveswitch.Guid(s)},ParseAssistant.tryParseByteValue=function(s,h){return!isNaN(parseInt(s))&&(h.setValue(parseInt(s)),!0)},ParseAssistant.tryParseShortValue=function(s,h){return!isNaN(parseInt(s))&&(h.setValue(parseInt(s)),!0)},ParseAssistant.tryParseIntegerValue=function(s,h){return!isNaN(parseInt(s))&&(h.setValue(parseInt(s)),!0)},ParseAssistant.tryParseLongValue=function(s,h){return!isNaN(parseInt(s))&&(h.setValue(parseInt(s)),!0)},ParseAssistant.tryParseFloatValue=function(s,h){return!isNaN(parseFloat(s))&&(h.setValue(parseFloat(s)),!0)},ParseAssistant.tryParseDoubleValue=function(s,h){return!isNaN(parseFloat(s))&&(h.setValue(parseFloat(s)),!0)},ParseAssistant.tryParseDecimalValue=function(s,h){return!isNaN(parseFloat(s))&&(h.setValue(parseFloat(s)),!0)},ParseAssistant.tryParseBooleanValue=function(s,h){return"true"===s.toLowerCase()||"y"===s.toLowerCase()||"1"===s?h.setValue(!0):h.setValue(!1),!0},ParseAssistant.tryParseGuidValue=function(s,h){return!!/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i.test(s)&&(h.setValue(new fm.liveswitch.Guid(s)),!0)},ParseAssistant}();liveswitch.ParseAssistant=ParseAssistant}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Platform=function(){function Platform(){this.littleEndianChecked=!1,this.isLittleEndian=!1,this.isMobile=!1,this.useFipsAlgorithms=!1;var a,check=!1;a=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))&&(check=!0),this.isMobile=check}return Platform.getInstance=function(){return Platform.instance},Platform.prototype.getIsMobile=function(){return this.isMobile},Platform.prototype.setIsMobile=function(isMobile){this.isMobile=isMobile},Platform.prototype.getIsLittleEndian=function(){if(!this.littleEndianChecked){this.littleEndianChecked=!0;var a=new ArrayBuffer(4),b=new Uint8Array(a),c=new Uint32Array(a);b[0]=161,b[1]=178,b[2]=195,b[3]=212,this.isLittleEndian=3569595041==c[0]}return this.isLittleEndian},Platform.prototype.getOperatingSystem=function(){return fm.liveswitch.OperatingSystem.Unknown},Platform.prototype.getOperatingSystemVersion=function(){return null},Platform.prototype.getArchitecture=function(){return fm.liveswitch.Architecture.Unknown},Platform.prototype.getSourceLanguage=function(){return fm.liveswitch.SourceLanguage.TypeScript},Platform.prototype.getCoreCount=function(){return navigator.hardwareConcurrency||0},Platform.prototype.getPhysicalMemory=function(){return 1024*(navigator.deviceMemory||0)*1024*1024},Platform.prototype.getMachineName=function(){return navigator.userAgent},Platform.prototype.getDirectorySeparator=function(){return"/"},Platform.prototype.getProcessId=function(){return 1},Platform.prototype.getUseFipsAlgorithms=function(){return!1},Platform.prototype.setUseFipsAlgorithms=function(useFipsAlgorithms){},Platform.prototype.getCryptoLibrary=function(){return fm.liveswitch.CryptoLibrary.Default},Platform.prototype.setCryptoLibrary=function(cryptoLibrary){},Platform.instance=new Platform,Platform}();liveswitch.Platform=Platform}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Xhr=function(){function Xhr(){}return Xhr.prototype.getTypeString=function(){return"[fm.liveswitch.Xhr]"},Xhr.setDisableBinary=function(disableBinary){Xhr._disableBinary=disableBinary},Xhr.getDisableBinary=function(){return"undefined"==typeof Uint8Array||Xhr._disableBinary},Xhr.setDefaultWithCredentials=function(defaultWithCredentials){Xhr._defaultWithCredentials=defaultWithCredentials},Xhr.getDefaultWithCredentials=function(){return Xhr._defaultWithCredentials},Xhr.failureHandler=function(options,message){if(options.onFailure)return options.onFailure({message:message,local:!1})},Xhr.successHandler=function(options,x){if(options.onSuccess){var headers={},headerString=x.getAllResponseHeaders();if(headerString)for(var _i=0,_a=headerString.split(/\r?\n/);_i<_a.length;_i++){var parts=_a[_i].split(":");if(2===parts.length){var name_1=parts[0].replace(/\s+$/,""),value=parts[1].replace(/^\s+/,"");headers[name_1]=value}}var content=null,contentBinary=null,receivedBinary=!1;if(!Xhr.getDisableBinary())try{"arraybuffer"===x.responseType&&x.response&&(contentBinary=new Uint8Array(x.response),"application/octet-stream"!==headers["Content-Type"]&&(content=fm.liveswitch.Encoding.getUtf8().getString(contentBinary)),receivedBinary=!0)}catch(error){Xhr.setDisableBinary(!0)}return receivedBinary||(content=x.responseText),options.onSuccess({content:content,contentBinary:contentBinary,statusCode:x.status,headers:headers})}},Xhr.handler=function(options,x){return x._aborting?Xhr.failureHandler(options,"XHR request timed out."):(options.onResponseReceived&&options.onResponseReceived(x),Xhr.successHandler(options,x))},Xhr.send=function(options){options=fm.liveswitch.Util.extend({sync:!1,url:"",method:"POST",content:null,contentBinary:null,headers:{},timeout:15e3,abortOnUnload:!1,cacheBusterParameterName:"_cb",onRequestCreated:null,onResponseReceived:null,onFailure:null,onSuccess:null},options||{});try{var x_1;if(window.XMLHttpRequest)x_1=new XMLHttpRequest;else{try{x_1=new ActiveXObject("MSXML2.XMLHTTP.3.0")}catch(undefined){}if(!x_1)try{x_1=new ActiveXObject("Microsoft.XMLHTTP")}catch(undefined){}}if(!x_1)return!1;var url=options.url;if("GET"===options.method&&(url=url+(-1===url.indexOf("?")?"?":"&")+options.cacheBusterParameterName+"="+(new Date).getTime()),x_1.open(options.method,url,!options.sync),Xhr.getDisableBinary()&&x_1.setRequestHeader("X-FM-DisableBinary","true"),!Xhr.getDisableBinary()&&!options.sync)try{x_1.responseType="arraybuffer"}catch(error){Xhr.setDisableBinary(!0)}options.onRequestCreated&&(options=options.onRequestCreated(x_1));var c_1,xhrTimeout_1,useDefaultContentType=!0;for(var name_2 in options.headers){var value=options.headers[name_2];"referer"!==name_2.toLowerCase()&&"origin"!==name_2.toLowerCase()&&("content-type"===name_2.toLowerCase()&&(useDefaultContentType=!1),x_1.setRequestHeader(name_2,value))}options.abortOnUnload&&(c_1=++Xhr._count,Xhr._current[c_1]=x_1),options.sync||(x_1.onreadystatechange=function(){if(x_1.readyState>3&&!x_1._abortingOnUnload){clearTimeout(xhrTimeout_1);try{x_1.onreadystatechange=null}catch(error){x_1.onreadystatechange=function(){}}if(x_1.status>0?Xhr.handler(options,x_1):Xhr.failureHandler(options,"Invalid XHR response."),options.abortOnUnload)return delete Xhr._current[c_1]}});var sentBinary=!1;if(!Xhr.getDisableBinary()&&options.contentBinary)try{x_1.send(options.contentBinary.buffer),sentBinary=!0}catch(error){try{x_1.send(options.contentBinary),sentBinary=!0}catch(error){Xhr.setDisableBinary(!0)}}return sentBinary||(options.content?(useDefaultContentType&&x_1.setRequestHeader("Content-Type","application/json"),x_1.send(options.content)):x_1.send()),xhrTimeout_1=window.setTimeout((function(){try{x_1._aborting=!0,x_1.abort()}catch(undefined){}}),options.timeout),options.sync&&(Xhr.handler(options,x_1),options.abortOnUnload&&delete Xhr._current[c_1]),!0}catch(error){return Xhr.failureHandler(options,"XHR request failed. "+(error.message||error.error||error.description||error)),!1}},Xhr.initialize=function(){Xhr.__initialized||fm.liveswitch.Util.observe(window,"unload",(function(){for(var c in Xhr._current){var x=Xhr._current[c];try{x._abortingOnUnload=!0,x.abort()}catch(undefined){}}})),Xhr.__initialized=!0},Xhr._count=0,Xhr._current={},Xhr._disableBinary=!1,Xhr._defaultWithCredentials=!0,Xhr.__initialized=!1,Xhr}();liveswitch.Xhr=Xhr,Xhr.initialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PostMessage=function(){function PostMessage(){}return PostMessage.prototype.getTypeString=function(){return"[fm.liveswitch.PostMessage]"},PostMessage.getOrigin=function(url){return/\w+:\/\/[^\/]+/.exec(url)[0]},PostMessage.createFrame=function(options,callback){var record=PostMessage._cache[options.frameUrl];if(record)record.frame.loading?record.callbacks.push(callback):window.setTimeout((function(){record.frame.loaded?callback(record.frame,null):callback(null,"Frame not loaded.")}),1);else{var frame_1=document.createElement("iframe");frame_1.style.display="none",document.body.appendChild(frame_1);var callbacks_1=[callback];frame_1.loading=!0,PostMessage._cache[options.frameUrl]=record={frame:frame_1,callbacks:callbacks_1};var loadTimeout_1=window.setTimeout((function(){for(frame_1.loading=!1,frame_1.loaded=!1,frame_1.timedOut=!0;callbacks_1.length>0;)callbacks_1.shift()(null,"Frame load timed out.")}),options.timeout);fm.liveswitch.Util.observe(frame_1,"load",(function(){if(!frame_1.timedOut){clearTimeout(loadTimeout_1);var receivePong=function(e){if(e.source===frame_1.contentWindow&&"pong"===e.data){if(frame_1.timedOut)return;for(clearTimeout(pongTimeout),frame_1.loading=!1,frame_1.loaded=!0,frame_1.timedOut=!1,PostMessage.listen(options,frame_1);callbacks_1.length>0;)callbacks_1.shift()(frame_1,null);return fm.liveswitch.Util.unobserve(window,"message",receivePong)}},pongTimeout=window.setTimeout((function(){for(frame_1.loading=!1,frame_1.loaded=!1,frame_1.timedOut=!0;callbacks_1.length>0;)callbacks_1.shift()(null,"Frame pong timed out.");if(receivePong)return fm.liveswitch.Util.unobserve(window,"message",receivePong)}),500);fm.liveswitch.Util.observe(window,"message",receivePong),frame_1.contentWindow.postMessage("ping",PostMessage.getOrigin(options.url))}})),frame_1.src=fm.liveswitch.HttpTransfer.addQueryToUrl(options.frameUrl,"type","pmf")}},PostMessage.send=function(options){(options=fm.liveswitch.Util.extend({url:"",onFailure:null,onSuccess:null,onRequestCreated:null,onResponseReceived:null},options||{})).contentBinary=null,PostMessage.createFrame(options,(function(frame,error){if(frame)return options.id=++PostMessage._optionsCounter,PostMessage._optionsCache[options.id]=options,frame.contentWindow.postMessage(fm.liveswitch.Json.serialize(options),PostMessage.getOrigin(options.url));if(options.onFailure){var message="Could not initialize postMessage frame.";return error&&(message+=" "+error),options.onFailure({message:message,local:!0})}}))},PostMessage.listen=function(options,frame){fm.liveswitch.Util.observe(window,"message",(function(e){if(e.source===frame.contentWindow){try{e=fm.liveswitch.Json.deserialize(e.data)}catch(error){return}if(!e.id)return;if(!(options=PostMessage._optionsCache[e.id]))return;1!==e.type&&2!==e.type||delete PostMessage._optionsCache[e.id],1===e.type?options.onFailure&&options.onFailure(e):2===e.type?options.onSuccess&&options.onSuccess(e):3===e.type?options.onRequestCreated&&options.onRequestCreated(null):4===e.type&&options.onResponseReceived&&options.onResponseReceived(null)}}))},PostMessage._cache={},PostMessage._optionsCounter=0,PostMessage._optionsCache={},PostMessage}();liveswitch.PostMessage=PostMessage}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PromiseBase=function(_super){function PromiseBase(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).__id=fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""),_this.__stateLock=new Object,_this.__pendingPromisesToResolve=new Array,_this.__pendingPromisesToReject=new Array,_this.__pendingResolves=new Array,_this.__pendingRejects=new Array,_super.prototype.setState.call(_this,fm.liveswitch.FutureState.Pending),_this}return __extends(PromiseBase,_super),PromiseBase.prototype.getTypeString=function(){return"[fm.liveswitch.PromiseBase],"+_super.prototype.getTypeString.call(this)},PromiseBase.all=function(promises){if(1==arguments.length){var promise=new fm.liveswitch.Promise;if(fm.liveswitch.Global.equals(promises,null)||fm.liveswitch.Global.equals(promises.length,0))return promise.resolve(null),promise;var counter=new fm.liveswitch.AtomicInteger(promises.length);return promise.doAll(promises,counter),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.rejectNow=function(ex){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return promise.reject(ex),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.resolveNow=function(){if(0==arguments.length)return fm.liveswitch.PromiseBase.resolveNow(null);if(1==arguments.length){var result=arguments[0],promise=new fm.liveswitch.Promise;return promise.resolve(result),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.wrapPromise=function(callback){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{if(fm.liveswitch.Global.equals(callback,null))throw new fm.liveswitch.Exception("callback cannot be null.");return callback()}catch(exception){return fm.liveswitch.PromiseBase.rejectNow(exception)}},PromiseBase.prototype.addReject=function(promise,reject){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__pendingPromisesToReject,null)&&(this.__pendingPromisesToReject=new Array),fm.liveswitch.Global.equals(this.__pendingRejects,null)&&(this.__pendingRejects=new Array),fm.liveswitch.ArrayExtensions.add(this.__pendingPromisesToReject,promise),fm.liveswitch.ArrayExtensions.add(this.__pendingRejects,reject)},PromiseBase.prototype.addResolve=function(promise,resolve){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__pendingPromisesToResolve,null)&&(this.__pendingPromisesToResolve=new Array),fm.liveswitch.Global.equals(this.__pendingResolves,null)&&(this.__pendingResolves=new Array),fm.liveswitch.ArrayExtensions.add(this.__pendingPromisesToResolve,promise),fm.liveswitch.ArrayExtensions.add(this.__pendingResolves,resolve)},PromiseBase.prototype.castAndResolve=function(result){if(1==arguments.length)return this.resolve(result);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.prototype.doAll=function(promises,counter){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var resolveAction=null,rejectAction=null,_i=0,promises_1=promises;_i<promises_1.length;_i++){var future=promises_1[_i];fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(result){fm.liveswitch.Global.equals(counter.decrement(),0)&&_this.resolve(null)}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){_this.reject(ex)}),future.then(resolveAction,rejectAction)}},PromiseBase.prototype.doRejectAsync=function(promise,exception){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ManagedThread.dispatch((function(){_this.reject(exception)?promise.resolve(null):promise.reject(new fm.liveswitch.Exception("Promise was already fulfilled."))}))},PromiseBase.prototype.doResolveAsync=function(promise,result){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ManagedThread.dispatch((function(){_this.resolve(result)?promise.resolve(null):promise.reject(new fm.liveswitch.Exception("Promise was already fulfilled."))}))},PromiseBase.prototype.getId=function(){if(0==arguments.length)return this.__id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.prototype.process=function(promise,resolve,reject){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.FutureState.Pending))return this.addResolve(promise,resolve),void this.addReject(promise,reject);fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.FutureState.Resolved)?this.raiseResolve(resolve,_super.prototype.getResult.call(this),promise):fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.FutureState.Rejected)&&this.raiseReject(reject,_super.prototype.getException.call(this),promise)},PromiseBase.prototype.raiseReject=function(callback,exception,promise){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{callback(exception)}catch(exception2){fm.liveswitch.Log.error("Could not reject promise. Promise rejection callback threw an unhandled exception.",exception2),promise.reject(exception2)}},PromiseBase.prototype.raiseRejects=function(exception){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(this.__pendingRejects,null))for(var i=0;i<fm.liveswitch.ArrayExtensions.getCount(this.__pendingRejects);i++)this.raiseReject(this.__pendingRejects[i],exception,this.__pendingPromisesToReject[i]);this.reset()},PromiseBase.prototype.raiseResolve=function(callback,result,promise){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{callback(result)}catch(exception){fm.liveswitch.Log.error("Could not resolve promise. Promise resolution callback threw an unhandled exception.",exception),promise.reject(exception)}},PromiseBase.prototype.raiseResolves=function(result){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(this.__pendingResolves,null))for(var i=0;i<fm.liveswitch.ArrayExtensions.getCount(this.__pendingResolves);i++)this.raiseResolve(this.__pendingResolves[i],result,this.__pendingPromisesToResolve[i]);this.reset()},PromiseBase.prototype.reject=function(exception){if(1==arguments.length)return!!fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.FutureState.Pending)&&(_super.prototype.setException.call(this,exception),_super.prototype.setState.call(this,fm.liveswitch.FutureState.Rejected),this.raiseRejects(exception),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.prototype.rejectAsync=function(exception){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doRejectAsync(promise,exception),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.prototype.reset=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.clear(this.__pendingPromisesToResolve),fm.liveswitch.ArrayExtensions.clear(this.__pendingPromisesToReject),fm.liveswitch.ArrayExtensions.clear(this.__pendingResolves),fm.liveswitch.ArrayExtensions.clear(this.__pendingRejects)},PromiseBase.prototype.resolve=function(result){if(1==arguments.length)return!!fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.FutureState.Pending)&&(_super.prototype.setResult.call(this,result),_super.prototype.setState.call(this,fm.liveswitch.FutureState.Resolved),this.raiseResolves(result),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase.prototype.resolveAsync=function(result){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doResolveAsync(promise,result),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromiseBase}(fm.liveswitch.Future);liveswitch.PromiseBase=PromiseBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Promise=function(_super){function Promise(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Promise,_super),Promise.prototype.getTypeString=function(){return"[fm.liveswitch.Promise],"+_super.prototype.getTypeString.call(this)},Promise.prototype.then=function(resolve,reject){var promise=new fm.liveswitch.Promise;return this.process(promise,(function(result){if(null==resolve)promise.resolve(result);else{var resolveResult=resolve(result);fm.liveswitch.Util.isObjectType(resolveResult,"[fm.liveswitch.Future]")?resolveResult.then((function(chainedResult){promise.resolve(chainedResult)}),(function(exception){promise.reject(exception)})):promise.resolve(resolveResult)}}),(function(exception){null!=reject&&reject(exception),promise.reject(exception)})),promise},Promise.prototype.fail=function(reject){var promise=new fm.liveswitch.Promise;return this.process(promise,(function(result){promise.resolve(result)}),(function(exception){null!=reject&&reject(exception),promise.reject(exception)})),promise},Promise.wrap=function(callbackActionOrFunction){var promise=new fm.liveswitch.Promise;try{if(null==callbackActionOrFunction)promise.resolve(null);else{var result=callbackActionOrFunction();result?promise.resolve(result):promise.resolve(null)}}catch(ex){promise.reject(ex)}return promise},Promise.wrapAsync=function(callbackActionOrFunction){var promise=new fm.liveswitch.Promise;return fm.liveswitch.ManagedThread.dispatch((function(){try{if(null==callbackActionOrFunction)promise.resolve(null);else{var result=callbackActionOrFunction();result?promise.resolve(result):promise.resolve(null)}}catch(ex){promise.reject(ex)}})),promise},Promise}(fm.liveswitch.PromiseBase);liveswitch.Promise=Promise}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Randomizer=function(){function Randomizer(){}return Randomizer.prototype.getTypeString=function(){return"[fm.liveswitch.Randomizer]"},Randomizer.prototype.next=function(){if(0==arguments.length)return this.next(0,2147483647);if(1==arguments.length){var maxValue=arguments[0];return this.next(0,maxValue)}if(2==arguments.length){var minValue=arguments[0];maxValue=arguments[1];return Math.floor(Math.random()*(maxValue-minValue))+minValue}},Randomizer.prototype.nextDouble=function(){return Math.random()},Randomizer.prototype.nextBytes=function(buffer){for(var i=0;i<buffer.length;i++)buffer[i]=this.next(256)},Randomizer.prototype.randomString=function(size){for(var s="",i=0;i<size;i++)s+=Randomizer._randomCharset.charAt(this.next(Randomizer._randomCharset.length));return s},Randomizer._randomCharset="abcdefghijklmnopqrstuvwxyz0123456789",Randomizer}();liveswitch.Randomizer=Randomizer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Regex=function(){function Regex(pattern){this.pattern=pattern}return Regex.prototype.getTypeString=function(){return"[fm.liveswitch.Regex]"},Regex.isMatch=function(input,pattern){return new RegExp(pattern).test(input)},Regex.prototype.isMatch=function(input){return new RegExp(this.pattern).test(input)},Regex}();liveswitch.Regex=Regex}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function hashBlocks(w,v,p,pos,len){for(var a,b,c,d,e,f,g,h,u,i,j,t1,t2;len>=64;){for(a=v[0],b=v[1],c=v[2],d=v[3],e=v[4],f=v[5],g=v[6],h=v[7],i=0;i<16;i++)j=pos+4*i,w[i]=(255&p[j])<<24|(255&p[j+1])<<16|(255&p[j+2])<<8|255&p[j+3];for(i=16;i<64;i++)t1=((u=w[i-2])>>>17|u<<15)^(u>>>19|u<<13)^u>>>10,t2=((u=w[i-15])>>>7|u<<25)^(u>>>18|u<<14)^u>>>3,w[i]=(t1+w[i-7]|0)+(t2+w[i-16]|0);for(i=0;i<64;i++)t1=(((e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7))+(e&f^~e&g)|0)+(h+(K[i]+w[i]|0)|0)|0,t2=((a>>>2|a<<30)^(a>>>13|a<<19)^(a>>>22|a<<10))+(a&b^a&c^b&c)|0,h=g,g=f,f=e,e=d+t1|0,d=c,c=b,b=a,a=t1+t2|0;v[0]+=a,v[1]+=b,v[2]+=c,v[3]+=d,v[4]+=e,v[5]+=f,v[6]+=g,v[7]+=h,pos+=64,len-=64}return pos}var Sha256=function(){function Sha256(){this.digestLength=32,this.blockSize=64,this.state=new Int32Array(8),this.temp=new Int32Array(64),this.buffer=new Uint8Array(128),this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this.reset()}return Sha256.prototype.reset=function(){return this.state[0]=1779033703,this.state[1]=3144134277,this.state[2]=1013904242,this.state[3]=2773480762,this.state[4]=1359893119,this.state[5]=2600822924,this.state[6]=528734635,this.state[7]=1541459225,this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this},Sha256.prototype.clean=function(){for(var i=0;i<this.buffer.length;i++)this.buffer[i]=0;for(i=0;i<this.temp.length;i++)this.temp[i]=0;this.reset()},Sha256.prototype.update=function(data,dataLength){if(void 0===dataLength&&(dataLength=data.length),this.finished)throw new fm.liveswitch.Exception("SHA256: can't update because hash was finished.");var dataPos=0;if(this.bytesHashed+=dataLength,this.bufferLength>0){for(;this.bufferLength<64&&dataLength>0;)this.buffer[this.bufferLength++]=data[dataPos++],dataLength--;64===this.bufferLength&&(hashBlocks(this.temp,this.state,this.buffer,0,64),this.bufferLength=0)}for(dataLength>=64&&(dataPos=hashBlocks(this.temp,this.state,data,dataPos,dataLength),dataLength%=64);dataLength>0;)this.buffer[this.bufferLength++]=data[dataPos++],dataLength--;return this},Sha256.prototype.finish=function(out){if(!this.finished){var bytesHashed=this.bytesHashed,left=this.bufferLength,bitLenHi=bytesHashed/536870912|0,bitLenLo=bytesHashed<<3,padLength=bytesHashed%64<56?64:128;this.buffer[left]=128;for(var i=left+1;i<padLength-8;i++)this.buffer[i]=0;this.buffer[padLength-8]=bitLenHi>>>24&255,this.buffer[padLength-7]=bitLenHi>>>16&255,this.buffer[padLength-6]=bitLenHi>>>8&255,this.buffer[padLength-5]=bitLenHi>>>0&255,this.buffer[padLength-4]=bitLenLo>>>24&255,this.buffer[padLength-3]=bitLenLo>>>16&255,this.buffer[padLength-2]=bitLenLo>>>8&255,this.buffer[padLength-1]=bitLenLo>>>0&255,hashBlocks(this.temp,this.state,this.buffer,0,padLength),this.finished=!0}for(i=0;i<8;i++)out[4*i+0]=this.state[i]>>>24&255,out[4*i+1]=this.state[i]>>>16&255,out[4*i+2]=this.state[i]>>>8&255,out[4*i+3]=this.state[i]>>>0&255;return this},Sha256.prototype.digest=function(){var out=new Uint8Array(this.digestLength);return this.finish(out),out},Sha256.prototype._saveState=function(out){for(var i=0;i<this.state.length;i++)out[i]=this.state[i]},Sha256.prototype._restoreState=function(from,bytesHashed){for(var i=0;i<this.state.length;i++)this.state[i]=from[i];this.bytesHashed=bytesHashed,this.finished=!1,this.bufferLength=0},Sha256}();liveswitch.Sha256=Sha256}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.HttpTransfer.addQueryToUrl=function(url,key,value){return void 0===key||fm.liveswitch.StringExtensions.isNullOrEmpty(key)?url:(null==value&&(value=""),value=encodeURIComponent(value),fm.liveswitch.StringExtensions.concat([url,-1===fm.liveswitch.StringExtensions.indexOf(url,"?",fm.liveswitch.StringComparison.OrdinalIgnoreCase)?"?":"&",key,"=",value]))}}(fm||(fm={})),function(fm){!function(liveswitch){var Stack=function(){function Stack(depth){this._list=[],this._depth=void 0!==depth?depth:0}return Stack.prototype.getTypeString=function(){return"[fm.liveswitch.Stack]"},Stack.prototype.push=function(o){if(0!==this._depth&&this.getCount()===this._depth)throw new fm.liveswitch.Exception("Depth of stack would be exceeded by pushing value.");this._list.push(o)},Stack.prototype.pop=function(){return this._list.pop()},Stack.prototype.peek=function(){return 0===this._list.length?null:this._list[this._list.length-1]},Stack.prototype.getCount=function(){return this._list.length},Stack}();liveswitch.Stack=Stack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StringBuilder=function(){function StringBuilder(value){this._value=void 0===value?"":value}return StringBuilder.prototype.getTypeString=function(){return"[fm.liveswitch.StringBuilder]"},StringBuilder.prototype.append=function(s,startIndex,count){return this._value=void 0===startIndex&&void 0===count?this._value+s:void 0===count?this._value+s.substring(startIndex):this._value+s.substring(startIndex,startIndex+count),this},StringBuilder.prototype.toString=function(){return this._value},StringBuilder.prototype.getLength=function(){return this._value.length},StringBuilder.prototype.remove=function(startIndex,length){return this._value=this._value.substring(0,startIndex)+this._value.substring(startIndex+length),this},StringBuilder}();liveswitch.StringBuilder=StringBuilder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(StringComparison){StringComparison[StringComparison.CurrentCulture=0]="CurrentCulture",StringComparison[StringComparison.CurrentCultureIgnoreCase=1]="CurrentCultureIgnoreCase",StringComparison[StringComparison.InvariantCulture=2]="InvariantCulture",StringComparison[StringComparison.InvariantCultureIgnoreCase=3]="InvariantCultureIgnoreCase",StringComparison[StringComparison.Ordinal=4]="Ordinal",StringComparison[StringComparison.OrdinalIgnoreCase=5]="OrdinalIgnoreCase"}(liveswitch.StringComparison||(liveswitch.StringComparison={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StringExtensions=function(){function StringExtensions(){}return StringExtensions.prototype.getTypeString=function(){return"[fm.liveswitch.StringExtensions]"},StringExtensions.nullCoalesce=function(value1,value2){return value1||""==value1?value1:value2},StringExtensions.toString=function(s){return s},StringExtensions.trim=function(s){if(null==s)throw new fm.liveswitch.Exception("trim() received a null argument.");return s.replace(/^\s+|\s+$/g,"")},StringExtensions.trimEnd=function(s,chars){if(null==s)throw new fm.liveswitch.Exception("trimEnd() received a null argument.");for(var expression="[",_i=0,chars_1=chars;_i<chars_1.length;_i++){var c=chars_1[_i];expression+=String.fromCharCode(c)}return expression+="]*$",s.replace(new RegExp(expression,"g"),"")},StringExtensions.trimStart=function(s,chars){if(null==s)throw new fm.liveswitch.Exception("trimStart() received a null argument.");for(var expression="^[",_i=0,chars_2=chars;_i<chars_2.length;_i++){var c=chars_2[_i];expression+=String.fromCharCode(c)}return expression+="]*",s.replace(new RegExp(expression,"g"),"")},StringExtensions.replace=function(s,search,replace){if(null==s||null==search)throw new fm.liveswitch.Exception("replace() received a null argument.");return s.replace(new RegExp(search.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1"),"g"),replace)},StringExtensions.concat=function(){for(var strings=[],_i=0;_i<arguments.length;_i++)strings[_i]=arguments[_i];1==strings.length&&fm.liveswitch.Util.isArray(strings[0])&&(strings=strings[0]);for(var s="",_a=0,strings_1=strings;_a<strings_1.length;_a++){var str=strings_1[_a];s+=str}return s},StringExtensions.contains=function(str,s){if(null==str)throw new fm.liveswitch.Exception("contains() received a null argument.");return str.indexOf(s)>-1},StringExtensions.join=function(separator){for(var array=[],_i=1;_i<arguments.length;_i++)array[_i-1]=arguments[_i];1==array.length&&fm.liveswitch.Util.isArray(array[0])&&(array=array[0]);for(var sb=new fm.liveswitch.StringBuilder,i=0;i<array.length;i++)i>0&&sb.append(separator),sb.append(array[i]);return sb.toString()},StringExtensions.split=function(s,chars){if(null==s||null==chars)throw new fm.liveswitch.Exception("split() received a null argument.");for(var splits=[],start=0,i=0;i<s.length;i++)for(var _i=0,chars_3=chars;_i<chars_3.length;_i++){chars_3[_i]==s.charCodeAt(i)&&(splits.push(s.substring(start,i)),start=i+1)}return splits.push(s.substring(start,s.length)),splits},StringExtensions.isNullOrEmpty=function(s){var noe=null==s||""===s;if(!(noe||"string"==typeof s||s instanceof String))throw new fm.liveswitch.Exception("Object is not a string.");return noe},StringExtensions.isEqual=function(str,s,stringComparison){return void 0===stringComparison||stringComparison!==fm.liveswitch.StringComparison.CurrentCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.InvariantCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.OrdinalIgnoreCase?str===s:str.toLowerCase()===s.toLowerCase()},StringExtensions.indexOf=function(str,s,stringComparison){if(null==s)throw new fm.liveswitch.Exception("indexOf() received a null argument.");return void 0===stringComparison||stringComparison!==fm.liveswitch.StringComparison.CurrentCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.InvariantCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.OrdinalIgnoreCase?str.indexOf(s):str.toLowerCase().indexOf(s.toLowerCase())},StringExtensions.lastIndexOf=function(str,s,stringComparison){if(null==s)throw new fm.liveswitch.Exception("lastIndexOf() received a null argument.");return void 0===stringComparison||stringComparison!==fm.liveswitch.StringComparison.CurrentCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.InvariantCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.OrdinalIgnoreCase?str.lastIndexOf(s):str.toLowerCase().lastIndexOf(s.toLowerCase())},StringExtensions.startsWith=function(str,s,stringComparison){if(null==s)throw new fm.liveswitch.Exception("startsWith() received a null argument.");return void 0===stringComparison||stringComparison!==fm.liveswitch.StringComparison.CurrentCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.InvariantCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.OrdinalIgnoreCase?0===str.indexOf(s):0===str.toLowerCase().indexOf(s.toLowerCase())},StringExtensions.endsWith=function(str,s,stringComparison){if(null==s)throw new fm.liveswitch.Exception("endsWith() received a null argument.");return void 0===stringComparison||stringComparison!==fm.liveswitch.StringComparison.CurrentCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.InvariantCultureIgnoreCase&&stringComparison!==fm.liveswitch.StringComparison.OrdinalIgnoreCase?-1!==str.indexOf(s,str.length-s.length):-1!==str.toLowerCase().indexOf(s.toLowerCase(),str.length-s.length)},StringExtensions.compareTo=function(s1,s2){if(null==s1||null==s2)throw new fm.liveswitch.Exception("compareTo() received one or more null arguments.");return s1.toString()<s2.toString()?-1:s1.toString()>s2.toString()?1:0},StringExtensions.format=function(format){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];if(null==format)throw new fm.liveswitch.Exception("format() received a null argument.");1==args.length&&fm.liveswitch.Util.isArray(args[0])&&(args=args[0]);var formatter=function(match,number){return null!=args[number]?args[number]:match};return format.replace(/{(\d+)}/g,formatter)},StringExtensions.toLower=function(str){if(null==str)throw new fm.liveswitch.Exception("toLower() received a null argument.");return str.toLowerCase()},StringExtensions.toUpper=function(str){if(null==str)throw new fm.liveswitch.Exception("toUpper() received a null argument.");return str.toUpperCase()},StringExtensions.getLength=function(str){if(null==str)throw new fm.liveswitch.Exception("getLength() received a null argument.");return str.length},StringExtensions.getChars=function(str){if(null==str)throw new fm.liveswitch.Exception("getChars() received a null argument.");for(var chars=[],i=0;i<str.length;i++)chars.push(str[i]);return chars},StringExtensions.substring=function(str,startIndex,length){if(null==str)throw new fm.liveswitch.Exception("substring() received a null argument.");return str.substring(startIndex,startIndex+length)},StringExtensions.getHashCode=function(str){if(null==str)throw new fm.liveswitch.Exception("getHashCode() received a null argument.");var hash=0,i=0;if(0==str.length)return hash;for(i=0;i<str.length;i++)hash=(hash<<5)-hash+str.charCodeAt(i),hash|=0;return hash},StringExtensions.empty="",StringExtensions}();liveswitch.StringExtensions=StringExtensions}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TimeoutTimer=function(){function TimeoutTimer(callback,state){this._timer=0,this._callback=callback,this._state=state,this._currentTimeout=0}return TimeoutTimer.prototype.getTypeString=function(){return"[fm.liveswitch.TimeoutTimer]"},TimeoutTimer.prototype.start=function(timeout){var _this=this;if(this._timer)throw new fm.liveswitch.Exception("Timer is currently active.");this._currentTimeout=timeout,timeout=Math.max(0,timeout),this._timer=setTimeout((function(){_this._currentTimeout>=0&&_this.stop()&&_this._callback&&_this._callback(_this._state)}),timeout)},TimeoutTimer.prototype.stop=function(){return!!this._timer&&(clearTimeout(this._timer),this._timer=null,!0)},TimeoutTimer}();liveswitch.TimeoutTimer=TimeoutTimer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TimeSpan=function(){function TimeSpan(){if(1==arguments.length){var ticks=arguments[0],milliseconds=ticks/1e4;this._milliseconds=milliseconds%1e3;var seconds=(milliseconds-=this._milliseconds)/1e3;this._seconds=seconds%60;var minutes=(seconds-=this._seconds)/60;this._minutes=minutes%60;var hours=(minutes-=this._minutes)/60;this._hours=hours}else{hours=arguments[0],minutes=arguments[0],seconds=arguments[0];this._hours=hours,this._minutes=minutes,this._seconds=seconds}}return TimeSpan.prototype.getTotalSeconds=function(){return 3600*this._hours+60*this._minutes+this._seconds},TimeSpan.prototype.getTotalMilliseconds=function(){return 36e5*this._hours+6e4*this._minutes+1e3*this._seconds+this._milliseconds},TimeSpan}();liveswitch.TimeSpan=TimeSpan}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Type=function(){function Type(typeString){this._typeString=typeString}return Type.prototype.getTypeString=function(){return"[fm.liveswitch.Type]"},Type.prototype.getFullName=function(){return this._typeString.substr(1,this._typeString.indexOf("]")-1)},Type.prototype.getBaseType=function(){var typeStrings=fm.liveswitch.StringExtensions.split(this._typeString,[",".charCodeAt(0)]);return 1==typeStrings.length?new Type("[Object]"):new Type(typeStrings[1])},Type}();liveswitch.Type=Type}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Uri=function(){function Uri(uriString){this._uriString=uriString}return Uri.prototype.getTypeString=function(){return"[fm.liveswitch.Uri]"},Uri.prototype.toString=function(){return this._uriString},Uri.escapeDataString=function(s){return encodeURIComponent(s)},Uri}();liveswitch.Uri=Uri}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketBase=function(){function WebSocketBase(){fm.liveswitch.WebSocketBase.fmliveswitchWebSocketBaseInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return WebSocketBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketBase]"},WebSocketBase.prototype.raiseCloseComplete=function(closeArgs,statusCode,reason){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(closeArgs,null)&&!fm.liveswitch.Global.equals(closeArgs.getOnComplete(),null)){var p=new fm.liveswitch.WebSocketCloseCompleteArgs;p.setCloseArgs(closeArgs),p.setStatusCode(statusCode),p.setReason(reason),closeArgs.getOnComplete()(p)}},WebSocketBase.prototype.raiseOpenFailure=function(openArgs,statusCode,exception){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(openArgs,null)&&!fm.liveswitch.Global.equals(openArgs.getOnFailure(),null)){var p=new fm.liveswitch.WebSocketOpenFailureArgs;p.setOpenArgs(openArgs),p.setStatusCode(statusCode),p.setException(exception),openArgs.getOnFailure()(p)}},WebSocketBase.prototype.raiseOpenSuccess=function(openArgs){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(openArgs,null)&&!fm.liveswitch.Global.equals(openArgs.getOnSuccess(),null)){var p=new fm.liveswitch.WebSocketOpenSuccessArgs;p.setOpenArgs(openArgs),openArgs.getOnSuccess()(p)}},WebSocketBase.prototype.raiseReceive=function(openArgs,textMessage,binaryMessage){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(openArgs,null)&&!fm.liveswitch.Global.equals(openArgs.getOnReceive(),null)){var p=new fm.liveswitch.WebSocketReceiveArgs;p.setOpenArgs(openArgs),p.setTextMessage(textMessage),p.setBinaryMessage(binaryMessage),openArgs.getOnReceive()(p)}},WebSocketBase.prototype.raiseStreamFailure=function(openArgs,statusCode,exception){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(openArgs,null)&&!fm.liveswitch.Global.equals(openArgs.getOnStreamFailure(),null)){var p=new fm.liveswitch.WebSocketStreamFailureArgs;p.setOpenArgs(openArgs),p.setStatusCode(statusCode),p.setException(exception),openArgs.getOnStreamFailure()(p)}},WebSocketBase.fmliveswitchWebSocketBaseInitialize=function(){fm.liveswitch.WebSocketBase.__fmliveswitchWebSocketBaseInitialized||fm.liveswitch.WebSocketBase.__fmliveswitchWebSocketBaseInitializing||(fm.liveswitch.WebSocketBase.__fmliveswitchWebSocketBaseInitializing=!0,fm.liveswitch.WebSocketBase.fm_liveswitch_WebSocketBase___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.WebSocketBase]")),fm.liveswitch.WebSocketBase.__fmliveswitchWebSocketBaseInitialized=!0,fm.liveswitch.WebSocketBase.__fmliveswitchWebSocketBaseInitializing=!1)},WebSocketBase.__fmliveswitchWebSocketBaseInitialized=!1,WebSocketBase.__fmliveswitchWebSocketBaseInitializing=!1,WebSocketBase}();liveswitch.WebSocketBase=WebSocketBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocket=function(_super){function WebSocket(requestUrl,protocol){var _this=_super.call(this)||this;return _this.onOpen=function(e){_this.raiseOnResponseReceived(),_this._opening=!1,_this.raiseOpenSuccess(_this._openArgs)},_this.onError=function(e){_this._opening?(_this._opening=!1,_this._raisedOpenFailure||(_this._raisedOpenFailure=!0,_this.raiseOpenFailure(_this._openArgs,fm.liveswitch.WebSocketStatusCode.Abnormal,new fm.liveswitch.Exception("WebSocket error.")))):_this._closing||_this._raisedStreamFailure||(_this._raisedStreamFailure=!0,_this.raiseStreamFailure(_this._openArgs,fm.liveswitch.WebSocketStatusCode.Abnormal,new fm.liveswitch.Exception("WebSocket error.")))},_this.onClose=function(e){_this.processOnClose(e.code,e.reason)},_this.onMessage=function(e){_this._timer&&window.clearTimeout(_this._timer),_this._sendArgs=null;var binaryMessage=null,textMessage=null;return!WebSocket.getDisableBinary()&&e.data instanceof ArrayBuffer?binaryMessage=new Uint8Array(e.data):textMessage=e.data,_this.raiseReceive(_this._openArgs,textMessage,binaryMessage)},requestUrl=(requestUrl=(requestUrl=fm.liveswitch.Util.absolutizeUrl(requestUrl)).replace("https://","wss://")).replace("http://","ws://"),_this._requestUrl=requestUrl,_this._protocol=protocol||null,_this._webSocket=null,_this._onRequestCreated=null,_this._onResponseReceived=null,_this._opening=!1,_this._closing=!1,_this._aborting=!1,_this._openArgs=null,_this._sendArgs=null,_this._timer=0,_this._raisedStreamFailure=!1,_this._raisedOpenFailure=!1,_this}return __extends(WebSocket,_super),WebSocket.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocket],"+_super.prototype.getTypeString.call(this)},WebSocket.getExists=function(){return!0},WebSocket.setDisableBinary=function(disableBinary){WebSocket._disableBinary=disableBinary},WebSocket.getDisableBinary=function(){return"undefined"==typeof Uint8Array||WebSocket._disableBinary},WebSocket.prototype.getSecure=function(){return 0===this._requestUrl.indexOf("wss://")},WebSocket.prototype.getBufferedAmount=function(){return this._webSocket?this._webSocket.bufferedAmount:0},WebSocket.prototype.getIsOpen=function(){return!!this._webSocket&&1===this._webSocket.readyState},WebSocket.prototype.open=function(args){var url=this._requestUrl;this._openArgs=args,this._onRequestCreated=args.getOnRequestCreated(),this._onResponseReceived=args.getOnResponseReceived(),this.raiseOnRequestCreated();var headers=args.getHeaders(),headersHash={};if(headers&&(headersHash=headers.toHash()),WebSocket.getDisableBinary()&&(headersHash["X-FM-DisableBinary"]="true"),url=fm.liveswitch.HttpTransfer.addQueryToUrl(url,"headers",fm.liveswitch.Json.serialize(headersHash)),"WebSocket"in window&&(this._webSocket=this._protocol?new window.WebSocket(url,this._protocol):new window.WebSocket(url)),this._webSocket){if(!WebSocket.getDisableBinary())try{this._webSocket.binaryType="arraybuffer"}catch(error){WebSocket.setDisableBinary(!0)}this._opening=!0,this._closing=!1,this._raisedStreamFailure=!1,this._raisedOpenFailure=!1,this._webSocket.onopen=this.onOpen,this._webSocket.onerror=this.onError,this._webSocket.onclose=this.onClose,this._webSocket.onmessage=this.onMessage}else this.raiseOpenFailure(args,fm.liveswitch.WebSocketStatusCode.NoStatus,new fm.liveswitch.Exception("Could not create WebSocket."))},WebSocket.prototype.processOnClose=function(code,reason){var reasonText="";fm.liveswitch.StringExtensions.isNullOrEmpty(reason)||(reasonText=" ("+reason+")"),this._opening?(this._opening=!1,this._raisedOpenFailure||(this._raisedOpenFailure=!0,this.raiseOpenFailure(this._openArgs,code,new fm.liveswitch.Exception("Could not open WebSocket."+reasonText)))):this._aborting?this._raisedStreamFailure||(this._raisedStreamFailure=!0,this.raiseStreamFailure(this._openArgs,code,new fm.liveswitch.Exception("WebSocket request timed out."+reasonText))):this._closing||this._raisedStreamFailure||(this._raisedStreamFailure=!0,this.raiseStreamFailure(this._openArgs,code,new fm.liveswitch.Exception("WebSocket closed."+reasonText)))},WebSocket.prototype.send=function(args){var _this=this;if(this._webSocket){this._sendArgs=args,this._timer&&window.clearTimeout(this._timer);var timeout=args.getTimeout();timeout>0&&(this._timer=window.setTimeout((function(){_this._webSocket&&(_this._aborting=!0,_this._webSocket.close(),_this.processOnClose(4e3,"Timeout"))}),timeout));var sentBinary=!1,binary=args.getBinaryMessage();if(!WebSocket.getDisableBinary()&&binary)try{this._webSocket.send(binary.buffer),sentBinary=!0}catch(error){WebSocket.setDisableBinary(!0)}return sentBinary?void 0:this._webSocket.send(args.getTextMessage())}},WebSocket.prototype.close=function(args){if(void 0!==args){var code=args.getStatusCode()||fm.liveswitch.WebSocketStatusCode.Normal,reason=args.getReason()||"",e=new fm.liveswitch.WebSocketCloseCompleteArgs;e.setStatusCode(code),e.setReason(reason),window.clearTimeout(this._timer),this._webSocket&&(this._closing=!0,this._webSocket.close(code,reason),this._webSocket=null),this.raiseCloseComplete(args,code,reason)}else this.close(new fm.liveswitch.WebSocketCloseArgs)},WebSocket.prototype.raiseOnRequestCreated=function(){if(this._onRequestCreated){var args=new fm.liveswitch.HttpRequestCreatedArgs;args.setSender(this._openArgs.getSender()),args.setRequest(null),this._onRequestCreated(args)}},WebSocket.prototype.raiseOnResponseReceived=function(){if(this._onResponseReceived){var args=new fm.liveswitch.HttpResponseReceivedArgs;args.setSender(this._openArgs.getSender()),args.setResponse(null),this._onResponseReceived(args)}},WebSocket._disableBinary=!1,WebSocket}(fm.liveswitch.WebSocketBase);liveswitch.WebSocket=WebSocket}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Serializable=function(){function Serializable(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchSerializableInit(),this.setIsSerialized(!1),this.setIsDirty(!1)}return Serializable.prototype.getTypeString=function(){return"[fm.liveswitch.Serializable]"},Serializable.prototype.fmliveswitchSerializableInit=function(){this._isDirty=!1,this._isSerialized=!1},Serializable.prototype.getIsDirty=function(){if(0==arguments.length)return this._isDirty;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Serializable.prototype.getIsSerialized=function(){if(0==arguments.length)return this._isSerialized;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Serializable.prototype.getSerialized=function(){if(0==arguments.length)return this.__serialized;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Serializable.prototype.setIsDirty=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._isDirty=value},Serializable.prototype.setIsSerialized=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._isSerialized=value},Serializable.prototype.setSerialized=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__serialized=value,this.setIsSerialized(!0),this.setIsDirty(!1)},Serializable}();liveswitch.Serializable=Serializable}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Dynamic=function(_super){function Dynamic(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).__dynamicProperties=null,_this.__dynamicPropertiesLock=new Object,_this}return __extends(Dynamic,_super),Dynamic.prototype.getTypeString=function(){return"[fm.liveswitch.Dynamic],"+_super.prototype.getTypeString.call(this)},Dynamic.prototype.getDynamicProperties=function(){if(0==arguments.length){if(fm.liveswitch.Global.equals(this.__dynamicProperties,null))return null;for(var dictionary={},_i=0,_a=fm.liveswitch.HashExtensions.getKeys(this.__dynamicProperties);_i<_a.length;_i++){var str=_a[_i];dictionary[str]=this.__dynamicProperties[str]}return dictionary}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Dynamic.prototype.getDynamicValue=function(key){if(1==arguments.length){var obj2=null;this.tryInitDynamicProperties();var _var0=new fm.liveswitch.Holder(obj2),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__dynamicProperties,key,_var0);return obj2=_var0.getValue(),_var1?obj2:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Dynamic.prototype.setDynamicProperties=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))this.__dynamicProperties=null;else{this.__dynamicProperties={};for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(value);_i<_a.length;_i++){var str=_a[_i];this.__dynamicProperties[str]=value[str]}}},Dynamic.prototype.setDynamicValue=function(key,value){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.tryInitDynamicProperties(),this.__dynamicProperties[key]=value},Dynamic.prototype.tryInitDynamicProperties=function(){if(0==arguments.length)return!!fm.liveswitch.Global.equals(this.__dynamicProperties,null)&&(this.__dynamicProperties={},!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Dynamic.prototype.unsetDynamicValue=function(key){if(1==arguments.length)return this.tryInitDynamicProperties(),fm.liveswitch.HashExtensions.remove(this.__dynamicProperties,key);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Dynamic}(fm.liveswitch.Serializable);liveswitch.Dynamic=Dynamic}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Stream=function(_super){function Stream(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Stream,_super),Stream.prototype.getTypeString=function(){return"[fm.liveswitch.Stream],"+_super.prototype.getTypeString.call(this)},Stream.prototype.getState=function(){return this._getInternal().getState()},Stream.prototype.addOnStateChange=function(value){this._getInternal().addOnStateChange(value)},Stream.prototype.removeOnStateChange=function(value){this._getInternal().removeOnStateChange(value)},Stream.prototype.changeDirection=function(newDirection){return this._getInternal().changeDirection(newDirection)},Stream.prototype.getDirection=function(){return this._getInternal().getDirection()},Stream.prototype.getLocalReceive=function(){return this._getInternal().getLocalReceive()},Stream.prototype.setLocalReceive=function(receiveEnabled){return this._getInternal().setLocalReceive(receiveEnabled)},Stream.prototype.getLocalSend=function(){return this._getInternal().getLocalSend()},Stream.prototype.setLocalSend=function(sendEnabled){return this._getInternal().setLocalSend(sendEnabled)},Stream.prototype.getRemoteReceive=function(){return this._getInternal().getRemoteReceive()},Stream.prototype.getRemoteSend=function(){return this._getInternal().getRemoteSend()},Stream.prototype.getRemoteDirection=function(){return this._getInternal().getRemoteDirection()},Stream.prototype.getId=function(){return this._getInternal().getId()},Stream.prototype.getExternalId=function(){return this._getInternal().getExternalId()},Stream.prototype.getLabel=function(){return this._getInternal().getId()},Stream.prototype.getLocalDirection=function(){return this._getInternal().getLocalDirection()},Stream.prototype.getMediaDescriptionId=function(){return this._getInternal().getMediaDescriptionId()},Stream.prototype.getTag=function(){return this._getInternal().getTag()},Stream.prototype.getType=function(){return this._getInternal().getType()},Stream.prototype.setExternalId=function(value){this._getInternal().setExternalId(value)},Stream.prototype.setLocalDirection=function(value){this._getInternal().setLocalDirection(value)},Stream.prototype.setTag=function(value){this._getInternal().setTag(value)},Stream.prototype.addOnDirectionChange=function(value){this._getInternal().addOnDirectionChange(value)},Stream.prototype.removeOnDirectionChange=function(value){this._getInternal().removeOnDirectionChange(value)},Stream.prototype.getTransportInfo=function(){return this._getInternal().getTransportInfo()},Stream}(fm.liveswitch.Dynamic);liveswitch.Stream=Stream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaStream=function(_super){function MediaStream(localTrack,remoteTrack){var _this=_super.call(this)||this;return _this.localTrack=localTrack,_this.remoteTrack=remoteTrack,_this}return __extends(MediaStream,_super),MediaStream.prototype.getTypeString=function(){return"[fm.liveswitch.MediaStream],"+_super.prototype.getTypeString.call(this)},MediaStream.prototype.getLocalTrack=function(){return this.localTrack},MediaStream.prototype.getRemoteTrack=function(){return this.remoteTrack},MediaStream.prototype.getLocalBandwidth=function(){return this._getInternal().getLocalBandwidth()},MediaStream.prototype.getLocalMuted=function(){return this.getMuted()},MediaStream.prototype.setLocalMuted=function(value){return this.setMuted(value)},MediaStream.prototype.getRemoteMuted=function(){return this._getInternal().getRemoteMuted()},MediaStream.prototype.setRemoteMuted=function(value){return this._getInternal().setRemoteMuted(value)},MediaStream.prototype.getMuted=function(){return this.getInputMuted()},MediaStream.prototype.getInputMuted=function(){return this._getInternal().getInputMuted()},MediaStream.prototype.getOutputMuted=function(){return this._getInternal().getOutputMuted()},MediaStream.prototype.getRemoteBandwidth=function(){return this._getInternal().getRemoteBandwidth()},MediaStream.prototype.setLocalBandwidth=function(value){this._getInternal().setLocalBandwidth(value)},MediaStream.prototype.setMuted=function(value){this.setInputMuted(value)},MediaStream.prototype.setInputMuted=function(value){this._getInternal().setInputMuted(value)},MediaStream.prototype.setOutputMuted=function(value){this._getInternal().setOutputMuted(value)},MediaStream.prototype.getPreferredCodecs=function(){return this._getInternal().getPreferredCodecs()},MediaStream.prototype.setPreferredCodecs=function(names){this._getInternal().setPreferredCodecs(names)},MediaStream.prototype.getCodecDisabled=function(name){return this._getInternal().getCodecDisabled(name)},MediaStream.prototype.setCodecDisabled=function(name,disabled){this._getInternal().setCodecDisabled(name,disabled)},MediaStream.prototype.getRemoteEncoding=function(){return this._getInternal().getRemoteEncoding()},MediaStream.prototype.setRemoteEncoding=function(value){this._getInternal().setRemoteEncoding(value)},MediaStream.prototype.getSimulcastMode=function(){return this._getInternal().getSimulcastMode()},MediaStream.prototype.setSimulcastMode=function(value){this._getInternal().setSimulcastMode(value)},MediaStream.prototype.getInfo=function(){return this._getInternal().getInfo()},MediaStream.prototype.getControlTransportInfo=function(){return this._getInternal().getControlTransportInfo()},MediaStream.prototype.getLocalCanonicalName=function(){return this._getInternal().getLocalCanonicalName()},MediaStream.prototype.getRemoteCanonicalName=function(){return this._getInternal().getRemoteCanonicalName()},MediaStream.prototype.addOnLocalEncodingDisabled=function(value){this._getInternal().addOnLocalEncodingDisabled(value)},MediaStream.prototype.addOnLocalEncodingEnabled=function(value){this._getInternal().addOnLocalEncodingEnabled(value)},MediaStream.prototype.removeOnLocalEncodingDisabled=function(value){this._getInternal().removeOnLocalEncodingDisabled(value)},MediaStream.prototype.removeOnLocalEncodingEnabled=function(value){this._getInternal().removeOnLocalEncodingEnabled(value)},MediaStream.prototype.addOnDiscardBitrateRequest=function(value){this._getInternal().addOnDiscardBitrateRequest(value)},MediaStream.prototype.removeOnDiscardBitrateRequest=function(value){this._getInternal().removeOnDiscardBitrateRequest(value)},MediaStream.prototype.raiseBitrateRequest=function(bitrateRequest){return this._getInternal().raiseBitrateRequest(bitrateRequest)},MediaStream.prototype.addOnDiscardBitrateNotification=function(value){this._getInternal().addOnDiscardBitrateNotification(value)},MediaStream.prototype.removeOnDiscardBitrateNotification=function(value){this._getInternal().removeOnDiscardBitrateNotification(value)},MediaStream.prototype.raiseBitrateNotification=function(bitrateNotification){return this._getInternal().raiseBitrateNotification(bitrateNotification)},MediaStream.prototype.getMaxSendBitrate=function(){return this._getInternal().getMaxSendBitrate()},MediaStream.prototype.setMaxSendBitrate=function(value){this._getInternal().setMaxSendBitrate(value)},MediaStream.prototype.getMaxReceiveBitrate=function(){return this._getInternal().getMaxReceiveBitrate()},MediaStream.prototype.setMaxReceiveBitrate=function(value){this._getInternal().setMaxReceiveBitrate(value)},MediaStream}(fm.liveswitch.Stream);liveswitch.MediaStream=MediaStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AudioStream=function(_super){function AudioStream(){var _this=this;if(0==arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var localTrack=null,localMedia=null,remoteTrack=null,remoteMedia=null;if(arguments.length>=1&&fm.liveswitch.Util.isNullOrUndefined(arguments[0]));else if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioTrack]"))localTrack=arguments[0];else if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.LocalMedia]"))localTrack=(localMedia=arguments[0]).getAudioTrack();else if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.RemoteMedia]"))remoteTrack=(remoteMedia=arguments[0]).getAudioTrack();else if(arguments.length>=1)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");if(arguments.length>=2&&fm.liveswitch.Util.isNullOrUndefined(arguments[1]));else if(arguments.length>=2&&fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioTrack]"))remoteTrack=arguments[1];else if(arguments.length>=2&&fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.RemoteMedia]"))remoteTrack=(remoteMedia=arguments[1]).getAudioTrack();else if(arguments.length>=2)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");if((_this=_super.call(this,localTrack,remoteTrack)||this).localMedia=localMedia,_this.remoteMedia=remoteMedia,fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginAudioStream(_this,null==localTrack?null:localTrack._getInternal(),null==remoteTrack?null:remoteTrack._getInternal());else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcAudioStream(_this,null==localTrack?null:localTrack._getInternal(),null==remoteTrack?null:remoteTrack._getInternal())}return _this}return __extends(AudioStream,_super),AudioStream.prototype.getTypeString=function(){return"[fm.liveswitch.AudioStream],"+_super.prototype.getTypeString.call(this)},AudioStream.prototype._getInternal=function(){return this._internal},AudioStream.prototype.getLocalMedia=function(){return this.localMedia},AudioStream.prototype.getRemoteMedia=function(){return this.remoteMedia},AudioStream.prototype.getDiscardDtmfTones=function(){return!(fm.liveswitch.Plugin.useActiveX()||!fm.liveswitch.Plugin.useNative())&&this._internal.getDiscardDtmfTones()},AudioStream.prototype.setDiscardDtmfTones=function(value){!fm.liveswitch.Plugin.useActiveX()&&fm.liveswitch.Plugin.useNative()&&this._internal.setDiscardDtmfTones(value)},AudioStream.prototype.addOnReceiveDtmfTone=function(value){this._getInternal().addOnReceiveDtmfTone(value)},AudioStream.prototype.addOnReceiveDtmfToneChange=function(value){this._getInternal().addOnReceiveDtmfToneChange(value)},AudioStream.prototype.addOnSendDtmfTone=function(value){this._getInternal().addOnSendDtmfTone(value)},AudioStream.prototype.addOnSendDtmfToneChange=function(value){this._getInternal().addOnSendDtmfToneChange(value)},AudioStream.prototype.insertDtmfTone=function(dtmfTone){return this._getInternal().insertDtmfTone(dtmfTone)},AudioStream.prototype.insertDtmfTones=function(dtmfTones){return this._getInternal().insertDtmfTones(dtmfTones)},AudioStream.prototype.removeOnReceiveDtmfTone=function(value){this._getInternal().removeOnReceiveDtmfTone(value)},AudioStream.prototype.removeOnReceiveDtmfToneChange=function(value){this._getInternal().removeOnReceiveDtmfToneChange(value)},AudioStream.prototype.removeOnSendDtmfTone=function(value){this._getInternal().removeOnSendDtmfTone(value)},AudioStream.prototype.removeOnSendDtmfToneChange=function(value){this._getInternal().removeOnSendDtmfToneChange(value)},AudioStream.prototype.getOpusDisabled=function(){return this._getInternal().getOpusDisabled()},AudioStream.prototype.getG722Disabled=function(){return this._getInternal().getG722Disabled()},AudioStream.prototype.getPcmuDisabled=function(){return this._getInternal().getPcmuDisabled()},AudioStream.prototype.getPcmaDisabled=function(){return this._getInternal().getPcmaDisabled()},AudioStream.prototype.setOpusDisabled=function(value){return this._getInternal().setOpusDisabled(value)},AudioStream.prototype.setG722Disabled=function(value){return this._getInternal().setG722Disabled(value)},AudioStream.prototype.setPcmuDisabled=function(value){return this._getInternal().setPcmuDisabled(value)},AudioStream.prototype.setPcmaDisabled=function(value){return this._getInternal().setPcmaDisabled(value)},AudioStream.prototype.addOnDiscardOutboundDtmfTones=function(value){!fm.liveswitch.Plugin.useActiveX()&&fm.liveswitch.Plugin.useNative()&&this._internal.addOnDiscardOutboundDtmfTones(value)},AudioStream.prototype.removeOnDiscardOutboundDtmfTones=function(value){!fm.liveswitch.Plugin.useActiveX()&&fm.liveswitch.Plugin.useNative()&&this._internal.removeOnDiscardOutboundDtmfTones(value)},AudioStream}(fm.liveswitch.MediaStream);liveswitch.AudioStream=AudioStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaTrack=function(_super){function MediaTrack(media){var _this=_super.call(this)||this;return _this.media=media,_this}return __extends(MediaTrack,_super),MediaTrack.prototype.getTypeString=function(){return"[fm.liveswitch.MediaTrack],"+_super.prototype.getTypeString.call(this)},MediaTrack.prototype.getMedia=function(){return this.media},MediaTrack.prototype.addOnStarted=function(value){return this._getInternal().addOnStarted(value)},MediaTrack.prototype.addOnStopped=function(value){return this._getInternal().addOnStopped(value)},MediaTrack.prototype.addOnDestroyed=function(value){return this._getInternal().addOnDestroyed(value)},MediaTrack.prototype.removeOnStarted=function(value){return this._getInternal().removeOnStarted(value)},MediaTrack.prototype.removeOnStopped=function(value){return this._getInternal().removeOnStopped(value)},MediaTrack.prototype.removeOnDestroyed=function(value){return this._getInternal().removeOnDestroyed(value)},MediaTrack.prototype.changeSinkOutput=function(sinkOutput){return this._getInternal().changeSinkOutput(sinkOutput)},MediaTrack.prototype.changeSourceInput=function(sourceInput){return this._getInternal().changeSourceInput(sourceInput)},MediaTrack.prototype.destroy=function(){return this._getInternal().destroy()},MediaTrack.prototype.getMuted=function(){return this._getInternal().getMuted()},MediaTrack.prototype.getSinkOutput=function(){return this._getInternal().getSinkOutput()},MediaTrack.prototype.getSinkOutputs=function(){return this._getInternal().getSinkOutputs()},MediaTrack.prototype.getSourceInput=function(){return this._getInternal().getSourceInput()},MediaTrack.prototype.getSourceInputs=function(){return this._getInternal().getSourceInputs()},MediaTrack.prototype.setMuted=function(value){this._getInternal().setMuted(value)},MediaTrack.prototype.setSinkOutput=function(value){this._getInternal().setSinkOutput(value)},MediaTrack.prototype.setSourceInput=function(value){this._getInternal().setSourceInput(value)},MediaTrack}(fm.liveswitch.Dynamic);liveswitch.MediaTrack=MediaTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AudioTrack=function(_super){function AudioTrack(media,internalMedia){var _this=_super.call(this,media)||this;if(fm.liveswitch.Util.isNullOrUndefined(media))throw new fm.liveswitch.Exception("Media cannot be null.");if(fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginAudioTrack(_this,media._getInternal()||internalMedia);else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcAudioTrack(_this,media._getInternal()||internalMedia)}return _this}return __extends(AudioTrack,_super),AudioTrack.prototype.getTypeString=function(){return"[fm.liveswitch.AudioTrack],"+_super.prototype.getTypeString.call(this)},AudioTrack.prototype._getInternal=function(){return this._internal},AudioTrack.prototype.addOnLevel=function(value){return this._internal.addOnLevel(value)},AudioTrack.prototype.getGain=function(){return this._internal.getGain()},AudioTrack.prototype.getVolume=function(){return this._internal.getVolume()},AudioTrack.prototype.removeOnLevel=function(value){return this._internal.removeOnLevel(value)},AudioTrack.prototype.setGain=function(value){this._internal.setGain(value)},AudioTrack.prototype.setVolume=function(value){this._internal.setVolume(value)},AudioTrack}(fm.liveswitch.MediaTrack);liveswitch.AudioTrack=AudioTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Connection=function(_super){function Connection(){var _this=_super.call(this)||this;_this._onGatheringStateChangeValues=[],_this._onIceConnectionStateChangeValues=[],_this._onLocalCandidateValues=[],_this._onLocalDescriptionValues=[],_this._onRemoteCandidateValues=[],_this._onRemoteDescriptionValues=[],_this._onSignallingStateChangeValues=[],_this._onStateChangeValues=[],_this._onExternalIdChangeValues=[];var streams=null;if(0==arguments.length||arguments.length>=1&&fm.liveswitch.Util.isNullOrUndefined(arguments[0]))throw new fm.liveswitch.Exception("Stream(s) cannot be null.");if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Stream]"))streams=[arguments[0]];else if(arguments.length>=1&&fm.liveswitch.Util.isArrayType(arguments[0],"[fm.liveswitch.Stream]"))streams=arguments[0];else if(arguments.length>=1)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");for(var remoteMedia=null,_i=0,streams_1=streams;_i<streams_1.length;_i++){var stream=streams_1[_i];if(fm.liveswitch.Util.isObjectType(stream,"[fm.liveswitch.AudioStream]")){var audioStream=stream,remoteAudioTrack=audioStream.getRemoteTrack();if(remoteAudioTrack){var remoteAudioMedia=remoteAudioTrack.getMedia();if(null==remoteMedia)remoteMedia=remoteAudioMedia;else if(remoteMedia!=remoteAudioMedia)throw new fm.liveswitch.Exception("Remote media for streams does not match.")}}else if(fm.liveswitch.Util.isObjectType(stream,"[fm.liveswitch.VideoStream]")){var videoStream=stream,remoteVideoTrack=videoStream.getRemoteTrack();if(remoteVideoTrack){var remoteVideoMedia=remoteVideoTrack.getMedia();if(null==remoteMedia)remoteMedia=remoteVideoMedia;else if(remoteMedia!=remoteVideoMedia)throw new fm.liveswitch.Exception("Remote media for streams does not match.")}}}if(null==remoteMedia&&(remoteMedia=new fm.liveswitch.RemoteMedia),_this._remoteMedia=remoteMedia,fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginConnection(_this,_this.externalsToInternals(streams));else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcConnection(_this,_this.externalsToInternals(streams),_this._remoteMedia._getInternal())}return _this._internal.addOnExternalIdChange((function(id1,id2){for(var _i=0,_a=_this._onExternalIdChangeValues;_i<_a.length;_i++){(0,_a[_i])(id1,id2)}})),_this._internal.addOnGatheringStateChange((function(c){for(var _i=0,_a=_this._onGatheringStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}})),_this._internal.addOnIceConnectionStateChange((function(c){for(var _i=0,_a=_this._onIceConnectionStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}})),_this._internal.addOnLocalCandidate((function(c,candidate){for(var _i=0,_a=_this._onLocalCandidateValues;_i<_a.length;_i++){(0,_a[_i])(_this,candidate)}})),_this._internal.addOnLocalDescription((function(c,sessionDescription){for(var _i=0,_a=_this._onLocalDescriptionValues;_i<_a.length;_i++){(0,_a[_i])(_this,sessionDescription)}})),_this._internal.addOnRemoteCandidate((function(c,candidate){for(var _i=0,_a=_this._onRemoteCandidateValues;_i<_a.length;_i++){(0,_a[_i])(_this,candidate)}})),_this._internal.addOnRemoteDescription((function(c,sessionDescription){for(var _i=0,_a=_this._onRemoteDescriptionValues;_i<_a.length;_i++){(0,_a[_i])(_this,sessionDescription)}})),_this._internal.addOnSignallingStateChange((function(c){for(var _i=0,_a=_this._onSignallingStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}})),_this._internal.addOnStateChange((function(c){for(var _i=0,_a=_this._onStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}})),_this}return __extends(Connection,_super),Connection.prototype.getTypeString=function(){return"[fm.liveswitch.Connection],"+_super.prototype.getTypeString.call(this)},Connection.prototype._getInternal=function(){return this._internal},Connection.prototype.addIceServer=function(iceServer){this._internal.addIceServer(iceServer)},Connection.prototype.addIceServers=function(iceServers){this._internal.addIceServers(iceServers)},Connection.prototype.addOnGatheringStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onGatheringStateChangeValues,value)},Connection.prototype.addOnIceConnectionStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onIceConnectionStateChangeValues,value)},Connection.prototype.addOnLocalCandidate=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalCandidateValues,value)},Connection.prototype.addOnLocalDescription=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalDescriptionValues,value)},Connection.prototype.addOnRemoteCandidate=function(value){fm.liveswitch.ArrayExtensions.add(this._onRemoteCandidateValues,value)},Connection.prototype.addOnRemoteDescription=function(value){fm.liveswitch.ArrayExtensions.add(this._onRemoteDescriptionValues,value)},Connection.prototype.addOnSignallingStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onSignallingStateChangeValues,value)},Connection.prototype.addOnStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onStateChangeValues,value)},Connection.prototype.addRemoteCandidate=function(remoteCandidate){return this._internal.addRemoteCandidate(remoteCandidate)},Connection.prototype.close=function(){return this._internal.close()},Connection.prototype.createAnswer=function(){return this._internal.createAnswer()},Connection.prototype.createOffer=function(){return this._internal.createOffer()},Connection.prototype.getDeadStreamTimeout=function(){return this._internal.getDeadStreamTimeout()},Connection.prototype.getError=function(){return this._internal.getError()},Connection.prototype.getExternalId=function(){return this._internal.getExternalId()},Connection.prototype.getBundlePolicy=function(){return this._internal.getBundlePolicy()},Connection.prototype.getIceGatherPolicy=function(){return this._internal.getIceGatherPolicy()},Connection.prototype.getIceServer=function(){return this._internal.getIceServer()},Connection.prototype.getGatheringState=function(){return this._internal.getGatheringState()},Connection.prototype.getIceConnectionState=function(){return this._internal.getIceConnectionState()},Connection.prototype.getIceServers=function(){return this._internal.getIceServers()},Connection.prototype.getId=function(){return this._internal.getId()},Connection.prototype.getCanonicalName=function(){return this._internal.getCanonicalName()},Connection.prototype.getLocalDescription=function(){return this._internal.getLocalDescription()},Connection.prototype.getRemoteDescription=function(){return this._internal.getRemoteDescription()},Connection.prototype.getSignallingState=function(){return this._internal.getSignallingState()},Connection.prototype.getState=function(){return this._internal.getState()},Connection.prototype.getStats=function(){return this._internal.getStats()},Connection.prototype.getStreams=function(){return this.internalsToExternals(this._internal.getStreams())},Connection.prototype.getTieBreaker=function(){return this._internal.getTieBreaker()},Connection.prototype.getLegacyTimeout=function(){return this._internal.getLegacyTimeout()},Connection.prototype.getTimeout=function(){return this._internal.getTimeout()},Connection.prototype.getTrickleIcePolicy=function(){return this._internal.getTrickleIcePolicy()},Connection.prototype.getHasAudio=function(){return this._internal.getHasAudio()},Connection.prototype.getHasVideo=function(){return this._internal.getHasVideo()},Connection.prototype.getHasData=function(){return this._internal.getHasData()},Connection.prototype.getAudioStream=function(){return this.internalToExternal(this._internal.getAudioStream())},Connection.prototype.getAudioStreams=function(){return this.internalsToExternals(this._internal.getAudioStreams())},Connection.prototype.getVideoStream=function(){return this.internalToExternal(this._internal.getVideoStream())},Connection.prototype.getVideoStreams=function(){return this.internalsToExternals(this._internal.getVideoStreams())},Connection.prototype.getDataStream=function(){return this.internalToExternal(this._internal.getDataStream())},Connection.prototype.getDataStreams=function(){return this.internalsToExternals(this._internal.getDataStreams())},Connection.prototype.removeIceServer=function(iceServer){this._internal.removeIceServer(iceServer)},Connection.prototype.removeIceServers=function(iceServers){this._internal.removeIceServers(iceServers)},Connection.prototype.removeOnGatheringStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onGatheringStateChangeValues,value)},Connection.prototype.removeOnIceConnectionStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onIceConnectionStateChangeValues,value)},Connection.prototype.removeOnLocalCandidate=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalCandidateValues,value)},Connection.prototype.removeOnLocalDescription=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalDescriptionValues,value)},Connection.prototype.removeOnRemoteCandidate=function(value){fm.liveswitch.ArrayExtensions.remove(this._onRemoteCandidateValues,value)},Connection.prototype.removeOnRemoteDescription=function(value){fm.liveswitch.ArrayExtensions.remove(this._onRemoteDescriptionValues,value)},Connection.prototype.removeOnSignallingStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onSignallingStateChangeValues,value)},Connection.prototype.removeOnStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStateChangeValues,value)},Connection.prototype.setDeadStreamTimeout=function(value){this._internal.setDeadStreamTimeout(value)},Connection.prototype.setExternalId=function(value){this._internal.setExternalId(value)},Connection.prototype.setError=function(value){this._internal.setError(value)},Connection.prototype.addOnExternalIdChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onExternalIdChangeValues,value)},Connection.prototype.removeOnExternalIdChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onExternalIdChangeValues,value)},Connection.prototype.setBundlePolicy=function(value){this._internal.setBundlePolicy(value)},Connection.prototype.setIceGatherPolicy=function(value){this._internal.setIceGatherPolicy(value)},Connection.prototype.setIceServer=function(value){this._internal.setIceServer(value)},Connection.prototype.setIceServers=function(value){this._internal.setIceServers(value)},Connection.prototype.setLocalDescription=function(localDescription){return this._internal.setLocalDescription(localDescription)},Connection.prototype.setLegacyTimeout=function(legacyTimeout){return this._internal.setLegacyTimeout(legacyTimeout)},Connection.prototype.setRemoteDescription=function(remoteDescription){return this._internal.setRemoteDescription(remoteDescription)},Connection.prototype.setTimeout=function(value){this._internal.setTimeout(value)},Connection.prototype.setTrickleIcePolicy=function(value){this._internal.setTrickleIcePolicy(value)},Connection.prototype.setTieBreaker=function(value){this._internal.setTieBreaker(value)},Connection.prototype.getRemoteMedia=function(){return this._remoteMedia},Connection.prototype.externalsToInternals=function(externals){var _this=this;return fm.liveswitch.ArrayExtensions.map(externals,(function(external){return _this.externalToInternal(external)}))},Connection.prototype.externalToInternal=function(external){return external._getInternal()},Connection.prototype.internalsToExternals=function(internals){var _this=this;return fm.liveswitch.ArrayExtensions.map(internals,(function(internal){return _this.internalToExternal(internal)}))},Connection.prototype.internalToExternal=function(internal){return null==internal?null:internal._getExternal()},Connection}(fm.liveswitch.Dynamic);liveswitch.Connection=Connection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannel=function(_super){function DataChannel(label,ordered,subprotocol){var _this=_super.call(this)||this;if(_this._onStateChangeValues=[],fm.liveswitch.Util.isNullOrUndefined(ordered)&&(ordered=!0),fm.liveswitch.Util.isNullOrUndefined(subprotocol)&&(subprotocol=""),fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginDataChannel(_this,label,ordered,subprotocol);else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcDataChannel(_this,label,ordered,subprotocol)}return _this._internal.addOnStateChange((function(c){for(var _i=0,_a=_this._onStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}})),_this}return __extends(DataChannel,_super),DataChannel.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannel],"+_super.prototype.getTypeString.call(this)},DataChannel.prototype._getInternal=function(){return this._internal},DataChannel.prototype.getInfo=function(){return this._getInternal().getInfo()},DataChannel.prototype.setGetRemoteConnectionInfo=function(value){if(fm.liveswitch.Plugin.useActiveX()){this._getInternal().setGetRemoteConnectionInfo(value)}else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");this._getInternal().setGetRemoteConnectionInfo(value)}},DataChannel.prototype.setOnReceive=function(value){return this._getInternal().setOnReceive(value)},DataChannel.prototype.getSubprotocol=function(){return this._getInternal().getSubprotocol()},DataChannel.prototype.getOnReceive=function(){return this._getInternal().getOnReceive()},DataChannel.prototype.sendDataString=function(dataString){return this._getInternal().sendDataString(dataString)},DataChannel.prototype.sendDataBytes=function(dataBytes){return this._getInternal().sendDataBytes(dataBytes)},DataChannel.prototype.getState=function(){return this._getInternal().getState()},DataChannel.prototype.getLabel=function(){return this._getInternal().getLabel()},DataChannel.prototype.getId=function(){return this._getInternal().getId()},DataChannel.prototype.getOrdered=function(){return this._getInternal().getOrdered()},DataChannel.prototype.addOnStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onStateChangeValues,value)},DataChannel.prototype.removeOnStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStateChangeValues,value)},DataChannel}(fm.liveswitch.Dynamic);liveswitch.DataChannel=DataChannel}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataStream=function(_super){function DataStream(){var _this=_super.call(this)||this;if(0==arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var channels=null;if(arguments.length>=1&&fm.liveswitch.Util.isNullOrUndefined(arguments[0]))throw new fm.liveswitch.Exception("Data channels(s) cannot be null.");if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataChannel]"))channels=[arguments[0]];else if(arguments.length>=1&&fm.liveswitch.Util.isArrayType(arguments[0],"[fm.liveswitch.DataChannel]"))channels=arguments[0];else if(arguments.length>=1)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var channelsInternal=fm.liveswitch.ArrayExtensions.map(channels,(function(channel){return channel._getInternal()}));if(fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginDataStream(_this,channelsInternal);else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcDataStream(_this,channelsInternal)}return _this}return __extends(DataStream,_super),DataStream.prototype.getTypeString=function(){return"[fm.liveswitch.DataStream],"+_super.prototype.getTypeString.call(this)},DataStream.prototype._getInternal=function(){return this._internal},DataStream.prototype.getInfo=function(){return this._getInternal().getInfo()},DataStream.prototype.setGetRemoteConnectionInfo=function(value){if(fm.liveswitch.Plugin.useActiveX()){this._internal.setGetRemoteConnectionInfo(value)}else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");this._internal.setGetRemoteConnectionInfo(value)}},DataStream.prototype.getChannels=function(){return this.internalsToExternals(this._getInternal().getChannels())},DataStream.prototype.externalToInternal=function(external){return external._getInternal()},DataStream.prototype.externalsToInternals=function(externals){return fm.liveswitch.ArrayExtensions.map(externals,(function(external){return external._getInternal()}))},DataStream.prototype.internalToExternal=function(internal){return internal._getExternal()},DataStream.prototype.internalsToExternals=function(internals){return fm.liveswitch.ArrayExtensions.map(internals,(function(internal){return internal._getExternal()}))},DataStream}(fm.liveswitch.Stream);liveswitch.DataStream=DataStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DomAudioSink=function(_super){function DomAudioSink(track){var _this=_super.call(this)||this;if(fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginDomAudioSink(_this,null==track?null:track._getInternal());else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcDomAudioSink(_this,null==track?null:track._getInternal())}return _this}return __extends(DomAudioSink,_super),DomAudioSink.prototype.getTypeString=function(){return"[fm.liveswitch.DomAudioSink],"+_super.prototype.getTypeString.call(this)},DomAudioSink.prototype._getInternal=function(){return this._internal},DomAudioSink.prototype.getAudio=function(){return this._getInternal().getAudio()},DomAudioSink}(fm.liveswitch.Dynamic);liveswitch.DomAudioSink=DomAudioSink}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutPreset=function(_super){function LayoutPreset(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchLayoutPresetInit(),_this.__floatWidthPercent=0,_this.__floatHeightPercent=0,_this.__floatMarginXPercent=0,_this.__floatMarginYPercent=0,_this.__floatWidth=0,_this.__floatHeight=0,_this.__floatMarginX=0,_this.__floatMarginY=0,_this.__blockWidthPercent=0,_this.__blockHeightPercent=0,_this.__blockMarginXPercent=0,_this.__blockMarginYPercent=0,_this.__blockWidth=0,_this.__blockHeight=0,_this.__blockMarginX=0,_this.__blockMarginY=0,_this.setMode(fm.liveswitch.LayoutMode.FloatLocal),_this.setDirection(fm.liveswitch.LayoutDirection.Horizontal),_this.setAlignment(fm.liveswitch.LayoutAlignment.BottomRight),_this}return __extends(LayoutPreset,_super),LayoutPreset.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutPreset],"+_super.prototype.getTypeString.call(this)},LayoutPreset.prototype.fmliveswitchLayoutPresetInit=function(){this.__blockHeight=0,this.__blockHeightPercent=0,this.__blockMarginX=0,this.__blockMarginXPercent=0,this.__blockMarginY=0,this.__blockMarginYPercent=0,this.__blockWidth=0,this.__blockWidthPercent=0,this.__floatHeight=0,this.__floatHeightPercent=0,this.__floatMarginX=0,this.__floatMarginXPercent=0,this.__floatMarginY=0,this.__floatMarginYPercent=0,this.__floatWidth=0,this.__floatWidthPercent=0,this._inlineMargin=0},LayoutPreset.calculateInlineOverflowFrame=function(baseCoordinate,layoutMeasurement,videoSize,direction){if(4==arguments.length)return baseCoordinate=fm.liveswitch.Global.toInt(arguments[0]),layoutMeasurement=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(direction,fm.liveswitch.LayoutDirection.Horizontal)?fm.liveswitch.Global.equals(videoSize.getHeight(),0)?new fm.liveswitch.LayoutFrame(baseCoordinate,0,0,layoutMeasurement):new fm.liveswitch.LayoutFrame(baseCoordinate,0,fm.liveswitch.MathAssistant.floor(layoutMeasurement*videoSize.getWidth()/videoSize.getHeight()),layoutMeasurement):fm.liveswitch.Global.equals(videoSize.getWidth(),0)?new fm.liveswitch.LayoutFrame(0,baseCoordinate,layoutMeasurement,0):new fm.liveswitch.LayoutFrame(0,baseCoordinate,layoutMeasurement,fm.liveswitch.MathAssistant.floor(layoutMeasurement*videoSize.getHeight()/videoSize.getWidth()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.calculateTable=function(tableWidth,tableHeight,count){if(3==arguments.length){tableWidth=fm.liveswitch.Global.toInt(arguments[0]),tableHeight=fm.liveswitch.Global.toInt(arguments[1]);for(var num=0,num2=1,num3=1,i=count=fm.liveswitch.Global.toInt(arguments[2]);i>=1;i--){var num5=fm.liveswitch.MathAssistant.ceil(count/i),num6=tableWidth/i,num7=tableHeight/num5,num8=num6<num7?num6:num7;num8>=num&&(num=num8,num2=i,num3=num5)}var cellWidth=fm.liveswitch.MathAssistant.floor(tableWidth/num2);return new fm.liveswitch.LayoutTable(num2,num3,cellWidth,fm.liveswitch.MathAssistant.floor(tableHeight/num3))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.divideByTwo=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.MathAssistant.floor(value/2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getFacetime=function(){if(0==arguments.length){var preset=new fm.liveswitch.LayoutPreset;return preset.setMode(fm.liveswitch.LayoutMode.FloatLocal),preset.setAlignment(fm.liveswitch.LayoutAlignment.BottomRight),preset.setFloatMarginX(10),preset.setFloatMarginY(10),preset.setFloatWidthPercent(.25),preset.setFloatHeightPercent(.25),preset.setInlineMargin(0),preset}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getGoogleHangouts=function(){if(0==arguments.length){if(fm.liveswitch.Platform.getInstance().getIsMobile()){var preset=new fm.liveswitch.LayoutPreset;return preset.setMode(fm.liveswitch.LayoutMode.FloatRemote),preset.setAlignment(fm.liveswitch.LayoutAlignment.BottomRight),preset.setFloatMarginX(0),preset.setFloatMarginY(10),preset.setFloatWidthPercent(.25),preset.setFloatHeightPercent(.25),preset.setInlineMargin(5),preset}var preset2=new fm.liveswitch.LayoutPreset;return preset2.setMode(fm.liveswitch.LayoutMode.Block),preset2.setAlignment(fm.liveswitch.LayoutAlignment.Top),preset2.setBlockWidthPercent(.666666666666667),preset2.setBlockHeightPercent(.666666666666667),preset2.setInlineMargin(0),preset2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getSingleLayout=function(layoutWidth,layoutHeight,local){if(3==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]);var layout=new fm.liveswitch.Layout;return layout.setLocalFrame(local?new fm.liveswitch.LayoutFrame(0,0,layoutWidth,layoutHeight):null),layout}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getSkype=function(){if(0==arguments.length){if(fm.liveswitch.Platform.getInstance().getIsMobile())return fm.liveswitch.LayoutPreset.getFacetime();var preset=new fm.liveswitch.LayoutPreset;return preset.setMode(fm.liveswitch.LayoutMode.Block),preset.setDirection(fm.liveswitch.LayoutDirection.Horizontal),preset.setAlignment(fm.liveswitch.LayoutAlignment.Bottom),preset.setBlockMarginX(10),preset.setBlockMarginY(10),preset.setBlockWidthPercent(.333333333333333),preset.setBlockHeightPercent(.333333333333333),preset.setInlineMargin(10),preset}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getXMax=function(frames){if(1==arguments.length){if(fm.liveswitch.Global.equals(frames.length,0))return frames[0].getX();for(var x=frames[0].getX(),i=1;i<frames.length;i++){var frame=frames[i];frame.getX()>x&&(x=frame.getX())}return x}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getXMid=function(frames){if(1==arguments.length){var xMin=fm.liveswitch.LayoutPreset.getXMin(frames),xMax=fm.liveswitch.LayoutPreset.getXMax(frames);if(fm.liveswitch.Global.equals(xMin,xMax))return xMin;for(var num3=fm.liveswitch.LayoutPreset.divideByTwo(xMin+xMax),x=frames[0].getX(),num5=fm.liveswitch.MathAssistant.abs(num3-x),i=1;i<frames.length;i++){var frame=frames[i],num7=fm.liveswitch.MathAssistant.abs(num3-frame.getX());num7<num5&&(x=frame.getX(),num5=num7)}return x}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getXMin=function(frames){if(1==arguments.length){if(fm.liveswitch.Global.equals(frames.length,0))return frames[0].getX();for(var x=frames[0].getX(),i=1;i<frames.length;i++){var frame=frames[i];frame.getX()<x&&(x=frame.getX())}return x}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getYMax=function(frames){if(1==arguments.length){if(fm.liveswitch.Global.equals(frames.length,0))return frames[0].getY();for(var y=frames[0].getY(),i=1;i<frames.length;i++){var frame=frames[i];frame.getY()>y&&(y=frame.getY())}return y}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getYMid=function(frames){if(1==arguments.length){var yMin=fm.liveswitch.LayoutPreset.getYMin(frames),yMax=fm.liveswitch.LayoutPreset.getYMax(frames);if(fm.liveswitch.Global.equals(yMin,yMax))return yMin;for(var num3=fm.liveswitch.LayoutPreset.divideByTwo(yMin+yMax),y=frames[0].getY(),num5=fm.liveswitch.MathAssistant.abs(num3-y),i=1;i<frames.length;i++){var frame=frames[i],num7=fm.liveswitch.MathAssistant.abs(num3-frame.getY());num7<num5&&(y=frame.getY(),num5=num7)}return y}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.getYMin=function(frames){if(1==arguments.length){if(fm.liveswitch.Global.equals(frames.length,0))return frames[0].getY();for(var y=frames[0].getY(),i=1;i<frames.length;i++){var frame=frames[i];frame.getY()<y&&(y=frame.getY())}return y}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.mergeLayoutFrames=function(firstFrames,lastFrames){if(2==arguments.length){var num3=void 0,length_4=firstFrames.length,num2=lastFrames.length,frameArray=new Array(length_4+num2);for(num3=0;num3<length_4;num3++)frameArray[num3]=firstFrames[num3];for(num3=0;num3<num2;num3++)frameArray[num3+length_4]=lastFrames[num3];return frameArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.spliceLayoutFrame=function(frames,index){if(2==arguments.length){var start=(index=fm.liveswitch.Global.toInt(arguments[1]))+1;return fm.liveswitch.LayoutPreset.mergeLayoutFrames(fm.liveswitch.LayoutPreset.takeLayoutFrames(frames,0,index),fm.liveswitch.LayoutPreset.takeLayoutFrames(frames,start,frames.length-start))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.takeLayoutFrames=function(frames,start,length){if(3==arguments.length){start=fm.liveswitch.Global.toInt(arguments[1]),length=fm.liveswitch.Global.toInt(arguments[2]);for(var frameArray=new Array(length),i=0;i<frameArray.length;i++)frameArray[i]=frames[start+i];return frameArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.transformFrame=function(frame,origin,layoutWidth,layoutHeight){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");layoutWidth=fm.liveswitch.Global.toInt(arguments[2]),layoutHeight=fm.liveswitch.Global.toInt(arguments[3]);var flag=!1,flag2=!1,_var0=origin;do{if(_var0==fm.liveswitch.LayoutOrigin.TopRight){flag=!0;break}if(_var0==fm.liveswitch.LayoutOrigin.BottomRight){flag=!0,flag2=!0;break}if(_var0==fm.liveswitch.LayoutOrigin.BottomLeft){flag2=!0;break}}while(0);flag&&frame.setX(layoutWidth-frame.getX()-frame.getWidth()),flag2&&frame.setY(layoutHeight-frame.getY()-frame.getHeight())},LayoutPreset.prototype.applyPreset=function(preset){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setMode(preset.getMode()),this.setDirection(preset.getDirection()),this.setAlignment(preset.getAlignment()),this.setFloatWidth(0),this.setFloatHeight(0),this.setFloatMarginX(0),this.setFloatMarginY(0),this.setFloatWidthPercent(0),this.setFloatHeightPercent(0),this.setFloatMarginXPercent(0),this.setFloatMarginYPercent(0),this.setBlockWidth(0),this.setBlockHeight(0),this.setBlockMarginX(0),this.setBlockMarginY(0),this.setBlockWidthPercent(0),this.setBlockHeightPercent(0),this.setBlockMarginXPercent(0),this.setBlockMarginYPercent(0),this.setInlineMargin(0),preset.getFloatWidth()>0&&this.setFloatWidth(preset.getFloatWidth()),preset.getFloatHeight()>0&&this.setFloatHeight(preset.getFloatHeight()),preset.getFloatMarginX()>0&&this.setFloatMarginX(preset.getFloatMarginX()),preset.getFloatMarginY()>0&&this.setFloatMarginY(preset.getFloatMarginY()),preset.getFloatWidthPercent()>0&&this.setFloatWidthPercent(preset.getFloatWidthPercent()),preset.getFloatHeightPercent()>0&&this.setFloatHeightPercent(preset.getFloatHeightPercent()),preset.getFloatMarginXPercent()>0&&this.setFloatMarginXPercent(preset.getFloatMarginXPercent()),preset.getFloatMarginYPercent()>0&&this.setFloatMarginYPercent(preset.getFloatMarginYPercent()),preset.getBlockWidth()>0&&this.setBlockWidth(preset.getBlockWidth()),preset.getBlockHeight()>0&&this.setBlockHeight(preset.getBlockHeight()),preset.getBlockMarginX()>0&&this.setBlockMarginX(preset.getBlockMarginX()),preset.getBlockMarginY()>0&&this.setBlockMarginY(preset.getBlockMarginY()),preset.getBlockWidthPercent()>0&&this.setBlockWidthPercent(preset.getBlockWidthPercent()),preset.getBlockHeightPercent()>0&&this.setBlockHeightPercent(preset.getBlockHeightPercent()),preset.getBlockMarginXPercent()>0&&this.setBlockMarginXPercent(preset.getBlockMarginXPercent()),preset.getBlockMarginYPercent()>0&&this.setBlockMarginYPercent(preset.getBlockMarginYPercent()),preset.getInlineMargin()>0&&this.setInlineMargin(preset.getInlineMargin())},LayoutPreset.prototype.calculateBlockFrame=function(layoutWidth,layoutHeight,marginX,marginY){if(4==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(this.getBlockWidth(),0)&&fm.liveswitch.Global.equals(this.getBlockWidthPercent(),0)&&this.setBlockWidthPercent(.25),fm.liveswitch.Global.equals(this.getBlockHeight(),0)&&fm.liveswitch.Global.equals(this.getBlockHeightPercent(),0)&&this.setBlockHeightPercent(.25);var width=this.getBlockWidth()>0?this.getBlockWidth():layoutWidth*this.getBlockWidthPercent(),height=this.getBlockHeight()>0?this.getBlockHeight():layoutHeight*this.getBlockHeightPercent();marginX.setValue(this.getBlockMarginX()>0?this.getBlockMarginX():layoutWidth*this.getBlockMarginXPercent()),marginY.setValue(this.getBlockMarginY()>0?this.getBlockMarginY():layoutHeight*this.getBlockMarginYPercent());var x=0,_var0=this.getAlignment();do{if(_var0==fm.liveswitch.LayoutAlignment.Top||_var0==fm.liveswitch.LayoutAlignment.Center||_var0==fm.liveswitch.LayoutAlignment.Bottom){x=fm.liveswitch.LayoutPreset.divideByTwo(layoutWidth-width);break}if(_var0==fm.liveswitch.LayoutAlignment.TopRight||_var0==fm.liveswitch.LayoutAlignment.Right||_var0==fm.liveswitch.LayoutAlignment.BottomRight){x=layoutWidth-width;break}x=0;break}while(0);var y=0,_var1=this.getAlignment();do{if(_var1==fm.liveswitch.LayoutAlignment.Left||_var1==fm.liveswitch.LayoutAlignment.Center||_var1==fm.liveswitch.LayoutAlignment.Right){y=fm.liveswitch.LayoutPreset.divideByTwo(layoutHeight-height);break}if(_var1==fm.liveswitch.LayoutAlignment.BottomLeft||_var1==fm.liveswitch.LayoutAlignment.Bottom||_var1==fm.liveswitch.LayoutAlignment.BottomRight){y=layoutHeight-height;break}y=0;break}while(0);return new fm.liveswitch.LayoutFrame(x,y,width,height)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.calculateFillFrame=function(layoutWidth,layoutHeight){if(2==arguments.length)return layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),new fm.liveswitch.LayoutFrame(0,0,layoutWidth,layoutHeight);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.calculateFloatFrame=function(layoutWidth,layoutHeight){if(2==arguments.length)return layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),this.calculateFloatFrames(layoutWidth,layoutHeight,1)[0];throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.calculateFloatFrames=function(layoutWidth,layoutHeight,count){if(3==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),count=fm.liveswitch.Global.toInt(arguments[2]),fm.liveswitch.Global.equals(this.getFloatWidth(),0)&&fm.liveswitch.Global.equals(this.getFloatWidthPercent(),0)&&this.setFloatWidthPercent(.25),fm.liveswitch.Global.equals(this.getFloatHeight(),0)&&fm.liveswitch.Global.equals(this.getFloatHeightPercent(),0)&&this.setFloatHeightPercent(.25);var num=this.getFloatWidth()>0?this.getFloatWidth():layoutWidth*this.getFloatWidthPercent(),num2=this.getFloatHeight()>0?this.getFloatHeight():layoutHeight*this.getFloatHeightPercent(),num3=this.getFloatMarginX()>0?this.getFloatMarginX():layoutWidth*this.getFloatMarginXPercent(),num4=this.getFloatMarginY()>0?this.getFloatMarginY():layoutHeight*this.getFloatMarginYPercent();fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)?num=fm.liveswitch.MathAssistant.min(layoutWidth,num*count):num2=fm.liveswitch.MathAssistant.min(layoutHeight,num2*count);var frameArray=this.calculateInlineFrames(num,num2,count,0,0),_var0=this.getAlignment();do{if(_var0==fm.liveswitch.LayoutAlignment.TopLeft||_var0==fm.liveswitch.LayoutAlignment.Top||_var0==fm.liveswitch.LayoutAlignment.TopRight){for(var _i=0,frameArray_1=frameArray;_i<frameArray_1.length;_i++){(frame=frameArray_1[_i]).setY(frame.getY()+num4)}break}if(_var0==fm.liveswitch.LayoutAlignment.Left||_var0==fm.liveswitch.LayoutAlignment.Center||_var0==fm.liveswitch.LayoutAlignment.Right){for(var _a=0,frameArray_2=frameArray;_a<frameArray_2.length;_a++){(frame=frameArray_2[_a]).setY(frame.getY()+fm.liveswitch.LayoutPreset.divideByTwo(layoutHeight-num2))}break}if(_var0==fm.liveswitch.LayoutAlignment.BottomLeft||_var0==fm.liveswitch.LayoutAlignment.Bottom||_var0==fm.liveswitch.LayoutAlignment.BottomRight){for(var _b=0,frameArray_3=frameArray;_b<frameArray_3.length;_b++){(frame=frameArray_3[_b]).setY(frame.getY()+(layoutHeight-num2-num4))}break}}while(0);var _var1=this.getAlignment();if(_var1==fm.liveswitch.LayoutAlignment.TopLeft||_var1==fm.liveswitch.LayoutAlignment.Left||_var1==fm.liveswitch.LayoutAlignment.BottomLeft){for(var _c=0,frameArray_4=frameArray;_c<frameArray_4.length;_c++){(frame=frameArray_4[_c]).setX(frame.getX()+num3)}return frameArray}if(_var1==fm.liveswitch.LayoutAlignment.Top||_var1==fm.liveswitch.LayoutAlignment.Center||_var1==fm.liveswitch.LayoutAlignment.Bottom){for(var _d=0,frameArray_5=frameArray;_d<frameArray_5.length;_d++){(frame=frameArray_5[_d]).setX(frame.getX()+fm.liveswitch.LayoutPreset.divideByTwo(layoutWidth-num))}return frameArray}if(_var1==fm.liveswitch.LayoutAlignment.TopRight||_var1==fm.liveswitch.LayoutAlignment.Right||_var1==fm.liveswitch.LayoutAlignment.BottomRight){for(var _e=0,frameArray_6=frameArray;_e<frameArray_6.length;_e++){var frame;(frame=frameArray_6[_e]).setX(frame.getX()+(layoutWidth-num-num3))}return frameArray}return frameArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.calculateInlineFrame=function(cellX,cellY,cellWidth,cellHeight){if(4==arguments.length){cellX=fm.liveswitch.Global.toInt(arguments[0]),cellY=fm.liveswitch.Global.toInt(arguments[1]),cellWidth=fm.liveswitch.Global.toInt(arguments[2]),cellHeight=fm.liveswitch.Global.toInt(arguments[3]);var num=fm.liveswitch.LayoutPreset.divideByTwo(this.getInlineMargin()),x=cellX-num,y=cellY-num,width=cellWidth-this.getInlineMargin();return new fm.liveswitch.LayoutFrame(x,y,width,cellHeight-this.getInlineMargin())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.calculateInlineFrames=function(layoutWidth,layoutHeight,count,baseX,baseY){if(5==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),count=fm.liveswitch.Global.toInt(arguments[2]),baseX=fm.liveswitch.Global.toInt(arguments[3]),baseY=fm.liveswitch.Global.toInt(arguments[4]);var num6=void 0,num7=void 0,num8=void 0,num9=void 0,num10=void 0,num12=void 0,num13=void 0,num14=void 0,num15=void 0,num16=void 0,num17=void 0,frame=void 0,list=new Array,table=fm.liveswitch.LayoutPreset.calculateTable(layoutWidth+this.getInlineMargin(),layoutHeight+this.getInlineMargin(),count),columnCount=table.getColumnCount(),rowCount=table.getRowCount(),cellWidth=table.getCellWidth(),cellHeight=table.getCellHeight(),num5=fm.liveswitch.LayoutPreset.divideByTwo(this.getInlineMargin());if(fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal))for(num6=0,num7=baseY+num5,num8=layoutHeight-rowCount*cellHeight+this.getInlineMargin(),num9=0;num9<rowCount;){num10=num9<num8?1:0;var num11=columnCount;if(fm.liveswitch.Global.equals(num9,rowCount-1)&&(num11=count-num6),num12=baseX+num5,fm.liveswitch.Global.equals(num9,rowCount-1)&&rowCount>1)num13=num12-num5,num14=num7-num5,fm.liveswitch.ArrayExtensions.addRange(list,this.calculateInlineFrames(baseX+layoutWidth,baseY+layoutHeight-num14,num11,num13,num14));else for(num15=layoutWidth-num11*cellWidth+this.getInlineMargin(),num16=0;num16<num11;)num17=num16<num15?1:0,frame=this.calculateInlineFrame(num12,num7,cellWidth+num17,cellHeight+num10),fm.liveswitch.ArrayExtensions.add(list,frame),num12+=cellWidth+num17,num16++,num6++;num7+=cellHeight+num10,num9++}else for(num6=0,num12=baseX+num5,num15=layoutWidth-columnCount*cellWidth+this.getInlineMargin(),num16=0;num16<columnCount;num16++){num17=num16<num15?1:0;var num18=rowCount;if(fm.liveswitch.Global.equals(num16,columnCount-1)&&(num18=count-num6),num7=baseY+num5,fm.liveswitch.Global.equals(num16,columnCount-1)&&columnCount>1)num13=num12-num5,num14=num7-num5,fm.liveswitch.ArrayExtensions.addRange(list,this.calculateInlineFrames(baseX+layoutWidth-num13,baseY+layoutHeight,num18,num13,num14));else for(num8=layoutHeight-num18*cellHeight+this.getInlineMargin(),num9=0;num9<num18;)num10=num9<num8?1:0,frame=this.calculateInlineFrame(num12,num7,cellWidth+num17,cellHeight+num10),fm.liveswitch.ArrayExtensions.add(list,frame),num7+=cellHeight+num10,num9++,num6++;num12+=cellWidth+num17}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.calculateInlineOverflowFrames=function(layoutWidth,layoutHeight,baseX,baseY,localVideoSize,remoteVideoSizes){if(6==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),baseX=fm.liveswitch.Global.toInt(arguments[2]),baseY=fm.liveswitch.Global.toInt(arguments[3]);var frame=void 0,frame2=void 0,list=new Array;if(fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)){var baseCoordinate=baseX;if(fm.liveswitch.Global.equals(localVideoSize,null)||(baseCoordinate+=(frame=fm.liveswitch.LayoutPreset.calculateInlineOverflowFrame(baseCoordinate,layoutHeight,localVideoSize,this.getDirection())).getWidth(),fm.liveswitch.ArrayExtensions.add(list,frame)),!fm.liveswitch.Global.equals(remoteVideoSizes,null))for(var _i=0,remoteVideoSizes_1=remoteVideoSizes;_i<remoteVideoSizes_1.length;_i++){var size=remoteVideoSizes_1[_i];baseCoordinate+=(frame2=fm.liveswitch.LayoutPreset.calculateInlineOverflowFrame(baseCoordinate,layoutHeight,size,this.getDirection())).getWidth(),fm.liveswitch.ArrayExtensions.add(list,frame2)}}else{var num2=baseY;if(fm.liveswitch.Global.equals(localVideoSize,null)||(num2+=(frame=fm.liveswitch.LayoutPreset.calculateInlineOverflowFrame(num2,layoutWidth,localVideoSize,this.getDirection())).getHeight(),fm.liveswitch.ArrayExtensions.add(list,frame)),!fm.liveswitch.Global.equals(remoteVideoSizes,null))for(var _a=0,remoteVideoSizes_2=remoteVideoSizes;_a<remoteVideoSizes_2.length;_a++){size=remoteVideoSizes_2[_a];num2+=(frame2=fm.liveswitch.LayoutPreset.calculateInlineOverflowFrame(num2,layoutWidth,size,this.getDirection())).getHeight(),fm.liveswitch.ArrayExtensions.add(list,frame2)}}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.calculateLayout=function(){if(7==arguments.length){var layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),local=arguments[2],remoteCount=fm.liveswitch.Global.toInt(arguments[3]),origin_1=arguments[4],localVideoSize=arguments[5],remoteVideoSizes=arguments[6];layoutWidth<0&&(layoutWidth=0),layoutHeight<0&&(layoutHeight=0);var layout=null;if(fm.liveswitch.Global.equals(this.getMode(),fm.liveswitch.LayoutMode.FloatLocal))layout=this.getFloatLocalLayout(layoutWidth,layoutHeight,local,remoteCount,origin_1);else if(fm.liveswitch.Global.equals(this.getMode(),fm.liveswitch.LayoutMode.FloatRemote))layout=this.getFloatRemoteLayout(layoutWidth,layoutHeight,local,remoteCount,origin_1);else if(fm.liveswitch.Global.equals(this.getMode(),fm.liveswitch.LayoutMode.Block))layout=this.getBlockLayout(layoutWidth,layoutHeight,local,remoteCount,origin_1);else if(fm.liveswitch.Global.equals(this.getMode(),fm.liveswitch.LayoutMode.Inline))layout=this.getInlineLayout(layoutWidth,layoutHeight,local,remoteCount,origin_1);else{if(!fm.liveswitch.Global.equals(this.getMode(),fm.liveswitch.LayoutMode.InlineOverflow))throw new fm.liveswitch.Exception("Unrecognized layout mode.");layout=this.getInlineOverflowLayout(layoutWidth,layoutHeight,origin_1,localVideoSize,remoteVideoSizes)}fm.liveswitch.LayoutPreset.transformFrame(layout.getLocalFrame(),origin_1,layoutWidth,layoutHeight);for(var _i=0,_a=layout.getRemoteFrames();_i<_a.length;_i++){var frame=_a[_i];fm.liveswitch.LayoutPreset.transformFrame(frame,origin_1,layoutWidth,layoutHeight)}return layout}if(4==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),remoteCount=fm.liveswitch.Global.toInt(arguments[2]);var origin_2=arguments[3];return this.calculateLayout(layoutWidth,layoutHeight,!0,remoteCount,origin_2,null,null)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.copyToPreset=function(preset){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");preset.setMode(this.getMode()),preset.setDirection(this.getDirection()),preset.setAlignment(this.getAlignment()),preset.setFloatWidth(0),preset.setFloatHeight(0),preset.setFloatMarginX(0),preset.setFloatMarginY(0),preset.setFloatWidthPercent(0),preset.setFloatHeightPercent(0),preset.setFloatMarginXPercent(0),preset.setFloatMarginYPercent(0),preset.setBlockWidth(0),preset.setBlockHeight(0),preset.setBlockMarginX(0),preset.setBlockMarginY(0),preset.setBlockWidthPercent(0),preset.setBlockHeightPercent(0),preset.setBlockMarginXPercent(0),preset.setBlockMarginYPercent(0),preset.setInlineMargin(0),this.getFloatWidth()>0&&preset.setFloatWidth(this.getFloatWidth()),this.getFloatHeight()>0&&preset.setFloatHeight(this.getFloatHeight()),this.getFloatMarginX()>0&&preset.setFloatMarginX(this.getFloatMarginX()),this.getFloatMarginY()>0&&preset.setFloatMarginY(this.getFloatMarginY()),this.getFloatWidthPercent()>0&&preset.setFloatWidthPercent(this.getFloatWidthPercent()),this.getFloatHeightPercent()>0&&preset.setFloatHeightPercent(this.getFloatHeightPercent()),this.getFloatMarginXPercent()>0&&preset.setFloatMarginXPercent(this.getFloatMarginXPercent()),this.getFloatMarginYPercent()>0&&preset.setFloatMarginYPercent(this.getFloatMarginYPercent()),this.getBlockWidth()>0&&preset.setBlockWidth(this.getBlockWidth()),this.getBlockHeight()>0&&preset.setBlockHeight(this.getBlockHeight()),this.getBlockMarginX()>0&&preset.setBlockMarginX(this.getBlockMarginX()),this.getBlockMarginY()>0&&preset.setBlockMarginY(this.getBlockMarginY()),this.getBlockWidthPercent()>0&&preset.setBlockWidthPercent(this.getBlockWidthPercent()),this.getBlockHeightPercent()>0&&preset.setBlockHeightPercent(this.getBlockHeightPercent()),this.getBlockMarginXPercent()>0&&preset.setBlockMarginXPercent(this.getBlockMarginXPercent()),this.getBlockMarginYPercent()>0&&preset.setBlockMarginYPercent(this.getBlockMarginYPercent()),this.getInlineMargin()>0&&preset.setInlineMargin(this.getInlineMargin())},LayoutPreset.prototype.getAlignment=function(){if(0==arguments.length)return this._alignment;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockHeight=function(){if(0==arguments.length)return this.__blockHeight;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockHeightPercent=function(){if(0==arguments.length)return this.__blockHeightPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockLayout=function(layoutWidth,layoutHeight,local,remoteCount,origin){if(5==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),remoteCount=fm.liveswitch.Global.toInt(arguments[3]);var num7=void 0,num8=void 0,marginX=0,marginY=0,_var0=new fm.liveswitch.Holder(marginX),_var1=new fm.liveswitch.Holder(marginY),_var2=this.calculateBlockFrame(layoutWidth,layoutHeight,_var0,_var1);marginX=_var0.getValue(),marginY=_var1.getValue();var frame=local?_var2:null,list=new Array;if(fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Center)){var count=fm.liveswitch.LayoutPreset.divideByTwo(remoteCount),num4=remoteCount-count,baseX=0,baseY=0;fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Vertical)?(num7=fm.liveswitch.Global.equals(frame,null)?0:frame.getWidth()+marginX+marginX,baseX=(layoutWidth=fm.liveswitch.LayoutPreset.divideByTwo(layoutWidth-num7))+num7):(num8=fm.liveswitch.Global.equals(frame,null)?0:frame.getHeight()+marginY+marginY,baseY=(layoutHeight=fm.liveswitch.LayoutPreset.divideByTwo(layoutHeight-num8))+num8),count>0&&fm.liveswitch.ArrayExtensions.addRange(list,this.calculateInlineFrames(layoutWidth,layoutHeight,count,0,0)),num4>0&&fm.liveswitch.ArrayExtensions.addRange(list,this.calculateInlineFrames(layoutWidth,layoutHeight,num4,baseX,baseY))}else{var num9=0,num10=0;num7=fm.liveswitch.Global.equals(frame,null)?0:frame.getWidth()+marginX,num8=fm.liveswitch.Global.equals(frame,null)?0:frame.getHeight()+marginY,fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Top)?(num10=num8,layoutHeight-=num8):fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Bottom)?layoutHeight-=num8:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Left)?(num9=num7,layoutWidth-=num7):fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Right)?layoutWidth-=num7:fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Vertical)?((fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.TopLeft)||fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.BottomLeft))&&(num9=num7),layoutWidth-=num7):((fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.TopLeft)||fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.TopRight))&&(num10=num8),layoutHeight-=num8),fm.liveswitch.ArrayExtensions.addRange(list,this.calculateInlineFrames(layoutWidth,layoutHeight,remoteCount,num9,num10))}var layout=new fm.liveswitch.Layout;return layout.setOrigin(origin),layout.setWidth(layoutWidth),layout.setHeight(layoutHeight),layout.setLocalFrame(frame),layout.setRemoteFrames(fm.liveswitch.ArrayExtensions.toArray(list)),layout}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockMarginX=function(){if(0==arguments.length)return this.__blockMarginX;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockMarginXPercent=function(){if(0==arguments.length)return this.__blockMarginXPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockMarginY=function(){if(0==arguments.length)return this.__blockMarginY;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockMarginYPercent=function(){if(0==arguments.length)return this.__blockMarginYPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockWidth=function(){if(0==arguments.length)return this.__blockWidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBlockWidthPercent=function(){if(0==arguments.length)return this.__blockWidthPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getBottomRowIndexes=function(frames){if(1==arguments.length){var num3=void 0,yMax=fm.liveswitch.LayoutPreset.getYMax(frames),num2=0;for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getY(),yMax)&&num2++;var num4=0,numArray=new Array(num2);for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getY(),yMax)&&(numArray[num4++]=num3);return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getCenterColumnIndexes=function(frames){if(1==arguments.length){var num3=void 0,xMid=fm.liveswitch.LayoutPreset.getXMid(frames),num2=0;for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getX(),xMid)&&num2++;var num4=0,numArray=new Array(num2);for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getX(),xMid)&&(numArray[num4++]=num3);return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getCenterRowIndexes=function(frames){if(1==arguments.length){var num3=void 0,yMid=fm.liveswitch.LayoutPreset.getYMid(frames),num2=0;for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getY(),yMid)&&num2++;var num4=0,numArray=new Array(num2);for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getY(),yMid)&&(numArray[num4++]=num3);return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getDirection=function(){if(0==arguments.length)return this._direction;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatHeight=function(){if(0==arguments.length)return this.__floatHeight;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatHeightPercent=function(){if(0==arguments.length)return this.__floatHeightPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatLocalLayout=function(layoutWidth,layoutHeight,local,remoteCount,origin){if(5==arguments.length){if(layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),remoteCount=fm.liveswitch.Global.toInt(arguments[3]),fm.liveswitch.Global.equals(remoteCount,0))return fm.liveswitch.LayoutPreset.getSingleLayout(layoutWidth,layoutHeight,local);var layout=new fm.liveswitch.Layout;return layout.setOrigin(origin),layout.setWidth(layoutWidth),layout.setHeight(layoutHeight),layout.setLocalFrame(local?this.calculateFloatFrame(layoutWidth,layoutHeight):null),layout.setRemoteFrames(this.calculateInlineFrames(layoutWidth,layoutHeight,remoteCount,0,0)),layout}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatMarginX=function(){if(0==arguments.length)return this.__floatMarginX;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatMarginXPercent=function(){if(0==arguments.length)return this.__floatMarginXPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatMarginY=function(){if(0==arguments.length)return this.__floatMarginY;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatMarginYPercent=function(){if(0==arguments.length)return this.__floatMarginYPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatRemoteLayout=function(layoutWidth,layoutHeight,local,remoteCount,origin){if(5==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),remoteCount=fm.liveswitch.Global.toInt(arguments[3]);var layout=new fm.liveswitch.Layout;return layout.setOrigin(origin),layout.setWidth(layoutWidth),layout.setHeight(layoutHeight),layout.setLocalFrame(local?this.calculateFillFrame(layoutWidth,layoutHeight):null),layout.setRemoteFrames(this.calculateFloatFrames(layoutWidth,layoutHeight,remoteCount)),layout}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatWidth=function(){if(0==arguments.length)return this.__floatWidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getFloatWidthPercent=function(){if(0==arguments.length)return this.__floatWidthPercent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getInlineLayout=function(layoutWidth,layoutHeight,local,remoteCount,origin){if(5==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),remoteCount=fm.liveswitch.Global.toInt(arguments[3]);var frames_1=this.calculateInlineFrames(layoutWidth,layoutHeight,remoteCount+(local?1:0),0,0),index=-1;if(local)if(fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.TopLeft))index=0;else if(fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Top)){var topRowIndexes=this.getTopRowIndexes(frames_1);index=topRowIndexes[fm.liveswitch.LayoutPreset.divideByTwo(topRowIndexes.length)]}else{var centerRowIndexes=void 0;if(fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.TopRight))index=fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)?(centerRowIndexes=this.getTopRowIndexes(frames_1))[centerRowIndexes.length-1]:this.getRightColumnIndexes(frames_1)[0];else{var leftColumnIndexes=void 0;fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Left)?index=(leftColumnIndexes=this.getLeftColumnIndexes(frames_1))[fm.liveswitch.LayoutPreset.divideByTwo(leftColumnIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Center)?index=fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)?(centerRowIndexes=this.getCenterRowIndexes(frames_1))[fm.liveswitch.LayoutPreset.divideByTwo(centerRowIndexes.length)]:(leftColumnIndexes=this.getCenterColumnIndexes(frames_1))[fm.liveswitch.LayoutPreset.divideByTwo(leftColumnIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Right)?index=(leftColumnIndexes=this.getRightColumnIndexes(frames_1))[fm.liveswitch.LayoutPreset.divideByTwo(leftColumnIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.BottomLeft)?index=fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)?this.getBottomRowIndexes(frames_1)[0]:(leftColumnIndexes=this.getLeftColumnIndexes(frames_1))[leftColumnIndexes.length-1]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Bottom)?index=(centerRowIndexes=this.getBottomRowIndexes(frames_1))[fm.liveswitch.LayoutPreset.divideByTwo(centerRowIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.BottomRight)&&(index=frames_1.length-1)}}var layout=new fm.liveswitch.Layout;return layout.setOrigin(origin),layout.setWidth(layoutWidth),layout.setHeight(layoutHeight),layout.setLocalFrame(fm.liveswitch.Global.equals(index,-1)?null:frames_1[index]),layout.setRemoteFrames(fm.liveswitch.Global.equals(index,-1)?frames_1:fm.liveswitch.LayoutPreset.spliceLayoutFrame(frames_1,index)),layout}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getInlineMargin=function(){if(0==arguments.length)return this._inlineMargin;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getInlineOverflowLayout=function(layoutWidth,layoutHeight,origin,localVideoSize,remoteVideoSizes){if(5==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]);var frames_4=this.calculateInlineOverflowFrames(layoutWidth,layoutHeight,0,0,localVideoSize,remoteVideoSizes);if(fm.liveswitch.Global.equals(frames_4.length,0)){var layout=new fm.liveswitch.Layout;return layout.setOrigin(origin),layout.setWidth(layoutWidth),layout.setHeight(layoutHeight),layout.setLocalFrame(null),layout.setRemoteFrames(new Array(0)),layout}var index=-1;if(!fm.liveswitch.Global.equals(localVideoSize,null))if(fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.TopLeft))index=0;else if(fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Top)){var topRowIndexes=this.getTopRowIndexes(frames_4);index=topRowIndexes[fm.liveswitch.LayoutPreset.divideByTwo(topRowIndexes.length)]}else{var centerRowIndexes=void 0;if(fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.TopRight))index=fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)?(centerRowIndexes=this.getTopRowIndexes(frames_4))[centerRowIndexes.length-1]:this.getRightColumnIndexes(frames_4)[0];else{var leftColumnIndexes=void 0;fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Left)?index=(leftColumnIndexes=this.getLeftColumnIndexes(frames_4))[fm.liveswitch.LayoutPreset.divideByTwo(leftColumnIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Center)?index=fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)?(centerRowIndexes=this.getCenterRowIndexes(frames_4))[fm.liveswitch.LayoutPreset.divideByTwo(centerRowIndexes.length)]:(leftColumnIndexes=this.getCenterColumnIndexes(frames_4))[fm.liveswitch.LayoutPreset.divideByTwo(leftColumnIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Right)?index=(leftColumnIndexes=this.getRightColumnIndexes(frames_4))[fm.liveswitch.LayoutPreset.divideByTwo(leftColumnIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.BottomLeft)?index=fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)?this.getBottomRowIndexes(frames_4)[0]:(leftColumnIndexes=this.getLeftColumnIndexes(frames_4))[leftColumnIndexes.length-1]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.Bottom)?index=(centerRowIndexes=this.getBottomRowIndexes(frames_4))[fm.liveswitch.LayoutPreset.divideByTwo(centerRowIndexes.length)]:fm.liveswitch.Global.equals(this.getAlignment(),fm.liveswitch.LayoutAlignment.BottomRight)&&(index=frames_4.length-1)}}if(fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.LayoutDirection.Horizontal)){for(var num2=0,_i=0,frames_2=frames_4;_i<frames_2.length;_i++){num2+=frames_2[_i].getWidth()}var layout2=new fm.liveswitch.Layout;return layout2.setOrigin(origin),layout2.setWidth(num2),layout2.setHeight(layoutHeight),layout2.setLocalFrame(fm.liveswitch.Global.equals(index,-1)?null:frames_4[index]),layout2.setRemoteFrames(fm.liveswitch.Global.equals(index,-1)?frames_4:fm.liveswitch.LayoutPreset.spliceLayoutFrame(frames_4,index)),layout2}for(var num3=0,_a=0,frames_3=frames_4;_a<frames_3.length;_a++){num3+=frames_3[_a].getHeight()}var layout3=new fm.liveswitch.Layout;return layout3.setOrigin(origin),layout3.setWidth(layoutWidth),layout3.setHeight(num3),layout3.setLocalFrame(fm.liveswitch.Global.equals(index,-1)?null:frames_4[index]),layout3.setRemoteFrames(fm.liveswitch.Global.equals(index,-1)?frames_4:fm.liveswitch.LayoutPreset.spliceLayoutFrame(frames_4,index)),layout3}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getLeftColumnIndexes=function(frames){if(1==arguments.length){var num3=void 0,xMin=fm.liveswitch.LayoutPreset.getXMin(frames),num2=0;for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getX(),xMin)&&num2++;var num4=0,numArray=new Array(num2);for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getX(),xMin)&&(numArray[num4++]=num3);return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getMode=function(){if(0==arguments.length)return this._mode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getRightColumnIndexes=function(frames){if(1==arguments.length){var num3=void 0,xMax=fm.liveswitch.LayoutPreset.getXMax(frames),num2=0;for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getX(),xMax)&&num2++;var num4=0,numArray=new Array(num2);for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getX(),xMax)&&(numArray[num4++]=num3);return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.getTopRowIndexes=function(frames){if(1==arguments.length){var num3=void 0,yMin=fm.liveswitch.LayoutPreset.getYMin(frames),num2=0;for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getY(),yMin)&&num2++;var num4=0,numArray=new Array(num2);for(num3=0;num3<frames.length;num3++)fm.liveswitch.Global.equals(frames[num3].getY(),yMin)&&(numArray[num4++]=num3);return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutPreset.prototype.setAlignment=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._alignment=value},LayoutPreset.prototype.setBlockHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__blockHeight=fm.liveswitch.Global.toInt(value),this.__blockHeightPercent=0},LayoutPreset.prototype.setBlockHeightPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__blockHeightPercent=value,this.__blockHeight=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setBlockMarginX=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__blockMarginX=fm.liveswitch.Global.toInt(value),this.__blockMarginXPercent=0},LayoutPreset.prototype.setBlockMarginXPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__blockMarginXPercent=value,this.__blockMarginX=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setBlockMarginY=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__blockMarginY=fm.liveswitch.Global.toInt(value),this.__blockMarginYPercent=0},LayoutPreset.prototype.setBlockMarginYPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__blockMarginYPercent=value,this.__blockMarginY=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setBlockWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__blockWidth=fm.liveswitch.Global.toInt(value),this.__blockWidthPercent=0},LayoutPreset.prototype.setBlockWidthPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__blockWidthPercent=value,this.__blockWidth=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._direction=value},LayoutPreset.prototype.setFloatHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__floatHeight=fm.liveswitch.Global.toInt(value),this.__floatHeightPercent=0},LayoutPreset.prototype.setFloatHeightPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__floatHeightPercent=value,this.__floatHeight=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setFloatMarginX=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__floatMarginX=fm.liveswitch.Global.toInt(value),this.__floatMarginXPercent=0},LayoutPreset.prototype.setFloatMarginXPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__floatMarginXPercent=value,this.__floatMarginX=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setFloatMarginY=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__floatMarginY=fm.liveswitch.Global.toInt(value),this.__floatMarginYPercent=0},LayoutPreset.prototype.setFloatMarginYPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__floatMarginYPercent=value,this.__floatMarginY=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setFloatWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__floatWidth=fm.liveswitch.Global.toInt(value),this.__floatWidthPercent=0},LayoutPreset.prototype.setFloatWidthPercent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value<0&&(value=0),value>1&&(value=1),this.__floatWidthPercent=value,this.__floatWidth=fm.liveswitch.Global.toInt(0)},LayoutPreset.prototype.setInlineMargin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._inlineMargin=fm.liveswitch.Global.toInt(value)},LayoutPreset.prototype.setMode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mode=value},LayoutPreset}(fm.liveswitch.Dynamic);liveswitch.LayoutPreset=LayoutPreset}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutManager=function(_super){function LayoutManager(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=null;var preset=__arguments[0];(_this=_super.call(this)||this).fmliveswitchLayoutManagerInit(),_this._remoteViewsTable={},_this._remoteViewsLock=new Object,_this._localView=null,_this._inBatch=!1,fm.liveswitch.Global.equals(preset,null)&&(preset=fm.liveswitch.LayoutPreset.getFacetime()),preset.copyToPreset(_this),_this.setLayoutOrigin(fm.liveswitch.LayoutOrigin.TopLeft)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");preset=__arguments[0];(_this=_super.call(this)||this).fmliveswitchLayoutManagerInit(),_this._remoteViewsTable={},_this._remoteViewsLock=new Object,_this._localView=null,_this._inBatch=!1,fm.liveswitch.Global.equals(preset,null)&&(preset=fm.liveswitch.LayoutPreset.getFacetime()),preset.copyToPreset(_this),_this.setLayoutOrigin(fm.liveswitch.LayoutOrigin.TopLeft)}return _this}return __extends(LayoutManager,_super),LayoutManager.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutManager],"+_super.prototype.getTypeString.call(this)},LayoutManager.prototype.fmliveswitchLayoutManagerInit=function(){var _this=this;this.__onLayout=[],this._inBatch=!1,this._onLayout=function(p0){for(var _i=0,_a=_this.__onLayout;_i<_a.length;_i++){(0,_a[_i])(p0)}}},LayoutManager.prototype.addOnLayout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onLayout,value)},LayoutManager.prototype.addRemoteMedia=function(remoteMedia){if(1==arguments.length)return!fm.liveswitch.Global.equals(remoteMedia,null)&&this.addRemoteView(remoteMedia.getId(),remoteMedia.getView());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.addRemoteView=function(idValue,view){if(2==arguments.length){if(fm.liveswitch.Global.equals(idValue,null))return fm.liveswitch.Log.warn("Could not add remote view. The ID cannot be null."),!1;if(fm.liveswitch.Global.equals(view,null))return fm.liveswitch.Log.warn("Could not add remote view. The view cannot be null."),!1;try{this.dispatchToMainThread(this.addRemoteViewUI.bind(this),idValue,view)}catch(exception){fm.liveswitch.Log.error("Could not add remote view.",exception)}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.addRemoteViews=function(ids,views){if(2==arguments.length){if(fm.liveswitch.Global.equals(ids,null))return fm.liveswitch.Log.warn("Could not add remote views. The IDs cannot be null."),!1;if(fm.liveswitch.Global.equals(views,null))return fm.liveswitch.Log.warn("Could not add remote views. The views cannot be null."),!1;if(!fm.liveswitch.Global.equals(ids.length,views.length))return fm.liveswitch.Log.warn("Could not add remote views. The number of IDs and views must match."),!1;try{this.dispatchToMainThread(this.addRemoteViewsUI.bind(this),ids,views)}catch(exception){fm.liveswitch.Log.error("Could not add remote views.",exception)}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.addRemoteViewsUI=function(idsObj,viewsObj){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var strArray=idsObj,localArray=viewsObj;this._inBatch=!0;for(var i=0;i<strArray.length;i++)this.addRemoteViewUI(strArray[i],localArray[i]);this._inBatch=!1,this.layout()},LayoutManager.prototype.addRemoteViewUI=function(idObj,viewObj){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var idValue=idObj,item=viewObj,list=new Array;fm.liveswitch.ArrayExtensions.add(list,item);var remoteViewsInternal=this.getRemoteViewsInternal(idValue);fm.liveswitch.Global.equals(remoteViewsInternal,null)||fm.liveswitch.ArrayExtensions.addRange(list,remoteViewsInternal),this.addView(item),this._remoteViewsTable[idValue]=list,this._inBatch||this.layout()},LayoutManager.prototype.doGetLocalView=function(){if(0==arguments.length)return this._localView;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.doGetRemoteViews=function(idValue){if(1==arguments.length){var list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._remoteViewsTable,idValue,_var0);return list=_var0.getValue(),_var1||(list=null),list}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.doGetRemoteViewsIds=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getKeys(this._remoteViewsTable);_i<_a.length;_i++){var str=_a[_i];fm.liveswitch.ArrayExtensions.add(list,str)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.doSwapRemoteView=function(idToRemove,viewToRemove,idToAdd,viewToAdd){var _this=this;if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var action=null;try{fm.liveswitch.Global.equals(action,null)&&(action=function(unused1,unused2){fm.liveswitch.Global.equals(viewToRemove,null)||_this.removeRemoteViewUI(idToRemove,viewToRemove),_this.addRemoteViewUI(idToAdd,viewToAdd)}),this.dispatchToMainThread(action,null,null)}catch(exception){fm.liveswitch.Log.error("Could not swap remote view.",exception)}},LayoutManager.prototype.doSwapRemoteViews=function(idsToRemove,viewsToRemove,idsToAdd,viewsToAdd){var _this=this;if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var action=null;try{fm.liveswitch.Global.equals(action,null)&&(action=function(unused1,unused2){_this.removeRemoteViewsUI(idsToRemove,viewsToRemove),_this.addRemoteViewsUI(idsToAdd,viewsToAdd)}),this.dispatchToMainThread(action,null,null)}catch(exception){fm.liveswitch.Log.error("Could not swap remote views.",exception)}},LayoutManager.prototype.getLayout=function(){if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isBoolean(arguments[2]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isNumber(arguments[3]))){var layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),local=arguments[2],remoteCount=fm.liveswitch.Global.toInt(arguments[3]);return this.getLayout(layoutWidth,layoutHeight,local,remoteCount,null,null,null)}if(5==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),local=arguments[2],remoteCount=fm.liveswitch.Global.toInt(arguments[3]);var remoteViewIds=arguments[4];return this.getLayout(layoutWidth,layoutHeight,local,remoteCount,remoteViewIds,null,null)}if(7==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),local=arguments[2],remoteCount=fm.liveswitch.Global.toInt(arguments[3]),remoteViewIds=arguments[4];var localVideoSize=arguments[5],remoteVideoSizes=arguments[6],p=_super.prototype.calculateLayout.call(this,layoutWidth,layoutHeight,local,remoteCount,this.getLayoutOrigin(),localVideoSize,remoteVideoSizes);if(!fm.liveswitch.Global.equals(remoteViewIds,null))for(var remoteFrames=p.getRemoteFrames(),i=0;i<remoteFrames.length;i++){var frame=remoteFrames[i];frame.setViewId(remoteViewIds[i])}var onLayout=this._onLayout;if(!fm.liveswitch.Global.equals(onLayout,null))try{onLayout(p)}catch(exception){fm.liveswitch.Unhandled.logException(exception,"LayoutManager -> OnLayout")}return p}if(3==arguments.length){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),remoteCount=fm.liveswitch.Global.toInt(arguments[2]);return this.getLayout(layoutWidth,layoutHeight,!0,remoteCount,null,null,null)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isNumber(arguments[2]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isArray(arguments[3])&&(0==arguments[3].length||fm.liveswitch.Util.isNullOrUndefined(arguments[3][0])||fm.liveswitch.Util.isString(arguments[3][0])))){layoutWidth=fm.liveswitch.Global.toInt(arguments[0]),layoutHeight=fm.liveswitch.Global.toInt(arguments[1]),remoteCount=fm.liveswitch.Global.toInt(arguments[2]),remoteViewIds=arguments[3];return this.getLayout(layoutWidth,layoutHeight,!0,remoteCount,remoteViewIds,null,null)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getLayoutOrigin=function(){if(0==arguments.length)return this._layoutOrigin;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getLocalView=function(){if(0==arguments.length)return this.doGetLocalView();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getNewestRemoteView=function(idValue){if(1==arguments.length){var remoteViewsInternal=this.getRemoteViewsInternal(idValue);return fm.liveswitch.Global.equals(remoteViewsInternal,null)?null:remoteViewsInternal[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getOldestRemoteView=function(idValue){if(1==arguments.length){var remoteViewsInternal=this.getRemoteViewsInternal(idValue);return fm.liveswitch.Global.equals(remoteViewsInternal,null)?null:remoteViewsInternal[fm.liveswitch.ArrayExtensions.getCount(remoteViewsInternal)-1]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getRemoteView=function(idValue){if(1==arguments.length)return fm.liveswitch.Global.equals(idValue,null)?null:this.getNewestRemoteView(idValue);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getRemoteViewIds=function(){if(0==arguments.length)return this.doGetRemoteViewsIds();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getRemoteViews=function(){if(0==arguments.length)return this.getRemoteViews(this.getRemoteViewIds());if(1==arguments.length){var ids=arguments[0];if(fm.liveswitch.Global.equals(ids,null))throw new fm.liveswitch.Exception("Could not get remote views. The IDs cannot be null.");for(var list=new Array,_i=0,ids_1=ids;_i<ids_1.length;_i++){var str=ids_1[_i];fm.liveswitch.ArrayExtensions.add(list,this.getRemoteView(str))}return list}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.getRemoteViewsInternal=function(idValue){if(1==arguments.length){if(fm.liveswitch.Global.equals(idValue,null))throw new fm.liveswitch.Exception("The ID cannot be null.");return this.doGetRemoteViews(idValue)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.layoutOnMainThread=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.dispatchToMainThread(this.layoutOnMainThreadUI.bind(this),null,null)},LayoutManager.prototype.layoutOnMainThreadUI=function(unused1,unused2){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.layout()},LayoutManager.prototype.removeOnLayout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onLayout,value)},LayoutManager.prototype.removeRemoteMedia=function(remoteMedia){if(1==arguments.length)return!fm.liveswitch.Global.equals(remoteMedia,null)&&this.removeRemoteView(remoteMedia.getId());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.removeRemoteView=function(idValue){if(1==arguments.length){if(fm.liveswitch.Global.equals(idValue,null))return fm.liveswitch.Log.warn("Could not remove remote view. The ID cannot be null."),!1;var oldestRemoteView=this.getOldestRemoteView(idValue);if(!fm.liveswitch.Global.equals(oldestRemoteView,null))try{this.dispatchToMainThread(this.removeRemoteViewUI.bind(this),idValue,oldestRemoteView)}catch(exception){fm.liveswitch.Log.error("Could not remove remote view.",exception)}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.removeRemoteViews=function(){if(0!=arguments.length){if(1==arguments.length){var ids=arguments[0];if(fm.liveswitch.Global.equals(ids,null))return fm.liveswitch.Log.warn("Could not remove remote views. The IDs cannot be null."),!1;try{this.dispatchToMainThread(this.removeRemoteViewsUI.bind(this),ids,this.getRemoteViews(ids))}catch(exception){fm.liveswitch.Log.error("Could not remove remote views.",exception)}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")}this.removeRemoteViews(this.getRemoteViewIds())},LayoutManager.prototype.removeRemoteViewsUI=function(idsObj,viewsObj){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var strArray=idsObj,list=viewsObj;this._inBatch=!0;for(var i=0;i<strArray.length;i++)this.removeRemoteViewUI(strArray[i],list[i]);this._inBatch=!1,this.layout()},LayoutManager.prototype.removeRemoteViewUI=function(idObj,viewObj){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var idValue=idObj,item=viewObj,list=new Array,remoteViewsInternal=this.getRemoteViewsInternal(idValue);fm.liveswitch.Global.equals(remoteViewsInternal,null)||fm.liveswitch.ArrayExtensions.addRange(list,remoteViewsInternal),fm.liveswitch.ArrayExtensions.remove(list,item),this.removeView(item),fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(list),0)?fm.liveswitch.HashExtensions.remove(this._remoteViewsTable,idValue):this._remoteViewsTable[idValue]=list,this._inBatch||this.layout()},LayoutManager.prototype.reset=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.removeRemoteViews(),this.unsetLocalView()},LayoutManager.prototype.setLayoutOrigin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._layoutOrigin=value},LayoutManager.prototype.setLocalMedia=function(localMedia){if(1==arguments.length)return!fm.liveswitch.Global.equals(localMedia,null)&&this.setLocalView(localMedia.getView());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.setLocalView=function(view){if(1==arguments.length){if(fm.liveswitch.Global.equals(view,null))return fm.liveswitch.Log.warn("Could not set local view. The view cannot be null."),!1;if(!fm.liveswitch.Global.equals(view,null))try{this.dispatchToMainThread(this.setLocalViewUI.bind(this),view,null)}catch(exception){fm.liveswitch.Log.error("Could not set local view.",exception)}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.setLocalViewUI=function(viewObj,unused){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var view=viewObj,localView=this._localView;fm.liveswitch.Global.equals(localView,null)||this.removeView(localView),this._localView=view,this.addView(view),this.layout()},LayoutManager.prototype.swapRemoteMedia=function(remoteMediaToRemove,remoteMediaToAdd){if(2==arguments.length)return!fm.liveswitch.Global.equals(remoteMediaToRemove,null)&&(!fm.liveswitch.Global.equals(remoteMediaToAdd,null)&&this.swapRemoteView(remoteMediaToRemove.getId(),remoteMediaToAdd.getId(),remoteMediaToAdd.getView()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.swapRemoteView=function(idToRemove,idToAdd,viewToAdd){if(3==arguments.length)return fm.liveswitch.Global.equals(idToRemove,null)?(fm.liveswitch.Log.warn("Could not swap remote view. The ID to remove cannot be null."),!1):fm.liveswitch.Global.equals(idToAdd,null)?(fm.liveswitch.Log.warn("Could not swap remote view. The ID to add cannot be null."),!1):fm.liveswitch.Global.equals(viewToAdd,null)?(fm.liveswitch.Log.warn("Could not swap remote view. The view to add cannot be null."),!1):(this.doSwapRemoteView(idToRemove,this.getOldestRemoteView(idToRemove),idToAdd,viewToAdd),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.swapRemoteViews=function(idsToRemove,idsToAdd,viewsToAdd){if(3==arguments.length)return fm.liveswitch.Global.equals(idsToRemove,null)?(fm.liveswitch.Log.warn("Could not swap remote views. The IDs to remove cannot be null."),!1):fm.liveswitch.Global.equals(idsToAdd,null)?(fm.liveswitch.Log.warn("Could not swap remote views. The IDs to add cannot be null."),!1):fm.liveswitch.Global.equals(viewsToAdd,null)?(fm.liveswitch.Log.warn("Could not swap remote views. The views to add cannot be null."),!1):fm.liveswitch.Global.equals(idsToAdd.length,viewsToAdd.length)?(this.doSwapRemoteViews(idsToRemove,this.getRemoteViews(idsToRemove),idsToAdd,viewsToAdd),!0):(fm.liveswitch.Log.warn("Could not swap remote views. The number of IDs and views to add must match."),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.unsetLocalView=function(){if(0==arguments.length){var localView=this.getLocalView();if(fm.liveswitch.Global.equals(localView,null))return fm.liveswitch.Log.warn("Could not unset local view. A view does not exist."),!1;try{this.dispatchToMainThread(this.unsetLocalViewUI.bind(this),localView,null)}catch(exception){fm.liveswitch.Log.error("Could not unset local view.",exception)}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutManager.prototype.unsetLocalViewUI=function(viewObj,unused){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var view=viewObj;this._localView=null,this.removeView(view),this.layout()},LayoutManager}(fm.liveswitch.LayoutPreset);liveswitch.LayoutManager=LayoutManager}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DomLayoutManager=function(_super){function DomLayoutManager(container,preset){var _this=this;return void 0===preset&&(preset=null),(_this=_super.call(this,preset)||this)._id=fm.liveswitch.Utility.generateId(),_this._parentMissing=0,_this._parentMissingMax=16,_this._lastWidth=0,_this._lastHeight=0,_this._verticalScrollBarWidth=-1,_this._horizontalScrollBarHeight=-1,_this._retryTimeout=0,_this._viewCleanups={},_this._container=container,_this}return __extends(DomLayoutManager,_super),DomLayoutManager.prototype.getTypeString=function(){return"[fm.liveswitch.DomLayoutManager],"+_super.prototype.getTypeString.call(this)},DomLayoutManager.prototype.getContainer=function(){return this._container},DomLayoutManager.prototype.initializeInnerContainer=function(){var _this=this;this._innerContainer||(this.destroyInnerContainer(),this._innerContainer=document.createElement("div"),this._innerContainer.style.position="relative",this._innerContainer.style.width="100%",this._innerContainer.style.height="100%",this._innerContainer.setAttribute("data-fm-webrtc-inner-container","true"),this._container.appendChild(this._innerContainer),this._resizeInterval=window.setInterval((function(){if(_this._container.parentNode){_this._parentMissing=0;var width=_this._innerContainer.offsetWidth,height=_this._innerContainer.offsetHeight;width==_this._lastWidth&&height==_this._lastHeight||(_this.layout(),_this._lastWidth=width,_this._lastHeight=height)}else _this._parentMissing=_this._parentMissing+1,_this._parentMissing>_this._parentMissingMax&&window.clearInterval(_this._resizeInterval)}),250))},DomLayoutManager.prototype.destroyInnerContainer=function(){for(var _i=0,_a=this.collectionToArray(this._container.getElementsByTagName("div"));_i<_a.length;_i++){var child=_a[_i];"true"==child.getAttribute("data-fm-webrtc-inner-container")&&this._container.removeChild(child)}},DomLayoutManager.prototype.destroy=function(){this.destroyInnerContainer(),clearInterval(this._resizeInterval)},DomLayoutManager.prototype.addView=function(view){var _this=this;this.initializeInnerContainer();var viewId=fm.liveswitch.Utility.generateId();view.setAttribute("data-fm-webrtc-layout-"+this._id+"-view-id",viewId),this._viewCleanups[viewId]=this.addOnVideoSizeChange(view,(function(){_this.layout()})),this._innerContainer.appendChild(view)},DomLayoutManager.prototype.removeView=function(view){this.initializeInnerContainer(),view.parentNode==this._innerContainer&&this._innerContainer.removeChild(view);var viewId=view.getAttribute("data-fm-webrtc-layout-"+this._id+"-view-id");if(viewId){var cleanup=this._viewCleanups[viewId];cleanup&&cleanup(),delete this._viewCleanups[viewId]}},DomLayoutManager.prototype.dispatchToMainThread=function(action,arg1,arg2){action(arg1,arg2)},DomLayoutManager.prototype.doGetLocalView=function(){if(this._innerContainer)return _super.prototype.doGetLocalView.call(this);var localViews=this.getViewsByClassName("fm-video-local");return 0==localViews.length?null:localViews[localViews.length-1]},DomLayoutManager.prototype.doGetRemoteViewsIds=function(){if(this._innerContainer)return _super.prototype.doGetRemoteViewsIds.call(this);for(var remoteViewIds=[],_i=0,_a=this.getViewsByClassName("fm-video-remote");_i<_a.length;_i++){var remoteView=_a[_i];remoteViewIds.push(remoteView.id)}return remoteViewIds},DomLayoutManager.prototype.doGetRemoteViews=function(idValue){if(this._innerContainer)return _super.prototype.doGetRemoteViews.call(this,idValue);for(var remoteViews=[],_i=0,_a=this.getViewsByClassName("fm-video-remote");_i<_a.length;_i++){var remoteView=_a[_i];remoteView.id==idValue&&remoteViews.push(remoteView)}return remoteViews},DomLayoutManager.prototype.getViewsByClassName=function(className){return this.getParentViews(this.collectionToArray(this._container.getElementsByClassName(className)))},DomLayoutManager.prototype.getParentViews=function(views){for(var parentViews=[],_i=0,views_1=views;_i<views_1.length;_i++){var view=views_1[_i];parentViews.push(this.getParentView(view))}return parentViews},DomLayoutManager.prototype.getParentView=function(view){for(var parentView=view;parentView.parentElement!=this._container;)parentView=parentView.parentElement;return parentView},DomLayoutManager.prototype.collectionToArray=function(collection){for(var elements=[],i=0;i<collection.length;i++)elements.push(collection[i]);return elements},DomLayoutManager.prototype.layout=function(){var _this=this;this._retryTimeout&&clearTimeout(this._retryTimeout);var localView=this.getLocalView(),remoteViewIds=this.getRemoteViewIds(),remoteViews=this.getRemoteViews(remoteViewIds),localVideoSize=null,remoteVideoSizes=[];if(this.getMode()==fm.liveswitch.LayoutMode.InlineOverflow){var retry=!1;null!=localView&&null==(localVideoSize=this.getVideoSize(localView))&&(localVideoSize=new fm.liveswitch.Size(0,0),retry=!0);for(var i=0;i<remoteViews.length;i++){var remoteVideoSize=this.getVideoSize(remoteViews[i]);null==remoteVideoSize&&(remoteVideoSize=new fm.liveswitch.Size(0,0),retry=!0),remoteVideoSizes.push(remoteVideoSize)}retry&&(this._retryTimeout=setTimeout((function(){_this._retryTimeout=0,_this.layout()}),250))}var container=this._innerContainer||this._container,containerWidth=container.offsetWidth,containerHeight=container.offsetHeight,layout=this.getLayout(containerWidth,containerHeight,null!=localView,remoteViews.length,remoteViewIds,localVideoSize,remoteVideoSizes),verticalScrollVisible=!1,horizontalScrollVisible=!1;if(this.getMode()==fm.liveswitch.LayoutMode.InlineOverflow&&(this.getDirection()==fm.liveswitch.LayoutDirection.Horizontal?layout.getWidth()>containerWidth&&(containerHeight-=this.getHorizontalScrollbarHeight(),layout=this.getLayout(containerWidth,containerHeight,null!=localView,remoteViews.length,remoteViewIds,localVideoSize,remoteVideoSizes),horizontalScrollVisible=!0):layout.getHeight()>containerHeight&&(containerWidth-=this.getVerticalScrollbarWidth(),layout=this.getLayout(containerWidth,containerHeight,null!=localView,remoteViews.length,remoteViewIds,localVideoSize,remoteVideoSizes),verticalScrollVisible=!0)),null!=localView){var localFrame=layout.getLocalFrame();localView.style.position="absolute",localView.style.left=localFrame.getX()+"px",localView.style.top=localFrame.getY()+"px",localView.style.width=localFrame.getWidth()+"px",localView.style.height=localFrame.getHeight()+"px",this.getMode()==fm.liveswitch.LayoutMode.FloatLocal?localView.style.zIndex=remoteViews.length.toString():this.getMode()==fm.liveswitch.LayoutMode.FloatRemote&&(localView.style.zIndex="0")}var remoteFrames=layout.getRemoteFrames();for(i=0;i<remoteFrames.length;i++){var remoteFrame=remoteFrames[i],remoteView=remoteViews[i];remoteView.style.position="absolute",remoteView.style.left=remoteFrame.getX()+"px",remoteView.style.top=remoteFrame.getY()+"px",remoteView.style.width=remoteFrame.getWidth()+"px",remoteView.style.height=remoteFrame.getHeight()+"px",this.getMode()==fm.liveswitch.LayoutMode.FloatLocal?remoteView.style.zIndex=i.toString():this.getMode()==fm.liveswitch.LayoutMode.FloatRemote&&(remoteView.style.zIndex=(i+1).toString())}this.getMode()==fm.liveswitch.LayoutMode.InlineOverflow&&(container.style.overflowX=horizontalScrollVisible?"scroll":"hidden",container.style.overflowY=verticalScrollVisible?"scroll":"hidden")},DomLayoutManager.prototype.getVideoSize=function(view){if(fm.liveswitch.Plugin.useActiveX())return this.getPluginVideoSize(view);if(fm.liveswitch.Plugin.useNative())return this.getWebRtcVideoSize(view);throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.")},DomLayoutManager.prototype.getWebRtcVideoSize=function(view){if(null==view)return null;if("video"==view.nodeName.toLowerCase()){var video=view,videoWidth=video.videoWidth,videoHeight=video.videoHeight;if(videoWidth&&videoHeight)return new fm.liveswitch.Size(videoWidth,videoHeight)}var children=view.children;if(children)for(var i=0;i<children.length;i++){var videoSize=this.getWebRtcVideoSize(children[i]);if(null!=videoSize)return videoSize}return null},DomLayoutManager.prototype.getPluginVideoSize=function(view){if(null==view)return null;if("object"==view.nodeName.toLowerCase()&&view.getAttribute("CLASSID")=="clsid:"+fm.liveswitch.PluginConstants.getDomVideoSinkClassId()){var axo=view,videoWidth=axo.GetWidth(),videoHeight=axo.GetHeight();if(videoWidth&&videoHeight)return new fm.liveswitch.Size(videoWidth,videoHeight)}var children=view.children;if(children)for(var i=0;i<children.length;i++){var videoSize=this.getPluginVideoSize(children[i]);if(null!=videoSize)return videoSize}return null},DomLayoutManager.prototype.addOnVideoSizeChange=function(view,handler){if(fm.liveswitch.Plugin.useActiveX())return this.addOnPluginVideoSizeChange(view,handler);if(fm.liveswitch.Plugin.useNative())return this.addOnWebRtcVideoSizeChange(view,handler);throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.")},DomLayoutManager.prototype.addOnWebRtcVideoSizeChange=function(view,handler){if(null==view)return null;if("video"==view.nodeName.toLowerCase()){var video_1=view,listener_1=function(event){handler(new fm.liveswitch.Size(video_1.videoWidth,video_1.videoHeight))};return video_1.addEventListener("resize",listener_1),function(){video_1.removeEventListener("resize",listener_1)}}var children=view.children;if(children)for(var i=0;i<children.length;i++){var cleanup=this.addOnWebRtcVideoSizeChange(children[i],handler);if(cleanup)return cleanup}return null},DomLayoutManager.prototype.addOnPluginVideoSizeChange=function(view,handler){if(null==view)return null;if("object"==view.nodeName.toLowerCase()&&view.getAttribute("CLASSID")=="clsid:"+fm.liveswitch.PluginConstants.getDomVideoSinkClassId()){var axo_1=view;return axo_1.SetOnVideoResize((function(){handler(new fm.liveswitch.Size(axo_1.GetVideoWidth(),axo_1.GetVideoHeight()))})),function(){axo_1.SetOnVideoResize(null)}}var children=view.children;if(children)for(var i=0;i<children.length;i++){var cleanup=this.addOnPluginVideoSizeChange(children[i],handler);if(cleanup)return cleanup}return null},DomLayoutManager.prototype.getVerticalScrollbarWidth=function(){if(-1==this._verticalScrollBarWidth){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var inner=document.createElement("div");outer.appendChild(inner),this._verticalScrollBarWidth=outer.offsetWidth-outer.clientWidth,outer.parentNode.removeChild(outer)}return this._verticalScrollBarWidth},DomLayoutManager.prototype.getHorizontalScrollbarHeight=function(){if(-1==this._horizontalScrollBarHeight){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var inner=document.createElement("div");outer.appendChild(inner),this._horizontalScrollBarHeight=outer.offsetHeight-outer.clientHeight,outer.parentNode.removeChild(outer)}return this._horizontalScrollBarHeight},DomLayoutManager}(fm.liveswitch.LayoutManager);liveswitch.DomLayoutManager=DomLayoutManager}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DomVideoSink=function(_super){function DomVideoSink(track){var _this=_super.call(this)||this;if(fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginDomVideoSink(_this,null==track?null:track._getInternal());else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcDomVideoSink(_this,null==track?null:track._getInternal())}return _this}return __extends(DomVideoSink,_super),DomVideoSink.prototype.getTypeString=function(){return"[fm.liveswitch.DomVideoSink],"+_super.prototype.getTypeString.call(this)},DomVideoSink.prototype._getInternal=function(){return this._internal},DomVideoSink.prototype.getVideo=function(){return this._getInternal().getVideo()},DomVideoSink.prototype.getView=function(){return this._getInternal().getView()},DomVideoSink.prototype.getViewScale=function(){return this._getInternal().getViewScale()},DomVideoSink.prototype.setViewScale=function(viewScale){this._getInternal().setViewScale(viewScale)},DomVideoSink.prototype.getViewMirror=function(){return this._getInternal().getViewMirror()},DomVideoSink.prototype.setViewMirror=function(viewMirror){this._getInternal().setViewMirror(viewMirror)},DomVideoSink}(fm.liveswitch.Dynamic);liveswitch.DomVideoSink=DomVideoSink}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Factory=function(){function Factory(){}return Factory.prototype.getTypeString=function(){return"[fm.liveswitch.Factory]"},Factory.createConnection=function(streams){return new fm.liveswitch.Connection(streams)},Factory.createAudioStream=function(localMedia){return new fm.liveswitch.AudioStream(localMedia)},Factory.createVideoStream=function(localMedia){return new fm.liveswitch.VideoStream(localMedia)},Factory.createDataChannel=function(label){return new fm.liveswitch.DataChannel(label)},Factory.createDataStream=function(channel){return new fm.liveswitch.DataStream(channel)},Factory.createDomVideoSink=function(track){return new fm.liveswitch.DomVideoSink(track)},Factory.createLocalMedia=function(audio,video,screen){return new fm.liveswitch.LocalMedia(audio,video,screen)},Factory}();liveswitch.Factory=Factory}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Media=function(_super){function Media(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Media,_super),Media.prototype.getTypeString=function(){return"[fm.liveswitch.Media],"+_super.prototype.getTypeString.call(this)},Media.prototype.addOnAudioDestroyed=function(value){return this._getInternal().addOnAudioDestroyed(value)},Media.prototype.addOnVideoDestroyed=function(value){return this._getInternal().addOnVideoDestroyed(value)},Media.prototype.removeOnAudioDestroyed=function(value){return this._getInternal().removeOnAudioDestroyed(value)},Media.prototype.removeOnVideoDestroyed=function(value){return this._getInternal().removeOnVideoDestroyed(value)},Media.prototype.addOnAudioLevel=function(value){this._getInternal().addOnAudioLevel(value)},Media.prototype.addOnVideoSize=function(value){this._getInternal().addOnVideoSize(value)},Media.prototype.getAudioGain=function(){return this._getInternal().getAudioGain()},Media.prototype.getAudioMuted=function(){return this._getInternal().getAudioMuted()},Media.prototype.getAudioTrack=function(){return this.internalToExternal(this._getInternal().getAudioTrack())},Media.prototype.getAudioTracks=function(){return this.internalsToExternals(this._getInternal().getAudioTracks())},Media.prototype.getAudioVolume=function(){return this._getInternal().getAudioVolume()},Media.prototype.getId=function(){return this._getInternal().getId()},Media.prototype.getVideoMuted=function(){return this._getInternal().getVideoMuted()},Media.prototype.getVideoSize=function(){return this._getInternal().getVideoSize()},Media.prototype.getVideoTrack=function(){return this.internalToExternal(this._getInternal().getVideoTrack())},Media.prototype.getVideoTracks=function(){return this.internalsToExternals(this._getInternal().getVideoTracks())},Media.prototype.grabVideoFrame=function(){return this._getInternal().grabVideoFrame()},Media.prototype.removeOnAudioLevel=function(value){this._getInternal().removeOnAudioLevel(value)},Media.prototype.removeOnVideoSize=function(value){this._getInternal().removeOnVideoSize(value)},Media.prototype.setAudioGain=function(value){this._getInternal().setAudioGain(value)},Media.prototype.setAudioMuted=function(value){this._getInternal().setAudioMuted(value)},Media.prototype.setAudioVolume=function(value){this._getInternal().setAudioVolume(value)},Media.prototype.setId=function(value){return this._getInternal().setId(value)},Media.prototype.setVideoMuted=function(value){this._getInternal().setVideoMuted(value)},Media.prototype.destroy=function(){this._getInternal().destroy()},Media.prototype.getAudioSink=function(){var internalAudioSink=this._getInternal().getAudioSink();return null==internalAudioSink?null:internalAudioSink._getExternal()},Media.prototype.getVideoSink=function(){var internalViewSink=this._getInternal().getVideoSink();return null==internalViewSink?null:internalViewSink._getExternal()},Media.prototype.getView=function(){return this._getInternal().getView()},Media.prototype.getViewSink=function(){var internalViewSink=this._getInternal().getViewSink();return null==internalViewSink?null:internalViewSink._getExternal()},Media.prototype.externalsToInternals=function(externals){var _this=this;return fm.liveswitch.ArrayExtensions.map(externals,(function(external){return _this.externalToInternal(external)}))},Media.prototype.externalToInternal=function(external){return external._getInternal()},Media.prototype.internalsToExternals=function(internals){var _this=this;return fm.liveswitch.ArrayExtensions.map(internals,(function(internal){return _this.internalToExternal(internal)}))},Media.prototype.internalToExternal=function(internal){return null==internal?null:internal._getExternal()},Media}(fm.liveswitch.Dynamic);liveswitch.Media=Media}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LocalMedia=function(_super){function LocalMedia(audio,video,screen){var _this=_super.call(this)||this;if(void 0===audio&&(audio=!0),void 0===video&&(video=!0),void 0===screen&&(screen=!1),screen&&!video&&(screen=!1),fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginLocalMedia(_this,audio,video,screen);else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcLocalMedia(_this,audio,video,screen)}return _this}return __extends(LocalMedia,_super),LocalMedia.prototype.getTypeString=function(){return"[fm.liveswitch.LocalMedia],"+_super.prototype.getTypeString.call(this)},LocalMedia.prototype._getInternal=function(){return this._internal},LocalMedia.prototype.addOnAudioStarted=function(value){return this._getInternal().addOnAudioStarted(value)},LocalMedia.prototype.addOnAudioStopped=function(value){return this._getInternal().addOnAudioStopped(value)},LocalMedia.prototype.addOnVideoStarted=function(value){return this._getInternal().addOnVideoStarted(value)},LocalMedia.prototype.addOnVideoStopped=function(value){return this._getInternal().addOnVideoStopped(value)},LocalMedia.prototype.removeOnAudioStarted=function(value){return this._getInternal().removeOnAudioStarted(value)},LocalMedia.prototype.removeOnAudioStopped=function(value){return this._getInternal().removeOnAudioStopped(value)},LocalMedia.prototype.removeOnVideoStarted=function(value){return this._getInternal().removeOnVideoStarted(value)},LocalMedia.prototype.removeOnVideoStopped=function(value){return this._getInternal().removeOnVideoStopped(value)},LocalMedia.prototype.getAudioEncoding=function(){return this._getInternal().getAudioEncoding()},LocalMedia.prototype.getAudioEncodings=function(){return this._getInternal().getAudioEncodings()},LocalMedia.prototype.setAudioEncodings=function(value){return this._getInternal().setAudioEncodings(value)},LocalMedia.prototype.getVideoEncoding=function(){return this._getInternal().getVideoEncoding()},LocalMedia.prototype.getVideoEncodings=function(){return this._getInternal().getVideoEncodings()},LocalMedia.prototype.setVideoEncodings=function(value){return this._getInternal().setVideoEncodings(value)},LocalMedia.getChromeExtensionId=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionId()},LocalMedia.setChromeExtensionId=function(chromeExtensionId){fm.liveswitch.WebRtcLocalMedia.setChromeExtensionId(chromeExtensionId)},LocalMedia.getChromeExtensionUrl=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionUrl()},LocalMedia.getChromeExtensionInstalled=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionInstalled()},LocalMedia.getChromeExtensionRequiresUserGesture=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionRequiresUserGesture()},LocalMedia.setChromeExtensionRequiresUserGesture=function(chromeExtensionRequiresUserGesture){fm.liveswitch.WebRtcLocalMedia.setChromeExtensionRequiresUserGesture(chromeExtensionRequiresUserGesture)},LocalMedia.canScreenShare=function(){return fm.liveswitch.Plugin.hasGetDisplayMedia()||fm.liveswitch.Util.isIE()},LocalMedia.prototype.changeAudioSourceInput=function(audioSourceInput){return this._getInternal().changeAudioSourceInput(audioSourceInput)},LocalMedia.prototype.changeVideoSourceInput=function(videoSourceInput){return this._getInternal().changeVideoSourceInput(videoSourceInput)},LocalMedia.prototype.getAudioSourceInput=function(){return this._getInternal().getAudioSourceInput()},LocalMedia.prototype.getAudioSourceInputs=function(){return this._getInternal().getAudioSourceInputs()},LocalMedia.prototype.getVideoSourceInput=function(){return this._getInternal().getVideoSourceInput()},LocalMedia.prototype.getVideoSourceInputs=function(){return this._getInternal().getVideoSourceInputs()},LocalMedia.prototype.setAudioSourceInput=function(value){this._getInternal().setAudioSourceInput(value)},LocalMedia.prototype.setVideoSourceInput=function(value){this._getInternal().setVideoSourceInput(value)},LocalMedia.prototype.start=function(){var _this=this,promise=new fm.liveswitch.Promise;return this._getInternal().start().then((function(lm){promise.resolve(_this)}),(function(ex){promise.reject(ex)})),promise},LocalMedia.prototype.stop=function(){var _this=this,promise=new fm.liveswitch.Promise;return this._getInternal().stop().then((function(lm){promise.resolve(_this)}),(function(ex){promise.reject(ex)})),promise},LocalMedia.prototype.changeAudioInput=function(audioInput){return fm.liveswitch.Log.warn("LocalMedia.changeAudioInput is deprecated. Use LocalMedia.changeAudioSourceInput instead."),this.changeAudioSourceInput(audioInput)},LocalMedia.prototype.changeVideoInput=function(videoInput){return fm.liveswitch.Log.warn("LocalMedia.changeVideoInput is deprecated. Use LocalMedia.changeVideoSourceInput instead."),this.changeVideoSourceInput(videoInput)},LocalMedia.prototype.getAudioInput=function(){return fm.liveswitch.Log.warn("LocalMedia.getAudioInput is deprecated. Use LocalMedia.getAudioSourceInput instead."),this.getAudioSourceInput()},LocalMedia.prototype.getAudioInputs=function(){return fm.liveswitch.Log.warn("LocalMedia.getAudioInputs is deprecated. Use LocalMedia.getAudioSourceInputs instead."),this.getAudioSourceInputs()},LocalMedia.prototype.getVideoInput=function(){return fm.liveswitch.Log.warn("LocalMedia.getVideoInput is deprecated. Use LocalMedia.getVideoSourceInput instead."),this.getVideoSourceInput()},LocalMedia.prototype.getVideoInputs=function(){return fm.liveswitch.Log.warn("LocalMedia.getVideoInputs is deprecated. Use LocalMedia.getVideoSourceInputs instead."),this.getVideoSourceInputs()},LocalMedia.prototype.setAudioInput=function(audioInput){return fm.liveswitch.Log.warn("LocalMedia.setAudioInput is deprecated. Use LocalMedia.setAudioSourceInput instead."),this.setAudioSourceInput(audioInput)},LocalMedia.prototype.setVideoInput=function(videoInput){return fm.liveswitch.Log.warn("LocalMedia.setVideoInput is deprecated. Use LocalMedia.setVideoSourceInput instead."),this.setVideoSourceInput(videoInput)},LocalMedia.prototype.getState=function(){return this._getInternal().getState()},LocalMedia.prototype.getAudioSimulcastDisabled=function(){return this._getInternal().getAudioSimulcastDisabled()},LocalMedia.prototype.setAudioSimulcastDisabled=function(value){this._getInternal().setAudioSimulcastDisabled(value)},LocalMedia.prototype.getAudioSimulcastEncodingCount=function(){return this._getInternal().getAudioSimulcastEncodingCount()},LocalMedia.prototype.setAudioSimulcastEncodingCount=function(value){this._getInternal().setAudioSimulcastEncodingCount(value)},LocalMedia.prototype.getAudioSimulcastPreferredBitrate=function(){return this._getInternal().getAudioSimulcastPreferredBitrate()},LocalMedia.prototype.setAudioSimulcastPreferredBitrate=function(value){this._getInternal().setAudioSimulcastPreferredBitrate(value)},LocalMedia.prototype.getVideoSimulcastDisabled=function(){return this._getInternal().getVideoSimulcastDisabled()},LocalMedia.prototype.setVideoSimulcastDisabled=function(value){this._getInternal().setVideoSimulcastDisabled(value)},LocalMedia.prototype.getVideoSimulcastEncodingCount=function(){return this._getInternal().getVideoSimulcastEncodingCount()},LocalMedia.prototype.setVideoSimulcastEncodingCount=function(value){this._getInternal().setVideoSimulcastEncodingCount(value)},LocalMedia.prototype.getVideoSimulcastPreferredBitrate=function(){return this._getInternal().getVideoSimulcastPreferredBitrate()},LocalMedia.prototype.setVideoSimulcastPreferredBitrate=function(value){this._getInternal().setVideoSimulcastPreferredBitrate(value)},LocalMedia.prototype.getVideoSimulcastBitsPerPixel=function(){return this._getInternal().getVideoSimulcastBitsPerPixel()},LocalMedia.prototype.setVideoSimulcastBitsPerPixel=function(value){this._getInternal().setVideoSimulcastBitsPerPixel(value)},LocalMedia.prototype.getVideoSimulcastDegradationPreference=function(){return this._getInternal().getVideoSimulcastDegradationPreference()},LocalMedia.prototype.setVideoSimulcastDegradationPreference=function(value){this._getInternal().setVideoSimulcastDegradationPreference(value)},LocalMedia}(fm.liveswitch.Media);liveswitch.LocalMedia=LocalMedia}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LocalNetwork=function(){function LocalNetwork(){}return LocalNetwork.prototype.getTypeString=function(){return"[fm.liveswitch.LocalNetwork]"},LocalNetwork.getAddressType=function(ipAddress){return ipAddress.indexOf(":")>-1?fm.liveswitch.AddressType.IPv6:fm.liveswitch.AddressType.IPv4},LocalNetwork}();liveswitch.LocalNetwork=LocalNetwork}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaDescriptionManagerBase=function(){function MediaDescriptionManagerBase(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return MediaDescriptionManagerBase.prototype.getTypeString=function(){return"[fm.liveswitch.MediaDescriptionManagerBase]"},MediaDescriptionManagerBase.syncroniseMediaIdentification=function(sdpMediaDescription,index){if(2==arguments.length){index=fm.liveswitch.Global.toInt(arguments[1]);var str="",mediaStreamIdentifierAttribute=sdpMediaDescription.getMediaStreamIdentifierAttribute();if(fm.liveswitch.Global.equals(mediaStreamIdentifierAttribute,null)){var idValue=fm.liveswitch.NumberExtensions.toString(index);return str=idValue,sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.MediaStreamIdAttribute(idValue)),str}return mediaStreamIdentifierAttribute.getIdentificationTag()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescriptionManagerBase.prototype.getMediaStreamIdentifier=function(){if(0==arguments.length)return this._mediaStreamIdentifier;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescriptionManagerBase.prototype.processSdpMediaDescription=function(mediaRequirements,sdpMessage,index,isLocalDescription,isRenegotiation,isOffer){if(6==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[2]),mediaRequirements.setMediaStreamIdentifier(fm.liveswitch.MediaDescriptionManagerBase.syncroniseMediaIdentification(sdpMessage.getMediaDescriptions()[index],index)),this.setMediaStreamIdentifier(mediaRequirements.getMediaStreamIdentifier()),null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescriptionManagerBase.prototype.setMediaStreamIdentifier=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaStreamIdentifier=value},MediaDescriptionManagerBase}();liveswitch.MediaDescriptionManagerBase=MediaDescriptionManagerBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaDescriptionManager=function(_super){function MediaDescriptionManager(){var _this=_super.call(this)||this;return _this._MediaStreamMediaDescriptionManagerUtility=null,_this.localMuted=!1,_this.remoteMuted=!1,_this._MediaStreamMediaDescriptionManagerUtility=new fm.liveswitch.MediaStreamMediaDescriptionManagerUtility,_this}return __extends(MediaDescriptionManager,_super),MediaDescriptionManager.prototype.getTypeString=function(){return"[fm.liveswitch.MediaDescriptionManager],"+_super.prototype.getTypeString.call(this)},MediaDescriptionManager.prototype.processSdpMediaDescription=function(mediaRequirements,sdpMessage,index,isLocalDescription,isRenegotiation,isOffer){if(6==arguments.length){var error=_super.prototype.processSdpMediaDescription.call(this,mediaRequirements,sdpMessage,index,isLocalDescription,isRenegotiation,isOffer),mediaDescription=sdpMessage.getMediaDescriptions()[index];return this._MediaStreamMediaDescriptionManagerUtility.checkIfMuted(mediaDescription)&&(isLocalDescription?this.localMuted=!0:this.remoteMuted=!0),error}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescriptionManager}(fm.liveswitch.MediaDescriptionManagerBase);liveswitch.MediaDescriptionManager=MediaDescriptionManager}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaDescriptionRequirementsBase=function(){function MediaDescriptionRequirementsBase(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return MediaDescriptionRequirementsBase.prototype.getTypeString=function(){return"[fm.liveswitch.MediaDescriptionRequirementsBase]"},MediaDescriptionRequirementsBase.prototype.getMediaStreamIdentifier=function(){if(0==arguments.length)return this._mediaStreamIdentifier;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescriptionRequirementsBase.prototype.setMediaStreamIdentifier=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaStreamIdentifier=value},MediaDescriptionRequirementsBase}();liveswitch.MediaDescriptionRequirementsBase=MediaDescriptionRequirementsBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaDescriptionRequirements=function(_super){function MediaDescriptionRequirements(){return _super.call(this)||this}return __extends(MediaDescriptionRequirements,_super),MediaDescriptionRequirements.prototype.getTypeString=function(){return"[fm.liveswitch.MediaDescriptionRequirements],"+_super.prototype.getTypeString.call(this)},MediaDescriptionRequirements}(fm.liveswitch.MediaDescriptionRequirementsBase);liveswitch.MediaDescriptionRequirements=MediaDescriptionRequirements}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginConstants=function(){function PluginConstants(){}return PluginConstants.getLoaderClassId=function(){return"90ED7AB9-EE33-38D3-8C4E-615DD7643F79"},PluginConstants.getDomVideoSinkClassId=function(){return"FC3B3577-BDCA-3FD8-A0D6-4995829B6B1B"},PluginConstants}();liveswitch.PluginConstants=PluginConstants}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Plugin=function(){function Plugin(){}return Plugin.install=function(pluginConfig){var promise=new fm.liveswitch.Promise;if(this._pluginConfig=pluginConfig,fm.liveswitch.Util.hasActiveX()&&this._pluginConfig&&this._pluginConfig.getActiveXPath()){var object=document.createElement("object");object.id="activex.loader",object.setAttribute("codebase",this._pluginConfig.getActiveXPath()),object.setAttribute("CLASSID","clsid:"+fm.liveswitch.PluginConstants.getLoaderClassId()),object.style.width="0px",object.style.height="0px",object.style.position="absolute",document.getElementsByTagName("body")[0].appendChild(object),this.checkForActiveX(promise,object,(new Date).getTime())}else promise.resolve(null);return promise},Plugin.getPluginConfig=function(){return this._pluginConfig},Plugin.hasRtcPeerConnection=function(){return"undefined"!=typeof RTCPeerConnection},Plugin.hasRtcDataChannel=function(){return"undefined"!=typeof RTCDataChannel||void 0!==window.DataChannel},Plugin.hasGetUserMedia=function(){return void 0!==navigator.fmGetUserMedia},Plugin.hasGetDisplayMedia=function(){return navigator&&navigator.mediaDevices&&void 0!==navigator.mediaDevices.getDisplayMedia},Plugin.hasRtcIceGatherer=function(){return"undefined"!=typeof RTCIceGatherer},Plugin.hasRtcIceTransport=function(){return"undefined"!=typeof RTCIceTransport},Plugin.hasRtcDtlsTransport=function(){return"undefined"!=typeof RTCDtlsTransport},Plugin.hasRtcRtpSender=function(){return"undefined"!=typeof RTCRtpSender},Plugin.hasRtcRtpReceiver=function(){return"undefined"!=typeof RTCRtpReceiver},Plugin.hasWebRtc=function(localMedia,dataChannels){return(!localMedia||this.hasGetUserMedia())&&(!dataChannels||this.hasRtcDataChannel())&&this.hasRtcPeerConnection()},Plugin.hasOrtc=function(localMedia,dataChannels){return(!localMedia||this.hasGetUserMedia())&&(!dataChannels||this.hasRtcDataChannel())&&this.hasRtcIceGatherer()&&this.hasRtcIceTransport()&&this.hasRtcDtlsTransport()&&this.hasRtcRtpSender()&&this.hasRtcRtpReceiver()},Plugin.hasNative=function(localMedia,dataChannels){return this.hasWebRtc(localMedia,dataChannels)||this.hasOrtc(localMedia,dataChannels)},Plugin.hasActiveX=function(){return this._hasActiveX},Plugin.isReady=function(localMedia,dataChannels){return this.hasActiveX()||this.hasNative(localMedia,dataChannels)},Plugin.isSupported=function(localMedia,dataChannels){return this.isReady(localMedia,dataChannels)},Plugin.useActiveX=function(localMedia,dataChannels){return this._pluginConfig&&this._pluginConfig.getPreferActiveX()?this.hasActiveX():this.hasActiveX()&&!this.hasNative(localMedia,dataChannels)},Plugin.useNative=function(localMedia,dataChannels){return!this.useActiveX(localMedia,dataChannels)&&this.hasNative(localMedia,dataChannels)},Plugin.checkForActiveX=function(promise,object,startTime){var _this=this,loaded=!1;try{fm.liveswitch.Util.isNullOrUndefined(object.GetIsLoaded)||(loaded=object.GetIsLoaded())}catch(ex){loaded=!1}loaded?(this._hasActiveX=!0,promise.resolve(null)):(new Date).getTime()-startTime>this._pluginConfig.getActiveXTimeout()?promise.reject(new fm.liveswitch.Exception("ActiveX install timed out.")):window.setTimeout((function(){_this.checkForActiveX(promise,object,startTime)}),10)},Plugin.getChromeExtensionId=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionId()},Plugin.setChromeExtensionId=function(chromeExtensionId){fm.liveswitch.WebRtcLocalMedia.setChromeExtensionId(chromeExtensionId)},Plugin.getChromeExtensionUrl=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionUrl()},Plugin.getChromeExtensionInstalled=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionInstalled()},Plugin.getChromeExtensionRequiresUserGesture=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionRequiresUserGesture()},Plugin.setChromeExtensionRequiresUserGesture=function(chromeExtensionRequiresUserGesture){fm.liveswitch.WebRtcLocalMedia.setChromeExtensionRequiresUserGesture(chromeExtensionRequiresUserGesture)},Plugin.getChromeExtensionRequired=function(){return fm.liveswitch.WebRtcLocalMedia.getChromeExtensionRequired()},Plugin._hasActiveX=!1,Plugin}();liveswitch.Plugin=Plugin}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginStream=function(_super){function PluginStream(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(PluginStream,_super),PluginStream.prototype.getTypeString=function(){return"[fm.liveswitch.PluginStream],"+_super.prototype.getTypeString.call(this)},PluginStream}(fm.liveswitch.Dynamic);liveswitch.PluginStream=PluginStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginMediaStream=function(_super){function PluginMediaStream(localTrack,remoteTrack){var _this=_super.call(this)||this;return _this._localTrack=localTrack,_this._remoteTrack=remoteTrack,_this}return __extends(PluginMediaStream,_super),PluginMediaStream.prototype.getTypeString=function(){return"[fm.liveswitch.PluginMediaStream],"+_super.prototype.getTypeString.call(this)},PluginMediaStream.prototype.getLocalTrack=function(){return this._localTrack},PluginMediaStream.prototype.getRemoteTrack=function(){return this._remoteTrack},PluginMediaStream}(fm.liveswitch.PluginStream);liveswitch.PluginMediaStream=PluginMediaStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(dtmf){var Tone=function(){function Tone(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchdtmfToneInit();else if(1==__arguments.length){var value=__arguments[0];(__arguments=new Array(2))[0]=value,__arguments[1]=100;var value_1=__arguments[0],duration=__arguments[1];this.fmliveswitchdtmfToneInit(),this.setValue(value_1),this.setDuration(duration)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");value=__arguments[0],duration=__arguments[1];this.fmliveswitchdtmfToneInit(),this.setValue(value),this.setDuration(duration)}}return Tone.prototype.getTypeString=function(){return"[fm.liveswitch.dtmf.Tone]"},Tone.prototype.fmliveswitchdtmfToneInit=function(){this._duration=0,this._end=!1,this._sentDuration=0},Tone.eventCodeFromValue=function(eventString){if(1==arguments.length){return"0"==eventString?0:"1"==eventString?1:"2"==eventString?2:"3"==eventString?3:"4"==eventString?4:"5"==eventString?5:"6"==eventString?6:"7"==eventString?7:"8"==eventString?8:"9"==eventString?9:"*"==eventString?10:"#"==eventString?11:"A"==eventString?12:"B"==eventString?13:"C"==eventString?14:"D"==eventString?15:","==eventString?99:-1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.fromJson=function(toneJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(toneJson,(function(){return new fm.liveswitch.dtmf.Tone}),(function(tone,key,valueJson){var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"value")?tone.setValue(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"duration")?tone.setDuration(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"end")&&tone.setEnd(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.fromJsonArray=function(tonesJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(tonesJson,fm.liveswitch.dtmf.Tone.fromJson.bind(fm.liveswitch.dtmf.Tone));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.fromToneString=function(){if(1==arguments.length){var toneString=arguments[0];return fm.liveswitch.dtmf.Tone.fromToneString(toneString,100,100)}if(2==arguments.length){toneString=arguments[0];var duration=fm.liveswitch.Global.toInt(arguments[1]);return fm.liveswitch.dtmf.Tone.fromToneString(toneString,duration,100)}if(3==arguments.length){toneString=arguments[0],duration=fm.liveswitch.Global.toInt(arguments[1]);var interToneGap=fm.liveswitch.Global.toInt(arguments[2]);duration=fm.liveswitch.MathAssistant.max(40,fm.liveswitch.MathAssistant.min(2e3,duration)),interToneGap=fm.liveswitch.MathAssistant.max(40,interToneGap);for(var list=new Array,i=0;i<fm.liveswitch.StringExtensions.getLength(toneString);i++){i>0&&fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getEmptyValue(),interToneGap));var str=fm.liveswitch.StringExtensions.substring(toneString,i,1);fm.liveswitch.Global.equals(str,fm.liveswitch.dtmf.Tone.getPauseValue())?fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.dtmf.Tone(str,2e3)):fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.dtmf.Tone(str,duration))}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getA=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getAValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getAValue=function(){if(0==arguments.length)return"A";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getB=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getBValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getBValue=function(){if(0==arguments.length)return"B";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getC=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getCValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getCValue=function(){if(0==arguments.length)return"C";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getD=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getDValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getDValue=function(){if(0==arguments.length)return"D";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getEight=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getEightValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getEightValue=function(){if(0==arguments.length)return"8";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getEmpty=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getEmptyValue(),0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getEmptyValue=function(){if(0==arguments.length)return"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getFive=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getFiveValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getFiveValue=function(){if(0==arguments.length)return"5";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getFour=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getFourValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getFourValue=function(){if(0==arguments.length)return"4";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getHash=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getHashValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getHashValue=function(){if(0==arguments.length)return"#";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getNine=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getNineValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getNineValue=function(){if(0==arguments.length)return"9";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getOne=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getOneValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getOneValue=function(){if(0==arguments.length)return"1";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getPause=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getPauseValue(),2e3);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getPauseDuration=function(){if(0==arguments.length)return 2e3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getPauseValue=function(){if(0==arguments.length)return",";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getSeven=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getSevenValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getSevenValue=function(){if(0==arguments.length)return"7";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getSix=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getSixValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getSixValue=function(){if(0==arguments.length)return"6";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getStar=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getStarValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getStarValue=function(){if(0==arguments.length)return"*";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getThree=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getThreeValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getThreeValue=function(){if(0==arguments.length)return"3";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getTwo=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getTwoValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getTwoValue=function(){if(0==arguments.length)return"2";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getZero=function(){if(0==arguments.length)return new fm.liveswitch.dtmf.Tone(fm.liveswitch.dtmf.Tone.getZeroValue(),100);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.getZeroValue=function(){if(0==arguments.length)return"0";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.toJson=function(tone){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(tone,(function(obj,jsonObj){jsonObj.value=fm.liveswitch.JsonSerializer.serializeString(obj.getValue()),jsonObj.duration=fm.liveswitch.JsonSerializer.serializeInteger(obj.getDuration()),jsonObj.end=fm.liveswitch.JsonSerializer.serializeBoolean(obj.getEnd())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.toJsonArray=function(tones){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(tones,fm.liveswitch.dtmf.Tone.toJson.bind(fm.liveswitch.dtmf.Tone));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.toToneString=function(tones){if(1==arguments.length){for(var builder=new fm.liveswitch.StringBuilder,_i=0,tones_1=tones;_i<tones_1.length;_i++){var tone=tones_1[_i];builder.append(tone.getValue())}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.valueFromEventCode=function(eventCode){if(1==arguments.length){eventCode=fm.liveswitch.Global.toInt(arguments[0]);return 0==eventCode?"0":1==eventCode?"1":2==eventCode?"2":3==eventCode?"3":4==eventCode?"4":5==eventCode?"5":6==eventCode?"6":7==eventCode?"7":8==eventCode?"8":9==eventCode?"9":10==eventCode?"*":11==eventCode?"#":12==eventCode?"A":13==eventCode?"B":14==eventCode?"C":15==eventCode?"D":99==eventCode?",":""}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.prototype.clone=function(){if(0==arguments.length)return this.clone(this.getDuration());if(1==arguments.length){var duration=fm.liveswitch.Global.toInt(arguments[0]);return new fm.liveswitch.dtmf.Tone(this.getValue(),duration)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.prototype.getDuration=function(){if(0==arguments.length)return this._duration;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.prototype.getEnd=function(){if(0==arguments.length)return this._end;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.prototype.getSentDuration=function(){if(0==arguments.length)return this._sentDuration;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.prototype.setDuration=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._duration=fm.liveswitch.Global.toInt(value)},Tone.prototype.setEnd=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._end=value},Tone.prototype.setSentDuration=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sentDuration=fm.liveswitch.Global.toInt(value)},Tone.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},Tone.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.dtmf.Tone.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getValue(),fm.liveswitch.dtmf.Tone.getEmptyValue())?fm.liveswitch.StringExtensions.format("[empty] ({0}ms)",fm.liveswitch.NumberExtensions.toString(this.getDuration())):fm.liveswitch.Global.equals(this.getValue(),fm.liveswitch.dtmf.Tone.getPauseValue())?fm.liveswitch.StringExtensions.format("[pause] ({0}ms)",fm.liveswitch.NumberExtensions.toString(this.getDuration())):this.getEnd()?fm.liveswitch.StringExtensions.format("{0} ({1}ms) [end]",this.getValue(),fm.liveswitch.NumberExtensions.toString(this.getDuration())):fm.liveswitch.StringExtensions.format("{0} ({1}ms)",this.getValue(),fm.liveswitch.NumberExtensions.toString(this.getDuration()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Tone}();dtmf.Tone=Tone}(liveswitch.dtmf||(liveswitch.dtmf={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginAudioStream=function(_super){function PluginAudioStream(external,localTrack,remoteTrack){var _this=_super.call(this,localTrack,remoteTrack)||this;return _this._onDirectionChangeValues=[],_this._onStateChangeValues=[],_this._onReceiveDtmfToneValues=[],_this._onReceiveDtmfToneChangeValues=[],_this._onSendDtmfToneValues=[],_this._onSendDtmfToneChangeValues=[],_this._onLocalEncodingDisabledValues=[],_this._onLocalEncodingEnabledValues=[],_this._onDiscardBitrateRequestValues=[],_this._onDiscardBitrateNotificationValues=[],_this._state=fm.liveswitch.StreamState.New,_this._external=external,_this._axo=new ActiveXObject("fm.liveswitch.AudioStream"),_this._axo.Initialize(null==_this.getLocalTrack()?0:_this.getLocalTrack().getMedia().getHandle(),null==remoteTrack?0:remoteTrack.getMedia().getHandle()),_this._axo.SetOnDirectionChange((function(){setTimeout((function(){for(var _i=0,_a=_this._onDirectionChangeValues;_i<_a.length;_i++){(0,_a[_i])()}}),1)})),_this._axo.SetOnStateChange((function(state){_this._state=state,setTimeout((function(){for(var _i=0,_a=_this._onStateChangeValues;_i<_a.length;_i++){(0,_a[_i])()}}),1)})),_this._axo.SetOnReceiveDtmfTone((function(toneJson){setTimeout((function(){for(var _i=0,_a=_this._onReceiveDtmfToneValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.dtmf.Tone.fromJson(toneJson))}}),1)})),_this._axo.SetOnReceiveDtmfToneChange((function(toneJson){setTimeout((function(){for(var _i=0,_a=_this._onReceiveDtmfToneChangeValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.dtmf.Tone.fromJson(toneJson))}}),1)})),_this._axo.SetOnSendDtmfTone((function(toneJson){setTimeout((function(){for(var _i=0,_a=_this._onSendDtmfToneValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.dtmf.Tone.fromJson(toneJson))}}),1)})),_this._axo.SetOnSendDtmfToneChange((function(toneJson){setTimeout((function(){for(var _i=0,_a=_this._onSendDtmfToneChangeValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.dtmf.Tone.fromJson(toneJson))}}),1)})),_this._axo.SetOnLocalEncodingDisabled((function(encodingJson){setTimeout((function(){for(var _i=0,_a=_this._onLocalEncodingDisabledValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.EncodingInfo.fromJson(encodingJson))}}),1)})),_this._axo.SetOnLocalEncodingEnabled((function(encodingJson){setTimeout((function(){for(var _i=0,_a=_this._onLocalEncodingEnabledValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.EncodingInfo.fromJson(encodingJson))}}),1)})),_this._axo.SetOnDiscardBitrateRequest((function(bitrateRequestJson){setTimeout((function(){for(var _i=0,_a=_this._onDiscardBitrateRequestValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.BitrateRequest.fromJson(bitrateRequestJson))}}),1)})),_this._axo.SetOnDiscardBitrateNotification((function(bitrateNotificationJson){setTimeout((function(){for(var _i=0,_a=_this._onDiscardBitrateNotificationValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.BitrateNotification.fromJson(bitrateNotificationJson))}}),1)})),_this}return __extends(PluginAudioStream,_super),PluginAudioStream.prototype.getTypeString=function(){return"[fm.liveswitch.PluginAudioStream],"+_super.prototype.getTypeString.call(this)},PluginAudioStream.prototype._getExternal=function(){return this._external},PluginAudioStream.prototype._getAxo=function(){return this._axo},PluginAudioStream.prototype.getState=function(){return this._state},PluginAudioStream.prototype.addOnStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onStateChangeValues,value)},PluginAudioStream.prototype.removeOnStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStateChangeValues,value)},PluginAudioStream.prototype.getInfo=function(){return fm.liveswitch.MediaStreamInfo.fromJson(this._getAxo().GetInfo())},PluginAudioStream.prototype.getLocalReceive=function(){return this._getAxo().GetLocalReceive()},PluginAudioStream.prototype.getLocalSend=function(){return this._getAxo().GetLocalSend()},PluginAudioStream.prototype.getRemoteReceive=function(){return this._getAxo().GetRemoteReceive()},PluginAudioStream.prototype.getRemoteSend=function(){return this._getAxo().GetRemoteSend()},PluginAudioStream.prototype.setLocalReceive=function(value){return this._getAxo().SetLocalReceive(value)},PluginAudioStream.prototype.setLocalSend=function(value){return this._getAxo().SetLocalSend(value)},PluginAudioStream.prototype.getRemoteDirection=function(){return this._getAxo().GetRemoteDirection()},PluginAudioStream.prototype.getHandle=function(){return this._getAxo().GetHandle()},PluginAudioStream.prototype.changeDirection=function(newDirection){return fm.liveswitch.Error.fromJson(this._getAxo().ChangeDirection(newDirection))},PluginAudioStream.prototype.getDirection=function(){return this._getAxo().GetDirection()},PluginAudioStream.prototype.getId=function(){return this._getAxo().GetId()},PluginAudioStream.prototype.getExternalId=function(){return this._getAxo().GetExternalId()},PluginAudioStream.prototype.setExternalId=function(value){this._getAxo().SetExternalId(value)},PluginAudioStream.prototype.getLabel=function(){return this._getAxo().GetLabel()},PluginAudioStream.prototype.getLocalBandwidth=function(){return this._getAxo().GetLocalBandwidth()},PluginAudioStream.prototype.getLocalDirection=function(){return this._getAxo().GetLocalDirection()},PluginAudioStream.prototype.getLocalMuted=function(){return this.getInputMuted()},PluginAudioStream.prototype.setLocalMuted=function(value){return this.setInputMuted(value)},PluginAudioStream.prototype.getRemoteMuted=function(){return this._getAxo().GetRemoteMuted()},PluginAudioStream.prototype.setRemoteMuted=function(value){return this._getAxo().SetRemoteMuted(value)},PluginAudioStream.prototype.getInputMuted=function(){return this._getAxo().GetInputMuted()},PluginAudioStream.prototype.getLocalCanonicalName=function(){return this._getAxo().GetLocalCanonicalName()},PluginAudioStream.prototype.getOutputMuted=function(){return this._getAxo().GetOutputMuted()},PluginAudioStream.prototype.getMediaDescriptionId=function(){return this._getAxo().GetMediaDescriptionId()},PluginAudioStream.prototype.getRemoteCanonicalName=function(){return this._getAxo().GetRemoteCanonicalName()},PluginAudioStream.prototype.getRemoteBandwidth=function(){return this._getAxo().GetRemoteBandwidth()},PluginAudioStream.prototype.getTag=function(){return this._getAxo().GetTag()},PluginAudioStream.prototype.getType=function(){return fm.liveswitch.StreamType.Audio},PluginAudioStream.prototype.setLocalDirection=function(value){this._getAxo().SetLocalDirection(value)},PluginAudioStream.prototype.setLocalBandwidth=function(value){this._getAxo().SetLocalBandwidth(value)},PluginAudioStream.prototype.setInputMuted=function(value){this._getAxo().SetInputMuted(value)},PluginAudioStream.prototype.setOutputMuted=function(value){this._getAxo().SetOutputMuted(value)},PluginAudioStream.prototype.setTag=function(value){this._getAxo().SetTag(value)},PluginAudioStream.prototype.addOnDirectionChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onDirectionChangeValues,value)},PluginAudioStream.prototype.removeOnDirectionChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDirectionChangeValues,value)},PluginAudioStream.prototype.addOnReceiveDtmfTone=function(value){fm.liveswitch.ArrayExtensions.add(this._onReceiveDtmfToneValues,value)},PluginAudioStream.prototype.addOnReceiveDtmfToneChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onReceiveDtmfToneChangeValues,value)},PluginAudioStream.prototype.addOnSendDtmfTone=function(value){fm.liveswitch.ArrayExtensions.add(this._onSendDtmfToneValues,value)},PluginAudioStream.prototype.addOnSendDtmfToneChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onSendDtmfToneChangeValues,value)},PluginAudioStream.prototype.insertDtmfTone=function(dtmfTone){return this._getAxo().InsertDtmfTone(fm.liveswitch.dtmf.Tone.toJson(dtmfTone))},PluginAudioStream.prototype.insertDtmfTones=function(dtmfTones){return this._getAxo().InsertDtmfTones(fm.liveswitch.dtmf.Tone.toJsonArray(dtmfTones))},PluginAudioStream.prototype.removeOnReceiveDtmfTone=function(value){fm.liveswitch.ArrayExtensions.remove(this._onReceiveDtmfToneValues,value)},PluginAudioStream.prototype.removeOnReceiveDtmfToneChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onReceiveDtmfToneChangeValues,value)},PluginAudioStream.prototype.removeOnSendDtmfTone=function(value){fm.liveswitch.ArrayExtensions.remove(this._onSendDtmfToneValues,value)},PluginAudioStream.prototype.removeOnSendDtmfToneChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onSendDtmfToneChangeValues,value)},PluginAudioStream.prototype.getPreferredCodecs=function(){return this._getAxo().GetPreferredCodecs()},PluginAudioStream.prototype.setPreferredCodecs=function(names){this._getAxo().SetPreferredCodecs(names)},PluginAudioStream.prototype.getCodecDisabled=function(name){return this._getAxo().GetCodecDisabled(name)},PluginAudioStream.prototype.setCodecDisabled=function(name,disabled){this._getAxo().SetCodecDisabled(name,disabled)},PluginAudioStream.prototype.getOpusDisabled=function(){return this._getAxo().GetOpusDisabled()},PluginAudioStream.prototype.getG722Disabled=function(){return this._getAxo().GetG722Disabled()},PluginAudioStream.prototype.getPcmuDisabled=function(){return this._getAxo().GetPcmuDisabled()},PluginAudioStream.prototype.getPcmaDisabled=function(){return this._getAxo().GetPcmaDisabled()},PluginAudioStream.prototype.setOpusDisabled=function(value){return this._getAxo().SetOpusDisabled(value)},PluginAudioStream.prototype.setG722Disabled=function(value){return this._getAxo().SetG722Disabled(value)},PluginAudioStream.prototype.setPcmuDisabled=function(value){return this._getAxo().SetPcmuDisabled(value)},PluginAudioStream.prototype.setPcmaDisabled=function(value){return this._getAxo().SetPcmaDisabled(value)},PluginAudioStream.prototype.getRemoteEncoding=function(){return fm.liveswitch.EncodingInfo.fromJson(this._getAxo().GetRemoteEncoding())},PluginAudioStream.prototype.setRemoteEncoding=function(value){this._getAxo().SetRemoteEncoding(fm.liveswitch.EncodingInfo.toJson(value))},PluginAudioStream.prototype.getSimulcastMode=function(){return this._getAxo().GetSimulcastMode()},PluginAudioStream.prototype.setSimulcastMode=function(value){this._getAxo().SetSimulcastMode(value)},PluginAudioStream.prototype.getTransportInfo=function(){return fm.liveswitch.TransportInfo.fromJson(this._getAxo().GetTransportInfo())},PluginAudioStream.prototype.getControlTransportInfo=function(){return fm.liveswitch.TransportInfo.fromJson(this._getAxo().GetControlTransportInfo())},PluginAudioStream.prototype.addOnLocalEncodingDisabled=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalEncodingDisabledValues,value)},PluginAudioStream.prototype.addOnLocalEncodingEnabled=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalEncodingEnabledValues,value)},PluginAudioStream.prototype.removeOnLocalEncodingDisabled=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalEncodingDisabledValues,value)},PluginAudioStream.prototype.removeOnLocalEncodingEnabled=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalEncodingEnabledValues,value)},PluginAudioStream.prototype.addOnDiscardBitrateRequest=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardBitrateRequestValues,value)},PluginAudioStream.prototype.removeOnDiscardBitrateRequest=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardBitrateRequestValues,value)},PluginAudioStream.prototype.raiseBitrateRequest=function(bitrateRequest){return this._axo.RaiseBitrateRequest(fm.liveswitch.BitrateRequest.toJson(bitrateRequest))},PluginAudioStream.prototype.addOnDiscardBitrateNotification=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardBitrateNotificationValues,value)},PluginAudioStream.prototype.removeOnDiscardBitrateNotification=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardBitrateNotificationValues,value)},PluginAudioStream.prototype.raiseBitrateNotification=function(bitrateNotification){return this._axo.RaiseBitrateNotification(fm.liveswitch.BitrateNotification.toJson(bitrateNotification))},PluginAudioStream.prototype.getMaxSendBitrate=function(){return this._getAxo().GetMaxSendBitrate()},PluginAudioStream.prototype.setMaxSendBitrate=function(value){this._getAxo().SetMaxSendBitrate(value)},PluginAudioStream.prototype.getMaxReceiveBitrate=function(){return this._getAxo().GetMaxReceiveBitrate()},PluginAudioStream.prototype.setMaxReceiveBitrate=function(value){this._getAxo().SetMaxReceiveBitrate(value)},PluginAudioStream}(fm.liveswitch.PluginMediaStream);liveswitch.PluginAudioStream=PluginAudioStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginMediaTrack=function(_super){function PluginMediaTrack(media){var _this=_super.call(this)||this;return _this._media=media,_this}return __extends(PluginMediaTrack,_super),PluginMediaTrack.prototype.getTypeString=function(){return"[fm.liveswitch.PluginMediaTrack],"+_super.prototype.getTypeString.call(this)},PluginMediaTrack.prototype.getMedia=function(){return this._media},PluginMediaTrack.prototype.destroy=function(){return!0},PluginMediaTrack}(fm.liveswitch.Dynamic);liveswitch.PluginMediaTrack=PluginMediaTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginAudioTrack=function(_super){function PluginAudioTrack(external,media){var _this=_super.call(this,media)||this;return _this._external=external,_this}return __extends(PluginAudioTrack,_super),PluginAudioTrack.prototype.getTypeString=function(){return"[fm.liveswitch.PluginAudioTrack],"+_super.prototype.getTypeString.call(this)},PluginAudioTrack.prototype._getExternal=function(){return this._external},PluginAudioTrack.prototype.isLocal=function(){return fm.liveswitch.Util.isObjectType(this.getMedia(),"[fm.liveswitch.PluginLocalMedia]")},PluginAudioTrack.prototype.addOnStarted=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.addOnStarted on a remote track.");this.getMedia().addOnAudioStarted(value)},PluginAudioTrack.prototype.addOnStopped=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.addOnStopped on a remote track.");this.getMedia().addOnAudioStopped(value)},PluginAudioTrack.prototype.addOnDestroyed=function(value){this.getMedia().addOnAudioDestroyed(value)},PluginAudioTrack.prototype.removeOnStarted=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.removeOnStarted on a remote track.");this.getMedia().removeOnAudioStarted(value)},PluginAudioTrack.prototype.removeOnStopped=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.removeOnStopped on a remote track.");this.getMedia().removeOnAudioStopped(value)},PluginAudioTrack.prototype.removeOnDestroyed=function(value){this.getMedia().removeOnAudioDestroyed(value)},PluginAudioTrack.prototype.changeSinkOutput=function(sinkOutput){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.changeSinkOutput on a local track.");return this.getMedia().changeAudioSinkOutput(sinkOutput)},PluginAudioTrack.prototype.getSinkOutput=function(){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.getSinkOutput on a local track.");return this.getMedia().getAudioSinkOutput()},PluginAudioTrack.prototype.getSinkOutputs=function(){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.getSinkOutputs on a local track.");return this.getMedia().getAudioSinkOutputs()},PluginAudioTrack.prototype.setSinkOutput=function(value){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.setSinkOutput on a local track.");this.getMedia().setAudioSinkOutput(value)},PluginAudioTrack.prototype.changeSourceInput=function(sourceInput){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.changeSourceInput on a remote track.");return this.getMedia().changeAudioSourceInput(sourceInput)},PluginAudioTrack.prototype.getSourceInput=function(){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.getSourceInput on a remote track.");return this.getMedia().getAudioSourceInput()},PluginAudioTrack.prototype.getSourceInputs=function(){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.getSourceInputs on a remote track.");return this.getMedia().getAudioSourceInputs()},PluginAudioTrack.prototype.setSourceInput=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.setSourceInput on a remote track.");this.getMedia().setAudioSourceInput(value)},PluginAudioTrack.prototype.addOnLevel=function(value){this.getMedia().addOnAudioLevel(value)},PluginAudioTrack.prototype.getGain=function(){return this.getMedia().getAudioGain()},PluginAudioTrack.prototype.getMuted=function(){return this.getMedia().getAudioMuted()},PluginAudioTrack.prototype.getVolume=function(){return this.getMedia().getAudioVolume()},PluginAudioTrack.prototype.removeOnLevel=function(value){this.getMedia().removeOnAudioLevel(value)},PluginAudioTrack.prototype.setGain=function(value){this.getMedia().setAudioGain(value)},PluginAudioTrack.prototype.setMuted=function(value){this.getMedia().setAudioMuted(value)},PluginAudioTrack.prototype.setVolume=function(value){this.getMedia().setAudioVolume(value)},PluginAudioTrack}(fm.liveswitch.PluginMediaTrack);liveswitch.PluginAudioTrack=PluginAudioTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginConfig=function(){function PluginConfig(){this._activeXTimeout=3e4,this._preferActiveX=!1}return PluginConfig.prototype.getActiveXPath=function(){return this._activeXPath},PluginConfig.prototype.setActiveXPath=function(activeXPath){this._activeXPath=activeXPath},PluginConfig.prototype.getActiveXTimeout=function(){return this._activeXTimeout},PluginConfig.prototype.setActiveXTimeout=function(activeXTimeout){this._activeXTimeout=activeXTimeout},PluginConfig.prototype.getPreferActiveX=function(){return this._preferActiveX},PluginConfig.prototype.setPreferActiveX=function(preferActiveX){this._preferActiveX=preferActiveX},PluginConfig}();liveswitch.PluginConfig=PluginConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginConnection=function(_super){function PluginConnection(external,streams){var _this=_super.call(this)||this;return _this._onLocalCandidateValues=[],_this._onLocalDescriptionValues=[],_this._onRemoteCandidateValues=[],_this._onRemoteDescriptionValues=[],_this._onSignallingStateChangeValues=[],_this._onIceConnectionStateChangeValues=[],_this._onStateChangeValues=[],_this._onGatheringStateChangeValues=[],_this._onExternalIdChangeValues=[],_this._gatheringState=fm.liveswitch.IceGatheringState.New,_this._iceConnectionState=fm.liveswitch.IceConnectionState.New,_this._signallingState=fm.liveswitch.SignallingState.New,_this._state=fm.liveswitch.ConnectionState.New,_this._external=external,_this._streams=streams,_this._axo=new ActiveXObject("fm.liveswitch.Connection"),_this._axo.Initialize(fm.liveswitch.ArrayExtensions.map(_this._streams,(function(stream){return stream.getHandle()}))),_this._axo.SetOnLocalCandidate((function(candidate){setTimeout((function(){var localCandidate=fm.liveswitch.Candidate.fromJson(candidate);fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local candidate for stream {0}:\r\n{1}",fm.liveswitch.NumberExtensions.toString(localCandidate.getSdpMediaIndex()),localCandidate.getSdpCandidateAttribute().toString()));for(var _i=0,_a=_this._onLocalCandidateValues;_i<_a.length;_i++){(0,_a[_i])(_this,localCandidate)}}),1)})),_this._axo.SetOnIceConnectionStateChange((function(iceConnectionState){_this._iceConnectionState=iceConnectionState,setTimeout((function(){for(var _i=0,_a=_this._onIceConnectionStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}}),1)})),_this._axo.SetOnGatheringStateChange((function(gatheringState){_this._gatheringState=gatheringState,setTimeout((function(){for(var _i=0,_a=_this._onGatheringStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}}),1)})),_this._axo.SetOnLocalDescription((function(sessionDescription){setTimeout((function(){var localDescription=fm.liveswitch.SessionDescription.fromJson(sessionDescription);fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local session description ({0}):\r\n{1}",fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.SessionDescriptionTypeWrapper(localDescription.getType()).toString()),localDescription.getSdpMessage().toString()));for(var _i=0,_a=_this._onLocalDescriptionValues;_i<_a.length;_i++){(0,_a[_i])(_this,localDescription)}}),1)})),_this._axo.SetOnRemoteCandidate((function(candidate){setTimeout((function(){var remoteCandidate=fm.liveswitch.Candidate.fromJson(candidate);fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Remote candidate for stream {0}:\r\n{1}",fm.liveswitch.NumberExtensions.toString(remoteCandidate.getSdpMediaIndex()),remoteCandidate.getSdpCandidateAttribute().toString()));for(var _i=0,_a=_this._onRemoteCandidateValues;_i<_a.length;_i++){(0,_a[_i])(_this,remoteCandidate)}}),1)})),_this._axo.SetOnRemoteDescription((function(sessionDescription){setTimeout((function(){var remoteDescription=fm.liveswitch.SessionDescription.fromJson(sessionDescription);fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Remote session description ({0}):\r\n{1}",fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.SessionDescriptionTypeWrapper(remoteDescription.getType()).toString()),remoteDescription.getSdpMessage().toString()));for(var _i=0,_a=_this._onRemoteDescriptionValues;_i<_a.length;_i++){(0,_a[_i])(_this,remoteDescription)}}),1)})),_this._axo.SetOnSignallingStateChange((function(signallingState){_this._signallingState=signallingState,setTimeout((function(){for(var _i=0,_a=_this._onSignallingStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}}),1)})),_this._axo.SetOnStateChange((function(state){_this._state=state,setTimeout((function(){for(var _i=0,_a=_this._onStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}}),1)})),_this._axo.SetOnExternalIdChange((function(id1,id2){setTimeout((function(){for(var _i=0,_a=_this._onExternalIdChangeValues;_i<_a.length;_i++){(0,_a[_i])(id1,id2)}}),1)})),_this}return __extends(PluginConnection,_super),PluginConnection.prototype.getTypeString=function(){return"[fm.liveswitch.PluginConnection],"+_super.prototype.getTypeString.call(this)},PluginConnection.prototype._getExternal=function(){return this._external},PluginConnection.prototype._getAxo=function(){return this._axo},PluginConnection.prototype.addIceServer=function(iceServer){this._getAxo().AddIceServer(fm.liveswitch.IceServer.toJson(iceServer))},PluginConnection.prototype.addIceServers=function(iceServers){this._getAxo().AddIceServers(fm.liveswitch.IceServer.toJsonArray(iceServers))},PluginConnection.prototype.addOnLocalCandidate=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalCandidateValues,value)},PluginConnection.prototype.addOnExternalIdChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onExternalIdChangeValues,value)},PluginConnection.prototype.addOnIceConnectionStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onIceConnectionStateChangeValues,value)},PluginConnection.prototype.addOnGatheringStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onGatheringStateChangeValues,value)},PluginConnection.prototype.addOnLocalDescription=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalDescriptionValues,value)},PluginConnection.prototype.addOnRemoteCandidate=function(value){fm.liveswitch.ArrayExtensions.add(this._onRemoteCandidateValues,value)},PluginConnection.prototype.addOnRemoteDescription=function(value){fm.liveswitch.ArrayExtensions.add(this._onRemoteDescriptionValues,value)},PluginConnection.prototype.addOnSignallingStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onSignallingStateChangeValues,value)},PluginConnection.prototype.addOnStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onStateChangeValues,value)},PluginConnection.prototype.addRemoteCandidate=function(remoteCandidate){var promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return innerPromise.then((function(remoteCandidateJson){promise.resolve(fm.liveswitch.Candidate.fromJson(remoteCandidateJson))}),(function(error){promise.reject(new fm.liveswitch.Exception(error))})),this._getAxo().AddRemoteCandidate(fm.liveswitch.Candidate.toJson(remoteCandidate),innerPromise),promise},PluginConnection.prototype.close=function(){return this._getAxo().Close()},PluginConnection.prototype.createAnswer=function(){var promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return innerPromise.then((function(answerJson){promise.resolve(fm.liveswitch.SessionDescription.fromJson(answerJson))}),(function(error){promise.reject(new fm.liveswitch.Exception(error))})),this._getAxo().CreateAnswer(innerPromise),promise},PluginConnection.prototype.createOffer=function(){var promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return innerPromise.then((function(offerJson){promise.resolve(fm.liveswitch.SessionDescription.fromJson(offerJson))}),(function(error){promise.reject(new fm.liveswitch.Exception(error))})),this._getAxo().CreateOffer(innerPromise),promise},PluginConnection.prototype.getHasAudio=function(){return null!=this.getAudioStream()},PluginConnection.prototype.getHasVideo=function(){return null!=this.getVideoStream()},PluginConnection.prototype.getHasData=function(){return null!=this.getDataStream()},PluginConnection.prototype.getAudioStream=function(){return fm.liveswitch.Utility.firstOrDefault(this.getAudioStreams())},PluginConnection.prototype.getAudioStreams=function(){for(var streams=[],_i=0,_a=this._streams;_i<_a.length;_i++){var stream=_a[_i];stream.getType()==fm.liveswitch.StreamType.Audio&&streams.push(stream)}return streams},PluginConnection.prototype.getVideoStream=function(){return fm.liveswitch.Utility.firstOrDefault(this.getVideoStreams())},PluginConnection.prototype.getVideoStreams=function(){for(var streams=[],_i=0,_a=this._streams;_i<_a.length;_i++){var stream=_a[_i];stream.getType()==fm.liveswitch.StreamType.Video&&streams.push(stream)}return streams},PluginConnection.prototype.getDataStream=function(){return fm.liveswitch.Utility.firstOrDefault(this.getDataStreams())},PluginConnection.prototype.getDataStreams=function(){for(var streams=[],_i=0,_a=this._streams;_i<_a.length;_i++){var stream=_a[_i];stream.getType()==fm.liveswitch.StreamType.Application&&streams.push(stream)}return streams},PluginConnection.prototype.getDeadStreamTimeout=function(){return this._getAxo().GetDeadStreamTimeout()},PluginConnection.prototype.getExternalId=function(){return this._getAxo().GetExternalId()},PluginConnection.prototype.getError=function(){return fm.liveswitch.Error.fromJson(this._getAxo().GetError())},PluginConnection.prototype.getIceGatherPolicy=function(){return this._getAxo().GetIceGatherPolicy()},PluginConnection.prototype.getBundlePolicy=function(){return this._getAxo().GetBundlePolicy()},PluginConnection.prototype.getIceServer=function(){return fm.liveswitch.IceServer.fromJson(this._getAxo().GetIceServer())},PluginConnection.prototype.getIceServers=function(){return fm.liveswitch.IceServer.fromJsonArray(this._getAxo().GetIceServers())},PluginConnection.prototype.getId=function(){return this._getAxo().GetId()},PluginConnection.prototype.getCanonicalName=function(){return this._getAxo().GetCanonicalName()},PluginConnection.prototype.getLocalDescription=function(){return fm.liveswitch.SessionDescription.fromJson(this._getAxo().GetLocalDescription())},PluginConnection.prototype.getRemoteDescription=function(){return fm.liveswitch.SessionDescription.fromJson(this._getAxo().GetRemoteDescription())},PluginConnection.prototype.getSignallingState=function(){return this._signallingState},PluginConnection.prototype.getState=function(){return this._state},PluginConnection.prototype.getStats=function(){var promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return innerPromise.then((function(statsJson){promise.resolve(fm.liveswitch.ConnectionStats.fromJson(statsJson))}),(function(error){promise.reject(new fm.liveswitch.Exception(error))})),this._getAxo().GetStats(innerPromise),promise},PluginConnection.prototype.getStreams=function(){return this._streams},PluginConnection.prototype.getTieBreaker=function(){return this._getAxo().GetTieBreaker()},PluginConnection.prototype.getTimeout=function(){return this._getAxo().GetTimeout()},PluginConnection.prototype.getLegacyTimeout=function(){return this._getAxo().GetLegacyTimeout()},PluginConnection.prototype.getTrickleIcePolicy=function(){return this._getAxo().GetTrickleIcePolicy()},PluginConnection.prototype.getIceConnectionState=function(){return this._iceConnectionState},PluginConnection.prototype.getGatheringState=function(){return this._gatheringState},PluginConnection.prototype.removeIceServer=function(iceServer){this._getAxo().RemoveIceServer(fm.liveswitch.IceServer.toJson(iceServer))},PluginConnection.prototype.removeIceServers=function(iceServers){this._getAxo().RemoveIceServers(fm.liveswitch.IceServer.toJsonArray(iceServers))},PluginConnection.prototype.removeOnLocalCandidate=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalCandidateValues,value)},PluginConnection.prototype.removeOnIceConnectionStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onIceConnectionStateChangeValues,value)},PluginConnection.prototype.removeOnExternalIdChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onExternalIdChangeValues,value)},PluginConnection.prototype.removeOnGatheringStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onGatheringStateChangeValues,value)},PluginConnection.prototype.removeOnLocalDescription=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalDescriptionValues,value)},PluginConnection.prototype.removeOnRemoteCandidate=function(value){fm.liveswitch.ArrayExtensions.remove(this._onRemoteCandidateValues,value)},PluginConnection.prototype.removeOnRemoteDescription=function(value){fm.liveswitch.ArrayExtensions.remove(this._onRemoteDescriptionValues,value)},PluginConnection.prototype.removeOnSignallingStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onSignallingStateChangeValues,value)},PluginConnection.prototype.removeOnStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStateChangeValues,value)},PluginConnection.prototype.setDeadStreamTimeout=function(value){this._getAxo().SetDeadStreamTimeout(value)},PluginConnection.prototype.setExternalId=function(value){this._getAxo().SetExternalId(value)},PluginConnection.prototype.setError=function(value){this._getAxo().SetError(fm.liveswitch.Error.toJson(value))},PluginConnection.prototype.setIceGatherPolicy=function(value){this._getAxo().SetIceGatherPolicy(value)},PluginConnection.prototype.setBundlePolicy=function(value){this._getAxo().SetBundlePolicy(value)},PluginConnection.prototype.setIceServer=function(value){this._getAxo().SetIceServer(fm.liveswitch.IceServer.toJson(value))},PluginConnection.prototype.setIceServers=function(value){this._getAxo().SetIceServers(fm.liveswitch.IceServer.toJsonArray(value))},PluginConnection.prototype.setLegacyTimeout=function(value){this._getAxo().SetLegacyTimeout(value)},PluginConnection.prototype.setTieBreaker=function(value){this._getAxo().SetTieBreaker(value)},PluginConnection.prototype.setLocalDescription=function(localDescription){var promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return innerPromise.then((function(localDescriptionJson){promise.resolve(fm.liveswitch.SessionDescription.fromJson(localDescriptionJson))}),(function(error){promise.reject(new fm.liveswitch.Exception(error))})),this._getAxo().SetLocalDescription(fm.liveswitch.SessionDescription.toJson(localDescription),innerPromise),promise},PluginConnection.prototype.setRemoteDescription=function(remoteDescription){var promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return innerPromise.then((function(remoteDescriptionJson){promise.resolve(fm.liveswitch.SessionDescription.fromJson(remoteDescriptionJson))}),(function(error){promise.reject(new fm.liveswitch.Exception(error))})),this._getAxo().SetRemoteDescription(fm.liveswitch.SessionDescription.toJson(remoteDescription),innerPromise),promise},PluginConnection.prototype.setTimeout=function(value){this._getAxo().SetTimeout(value)},PluginConnection.prototype.setTrickleIcePolicy=function(value){this._getAxo().SetTrickleIcePolicy(value)},PluginConnection}(fm.liveswitch.Dynamic);liveswitch.PluginConnection=PluginConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginDataChannel=function(_super){function PluginDataChannel(external,label,ordered,subprotocol){var _this=_super.call(this)||this;return _this._onStateChangeValues=[],_this._onReceive=null,_this._state=fm.liveswitch.DataChannelState.New,_this._getRemoteConnectionInfo=null,_this._external=external,_this._axo=new ActiveXObject("fm.liveswitch.DataChannel"),_this._axo.Initialize(label,ordered,subprotocol),_this._axo.SetOnStateChange((function(state){_this._state=state,setTimeout((function(){for(var _i=0,_a=_this._onStateChangeValues;_i<_a.length;_i++){(0,_a[_i])(_this)}}),1)})),_this._axo.SetOnReceive((function(data,connectionId,isByte){setTimeout((function(){var e=new fm.liveswitch.DataChannelReceiveArgs;isByte?e.setDataBytes(fm.liveswitch.DataBuffer.wrap(fm.liveswitch.Base64.decode(data))):e.setDataString(data),null!=connectionId&&null!=_this._getRemoteConnectionInfo&&e.setRemoteConnectionInfo(_this._getRemoteConnectionInfo(connectionId)),_this._onReceive&&_this._onReceive(e)}),1)})),_this}return __extends(PluginDataChannel,_super),PluginDataChannel.prototype.getTypeString=function(){return"[fm.liveswitch.PluginDataChannel],"+_super.prototype.getTypeString.call(this)},PluginDataChannel.prototype._getExternal=function(){return this._external},PluginDataChannel.prototype._getAxo=function(){return this._axo},PluginDataChannel.prototype.getHandle=function(){return this._axo.GetHandle()},PluginDataChannel.prototype.setGetRemoteConnectionInfo=function(value){this._getRemoteConnectionInfo=value},PluginDataChannel.prototype.getInfo=function(){return fm.liveswitch.DataChannelInfo.fromJson(this._getAxo().GetInfo())},PluginDataChannel.prototype.addOnStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onStateChangeValues,value)},PluginDataChannel.prototype.getLabel=function(){return this._getAxo().GetLabel()},PluginDataChannel.prototype.getOnReceive=function(){return this._onReceive},PluginDataChannel.prototype.getOrdered=function(){return this._getAxo().GetOrdered()},PluginDataChannel.prototype.getId=function(){return this._getAxo().GetId()},PluginDataChannel.prototype.getState=function(){return this._state},PluginDataChannel.prototype.getSubprotocol=function(){return this._getAxo().GetSubprotocol()},PluginDataChannel.prototype.removeOnStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStateChangeValues,value)},PluginDataChannel.prototype.sendDataBytes=function(dataBytes){var promise=new fm.liveswitch.Promise,strDataBytes=fm.liveswitch.Base64.encodeBuffer(dataBytes);return this._getAxo().PrepareAndSendBytes(strDataBytes,promise),promise},PluginDataChannel.prototype.sendDataString=function(dataString){var promise=new fm.liveswitch.Promise;return this._getAxo().PrepareAndSendString(dataString,promise),promise},PluginDataChannel.prototype.setOnReceive=function(value){this._onReceive=value},PluginDataChannel}(fm.liveswitch.Dynamic);liveswitch.PluginDataChannel=PluginDataChannel}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginDataStream=function(_super){function PluginDataStream(external,channels){var _this=_super.call(this)||this;return _this._onDirectionChangeValues=[],_this._onStateChangeValues=[],_this._state=fm.liveswitch.StreamState.New,_this._external=external,_this._channels=channels,_this._axo=new ActiveXObject("fm.liveswitch.DataStream"),_this._axo.Initialize(fm.liveswitch.ArrayExtensions.map(channels,(function(channel){return channel.getHandle()}))),_this._axo.SetOnDirectionChange((function(){setTimeout((function(){for(var _i=0,_a=_this._onDirectionChangeValues;_i<_a.length;_i++){(0,_a[_i])()}}),1)})),_this._axo.SetOnStateChange((function(state){_this._state=state,setTimeout((function(){for(var _i=0,_a=_this._onStateChangeValues;_i<_a.length;_i++){(0,_a[_i])()}}),1)})),_this}return __extends(PluginDataStream,_super),PluginDataStream.prototype.getTypeString=function(){return"[fm.liveswitch.PluginDataStream],"+_super.prototype.getTypeString.call(this)},PluginDataStream.prototype._getExternal=function(){return this._external},PluginDataStream.prototype._getAxo=function(){return this._axo},PluginDataStream.prototype.getState=function(){return this._state},PluginDataStream.prototype.addOnStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onStateChangeValues,value)},PluginDataStream.prototype.removeOnStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStateChangeValues,value)},PluginDataStream.prototype.getInfo=function(){return fm.liveswitch.DataStreamInfo.fromJson(this._getAxo().GetInfo())},PluginDataStream.prototype.getLocalReceive=function(){return this._getAxo().GetLocalReceive()},PluginDataStream.prototype.getLocalSend=function(){return this._getAxo().GetLocalSend()},PluginDataStream.prototype.getRemoteReceive=function(){return this._getAxo().GetRemoteReceive()},PluginDataStream.prototype.getRemoteSend=function(){return this._getAxo().GetRemoteSend()},PluginDataStream.prototype.setLocalReceive=function(value){return this._getAxo().SetLocalReceive(value)},PluginDataStream.prototype.setLocalSend=function(value){return this._getAxo().SetLocalSend(value)},PluginDataStream.prototype.getRemoteDirection=function(){return this._getAxo().GetRemoteDirection()},PluginDataStream.prototype.getHandle=function(){return this._getAxo().GetHandle()},PluginDataStream.prototype.changeDirection=function(newDirection){return fm.liveswitch.Error.fromJson(this._getAxo().ChangeDirection(newDirection))},PluginDataStream.prototype.getDirection=function(){return this._getAxo().GetDirection()},PluginDataStream.prototype.getId=function(){return this._getAxo().GetId()},PluginDataStream.prototype.getExternalId=function(){return this._getAxo().GetExternalId()},PluginDataStream.prototype.setExternalId=function(value){this._getAxo().SetExternalId(value)},PluginDataStream.prototype.getLabel=function(){return this._getAxo().GetLabel()},PluginDataStream.prototype.getLocalDirection=function(){return this._getAxo().GetLocalDirection()},PluginDataStream.prototype.getMediaDescriptionId=function(){return this._getAxo().GetMediaDescriptionId()},PluginDataStream.prototype.getTag=function(){return this._getAxo().GetTag()},PluginDataStream.prototype.getType=function(){return fm.liveswitch.StreamType.Application},PluginDataStream.prototype.setLocalDirection=function(value){this._getAxo().SetLocalDirection(value)},PluginDataStream.prototype.setTag=function(value){this._getAxo().SetTag(value)},PluginDataStream.prototype.addOnDirectionChange=function(callback){fm.liveswitch.ArrayExtensions.add(this._onDirectionChangeValues,callback)},PluginDataStream.prototype.removeOnDirectionChange=function(callback){fm.liveswitch.ArrayExtensions.remove(this._onDirectionChangeValues,callback)},PluginDataStream.prototype.getChannels=function(){return this._channels},PluginDataStream.prototype.getTransportInfo=function(){return fm.liveswitch.TransportInfo.fromJson(this._getAxo().GetTransportInfo())},PluginDataStream.prototype.setGetRemoteConnectionInfo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var local=_a[_i];local.setGetRemoteConnectionInfo(value)}},PluginDataStream}(fm.liveswitch.PluginStream);liveswitch.PluginDataStream=PluginDataStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginDomAudioSink=function(_super){function PluginDomAudioSink(external,track){var _this=_super.call(this)||this;return _this._external=external,_this.setTrack(track),_this}return __extends(PluginDomAudioSink,_super),PluginDomAudioSink.prototype.getTypeString=function(){return"[fm.liveswitch.PluginDomAudioSink],"+_super.prototype.getTypeString.call(this)},PluginDomAudioSink.prototype._getExternal=function(){return this._external},PluginDomAudioSink.prototype.getTrack=function(){return this._track},PluginDomAudioSink.prototype.getLocal=function(){return this._local},PluginDomAudioSink.prototype.getAudio=function(){return null},PluginDomAudioSink.prototype.setTrack=function(track){return!!track&&(this._track=track,this._local=fm.liveswitch.Util.isObjectType(track.getMedia(),"[fm.liveswitch.PluginLocalMedia]"),!0)},PluginDomAudioSink}(fm.liveswitch.Dynamic);liveswitch.PluginDomAudioSink=PluginDomAudioSink}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginDomVideoSink=function(_super){function PluginDomVideoSink(external,track){var _this=_super.call(this)||this;return _this._axoLoaded=!1,_this._external=external,_this.setTrack(track),_this}return __extends(PluginDomVideoSink,_super),PluginDomVideoSink.prototype.getTypeString=function(){return"[fm.liveswitch.PluginDomVideoSink],"+_super.prototype.getTypeString.call(this)},PluginDomVideoSink.prototype._getExternal=function(){return this._external},PluginDomVideoSink.prototype._getAxo=function(){return this._axo},PluginDomVideoSink.prototype.getTrack=function(){return this._track},PluginDomVideoSink.prototype.getLocal=function(){return this._local},PluginDomVideoSink.prototype.getVideo=function(){return null},PluginDomVideoSink.prototype.getView=function(){return this._container},PluginDomVideoSink.prototype.getViewScale=function(){return this._axoLoaded?this._axo.GetViewScale():fm.liveswitch.LayoutScale.Contain},PluginDomVideoSink.prototype.setViewScale=function(viewScale){this._axoLoaded&&this._axo.SetViewScale(viewScale)},PluginDomVideoSink.prototype.getVideoWidth=function(){return this._axoLoaded?this._axo.GetWidth():0},PluginDomVideoSink.prototype.getVideoHeight=function(){return this._axoLoaded?this._axo.GetHeight():0},PluginDomVideoSink.prototype.getViewMirror=function(){return!!this._axoLoaded&&this._axo.GetViewMirror()},PluginDomVideoSink.prototype.setViewMirror=function(viewMirror){this._axoLoaded&&this._axo.SetViewMirror(viewMirror)},PluginDomVideoSink.prototype.setTrack=function(track){var _this=this;return!!track&&(this._track=track,this._local=fm.liveswitch.Util.isObjectType(track.getMedia(),"[fm.liveswitch.PluginLocalMedia]"),this._container=document.createElement("div"),this._local?this._container.className="fm-video fm-video-local":this._container.className="fm-video fm-video-remote",this._underlay=document.createElement("iframe"),this._underlay.src="about:blank",this._underlay.setAttribute("allowTransparency","true"),this._underlay.setAttribute("frameBorder","0"),this._underlay.style.border="0",this._underlay.style.backgroundColor="#000",this._underlay.style.position="absolute",this._underlay.style.top="0",this._underlay.style.left="0",this._underlay.style.width="100%",this._underlay.style.height="100%",this._container.appendChild(this._underlay),this._axo=document.createElement("object"),this._axo.id=fm.liveswitch.Guid.newGuid().toString(),this._axo.setAttribute("codebase",fm.liveswitch.Plugin.getPluginConfig().getActiveXPath()),this._axo.setAttribute("CLASSID","clsid:"+fm.liveswitch.PluginConstants.getDomVideoSinkClassId()),this._axo.style.position="absolute",this._axo.style.top="0",this._axo.style.left="0",this._axo.style.width="100%",this._axo.style.height="100%",window.setTimeout((function(){_this._container.appendChild(_this._axo)}),1),this.checkifLoaded(this._axo))},PluginDomVideoSink.prototype.checkifLoaded=function(object){var _this=this,loaded=!1;try{fm.liveswitch.Util.isNullOrUndefined(object.GetIsLoaded)||(loaded=object.GetIsLoaded())}catch(ex){loaded=!1}if(loaded)return this._axoLoaded=!0,this.setViewScale(fm.liveswitch.LayoutScale.Contain),!0;window.setTimeout((function(){_this.checkifLoaded(object)}),10)},PluginDomVideoSink}(fm.liveswitch.Dynamic);liveswitch.PluginDomVideoSink=PluginDomVideoSink}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginMedia=function(_super){function PluginMedia(external){var _this=_super.call(this)||this;_this._onAudioLevelValues=[],_this._onVideoSizeValues=[],_this._audioTrack=null,_this._videoTrack=null,_this._videoSink=null;var externalAudioTrack=new fm.liveswitch.AudioTrack(external,_this),externalVideoTrack=new fm.liveswitch.VideoTrack(external,_this),externalVideoSink=new fm.liveswitch.DomVideoSink(externalVideoTrack);return _this._audioTrack=externalAudioTrack._getInternal(),_this._videoTrack=externalVideoTrack._getInternal(),_this._videoSink=externalVideoSink._getInternal(),_this}return __extends(PluginMedia,_super),PluginMedia.prototype.getTypeString=function(){return"[fm.liveswitch.PluginMedia],"+_super.prototype.getTypeString.call(this)},PluginMedia.prototype.getHandle=function(){return this._getAxo().GetHandle()},PluginMedia.prototype.destroy=function(){this._getAxo().Destroy()},PluginMedia.prototype.addOnAudioLevel=function(value){var _this=this;fm.liveswitch.ArrayExtensions.add(this._onAudioLevelValues,value),1==this._onAudioLevelValues.length&&this._getAxo().SetOnAudioLevel((function(level){for(var _i=0,_a=_this._onAudioLevelValues;_i<_a.length;_i++){(0,_a[_i])(level)}}))},PluginMedia.prototype.addOnVideoSize=function(value){var _this=this;fm.liveswitch.ArrayExtensions.add(this._onVideoSizeValues,value),1==this._onVideoSizeValues.length&&this._getAxo().SetOnVideoSize((function(sizeJson){for(var size=fm.liveswitch.Size.fromJson(sizeJson),_i=0,_a=_this._onVideoSizeValues;_i<_a.length;_i++){(0,_a[_i])(size)}}))},PluginMedia.prototype.getAudioGain=function(){return this._getAxo().GetAudioGain()},PluginMedia.prototype.getAudioMuted=function(){return this._getAxo().GetAudioMuted()},PluginMedia.prototype.getAudioTrack=function(){return this._audio?this._audioTrack:null},PluginMedia.prototype.getAudioTracks=function(){return this._audio?[this.getAudioTrack()]:[]},PluginMedia.prototype.getAudioVolume=function(){return this._getAxo().GetAudioVolume()},PluginMedia.prototype.getId=function(){return this._getAxo().GetId()},PluginMedia.prototype.getVideoMuted=function(){return this._getAxo().GetVideoMuted()},PluginMedia.prototype.getVideoSize=function(){return fm.liveswitch.Size.fromJson(this._getAxo().GetVideoSize())},PluginMedia.prototype.getVideoTrack=function(){return this._video?this._videoTrack:null},PluginMedia.prototype.getVideoTracks=function(){return this._video?[this.getVideoTrack()]:[]},PluginMedia.prototype.grabVideoFrame=function(){var _this=this,promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return innerPromise.then((function(videoBufferJson){promise.resolve(fm.liveswitch.VideoBuffer.fromJson(videoBufferJson))}),(function(error){promise.reject(new fm.liveswitch.Exception(error))})),window.setTimeout((function(){_this._getAxo().GrabVideoFrame(innerPromise)}),1),promise},PluginMedia.prototype.removeOnAudioLevel=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioLevelValues,value),0==this._onAudioLevelValues.length&&this._getAxo().SetOnAudioLevel(null)},PluginMedia.prototype.removeOnVideoSize=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoSizeValues,value),0==this._onVideoSizeValues.length&&this._getAxo().SetOnVideoSize(null)},PluginMedia.prototype.setAudioGain=function(value){this._getAxo().SetAudioGain(value)},PluginMedia.prototype.setAudioMuted=function(value){this._getAxo().SetAudioMuted(value)},PluginMedia.prototype.setAudioVolume=function(value){this._getAxo().SetAudioVolume(value)},PluginMedia.prototype.setId=function(value){return this._getAxo().SetId(value)},PluginMedia.prototype.setVideoMuted=function(value){this._getAxo().SetVideoMuted(value)},PluginMedia.prototype.getAudioSink=function(){return this._audio,null},PluginMedia.prototype.getVideoSink=function(){return this._video?this._videoSink:null},PluginMedia.prototype.getView=function(){return this._video?this._videoSink.getView():null},PluginMedia.prototype.getViewSink=function(){return this._video?this._videoSink:null},PluginMedia.prototype.getAudio=function(){return this._audio},PluginMedia.prototype.setAudio=function(audio){this._audio=audio},PluginMedia.prototype.getVideo=function(){return this._video},PluginMedia.prototype.setVideo=function(video){this._video=video},PluginMedia}(fm.liveswitch.Dynamic);liveswitch.PluginMedia=PluginMedia}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginLocalMedia=function(_super){function PluginLocalMedia(external,audio,video,screen){var _this=_super.call(this,external)||this;return _this._onAudioStartedValues=[],_this._onVideoStartedValues=[],_this._onAudioStoppedValues=[],_this._onVideoStoppedValues=[],_this._onAudioDestroyedValues=[],_this._onVideoDestroyedValues=[],_this._external=external,_this._audio=audio,_this._video=video,_this._screen=!fm.liveswitch.Util.isNullOrUndefined(screen)&&screen,_this._axo=new ActiveXObject("fm.liveswitch.LocalMedia"),_this._axo.Initialize(!1===audio,!1===video,_this._screen),_this._axo.SetOnAudioStarted((function(){for(var _i=0,_a=_this._onAudioStartedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._axo.SetOnVideoStarted((function(){for(var _i=0,_a=_this._onVideoStartedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._axo.SetOnAudioStopped((function(){for(var _i=0,_a=_this._onAudioStoppedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._axo.SetOnVideoStopped((function(){for(var _i=0,_a=_this._onVideoStoppedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._axo.SetOnAudioDestroyed((function(){for(var _i=0,_a=_this._onAudioDestroyedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._axo.SetOnVideoDestroyed((function(){for(var _i=0,_a=_this._onVideoDestroyedValues;_i<_a.length;_i++){(0,_a[_i])()}})),video&&_this.checkifLoaded(_this._axo),_this}return __extends(PluginLocalMedia,_super),PluginLocalMedia.prototype.getTypeString=function(){return"[fm.liveswitch.PluginLocalMedia],"+_super.prototype.getTypeString.call(this)},PluginLocalMedia.prototype._getExternal=function(){return this._external},PluginLocalMedia.prototype._getAxo=function(){return this._axo},PluginLocalMedia.prototype.getScreen=function(){return this._screen},PluginLocalMedia.prototype.setScreen=function(screen){this._screen=screen},PluginLocalMedia.prototype.getState=function(){return this._axo.GetState()},PluginLocalMedia.prototype.start=function(){var _this=this;this.unloadHandler||(this.unloadHandler=function(evt){_this._axo.Stop(new fm.liveswitch.Promise)});var promise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._axo.Start(promise),fm.liveswitch.Util.observe(window,"unload",_this.unloadHandler)}),1),promise},PluginLocalMedia.prototype.stop=function(){var _this=this,promise=new fm.liveswitch.Promise;return window.setTimeout((function(){fm.liveswitch.Util.unobserve(window,"unload",_this.unloadHandler),_this._axo.Stop(promise)}),1),promise},PluginLocalMedia.prototype.getHandle=function(){return this._getAxo().GetHandle()},PluginLocalMedia.prototype.addOnAudioStarted=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioStartedValues,value)},PluginLocalMedia.prototype.addOnVideoStarted=function(value){fm.liveswitch.ArrayExtensions.add(this._onVideoStartedValues,value)},PluginLocalMedia.prototype.addOnAudioStopped=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioStoppedValues,value)},PluginLocalMedia.prototype.addOnVideoStopped=function(value){fm.liveswitch.ArrayExtensions.add(this._onVideoStoppedValues,value)},PluginLocalMedia.prototype.addOnAudioDestroyed=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioDestroyedValues,value)},PluginLocalMedia.prototype.addOnVideoDestroyed=function(value){fm.liveswitch.ArrayExtensions.add(this._onVideoDestroyedValues,value)},PluginLocalMedia.prototype.removeOnAudioStarted=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioStartedValues,value)},PluginLocalMedia.prototype.removeOnVideoStarted=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoStartedValues,value)},PluginLocalMedia.prototype.removeOnAudioStopped=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioStoppedValues,value)},PluginLocalMedia.prototype.removeOnVideoStopped=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoStoppedValues,value)},PluginLocalMedia.prototype.removeOnAudioDestroyed=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioDestroyedValues,value)},PluginLocalMedia.prototype.removeOnVideoDestroyed=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoDestroyedValues,value)},PluginLocalMedia.prototype.getAudioEncoding=function(){return fm.liveswitch.AudioEncodingConfig.fromJson(this._getAxo().GetAudioEncoding())},PluginLocalMedia.prototype.getAudioEncodings=function(){return fm.liveswitch.AudioEncodingConfig.fromJsonArray(this._getAxo().GetAudioEncodings())},PluginLocalMedia.prototype.setAudioEncodings=function(value){return this._getAxo().SetAudioEncodings(fm.liveswitch.AudioEncodingConfig.toJsonArray(value))},PluginLocalMedia.prototype.getVideoEncoding=function(){return fm.liveswitch.VideoEncodingConfig.fromJson(this._getAxo().GetVideoEncoding())},PluginLocalMedia.prototype.getVideoEncodings=function(){return fm.liveswitch.VideoEncodingConfig.fromJsonArray(this._getAxo().GetVideoEncodings())},PluginLocalMedia.prototype.setVideoEncodings=function(value){return this._getAxo().SetVideoEncodings(fm.liveswitch.VideoEncodingConfig.toJsonArray(value))},PluginLocalMedia.prototype.changeAudioSourceInput=function(audioSourceInput){var _this=this,promise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().ChangeAudioSourceInput(promise,fm.liveswitch.SourceInput.toJson(audioSourceInput))}),1),promise},PluginLocalMedia.prototype.changeVideoSourceInput=function(videoSourceInput){var _this=this,promise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().ChangeVideoSourceInput(promise,fm.liveswitch.SourceInput.toJson(videoSourceInput))}),1),promise},PluginLocalMedia.prototype.getAudioSourceInput=function(){return fm.liveswitch.SourceInput.fromJson(this._getAxo().GetAudioSourceInput())},PluginLocalMedia.prototype.getAudioSourceInputs=function(){var _this=this,promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().GetAudioSourceInputs(innerPromise)}),1),innerPromise.then((function(sourceInputsJson){promise.resolve(fm.liveswitch.SourceInput.fromJsonArray(sourceInputsJson))})),promise},PluginLocalMedia.prototype.getVideoSourceInput=function(){return fm.liveswitch.SourceInput.fromJson(this._getAxo().GetVideoSourceInput())},PluginLocalMedia.prototype.getVideoSourceInputs=function(){var _this=this,promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().GetVideoSourceInputs(innerPromise)}),1),innerPromise.then((function(sourceInputsJson){promise.resolve(fm.liveswitch.SourceInput.fromJsonArray(sourceInputsJson))})),promise},PluginLocalMedia.prototype.setAudioSourceInput=function(value){this._getAxo().SetAudioSourceInput(fm.liveswitch.SourceInput.toJson(value))},PluginLocalMedia.prototype.setVideoSourceInput=function(value){this._getAxo().SetVideoSourceInput(fm.liveswitch.SourceInput.toJson(value))},PluginLocalMedia.prototype.destroy=function(){},PluginLocalMedia.prototype.getAudioGain=function(){return this._getAxo().GetAudioGain()},PluginLocalMedia.prototype.getAudioMuted=function(){return this._getAxo().GetAudioMuted()},PluginLocalMedia.prototype.getId=function(){return this._getAxo().GetId()},PluginLocalMedia.prototype.getVideoMuted=function(){return this._getAxo().GetVideoMuted()},PluginLocalMedia.prototype.setAudioGain=function(value){this._getAxo().SetAudioGain(value)},PluginLocalMedia.prototype.setAudioMuted=function(value){this._getAxo().SetAudioMuted(value)},PluginLocalMedia.prototype.setVideoMuted=function(value){this._getAxo().SetVideoMuted(value)},PluginLocalMedia.prototype.getAudioSimulcastDisabled=function(){return this._getAxo().GetAudioSimulcastDisabled()},PluginLocalMedia.prototype.setAudioSimulcastDisabled=function(value){this._getAxo().SetAudioSimulcastDisabled(value)},PluginLocalMedia.prototype.getAudioSimulcastEncodingCount=function(){return this._getAxo().GetAudioSimulcastEncodingCount()},PluginLocalMedia.prototype.setAudioSimulcastEncodingCount=function(value){this._getAxo().SetAudioSimulcastEncodingCount(value)},PluginLocalMedia.prototype.getAudioSimulcastPreferredBitrate=function(){return this._getAxo().GetAudioSimulcastPreferredBitrate()},PluginLocalMedia.prototype.setAudioSimulcastPreferredBitrate=function(value){this._getAxo().SetAudioSimulcastPreferredBitrate(value)},PluginLocalMedia.prototype.getVideoSimulcastDisabled=function(){return this._getAxo().GetVideoSimulcastDisabled()},PluginLocalMedia.prototype.setVideoSimulcastDisabled=function(value){this._getAxo().SetVideoSimulcastDisabled(value)},PluginLocalMedia.prototype.getVideoSimulcastEncodingCount=function(){return this._getAxo().GetVideoSimulcastEncodingCount()},PluginLocalMedia.prototype.setVideoSimulcastEncodingCount=function(value){this._getAxo().SetVideoSimulcastEncodingCount(value)},PluginLocalMedia.prototype.getVideoSimulcastPreferredBitrate=function(){return this._getAxo().GetVideoSimulcastPreferredBitrate()},PluginLocalMedia.prototype.setVideoSimulcastPreferredBitrate=function(value){this._getAxo().SetVideoSimulcastPreferredBitrate(value)},PluginLocalMedia.prototype.getVideoSimulcastBitsPerPixel=function(){return this._getAxo().GetVideoSimulcastBitsPerPixel()},PluginLocalMedia.prototype.setVideoSimulcastBitsPerPixel=function(value){this._getAxo().SetVideoSimulcastBitsPerPixel(value)},PluginLocalMedia.prototype.getVideoSimulcastDegradationPreference=function(){return this._getAxo().GetVideoSimulcastDegradationPreference()},PluginLocalMedia.prototype.setVideoSimulcastDegradationPreference=function(value){this._getAxo().SetVideoSimulcastDegradationPreference(value)},PluginLocalMedia.prototype.checkifLoaded=function(object){var _this=this,loaded=!1;try{fm.liveswitch.Util.isNullOrUndefined(this._videoSink._getAxo().GetIsLoaded)||(loaded=this._videoSink._getAxo().GetIsLoaded())}catch(ex){loaded=!1}loaded?object.AttachView(this._videoSink._getAxo().GetHandle()):window.setTimeout((function(){_this.checkifLoaded(object)}),10)},PluginLocalMedia}(fm.liveswitch.PluginMedia);liveswitch.PluginLocalMedia=PluginLocalMedia}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginRemoteMedia=function(_super){function PluginRemoteMedia(external,audio,video){var _this=_super.call(this,external)||this;return _this._onAudioDestroyedValues=[],_this._onVideoDestroyedValues=[],_this._external=external,_this._audio=audio,_this._video=video,_this._axo=new ActiveXObject("fm.liveswitch.RemoteMedia"),_this._axo.Initialize(!1,!1),_this._axo.SetOnAudioDestroyed((function(){for(var _i=0,_a=_this._onAudioDestroyedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._axo.SetOnVideoDestroyed((function(){for(var _i=0,_a=_this._onVideoDestroyedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this.checkifLoaded(_this._axo),_this}return __extends(PluginRemoteMedia,_super),PluginRemoteMedia.prototype.getTypeString=function(){return"[fm.liveswitch.PluginRemoteMedia],"+_super.prototype.getTypeString.call(this)},PluginRemoteMedia.prototype._getExternal=function(){return this._external},PluginRemoteMedia.prototype._getAxo=function(){return this._axo},PluginRemoteMedia.prototype.checkifLoaded=function(object){var _this=this,loaded=!1;try{fm.liveswitch.Util.isNullOrUndefined(this._videoSink._getAxo().GetIsLoaded)||(loaded=this._videoSink._getAxo().GetIsLoaded())}catch(ex){loaded=!1}loaded?object.AttachView(this._videoSink._getAxo().GetHandle()):window.setTimeout((function(){_this.checkifLoaded(object)}),10)},PluginRemoteMedia.prototype.getHandle=function(){return this._getAxo().GetHandle()},PluginRemoteMedia.prototype.addOnAudioDestroyed=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioDestroyedValues,value)},PluginRemoteMedia.prototype.addOnVideoDestroyed=function(value){fm.liveswitch.ArrayExtensions.add(this._onVideoDestroyedValues,value)},PluginRemoteMedia.prototype.removeOnAudioDestroyed=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioDestroyedValues,value)},PluginRemoteMedia.prototype.removeOnVideoDestroyed=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoDestroyedValues,value)},PluginRemoteMedia.prototype.changeAudioSinkOutput=function(audioSinkOutput){var _this=this,promise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().ChangeAudioSinkOutput(promise,fm.liveswitch.SinkOutput.toJson(audioSinkOutput))}),1),promise},PluginRemoteMedia.prototype.changeVideoSinkOutput=function(videoSinkOutput){var _this=this,promise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().ChangeVideoSinkOutput(promise,fm.liveswitch.SinkOutput.toJson(videoSinkOutput))}),1),promise},PluginRemoteMedia.prototype.getAudioSinkOutput=function(){return fm.liveswitch.SinkOutput.fromJson(this._getAxo().GetAudioSinkOutput())},PluginRemoteMedia.prototype.getAudioSinkOutputs=function(){var _this=this,promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().GetAudioSinkOutputs(innerPromise)}),1),innerPromise.then((function(sinkOutputsJson){promise.resolve(fm.liveswitch.SinkOutput.fromJsonArray(sinkOutputsJson))})),promise},PluginRemoteMedia.prototype.getVideoSinkOutput=function(){return fm.liveswitch.SinkOutput.fromJson(this._getAxo().GetVideoSinkOutput())},PluginRemoteMedia.prototype.getVideoSinkOutputs=function(){var _this=this,promise=new fm.liveswitch.Promise,innerPromise=new fm.liveswitch.Promise;return window.setTimeout((function(){_this._getAxo().GetVideoSinkOutputs(innerPromise)}),1),innerPromise.then((function(sinkOutputsJson){promise.resolve(fm.liveswitch.SinkOutput.fromJsonArray(sinkOutputsJson))})),promise},PluginRemoteMedia.prototype.setAudioSinkOutput=function(value){this._getAxo().SetAudioSinkOutput(fm.liveswitch.SinkOutput.toJson(value))},PluginRemoteMedia.prototype.setVideoSinkOutput=function(value){this._getAxo().SetVideoSinkOutput(fm.liveswitch.SinkOutput.toJson(value))},PluginRemoteMedia.prototype.destroy=function(){return this._getAxo().Destroy()},PluginRemoteMedia.prototype.getAudioGain=function(){return this._getAxo().GetAudioGain()},PluginRemoteMedia.prototype.getAudioMuted=function(){return this._getAxo().GetAudioMuted()},PluginRemoteMedia.prototype.getId=function(){return this._getAxo().GetId()},PluginRemoteMedia.prototype.getVideoMuted=function(){return this._getAxo().GetVideoMuted()},PluginRemoteMedia.prototype.setAudioGain=function(value){this._getAxo().SetAudioGain(value)},PluginRemoteMedia.prototype.setAudioMuted=function(value){this._getAxo().SetAudioMuted(value)},PluginRemoteMedia.prototype.setVideoMuted=function(value){this._getAxo().SetVideoMuted(value)},PluginRemoteMedia}(fm.liveswitch.PluginMedia);liveswitch.PluginRemoteMedia=PluginRemoteMedia}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginVideoStream=function(_super){function PluginVideoStream(external,localTrack,remoteTrack){var _this=_super.call(this,localTrack,remoteTrack)||this;return _this._onDirectionChangeValues=[],_this._onStateChangeValues=[],_this._onLocalEncodingDisabledValues=[],_this._onLocalEncodingEnabledValues=[],_this._onDiscardKeyFrameRequestValues=[],_this._onDiscardBitrateRequestValues=[],_this._onDiscardBitrateNotificationValues=[],_this._state=fm.liveswitch.StreamState.New,_this._external=external,_this._axo=new ActiveXObject("fm.liveswitch.VideoStream"),_this._axo.Initialize(null==_this.getLocalTrack()?0:_this.getLocalTrack().getMedia().getHandle(),null==remoteTrack?0:remoteTrack.getMedia().getHandle()),_this._axo.SetOnDirectionChange((function(){setTimeout((function(){for(var _i=0,_a=_this._onDirectionChangeValues;_i<_a.length;_i++){(0,_a[_i])()}}),1)})),_this._axo.SetOnStateChange((function(state){_this._state=state,setTimeout((function(){for(var _i=0,_a=_this._onStateChangeValues;_i<_a.length;_i++){(0,_a[_i])()}}),1)})),_this._axo.SetOnLocalEncodingDisabled((function(encodingJson){setTimeout((function(){for(var _i=0,_a=_this._onLocalEncodingDisabledValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.EncodingInfo.fromJson(encodingJson))}}),1)})),_this._axo.SetOnLocalEncodingEnabled((function(encodingJson){setTimeout((function(){for(var _i=0,_a=_this._onLocalEncodingEnabledValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.EncodingInfo.fromJson(encodingJson))}}),1)})),_this._axo.SetOnDiscardKeyFrameRequest((function(synchronizationSources){setTimeout((function(){for(var _i=0,_a=_this._onDiscardKeyFrameRequestValues;_i<_a.length;_i++){(0,_a[_i])(synchronizationSources)}}),1)})),_this._axo.SetOnDiscardBitrateRequest((function(bitrateRequestJson){setTimeout((function(){for(var _i=0,_a=_this._onDiscardBitrateRequestValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.BitrateRequest.fromJson(bitrateRequestJson))}}),1)})),_this._axo.SetOnDiscardBitrateNotification((function(bitrateNotificationJson){setTimeout((function(){for(var _i=0,_a=_this._onDiscardBitrateNotificationValues;_i<_a.length;_i++){(0,_a[_i])(fm.liveswitch.BitrateNotification.fromJson(bitrateNotificationJson))}}),1)})),_this}return __extends(PluginVideoStream,_super),PluginVideoStream.prototype.getTypeString=function(){return"[fm.liveswitch.PluginVideoStream],"+_super.prototype.getTypeString.call(this)},PluginVideoStream.prototype._getExternal=function(){return this._external},PluginVideoStream.prototype._getAxo=function(){return this._axo},PluginVideoStream.prototype.getState=function(){return this._state},PluginVideoStream.prototype.addOnStateChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onStateChangeValues,value)},PluginVideoStream.prototype.removeOnStateChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStateChangeValues,value)},PluginVideoStream.prototype.getInfo=function(){return fm.liveswitch.MediaStreamInfo.fromJson(this._getAxo().GetInfo())},PluginVideoStream.prototype.getLocalReceive=function(){return this._getAxo().GetLocalReceive()},PluginVideoStream.prototype.getLocalSend=function(){return this._getAxo().GetLocalSend()},PluginVideoStream.prototype.getRemoteReceive=function(){return this._getAxo().GetRemoteReceive()},PluginVideoStream.prototype.getRemoteSend=function(){return this._getAxo().GetRemoteSend()},PluginVideoStream.prototype.setLocalReceive=function(value){return this._getAxo().SetLocalReceive(value)},PluginVideoStream.prototype.setLocalSend=function(value){return this._getAxo().SetLocalSend(value)},PluginVideoStream.prototype.getRemoteDirection=function(){return this._getAxo().GetRemoteDirection()},PluginVideoStream.prototype.getHandle=function(){return this._getAxo().GetHandle()},PluginVideoStream.prototype.changeDirection=function(newDirection){return fm.liveswitch.Error.fromJson(this._getAxo().ChangeDirection(newDirection))},PluginVideoStream.prototype.getDirection=function(){return this._getAxo().GetDirection()},PluginVideoStream.prototype.getLocalCanonicalName=function(){return this._getAxo().GetLocalCanonicalName()},PluginVideoStream.prototype.getRemoteCanonicalName=function(){return this._getAxo().GetRemoteCanonicalName()},PluginVideoStream.prototype.getId=function(){return this._getAxo().GetId()},PluginVideoStream.prototype.getExternalId=function(){return this._getAxo().GetExternalId()},PluginVideoStream.prototype.setExternalId=function(value){this._getAxo().SetExternalId(value)},PluginVideoStream.prototype.getLabel=function(){return this._getAxo().GetLabel()},PluginVideoStream.prototype.getLocalBandwidth=function(){return this._getAxo().GetLocalBandwidth()},PluginVideoStream.prototype.getLocalDirection=function(){return this._getAxo().GetLocalDirection()},PluginVideoStream.prototype.getLocalMuted=function(){return this.getInputMuted()},PluginVideoStream.prototype.setLocalMuted=function(value){return this.setInputMuted(value)},PluginVideoStream.prototype.getRemoteMuted=function(){return this._getAxo().GetRemoteMuted()},PluginVideoStream.prototype.setRemoteMuted=function(value){return this._getAxo().SetRemoteMuted(value)},PluginVideoStream.prototype.getInputMuted=function(){return this._getAxo().GetInputMuted()},PluginVideoStream.prototype.getMediaDescriptionId=function(){return this._getAxo().GetMediaDescriptionId()},PluginVideoStream.prototype.getOutputMuted=function(){return this._getAxo().GetOutputMuted()},PluginVideoStream.prototype.getRemoteBandwidth=function(){return this._getAxo().GetRemoteBandwidth()},PluginVideoStream.prototype.getTag=function(){return this._getAxo().GetTag()},PluginVideoStream.prototype.getType=function(){return fm.liveswitch.StreamType.Video},PluginVideoStream.prototype.setLocalDirection=function(value){this._getAxo().SetLocalDirection(value)},PluginVideoStream.prototype.setLocalBandwidth=function(value){this._getAxo().SetLocalBandwidth(value)},PluginVideoStream.prototype.setInputMuted=function(value){this._getAxo().SetInputMuted(value)},PluginVideoStream.prototype.setOutputMuted=function(value){this._getAxo().SetOutputMuted(value)},PluginVideoStream.prototype.setTag=function(value){this._getAxo().SetTag(value)},PluginVideoStream.prototype.addOnDirectionChange=function(callback){fm.liveswitch.ArrayExtensions.add(this._onDirectionChangeValues,callback)},PluginVideoStream.prototype.removeOnDirectionChange=function(callback){fm.liveswitch.ArrayExtensions.remove(this._onDirectionChangeValues,callback)},PluginVideoStream.prototype.getPreferredCodecs=function(){return this._getAxo().GetPreferredCodecs()},PluginVideoStream.prototype.setPreferredCodecs=function(names){this._getAxo().SetPreferredCodecs(names)},PluginVideoStream.prototype.getCodecDisabled=function(name){return this._getAxo().GetCodecDisabled(name)},PluginVideoStream.prototype.setCodecDisabled=function(name,disabled){this._getAxo().SetCodecDisabled(name,disabled)},PluginVideoStream.prototype.getVp8Disabled=function(){return this._getAxo().GetVp8Disabled()},PluginVideoStream.prototype.getVp9Disabled=function(){return this._getAxo().GetVp9Disabled()},PluginVideoStream.prototype.getH264Disabled=function(){return this._getAxo().GetH264Disabled()},PluginVideoStream.prototype.getH265Disabled=function(){return this._getAxo().GetH265Disabled()},PluginVideoStream.prototype.setVp8Disabled=function(value){return this._getAxo().SetVp8Disabled(value)},PluginVideoStream.prototype.setVp9Disabled=function(value){return this._getAxo().SetVp9Disabled(value)},PluginVideoStream.prototype.setH264Disabled=function(value){return this._getAxo().SetH264Disabled(value)},PluginVideoStream.prototype.setH265Disabled=function(value){return this._getAxo().SetH265Disabled(value)},PluginVideoStream.prototype.getRemoteEncoding=function(){return fm.liveswitch.EncodingInfo.fromJson(this._getAxo().GetRemoteEncoding())},PluginVideoStream.prototype.setRemoteEncoding=function(value){this._getAxo().SetRemoteEncoding(fm.liveswitch.EncodingInfo.toJson(value))},PluginVideoStream.prototype.getSimulcastMode=function(){return this._getAxo().GetSimulcastMode()},PluginVideoStream.prototype.setSimulcastMode=function(value){this._getAxo().SetSimulcastMode(value)},PluginVideoStream.prototype.getTransportInfo=function(){return fm.liveswitch.TransportInfo.fromJson(this._getAxo().GetTransportInfo())},PluginVideoStream.prototype.getControlTransportInfo=function(){return fm.liveswitch.TransportInfo.fromJson(this._getAxo().GetControlTransportInfo())},PluginVideoStream.prototype.addOnLocalEncodingDisabled=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalEncodingDisabledValues,value)},PluginVideoStream.prototype.addOnLocalEncodingEnabled=function(value){fm.liveswitch.ArrayExtensions.add(this._onLocalEncodingEnabledValues,value)},PluginVideoStream.prototype.removeOnLocalEncodingDisabled=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalEncodingDisabledValues,value)},PluginVideoStream.prototype.removeOnLocalEncodingEnabled=function(value){fm.liveswitch.ArrayExtensions.remove(this._onLocalEncodingEnabledValues,value)},PluginVideoStream.prototype.addOnDiscardKeyFrameRequest=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardKeyFrameRequestValues,value)},PluginVideoStream.prototype.removeOnDiscardKeyFrameRequest=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardKeyFrameRequestValues,value)},PluginVideoStream.prototype.raiseKeyFrameRequest=function(synchronizationSources){this._axo.RaiseKeyFrameRequest(synchronizationSources)},PluginVideoStream.prototype.addOnDiscardBitrateRequest=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardBitrateRequestValues,value)},PluginVideoStream.prototype.removeOnDiscardBitrateRequest=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardBitrateRequestValues,value)},PluginVideoStream.prototype.raiseBitrateRequest=function(bitrateRequest){return this._axo.RaiseBitrateRequest(fm.liveswitch.BitrateRequest.toJson(bitrateRequest))},PluginVideoStream.prototype.addOnDiscardBitrateNotification=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardBitrateNotificationValues,value)},PluginVideoStream.prototype.removeOnDiscardBitrateNotification=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardBitrateNotificationValues,value)},PluginVideoStream.prototype.raiseBitrateNotification=function(bitrateNotification){return this._axo.RaiseBitrateNotification(fm.liveswitch.BitrateNotification.toJson(bitrateNotification))},PluginVideoStream.prototype.getMaxSendBitrate=function(){return this._getAxo().GetMaxSendBitrate()},PluginVideoStream.prototype.setMaxSendBitrate=function(value){this._getAxo().SetMaxSendBitrate(value)},PluginVideoStream.prototype.getMaxReceiveBitrate=function(){return this._getAxo().GetMaxReceiveBitrate()},PluginVideoStream.prototype.setMaxReceiveBitrate=function(value){this._getAxo().SetMaxReceiveBitrate(value)},PluginVideoStream}(fm.liveswitch.PluginMediaStream);liveswitch.PluginVideoStream=PluginVideoStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PluginVideoTrack=function(_super){function PluginVideoTrack(external,media){var _this=_super.call(this,media)||this;return _this._external=external,_this}return __extends(PluginVideoTrack,_super),PluginVideoTrack.prototype.getTypeString=function(){return"[fm.liveswitch.PluginVideoTrack],"+_super.prototype.getTypeString.call(this)},PluginVideoTrack.prototype._getExternal=function(){return this._external},PluginVideoTrack.prototype.isLocal=function(){return fm.liveswitch.Util.isObjectType(this.getMedia(),"[fm.liveswitch.PluginLocalMedia]")},PluginVideoTrack.prototype.addOnStarted=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.addOnStarted on a remote track.");this.getMedia().addOnVideoStarted(value)},PluginVideoTrack.prototype.addOnStopped=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.addOnStopped on a remote track.");this.getMedia().addOnVideoStopped(value)},PluginVideoTrack.prototype.addOnDestroyed=function(value){this.getMedia().addOnVideoDestroyed(value)},PluginVideoTrack.prototype.removeOnStarted=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.removeOnStarted on a remote track.");this.getMedia().removeOnVideoStarted(value)},PluginVideoTrack.prototype.removeOnStopped=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.removeOnStopped on a remote track.");this.getMedia().removeOnVideoStopped(value)},PluginVideoTrack.prototype.removeOnDestroyed=function(value){this.getMedia().removeOnVideoDestroyed(value)},PluginVideoTrack.prototype.changeSinkOutput=function(sinkOutput){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.changeSinkOutput on a local track.");return this.getMedia().changeVideoSinkOutput(sinkOutput)},PluginVideoTrack.prototype.getSinkOutput=function(){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.getSinkOutput on a local track.");return this.getMedia().getVideoSinkOutput()},PluginVideoTrack.prototype.getSinkOutputs=function(){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.getSinkOutputs on a local track.");return this.getMedia().getVideoSinkOutputs()},PluginVideoTrack.prototype.setSinkOutput=function(value){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.setSinkOutput on a local track.");this.getMedia().setVideoSinkOutput(value)},PluginVideoTrack.prototype.changeSourceInput=function(sourceInput){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.changeSourceInput on a remote track.");return this.getMedia().changeVideoSourceInput(sourceInput)},PluginVideoTrack.prototype.getSourceInput=function(){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.getSourceInput on a remote track.");return this.getMedia().getVideoSourceInput()},PluginVideoTrack.prototype.getSourceInputs=function(){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.getSourceInputs on a remote track.");return this.getMedia().getVideoSourceInputs()},PluginVideoTrack.prototype.setSourceInput=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.setSourceInput on a remote track.");this.getMedia().setVideoSourceInput(value)},PluginVideoTrack.prototype.addOnSize=function(value){this.getMedia().addOnVideoSize(value)},PluginVideoTrack.prototype.getMuted=function(){return this.getMedia().getVideoMuted()},PluginVideoTrack.prototype.getSize=function(){return this.getMedia().getVideoSize()},PluginVideoTrack.prototype.grabFrame=function(){return this.getMedia().grabVideoFrame()},PluginVideoTrack.prototype.setMuted=function(value){this.getMedia().setVideoMuted(value)},PluginVideoTrack.prototype.removeOnSize=function(value){this.getMedia().removeOnVideoSize(value)},PluginVideoTrack}(fm.liveswitch.PluginMediaTrack);liveswitch.PluginVideoTrack=PluginVideoTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RemoteMedia=function(_super){function RemoteMedia(audio,video){var _this=_super.call(this)||this;if(void 0===audio&&(audio=!0),void 0===video&&(video=!0),fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginRemoteMedia(_this,audio,video);else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcRemoteMedia(_this,audio,video)}return _this}return __extends(RemoteMedia,_super),RemoteMedia.prototype.getTypeString=function(){return"[fm.liveswitch.RemoteMedia],"+_super.prototype.getTypeString.call(this)},RemoteMedia.prototype._getInternal=function(){return this._internal},RemoteMedia.prototype.changeAudioSinkOutput=function(audioSinkOutput){return this._getInternal().changeAudioSinkOutput(audioSinkOutput)},RemoteMedia.prototype.changeVideoSinkOutput=function(videoSinkOutput){return this._getInternal().changeVideoSinkOutput(videoSinkOutput)},RemoteMedia.prototype.getAudioSinkOutput=function(){return this._getInternal().getAudioSinkOutput()},RemoteMedia.prototype.getAudioSinkOutputs=function(){return this._getInternal().getAudioSinkOutputs()},RemoteMedia.prototype.getVideoSinkOutput=function(){return this._getInternal().getVideoSinkOutput()},RemoteMedia.prototype.getVideoSinkOutputs=function(){return this._getInternal().getVideoSinkOutputs()},RemoteMedia.prototype.setAudioSinkOutput=function(value){this._getInternal().setAudioSinkOutput(value)},RemoteMedia.prototype.setVideoSinkOutput=function(value){this._getInternal().setVideoSinkOutput(value)},RemoteMedia}(fm.liveswitch.Media);liveswitch.RemoteMedia=RemoteMedia}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SessionDescriptionManagerBase=function(){function SessionDescriptionManagerBase(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__streamIndex=new Array,this.__audioStreamIndex=new Array,this.__videoStreamIndex=new Array,this.__dataStreamIndex=new Array,this.__streamMatcher=new fm.liveswitch.SessionDescriptionStreamMatcher(0)}return SessionDescriptionManagerBase.prototype.getTypeString=function(){return"[fm.liveswitch.SessionDescriptionManagerBase]"},SessionDescriptionManagerBase.updateTrickleIcePolicy=function(message,policy){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(policy,fm.liveswitch.TrickleIcePolicy.FullTrickle)||fm.liveswitch.Global.equals(policy,fm.liveswitch.TrickleIcePolicy.HalfTrickle)?message.setSupportsTrickleIce(!0):message.setSupportsTrickleIce(!1)},SessionDescriptionManagerBase.prototype.addMediaDescriptions=function(msg,descriptions){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var length_5=descriptions.length,descriptionArray=new Array(length_5),i=0;i<length_5;i++){var offererStreamIndexFor=this.__streamMatcher.getOffererStreamIndexFor(i);descriptionArray[offererStreamIndexFor]=descriptions[i]}for(var _i=0,descriptionArray_1=descriptionArray;_i<descriptionArray_1.length;_i++){var description=descriptionArray_1[_i];msg.addMediaDescription(description)}},SessionDescriptionManagerBase.prototype.addStream=function(stream){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.HashExtensions.add(this.getStreams(),stream.getId(),stream),this.addToIndex(stream),this.resetStreamMatcher()},SessionDescriptionManagerBase.prototype.addToIndex=function(stream){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.ArrayExtensions.add(this.__streamIndex,stream),fm.liveswitch.Global.equals(stream.getType(),fm.liveswitch.StreamType.Audio))fm.liveswitch.ArrayExtensions.add(this.__audioStreamIndex,stream);else if(fm.liveswitch.Global.equals(stream.getType(),fm.liveswitch.StreamType.Video))fm.liveswitch.ArrayExtensions.add(this.__videoStreamIndex,stream);else{if(!fm.liveswitch.Global.equals(stream.getType(),fm.liveswitch.StreamType.Application))throw new fm.liveswitch.Exception("Unsupported stream type.");fm.liveswitch.ArrayExtensions.add(this.__dataStreamIndex,stream)}},SessionDescriptionManagerBase.prototype.getOffererStreamIndexFor=function(answererStreamIndex){if(1==arguments.length)return answererStreamIndex=fm.liveswitch.Global.toInt(arguments[0]),this.__streamMatcher.getOffererStreamIndexFor(answererStreamIndex);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.matchAndProcessDescriptionPerType=function(streams,description,isLocalDescription,streamMatcher,processSdpMediaDescriptionForStreamHandler,processSdpMediaDescriptionInternal){if(6==arguments.length){if(fm.liveswitch.Global.equals(processSdpMediaDescriptionForStreamHandler,null))throw new fm.liveswitch.Exception("ProcessSdpMediaDescriptionForStreamHandler is not set.");for(var indexInType=0,sdpMessage=description.getSdpMessage(),mediaDescriptions=sdpMessage.getMediaDescriptions(),_i=0,streams_2=streams;_i<streams_2.length;_i++){var local=streams_2[_i],type=local.getType(),offererStreamMediaIndexForStream=streamMatcher.getOffererStreamMediaIndexForStream(type,indexInType);if(fm.liveswitch.Global.equals(offererStreamMediaIndexForStream,-1))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("SDP offer did not contain stream of type {0} or stream of this type is not supported.",new fm.liveswitch.StreamTypeWrapper(local.getType()).toString())));var internalStreamMediaIndexForStream=streamMatcher.getInternalStreamMediaIndexForStream(type,indexInType);streamMatcher.setMatchingIndexes(internalStreamMediaIndexForStream,offererStreamMediaIndexForStream);var description2=mediaDescriptions[offererStreamMediaIndexForStream],error=processSdpMediaDescriptionForStreamHandler(local,description2,offererStreamMediaIndexForStream,isLocalDescription,description.getRenegotiation());if(!fm.liveswitch.Global.equals(error,null))return error;if(processSdpMediaDescriptionInternal&&(error=local.processSdpMediaDescription(sdpMessage,description2,offererStreamMediaIndexForStream,isLocalDescription,description.getIsOffer(),description.getRenegotiation()),!fm.liveswitch.Global.equals(error,null)))return error;indexInType++}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.parseSessionDescriptionForStreamChangesAndUpdateMids=function(newRemoteDescription,existingAudioStreams,existingVideoStreams,existingDataStreams){if(4==arguments.length){for(var renegotiation=newRemoteDescription.getRenegotiation(),mediaDescriptions=newRemoteDescription.getSdpMessage().getMediaDescriptions(),streamsByMid={},index=-1,num2=-1,num3=-1,_i=0,existingAudioStreams_1=existingAudioStreams;_i<existingAudioStreams_1.length;_i++){var local=existingAudioStreams_1[_i];fm.liveswitch.StringExtensions.isNullOrEmpty(local.getMediaStreamIdentification())||(streamsByMid[local.getMediaStreamIdentification()]=local)}for(var _a=0,existingVideoStreams_1=existingVideoStreams;_a<existingVideoStreams_1.length;_a++){local=existingVideoStreams_1[_a];fm.liveswitch.StringExtensions.isNullOrEmpty(local.getMediaStreamIdentification())||(streamsByMid[local.getMediaStreamIdentification()]=local)}for(var _b=0,existingDataStreams_1=existingDataStreams;_b<existingDataStreams_1.length;_b++){local=existingDataStreams_1[_b];fm.liveswitch.StringExtensions.isNullOrEmpty(local.getMediaStreamIdentification())||(streamsByMid[local.getMediaStreamIdentification()]=local)}for(var foundStreams=new Array,newStreams=new Array,_c=0,mediaDescriptions_1=mediaDescriptions;_c<mediaDescriptions_1.length;_c++){var description=mediaDescriptions_1[_c],mediaType=description.getMedia().getMediaType(),mediaStreamIdentifierAttribute=description.getMediaStreamIdentifierAttribute(),mid=fm.liveswitch.StringExtensions.empty;fm.liveswitch.Global.equals(mediaStreamIdentifierAttribute,null)||(mid=mediaStreamIdentifierAttribute.getIdentificationTag());var _var0=mediaType=fm.liveswitch.StringExtensions.trim(mediaType);do{if("audio"==_var0){index++,fm.liveswitch.Global.equals(mid,fm.liveswitch.StringExtensions.empty)&&(mid=fm.liveswitch.StringExtensions.concat("audio",fm.liveswitch.NumberExtensions.toString(index))),renegotiation?this.processMSection(foundStreams,newStreams,streamsByMid,description,mid):existingAudioStreams[index].setMediaStreamIdentification(mid);break}if("video"==_var0){num3++,fm.liveswitch.Global.equals(mid,fm.liveswitch.StringExtensions.empty)&&(mid=fm.liveswitch.StringExtensions.concat("video",fm.liveswitch.NumberExtensions.toString(num3))),renegotiation?this.processMSection(foundStreams,newStreams,streamsByMid,description,mid):existingVideoStreams[num3].setMediaStreamIdentification(mid);break}if(!fm.liveswitch.Global.equals(mediaType,"application"))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Unsupported stream type {0}",mediaType));num2++,fm.liveswitch.Global.equals(mid,fm.liveswitch.StringExtensions.empty)&&(mid=fm.liveswitch.StringExtensions.concat("application",fm.liveswitch.NumberExtensions.toString(num2))),renegotiation?this.processMSection(foundStreams,newStreams,streamsByMid,description,mid):existingDataStreams[num2].setMediaStreamIdentification(mid);break}while(0)}for(var _d=0,foundStreams_1=foundStreams;_d<foundStreams_1.length;_d++){local=foundStreams_1[_d];fm.liveswitch.HashExtensions.remove(streamsByMid,local.getMediaStreamIdentification())}for(var list3=new Array,_e=0,_f=fm.liveswitch.HashExtensions.getValues(streamsByMid);_e<_f.length;_e++){var local2=_f[_e];fm.liveswitch.ArrayExtensions.add(list3,local2)}return new fm.liveswitch.Pair(fm.liveswitch.ArrayExtensions.toArray(newStreams),fm.liveswitch.ArrayExtensions.toArray(list3))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.populateStreamTypeIndexes=function(descriptions,streams,streamMatcher){if(3==arguments.length){streamMatcher.reset(fm.liveswitch.ArrayExtensions.getCount(streams));var error=streamMatcher.populateInternalStreamTypeIndexes(streams);return fm.liveswitch.Global.equals(error,null)&&(error=streamMatcher.populateOffererStreamTypeIndexes(descriptions)),error}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.processDescription=function(description,isLocalDescription){if(2==arguments.length){var error=this.validateBaseDescription(description,isLocalDescription);if(!fm.liveswitch.Global.equals(error,null))return error;var mediaDescriptions=description.getSdpMessage().getMediaDescriptions();return description.getIsOffer()&&(error=this.populateStreamTypeIndexes(mediaDescriptions,this.__streamIndex,this.__streamMatcher),!fm.liveswitch.Global.equals(error,null))?error:(error=this.matchAndProcessDescriptionPerType(this.__audioStreamIndex,description,isLocalDescription,this.__streamMatcher,this.processSdpMediaDescriptionForStream.bind(this),!0),fm.liveswitch.Global.equals(error,null)?(error=this.matchAndProcessDescriptionPerType(this.__videoStreamIndex,description,isLocalDescription,this.__streamMatcher,this.processSdpMediaDescriptionForStream.bind(this),!0),fm.liveswitch.Global.equals(error,null)?(error=this.matchAndProcessDescriptionPerType(this.__dataStreamIndex,description,isLocalDescription,this.__streamMatcher,this.processSdpMediaDescriptionForStream.bind(this),!0),fm.liveswitch.Global.equals(error,null)?null:error):error):error)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.processMSection=function(foundStreams,newStreams,streamsByMid,mSection,mid){if(5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var local=null,_var0=new fm.liveswitch.Holder(local),_var1=fm.liveswitch.HashExtensions.tryGetValue(streamsByMid,mid,_var0);local=_var0.getValue(),_var1?fm.liveswitch.ArrayExtensions.add(foundStreams,local):fm.liveswitch.ArrayExtensions.add(newStreams,new fm.liveswitch.StreamDescription(mSection))},SessionDescriptionManagerBase.prototype.removeFromIndex=function(stream){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.ArrayExtensions.remove(this.__streamIndex,stream),fm.liveswitch.Global.equals(stream.getType(),fm.liveswitch.StreamType.Audio))fm.liveswitch.ArrayExtensions.remove(this.__audioStreamIndex,stream);else if(fm.liveswitch.Global.equals(stream.getType(),fm.liveswitch.StreamType.Video))fm.liveswitch.ArrayExtensions.remove(this.__videoStreamIndex,stream);else{if(!fm.liveswitch.Global.equals(stream.getType(),fm.liveswitch.StreamType.Application))throw new fm.liveswitch.Exception("Unsupported stream type.");fm.liveswitch.ArrayExtensions.remove(this.__dataStreamIndex,stream)}},SessionDescriptionManagerBase.prototype.removeStream=function(stream){if(1==arguments.length)return!!fm.liveswitch.HashExtensions.remove(this.getStreams(),stream.getId())&&(this.removeFromIndex(stream),this.resetStreamMatcher(),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.resetStreamMatcher=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__streamMatcher,null)?this.__streamMatcher=new fm.liveswitch.SessionDescriptionStreamMatcher(fm.liveswitch.HashExtensions.getCount(this.getStreams())):this.__streamMatcher.reset(fm.liveswitch.HashExtensions.getCount(this.getStreams()))},SessionDescriptionManagerBase.prototype.updateLocalAudioDescription=function(mediaDescription,audioStream){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.updateLocalDescription=function(localDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num=void 0,preferredCodecs=void 0,username=localDescription.getSdpMessage().getOrigin().getUsername();username=fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.trim(username),"-")?fm.liveswitch.StringExtensions.concat("LiveSwitch-",fm.liveswitch.Build.getVersion()):fm.liveswitch.StringExtensions.concat(username,"_LiveSwitch-",fm.liveswitch.Build.getVersion()),localDescription.getSdpMessage().getOrigin().setUsername(username);var audioStreams=this.getAudioStreams();if(!fm.liveswitch.Global.equals(audioStreams,null))for(num=0;num<audioStreams.length;num++){var audioStream=audioStreams[num];audioStream.getOpusDisabled()&&localDescription.getSdpMessage().getAudioDescriptions()[num].purgeFormat(fm.liveswitch.AudioFormat.getOpusName()),audioStream.getG722Disabled()&&localDescription.getSdpMessage().getAudioDescriptions()[num].purgeFormat(fm.liveswitch.AudioFormat.getG722Name()),audioStream.getPcmuDisabled()&&localDescription.getSdpMessage().getAudioDescriptions()[num].purgeFormat(fm.liveswitch.AudioFormat.getPcmuName()),audioStream.getPcmaDisabled()&&localDescription.getSdpMessage().getAudioDescriptions()[num].purgeFormat(fm.liveswitch.AudioFormat.getPcmaName()),preferredCodecs=audioStream.getPreferredCodecs(),fm.liveswitch.Global.equals(preferredCodecs,null)||localDescription.getSdpMessage().getAudioDescriptions()[num].orderFormats(preferredCodecs),this.updateLocalAudioDescription(localDescription.getSdpMessage().getAudioDescriptions()[num],audioStream)}var videoStreams=this.getVideoStreams();if(!fm.liveswitch.Global.equals(videoStreams,null))for(num=0;num<videoStreams.length;num++){var videoStream=videoStreams[num];videoStream.getVp8Disabled()&&localDescription.getSdpMessage().getVideoDescriptions()[num].purgeFormat(fm.liveswitch.VideoFormat.getVp8Name()),videoStream.getVp9Disabled()&&localDescription.getSdpMessage().getVideoDescriptions()[num].purgeFormat(fm.liveswitch.VideoFormat.getVp9Name()),videoStream.getH264Disabled()&&localDescription.getSdpMessage().getVideoDescriptions()[num].purgeFormat(fm.liveswitch.VideoFormat.getH264Name()),videoStream.getH265Disabled()&&localDescription.getSdpMessage().getVideoDescriptions()[num].purgeFormat(fm.liveswitch.VideoFormat.getH265Name()),preferredCodecs=videoStream.getPreferredCodecs(),fm.liveswitch.Global.equals(preferredCodecs,null)||localDescription.getSdpMessage().getVideoDescriptions()[num].orderFormats(preferredCodecs),this.updateLocalVideoDescription(localDescription.getSdpMessage().getVideoDescriptions()[num],videoStream)}},SessionDescriptionManagerBase.prototype.updateLocalVideoDescription=function(mediaDescription,videoStream){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase.prototype.validateBaseDescription=function(description,isLocalDescription){if(2==arguments.length){var sdpMessage=description.getSdpMessage();if(fm.liveswitch.Global.equals(sdpMessage,null))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.LocalDescriptionError,new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("{0} session description is empty.",isLocalDescription?"Local":"Remote")));var streams=this.getStreams();if(fm.liveswitch.Global.equals(streams,null)||fm.liveswitch.Global.equals(fm.liveswitch.HashExtensions.getCount(streams),0))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,new fm.liveswitch.Exception("At least one local stream is required for the connection to conduct signalling exchange."));var mediaDescriptions=sdpMessage.getMediaDescriptions();if(fm.liveswitch.Global.equals(mediaDescriptions,null)||fm.liveswitch.Global.equals(mediaDescriptions.length,0))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,new fm.liveswitch.Exception("At least one media description is required for the connection to conduct signalling exchange."));var count=fm.liveswitch.HashExtensions.getCount(streams),length_6=mediaDescriptions.length;return fm.liveswitch.Global.equals(count,length_6)?null:new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("There is a mismatch between the number of local streams ({0}) and the number of media descriptions ({1}).",fm.liveswitch.NumberExtensions.toString(count),fm.liveswitch.NumberExtensions.toString(length_6))))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionManagerBase}();liveswitch.SessionDescriptionManagerBase=SessionDescriptionManagerBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SessionDescriptionManager=function(_super){function SessionDescriptionManager(){var _this=_super.call(this)||this;return _this._streams={},_this}return __extends(SessionDescriptionManager,_super),SessionDescriptionManager.prototype.getTypeString=function(){return"[fm.liveswitch.SessionDescriptionManager],"+_super.prototype.getTypeString.call(this)},SessionDescriptionManager.prototype.getStreams=function(){return this._streams},SessionDescriptionManager.prototype.getAudioStreams=function(){var audioStreams=[];return this.__streamIndex.forEach((function(stream){stream.getType()==fm.liveswitch.StreamType.Audio&&audioStreams.push(stream)})),audioStreams},SessionDescriptionManager.prototype.getVideoStreams=function(){var videoStreams=[];return this.__streamIndex.forEach((function(stream){stream.getType()==fm.liveswitch.StreamType.Video&&videoStreams.push(stream)})),videoStreams},SessionDescriptionManager.prototype.getDataStreams=function(){var dataStreams=[];return this.__streamIndex.forEach((function(stream){stream.getType()==fm.liveswitch.StreamType.Application&&dataStreams.push(stream)})),dataStreams},SessionDescriptionManager.prototype.processSdpMediaDescriptionForStream=function(stream,sdpMediaDescription,sdpMediaIndex,isLocalDescription,isRenegotiation){return null},SessionDescriptionManager}(fm.liveswitch.SessionDescriptionManagerBase);liveswitch.SessionDescriptionManager=SessionDescriptionManager}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoStream=function(_super){function VideoStream(){var _this=this;if(0==arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var localTrack=null,localMedia=null,remoteTrack=null,remoteMedia=null;if(arguments.length>=1&&fm.liveswitch.Util.isNullOrUndefined(arguments[0]));else if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoTrack]"))localTrack=arguments[0];else if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.LocalMedia]"))localTrack=(localMedia=arguments[0]).getVideoTrack();else if(arguments.length>=1&&fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.RemoteMedia]"))remoteTrack=(remoteMedia=arguments[0]).getVideoTrack();else if(arguments.length>=1)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");if(arguments.length>=2&&fm.liveswitch.Util.isNullOrUndefined(arguments[1]));else if(arguments.length>=2&&fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoTrack]"))remoteTrack=arguments[1];else if(arguments.length>=2&&fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.RemoteMedia]"))remoteTrack=(remoteMedia=arguments[1]).getVideoTrack();else if(arguments.length>=2)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");if((_this=_super.call(this,localTrack,remoteTrack)||this).localMedia=localMedia,_this.remoteMedia=remoteMedia,fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginVideoStream(_this,null==localTrack?null:localTrack._getInternal(),null==remoteTrack?null:remoteTrack._getInternal());else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcVideoStream(_this,null==localTrack?null:localTrack._getInternal(),null==remoteTrack?null:remoteTrack._getInternal())}return _this}return __extends(VideoStream,_super),VideoStream.prototype.getTypeString=function(){return"[fm.liveswitch.VideoStream],"+_super.prototype.getTypeString.call(this)},VideoStream.prototype._getInternal=function(){return this._internal},VideoStream.prototype.getLocalMedia=function(){return this.localMedia},VideoStream.prototype.getRemoteMedia=function(){return this.remoteMedia},VideoStream.prototype.getVp8Disabled=function(){return this._getInternal().getVp8Disabled()},VideoStream.prototype.getVp9Disabled=function(){return this._getInternal().getVp9Disabled()},VideoStream.prototype.getH264Disabled=function(){return this._getInternal().getH264Disabled()},VideoStream.prototype.getH265Disabled=function(){return this._getInternal().getH265Disabled()},VideoStream.prototype.setVp8Disabled=function(value){return this._getInternal().setVp8Disabled(value)},VideoStream.prototype.setVp9Disabled=function(value){return this._getInternal().setVp9Disabled(value)},VideoStream.prototype.setH264Disabled=function(value){return this._getInternal().setH264Disabled(value)},VideoStream.prototype.setH265Disabled=function(value){return this._getInternal().setH265Disabled(value)},VideoStream.prototype.addOnDiscardKeyFrameRequest=function(value){this._getInternal().addOnDiscardKeyFrameRequest(value)},VideoStream.prototype.removeOnDiscardKeyFrameRequest=function(value){this._getInternal().removeOnDiscardKeyFrameRequest(value)},VideoStream.prototype.raiseKeyFrameRequest=function(synchronizationSources){this._getInternal().raiseKeyFrameRequest(synchronizationSources)},VideoStream}(fm.liveswitch.MediaStream);liveswitch.VideoStream=VideoStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoTrack=function(_super){function VideoTrack(media,internalMedia){var _this=_super.call(this,media)||this;if(fm.liveswitch.Util.isNullOrUndefined(media))throw new fm.liveswitch.Exception("Media cannot be null.");if(fm.liveswitch.Plugin.useActiveX())_this._internal=new fm.liveswitch.PluginVideoTrack(_this,media._getInternal()||internalMedia);else{if(!fm.liveswitch.Plugin.useNative())throw new fm.liveswitch.Exception("Browser does not support WebRTC/ORTC and no plugin found.");_this._internal=new fm.liveswitch.WebRtcVideoTrack(_this,media._getInternal()||internalMedia)}return _this}return __extends(VideoTrack,_super),VideoTrack.prototype.getTypeString=function(){return"[fm.liveswitch.VideoTrack],"+_super.prototype.getTypeString.call(this)},VideoTrack.prototype._getInternal=function(){return this._internal},VideoTrack.prototype.addOnSize=function(value){return this._internal.addOnSize(value)},VideoTrack.prototype.getSize=function(){return this._internal.getSize()},VideoTrack.prototype.grabFrame=function(){return this._internal.grabFrame()},VideoTrack.prototype.removeOnSize=function(value){return this._internal.removeOnSize(value)},VideoTrack}(fm.liveswitch.MediaTrack);liveswitch.VideoTrack=VideoTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcStreamBase=function(_super){function WebRtcStreamBase(type){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type_3=__arguments[0];return(_this=_super.call(this)||this).fmliveswitchWebRtcStreamBaseInit(),_this.__id=fm.liveswitch.Utility.generateId(),_this.__stateLock=new Object,_this.setType(type_3),_this.setConnectedTimestamp(-1),_this.__stateMachine=new fm.liveswitch.StreamStateMachine,_this}return __extends(WebRtcStreamBase,_super),WebRtcStreamBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcStreamBase],"+_super.prototype.getTypeString.call(this)},WebRtcStreamBase.prototype.fmliveswitchWebRtcStreamBaseInit=function(){var _this=this;this.__onDirectionChange=[],this.__onStateChange=[],this._connectedTimestamp=0,this._onDirectionChange=function(){for(var _i=0,_a=_this.__onDirectionChange;_i<_a.length;_i++){(0,_a[_i])()}},this._onStateChange=function(){for(var _i=0,_a=_this.__onStateChange;_i<_a.length;_i++){(0,_a[_i])()}}},WebRtcStreamBase.prototype.addOnDirectionChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onDirectionChange,value)},WebRtcStreamBase.prototype.addOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStateChange,value)},WebRtcStreamBase.prototype.getConnectedTimestamp=function(){if(0==arguments.length)return this._connectedTimestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getConnectionId=function(){if(0==arguments.length)return this._connectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getExternalId=function(){if(0==arguments.length)return this._externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getId=function(){if(0==arguments.length)return this.__id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getIsTerminated=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Closed)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Failed);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getIsTerminating=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Closing)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Failing);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getIsTerminatingOrTerminated=function(){if(0==arguments.length)return this.getIsTerminating()||this.getIsTerminated();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getLocalReceive=function(){if(0==arguments.length){var localDirection=this.getLocalDirection();return fm.liveswitch.Global.equals(localDirection,fm.liveswitch.StreamDirection.SendReceive)||fm.liveswitch.Global.equals(localDirection,fm.liveswitch.StreamDirection.ReceiveOnly)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getLocalSend=function(){if(0==arguments.length){var localDirection=this.getLocalDirection();return fm.liveswitch.Global.equals(localDirection,fm.liveswitch.StreamDirection.SendReceive)||fm.liveswitch.Global.equals(localDirection,fm.liveswitch.StreamDirection.SendOnly)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getMediaDescriptionId=function(){if(0==arguments.length)return this.getMediaStreamIdentification();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getMediaStreamIdentification=function(){if(0==arguments.length)return this.__mediaStreamIdentification;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getRemoteReceive=function(){if(0==arguments.length){var remoteDirection=this.getRemoteDirection();return fm.liveswitch.Global.equals(remoteDirection,fm.liveswitch.StreamDirection.SendReceive)||fm.liveswitch.Global.equals(remoteDirection,fm.liveswitch.StreamDirection.ReceiveOnly)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getRemoteSend=function(){if(0==arguments.length){var remoteDirection=this.getRemoteDirection();return fm.liveswitch.Global.equals(remoteDirection,fm.liveswitch.StreamDirection.SendReceive)||fm.liveswitch.Global.equals(remoteDirection,fm.liveswitch.StreamDirection.SendOnly)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getState=function(){if(0==arguments.length)return this.__stateMachine.getState();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getStateLock=function(){if(0==arguments.length)return this.__stateLock;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.logInvalidStateTransition=function(state){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.getIsDebugEnabled()&&fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Stream {0} state for connection {1} is currently {2}. Cannot transition to {3} state.",[this.getId(),this.getConnectionId(),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.StreamStateWrapper(this.getState()).toString()),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.StreamStateWrapper(state).toString())]))},WebRtcStreamBase.prototype.processStateChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.processStateLockChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.processUpdateToMediaStreamIdentification=function(oldValue){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.raiseDirectionChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onDirectionChange=this._onDirectionChange;if(!fm.liveswitch.Global.equals(onDirectionChange,null))try{onDirectionChange()}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising direction change to the application code for stream {0}.",this.getId()),exception)}},WebRtcStreamBase.prototype.raiseStateChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onStateChange=this._onStateChange;if(!fm.liveswitch.Global.equals(onStateChange,null))try{onStateChange()}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising state change to the application code for stream {0}.",this.getId()),exception)}},WebRtcStreamBase.prototype.removeOnDirectionChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onDirectionChange,value)},WebRtcStreamBase.prototype.removeOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStateChange,value)},WebRtcStreamBase.prototype.setConnectedTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._connectedTimestamp=fm.liveswitch.Global.toInt(value)},WebRtcStreamBase.prototype.setConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionId=value},WebRtcStreamBase.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._externalId=value},WebRtcStreamBase.prototype.setLocalReceive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var localDirection=this.getLocalDirection(),_var0=localDirection;do{if(_var0==fm.liveswitch.StreamDirection.SendReceive){value||this.setLocalDirection(fm.liveswitch.StreamDirection.SendOnly);break}if(_var0==fm.liveswitch.StreamDirection.Inactive||_var0==fm.liveswitch.StreamDirection.Unset){value?this.setLocalDirection(fm.liveswitch.StreamDirection.ReceiveOnly):this.setLocalDirection(fm.liveswitch.StreamDirection.SendOnly);break}if(_var0==fm.liveswitch.StreamDirection.SendOnly){value&&this.setLocalDirection(fm.liveswitch.StreamDirection.SendReceive);break}fm.liveswitch.Global.equals(localDirection,fm.liveswitch.StreamDirection.ReceiveOnly)&&!value&&this.setLocalDirection(fm.liveswitch.StreamDirection.Inactive);break}while(0)},WebRtcStreamBase.prototype.setLocalSend=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var localDirection=this.getLocalDirection(),_var0=localDirection;do{if(_var0==fm.liveswitch.StreamDirection.SendReceive){value||this.setLocalDirection(fm.liveswitch.StreamDirection.ReceiveOnly);break}if(_var0==fm.liveswitch.StreamDirection.Inactive||_var0==fm.liveswitch.StreamDirection.Unset){value?this.setLocalDirection(fm.liveswitch.StreamDirection.SendOnly):this.setLocalDirection(fm.liveswitch.StreamDirection.ReceiveOnly);break}if(_var0==fm.liveswitch.StreamDirection.ReceiveOnly){value&&this.setLocalDirection(fm.liveswitch.StreamDirection.SendReceive);break}fm.liveswitch.Global.equals(localDirection,fm.liveswitch.StreamDirection.SendOnly)&&!value&&this.setLocalDirection(fm.liveswitch.StreamDirection.Inactive);break}while(0)},WebRtcStreamBase.prototype.setMediaStreamIdentification=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(this.__mediaStreamIdentification,value)){var oldValue=this.__mediaStreamIdentification;this.__mediaStreamIdentification=value,this.processUpdateToMediaStreamIdentification(oldValue)}},WebRtcStreamBase.prototype.setState=function(state){if(1==arguments.length)return this.__stateMachine.transition(state)?(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Connected)&&this.setConnectedTimestamp(fm.liveswitch.ManagedStopwatch.getTimestamp()),fm.liveswitch.Log.getIsInfoEnabled()&&(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Connected)&&fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("{0} stream {1} for connection {2} took {3}ms to connect (connectivity checks and secure key exchange).",[new fm.liveswitch.StreamTypeWrapper(this.getType()).toString(),this.getId(),this.getConnectionId(),fm.liveswitch.NumberExtensions.toString(this.__stateMachine.getLastStateMillis())])),fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Setting {0} stream {1} state for connection {2} to {3}.",[fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()),this.getId(),this.getConnectionId(),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.StreamStateWrapper(this.getState()).toString())]))),this.raiseStateChange(),this.processStateChange(),!0):(fm.liveswitch.Global.equals(state,this.getState())||fm.liveswitch.Global.equals(state,fm.liveswitch.StreamState.Closing)&&(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Closed)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.StreamState.Failed))||this.logInvalidStateTransition(state),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase.prototype.setStateLock=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__stateLock,value)||(this.__stateLock=value,this.processStateLockChange())},WebRtcStreamBase.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},WebRtcStreamBase.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},WebRtcStreamBase.prototype.toString=function(){if(0==arguments.length)return this.getLabel();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcStreamBase}(fm.liveswitch.Dynamic);liveswitch.WebRtcStreamBase=WebRtcStreamBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcStream=function(_super){function WebRtcStream(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(WebRtcStream,_super),WebRtcStream.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcStream],"+_super.prototype.getTypeString.call(this)},WebRtcStream.prototype.getConnection=function(){return this._connection},WebRtcStream.prototype.setConnection=function(remoteTrack){this._connection=remoteTrack},WebRtcStream.prototype.getMediaDescriptionManager=function(){return null==this._mediaDescriptionManager&&(this._mediaDescriptionManager=new fm.liveswitch.MediaDescriptionManager),this._mediaDescriptionManager},WebRtcStream.prototype.setMediaDescriptionManager=function(manager){this._mediaDescriptionManager=manager},WebRtcStream.prototype.setTransportInfo=function(transportInfo){this._transportInfo=transportInfo},WebRtcStream.prototype.getTransportInfo=function(){return this._transportInfo},WebRtcStream}(fm.liveswitch.WebRtcStreamBase);liveswitch.WebRtcStream=WebRtcStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcMediaStreamBase=function(_super){function WebRtcMediaStreamBase(type){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type_4=__arguments[0];return(_this=_super.call(this,type_4)||this).fmliveswitchWebRtcMediaStreamBaseInit(),_this._renegotiationLock=new Object,_this.__maxSendBitrate=-1,_this.__maxReceiveBitrate=-1,_this.__pendingLocalDirection=fm.liveswitch.StreamDirection.Inactive,_this.__disabledCodecs={},_this.setLocalDirection(fm.liveswitch.StreamDirection.Unset),_this.setRemoteDirection(fm.liveswitch.StreamDirection.Unset),_this.setLocalBandwidth(-1),_this.setRemoteBandwidth(-1),fm.liveswitch.Global.equals(fm.liveswitch.Platform.getInstance().getSourceLanguage(),fm.liveswitch.SourceLanguage.TypeScript)||(_this.__localCanonicalName=fm.liveswitch.Utility.generateId()),_this}return __extends(WebRtcMediaStreamBase,_super),WebRtcMediaStreamBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcMediaStreamBase],"+_super.prototype.getTypeString.call(this)},WebRtcMediaStreamBase.prototype.fmliveswitchWebRtcMediaStreamBaseInit=function(){var _this=this;this.__maxReceiveBitrate=0,this.__maxSendBitrate=0,this.__onLocalEncodingDisabled=[],this.__onLocalEncodingEnabled=[],this._localBandwidth=0,this._onLocalEncodingDisabled=function(p0){for(var _i=0,_a=_this.__onLocalEncodingDisabled;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onLocalEncodingEnabled=function(p0){for(var _i=0,_a=_this.__onLocalEncodingEnabled;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._remoteBandwidth=0,this._remoteMuted=!1,this._renegotiationPending=!1},WebRtcMediaStreamBase.prototype.addOnLocalEncodingDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onLocalEncodingDisabled,value)},WebRtcMediaStreamBase.prototype.addOnLocalEncodingEnabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onLocalEncodingEnabled,value)},WebRtcMediaStreamBase.prototype.changeDirection=function(newDirection){if(1==arguments.length){var message="An attempt has been made to modify exisiting media stream direction; however, existing stream capabilities do not support a new setting.";if(fm.liveswitch.Global.equals(this.getDirectionCapabilities(),fm.liveswitch.StreamDirection.Inactive)){if(!fm.liveswitch.Global.equals(newDirection,fm.liveswitch.StreamDirection.Inactive))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.InvalidStreamDirectionChange,new fm.liveswitch.Exception(message))}else if(fm.liveswitch.Global.equals(this.getDirectionCapabilities(),fm.liveswitch.StreamDirection.SendOnly)){if(!fm.liveswitch.Global.equals(newDirection,fm.liveswitch.StreamDirection.Inactive)&&!fm.liveswitch.Global.equals(newDirection,fm.liveswitch.StreamDirection.SendOnly))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.InvalidStreamDirectionChange,new fm.liveswitch.Exception(message))}else if(fm.liveswitch.Global.equals(this.getDirectionCapabilities(),fm.liveswitch.StreamDirection.ReceiveOnly)&&!fm.liveswitch.Global.equals(newDirection,fm.liveswitch.StreamDirection.Inactive)&&!fm.liveswitch.Global.equals(newDirection,fm.liveswitch.StreamDirection.ReceiveOnly))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.InvalidStreamDirectionChange,new fm.liveswitch.Exception(message));return this.setPendingLocalDirection(newDirection),this.setRenegotiationPending(!0),null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.extractCanonicalName=function(mediaDescription,isLocalDescription){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var ssrcAttributes=mediaDescription.getSsrcAttributes(),str=null,_i=0,ssrcAttributes_1=ssrcAttributes;_i<ssrcAttributes_1.length;_i++){var attribute=ssrcAttributes_1[_i];if(fm.liveswitch.Global.equals(attribute.getName(),fm.liveswitch.sdp.rtp.SsrcAttributeName.getCName())){str=attribute.getValue();break}}isLocalDescription?this.setLocalCanonicalName(str):this.setRemoteCanonicalName(str)},WebRtcMediaStreamBase.prototype.getCanonicalName=function(){if(0==arguments.length)return fm.liveswitch.Log.warn("Getting the value of MediaStream.CanonicalName is deprecated. Get the value of MediaStream.LocalCanonicalName instead."),this.getLocalCanonicalName();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getCodecDisabled=function(name){if(1==arguments.length){var key=fm.liveswitch.StringExtensions.toLower(name);return fm.liveswitch.HashExtensions.containsKey(this.__disabledCodecs,key)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getDirection=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getLocalDirection(),fm.liveswitch.StreamDirection.SendReceive)?fm.liveswitch.Global.equals(this.getRemoteDirection(),fm.liveswitch.StreamDirection.ReceiveOnly)?fm.liveswitch.StreamDirection.SendOnly:fm.liveswitch.Global.equals(this.getRemoteDirection(),fm.liveswitch.StreamDirection.SendOnly)?fm.liveswitch.StreamDirection.ReceiveOnly:this.getRemoteDirection():fm.liveswitch.Global.equals(this.getLocalDirection(),fm.liveswitch.StreamDirection.SendOnly)?fm.liveswitch.Global.equals(this.getRemoteDirection(),fm.liveswitch.StreamDirection.Inactive)||fm.liveswitch.Global.equals(this.getRemoteDirection(),fm.liveswitch.StreamDirection.SendOnly)?fm.liveswitch.StreamDirection.Inactive:this.getLocalDirection():fm.liveswitch.Global.equals(this.getLocalDirection(),fm.liveswitch.StreamDirection.ReceiveOnly)?fm.liveswitch.Global.equals(this.getRemoteDirection(),fm.liveswitch.StreamDirection.Inactive)||fm.liveswitch.Global.equals(this.getRemoteDirection(),fm.liveswitch.StreamDirection.ReceiveOnly)?fm.liveswitch.StreamDirection.Inactive:this.getLocalDirection():fm.liveswitch.StreamDirection.Inactive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getInfo=function(){if(0==arguments.length){var info2=new fm.liveswitch.MediaStreamInfo;info2.setId(_super.prototype.getId.call(this)),info2.setTag(_super.prototype.getTag.call(this)),info2.setSendMuted(this.getInputMuted()),info2.setSendDisabled(fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getDirection())),info2.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getDirection()));var info=info2;return this.populateInfo(info),info}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getLabel=function(){if(0==arguments.length){var _var0=_super.prototype.getType.call(this);return _var0==fm.liveswitch.StreamType.Audio?"Audio Stream":_var0==fm.liveswitch.StreamType.Video?"Video Stream":_var0==fm.liveswitch.StreamType.Application?"Application Stream":_var0==fm.liveswitch.StreamType.Message?"Message Stream":_var0==fm.liveswitch.StreamType.Text?"Text Stream":"Unknown Stream"}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getLocalBandwidth=function(){if(0==arguments.length)return this._localBandwidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getLocalCanonicalName=function(){if(0==arguments.length)return this.__localCanonicalName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getLocalDirection=function(){if(0==arguments.length)return this.__localDirection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getLocalMuted=function(){if(0==arguments.length)return this.getMuted();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getMaxReceiveBitrate=function(){if(0==arguments.length)return this.__maxReceiveBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getMaxSendBitrate=function(){if(0==arguments.length)return this.__maxSendBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getMuted=function(){if(0==arguments.length)return this.getInputMuted();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getPendingLocalDirection=function(){if(0==arguments.length)return this.__pendingLocalDirection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getPreferredCodecs=function(){if(0==arguments.length)return this._preferredCodecs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getRemoteBandwidth=function(){if(0==arguments.length)return this._remoteBandwidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getRemoteCanonicalName=function(){if(0==arguments.length)return this._remoteCanonicalName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getRemoteDirection=function(){if(0==arguments.length)return this.__remoteDirection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getRemoteEncoding=function(){if(0==arguments.length)return this._remoteEncoding;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getRemoteMuted=function(){if(0==arguments.length)return this._remoteMuted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.getRenegotiationPending=function(){if(0==arguments.length)return this._renegotiationPending;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaStreamBase.prototype.raiseLocalEncodingDisabled=function(encoding){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onLocalEncodingDisabled=this._onLocalEncodingDisabled;fm.liveswitch.Global.equals(onLocalEncodingDisabled,null)||onLocalEncodingDisabled(encoding)},WebRtcMediaStreamBase.prototype.raiseLocalEncodingEnabled=function(encoding){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onLocalEncodingEnabled=this._onLocalEncodingEnabled;fm.liveswitch.Global.equals(onLocalEncodingEnabled,null)||onLocalEncodingEnabled(encoding)},WebRtcMediaStreamBase.prototype.removeOnLocalEncodingDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onLocalEncodingDisabled,value)},WebRtcMediaStreamBase.prototype.removeOnLocalEncodingEnabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onLocalEncodingEnabled,value)},WebRtcMediaStreamBase.prototype.setCodecDisabled=function(name,disabled){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var key=fm.liveswitch.StringExtensions.toLower(name);disabled?this.__disabledCodecs[key]=new Object:fm.liveswitch.HashExtensions.remove(this.__disabledCodecs,key)},WebRtcMediaStreamBase.prototype.setLocalBandwidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._localBandwidth=fm.liveswitch.Global.toInt(value)},WebRtcMediaStreamBase.prototype.setLocalCanonicalName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__localCanonicalName=value},WebRtcMediaStreamBase.prototype.setLocalDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var direction=this.getDirection();this.__localDirection=value,fm.liveswitch.Global.equals(direction,this.getDirection())||_super.prototype.raiseDirectionChange.call(this)},WebRtcMediaStreamBase.prototype.setLocalMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setMuted(value)},WebRtcMediaStreamBase.prototype.setMaxReceiveBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]);var localBandwidth=fm.liveswitch.Global.toInt(this.getLocalBandwidth());!fm.liveswitch.Global.equals(localBandwidth,-1)&&value>localBandwidth&&(value=fm.liveswitch.Global.toInt(localBandwidth)),value<0&&(value=fm.liveswitch.Global.toInt(-1)),this.__maxReceiveBitrate=fm.liveswitch.Global.toInt(value)},WebRtcMediaStreamBase.prototype.setMaxSendBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]);var remoteBandwidth=fm.liveswitch.Global.toInt(this.getRemoteBandwidth());!fm.liveswitch.Global.equals(remoteBandwidth,-1)&&value>remoteBandwidth&&(value=fm.liveswitch.Global.toInt(remoteBandwidth)),value<0&&(value=fm.liveswitch.Global.toInt(-1)),this.__maxSendBitrate=fm.liveswitch.Global.toInt(value)},WebRtcMediaStreamBase.prototype.setMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setInputMuted(value)},WebRtcMediaStreamBase.prototype.setPendingLocalDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__pendingLocalDirection=value},WebRtcMediaStreamBase.prototype.setPreferredCodecs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._preferredCodecs=value},WebRtcMediaStreamBase.prototype.setRemoteBandwidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._remoteBandwidth=fm.liveswitch.Global.toInt(value)},WebRtcMediaStreamBase.prototype.setRemoteCanonicalName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCanonicalName=value},WebRtcMediaStreamBase.prototype.setRemoteDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var direction=this.getDirection();this.__remoteDirection=value,fm.liveswitch.Global.equals(direction,this.getDirection())||_super.prototype.raiseDirectionChange.call(this)},WebRtcMediaStreamBase.prototype.setRemoteEncoding=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteEncoding=value},WebRtcMediaStreamBase.prototype.setRemoteMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteMuted=value},WebRtcMediaStreamBase.prototype.setRenegotiationPending=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._renegotiationPending=value},WebRtcMediaStreamBase}(fm.liveswitch.WebRtcStream);liveswitch.WebRtcMediaStreamBase=WebRtcMediaStreamBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcMediaStream=function(_super){function WebRtcMediaStream(external,localTrack,remoteTrack,type){var _this=_super.call(this,type)||this;return _this._onDiscardBitrateRequestValues=[],_this._onDiscardBitrateNotificationValues=[],_this._deactivatedByServer=null,_this._maxVideoSize=new fm.liveswitch.Size,_this._sender=null,_this._receiver=null,_this._singleSendBitrate=-1,_this._sendEncodings=null,_this._receiveEncodings=null,_this._simulcastMode=fm.liveswitch.SimulcastMode.Disabled,null==localTrack?_this.setLocalDirection(fm.liveswitch.StreamDirection.ReceiveOnly):_this.setLocalDirection(fm.liveswitch.StreamDirection.SendReceive),_this.setRemoteDirection(fm.liveswitch.StreamDirection.SendReceive),_this.setLocalTrack(localTrack),_this.setRemoteTrack(remoteTrack),localTrack&&localTrack.addOutput(_this),remoteTrack&&remoteTrack.addInput(_this),_this.addOnStateChange((function(){_this.getState()!=fm.liveswitch.StreamState.Closed&&_this.getState()!=fm.liveswitch.StreamState.Failed||(localTrack&&localTrack.removeOutput(_this),remoteTrack&&remoteTrack.removeInput(_this))})),_this}return __extends(WebRtcMediaStream,_super),WebRtcMediaStream.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcMediaStream],"+_super.prototype.getTypeString.call(this)},WebRtcMediaStream.prototype.getLocalTrack=function(){return this._localTrack},WebRtcMediaStream.prototype.setLocalTrack=function(localTrack){this._localTrack=localTrack},WebRtcMediaStream.prototype.getRemoteTrack=function(){return this._remoteTrack},WebRtcMediaStream.prototype.setRemoteTrack=function(remoteTrack){this._remoteTrack=remoteTrack},WebRtcMediaStream.prototype.setInputMuted=function(muted){this._localTrack&&this._localTrack.setMuted(muted)},WebRtcMediaStream.prototype.getInputMuted=function(){return!!this._localTrack&&this._localTrack.getMuted()},WebRtcMediaStream.prototype.setOutputMuted=function(muted){this._remoteTrack&&this._remoteTrack.setMuted(muted)},WebRtcMediaStream.prototype.getOutputMuted=function(){return!!this._remoteTrack&&this._remoteTrack.getMuted()},WebRtcMediaStream.prototype.setMaxWidthAndHeight=function(width,height){if(width>0&&height>0){if(width<height){var temp=width;width=height,height=temp}this._maxVideoSize.getWidth()*this._maxVideoSize.getHeight()<width*height&&(this._maxVideoSize.setWidth(width),this._maxVideoSize.setHeight(height))}},WebRtcMediaStream.prototype.populateInfo=function(info){(info.setMaxFrameWidth(this._maxVideoSize.getWidth()),info.setMaxFrameHeight(this._maxVideoSize.getHeight()),this._sender&&this._sender.getParameters)&&((params=this._sender.getParameters())&&(codecs=params.codecs)&&info.setSendFormats(this.toFormatInfos(codecs)));var params,codecs,sendEncodings=this.getSendEncodingInfos();(sendEncodings&&info.setSendEncodings(sendEncodings),this._receiver&&this._receiver.getParameters)&&((params=this._receiver.getParameters())&&(codecs=params.codecs)&&info.setReceiveFormats(this.toFormatInfos(codecs)));var receiveEncodings=this.getReceiveEncodingInfos();receiveEncodings&&info.setReceiveEncodings(receiveEncodings)},WebRtcMediaStream.prototype.toFormatInfos=function(codecs){for(var formatInfos=[],_i=0,codecs_1=codecs;_i<codecs_1.length;_i++){var codec=codecs_1[_i],name_3=codec.mimeType;if(name_3){-1!=name_3.indexOf("/")&&(name_3=name_3.split("/")[1]);var formatInfo=null;formatInfo=this.getType()==fm.liveswitch.StreamType.Audio?new fm.liveswitch.FormatInfo(name_3,codec.clockRate,codec.channels):new fm.liveswitch.FormatInfo(name_3,codec.clockRate),formatInfos.push(formatInfo)}}return formatInfos},WebRtcMediaStream.prototype.getSender=function(){return this._sender},WebRtcMediaStream.prototype.setSender=function(value,applySendEncodings){this._sender=value,applySendEncodings&&this.applySendEncodings()},WebRtcMediaStream.prototype.getReceiver=function(){return this._receiver},WebRtcMediaStream.prototype.setReceiver=function(value){this._receiver=value},WebRtcMediaStream.prototype.getSingleSendBitrate=function(){return this._singleSendBitrate},WebRtcMediaStream.prototype.getSendEncodings=function(){return this._sendEncodings},WebRtcMediaStream.prototype.setSendEncodings=function(sendEncodings){if(this._sendEncodings=sendEncodings,null==this._deactivatedByServer){this._deactivatedByServer=[];for(var i=0;i<sendEncodings.length;i++)this._deactivatedByServer.push(!1)}this.applySendEncodings()},WebRtcMediaStream.prototype.applySendEncodings=function(sendEncodingIndex){var _this=this;if(this.getSimulcastMode()==fm.liveswitch.SimulcastMode.Disabled)return null;var sendEncodings=this._sendEncodings;if(!sendEncodings||0==sendEncodings.length)return null;var sender=this._sender;if(!sender||!sender.getParameters)return null;var params=sender.getParameters();if(!params)return null;var nativeSendEncodings=params.encodings;if(nativeSendEncodings&&nativeSendEncodings.length>0)if(nativeSendEncodings.length<=sendEncodings.length){for(var i=0;i<nativeSendEncodings.length;i++)if((null==sendEncodingIndex||sendEncodingIndex==i)&&this.updateNativeEncoding(nativeSendEncodings[i],sendEncodings[i],this._deactivatedByServer[i])){var encodingInfo=new fm.liveswitch.EncodingInfo;this.updateEncodingInfo(encodingInfo,sendEncodings[i],!0);var rid="rid"in nativeSendEncodings[i]?nativeSendEncodings[i].rid:null;null!=rid&&encodingInfo.setRtpStreamId(rid);var ssrc="ssrc"in nativeSendEncodings[i]?nativeSendEncodings[i].ssrc:-1;if(-1!=ssrc&&encodingInfo.setSynchronizationSource(ssrc),nativeSendEncodings[i].active)this.raiseLocalEncodingEnabled(encodingInfo),-1==ssrc&&null==rid?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding has resumed."):-1==ssrc?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with RTP stream ID "+rid+" has resumed."):null==rid?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with SSRC "+ssrc+" has resumed."):fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with SSRC "+ssrc+" and RTP stream ID "+rid+" has resumed.");else{this.raiseLocalEncodingDisabled(encodingInfo),-1==ssrc&&null==rid?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding has paused."):-1==ssrc?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with RTP stream ID "+rid+" has paused."):null==rid?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with SSRC "+ssrc+" has paused."):fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with SSRC "+ssrc+" and RTP stream ID "+rid+" has paused.");var bitrateNotification=new fm.liveswitch.BitrateNotification;bitrateNotification.setBitrate(0),null!=rid&&bitrateNotification.setRtpStreamId(rid),-1!=ssrc&&bitrateNotification.setSynchronizationSource(ssrc),this.processBitrateNotification(bitrateNotification)}}}else fm.liveswitch.Log.error("Could not set local "+new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" send encodings.",new fm.liveswitch.Exception("Cannot change the number of send encodings."));else{for(var rtpStreamIndex=0,_i=0,nativeSendEncodings_1=nativeSendEncodings=this.getNativeSendEncodings();_i<nativeSendEncodings_1.length;_i++){nativeSendEncodings_1[_i].rid=(rtpStreamIndex++).toString()}params.encodings=nativeSendEncodings}return this._sender.setParameters(params).catch((function(error){fm.liveswitch.Log.error("Could not set local "+new fm.liveswitch.StreamTypeWrapper(_this.getType()).toString()+" send encodings.",new fm.liveswitch.Exception(""+error))})),params},WebRtcMediaStream.prototype.getReceiveEncodings=function(){return this._receiveEncodings},WebRtcMediaStream.prototype.setReceiveEncodings=function(receiveEncodings){this._receiveEncodings=receiveEncodings},WebRtcMediaStream.prototype.getNativeSendEncodings=function(){if(this.getSimulcastMode()==fm.liveswitch.SimulcastMode.Disabled)return null;if(!this._sendEncodings)return null;for(var nativeEncodings=[],_i=0,_a=this._sendEncodings;_i<_a.length;_i++){var sendEncoding=_a[_i],nativeEncoding={};this.updateNativeEncoding(nativeEncoding,sendEncoding,!1),nativeEncodings.push(nativeEncoding)}return nativeEncodings},WebRtcMediaStream.prototype.getSendEncodingInfos=function(){var sendEncodings=this._sendEncodings;if(!sendEncodings){var localTrack=this.getLocalTrack();if(localTrack){var media=localTrack.getMedia();if(media&&media instanceof fm.liveswitch.WebRtcLocalMedia){var localMedia=media;localMedia&&(this.getType()==fm.liveswitch.StreamType.Audio?sendEncodings=localMedia.getAudioEncodings():this.getType()==fm.liveswitch.StreamType.Video&&(sendEncodings=localMedia.getVideoEncodings()))}}}if(!sendEncodings)return[];for(var encodingInfos=[],_i=0,sendEncodings_1=sendEncodings;_i<sendEncodings_1.length;_i++){var sendEncoding=sendEncodings_1[_i],encodingInfo=new fm.liveswitch.EncodingInfo;this.updateEncodingInfo(encodingInfo,sendEncoding,!0),encodingInfos.push(encodingInfo)}return encodingInfos},WebRtcMediaStream.prototype.getReceiveEncodingInfos=function(){if(!this._receiveEncodings)return[];for(var encodingInfos=[],_i=0,_a=this._receiveEncodings;_i<_a.length;_i++){var receiveEncoding=_a[_i],encodingInfo=new fm.liveswitch.EncodingInfo;this.updateEncodingInfo(encodingInfo,receiveEncoding,!1),encodingInfos.push(encodingInfo)}return encodingInfos},WebRtcMediaStream.prototype.updateNativeEncoding=function(nativeEncoding,encoding,deactivatedByServer){var newActive=!(encoding.getDeactivated()||deactivatedByServer),oldActive=nativeEncoding.active;nativeEncoding.active=newActive;var bitrate=encoding.getBitrate();if(bitrate>0&&(nativeEncoding.maxBitrate=1e3*bitrate),this.getType()==fm.liveswitch.StreamType.Video){var videoEncoding=encoding,frameRate=videoEncoding.getFrameRate();frameRate>0&&(nativeEncoding.maxFramerate=frameRate);var scale=videoEncoding.getScale();scale>0&&(nativeEncoding.scaleResolutionDownBy=1/scale)}return oldActive!=newActive},WebRtcMediaStream.prototype.updateEncodingInfo=function(encodingInfo,encoding,send){if(encodingInfo.setDeactivated(encoding.getDeactivated()),encodingInfo.setBitrate(encoding.getBitrate()),encodingInfo.setRtpStreamId(encoding.getRtpStreamId()),encodingInfo.setSynchronizationSource(encoding.getSynchronizationSource()),this.getType()==fm.liveswitch.StreamType.Video){var videoEncoding=encoding;encodingInfo.setFrameRate(videoEncoding.getFrameRate()),encodingInfo.setScale(videoEncoding.getScale());var sourceEncoding=this.getSourceEncoding();if(sourceEncoding){var sourceSize=sourceEncoding.getSize();if(sourceSize){var sourceWidth=sourceSize.getWidth(),sourceHeight=sourceSize.getHeight();sourceWidth>0&&sourceHeight>0&&encodingInfo.setSize(new fm.liveswitch.Size(sourceSize.getWidth(),sourceSize.getHeight()))}var sourceFrameRate=sourceEncoding.getFrameRate();sourceFrameRate>0&&encodingInfo.setFrameRate(sourceFrameRate)}}},WebRtcMediaStream.prototype.getNativeTrack=function(send){var track=send?this._localTrack:this._remoteTrack;if(track&&(nativeTrack=track._getMediaStreamTrack()))return nativeTrack;if(send){var sender=this._sender;if(sender)if(nativeTrack=sender.track)return nativeTrack}else{var nativeTrack,receiver=this._receiver;if(receiver)if(nativeTrack=receiver.track)return nativeTrack}return null},WebRtcMediaStream.prototype.getSourceEncoding=function(){var encodingInfo=new fm.liveswitch.EncodingInfo;if(this.getType()==fm.liveswitch.StreamType.Video){var nativeTrack=this.getNativeTrack(!0);if(nativeTrack&&nativeTrack.getSettings){var settings=nativeTrack.getSettings();settings&&(settings.width>0&&settings.height>0&&encodingInfo.setSize(new fm.liveswitch.Size(settings.width,settings.height)),settings.frameRate>0&&encodingInfo.setFrameRate(settings.frameRate))}}return encodingInfo},WebRtcMediaStream.prototype.replaceLocalTrack=function(localTrack){var connection=this.getConnection();return connection?connection.replaceLocalTrack(localTrack,this):fm.liveswitch.Promise.rejectNow(new fm.liveswitch.Exception("Not connected."))},WebRtcMediaStream.prototype.replaceRemoteTrack=function(remoteTrack){var connection=this.getConnection();return connection?connection.replaceRemoteTrack(remoteTrack,this):fm.liveswitch.Promise.rejectNow(new fm.liveswitch.Exception("Not connected."))},WebRtcMediaStream.prototype.processCachedChanges=function(){if(this.getRenegotiationPending()){var direction=this.getPendingLocalDirection();this.setLocalDirection(direction)}},WebRtcMediaStream.prototype.resetRemoteDirection=function(){this.setRemoteDirection(fm.liveswitch.StreamDirection.SendReceive)},WebRtcMediaStream.prototype.processSdpMediaDescription=function(sdpMessage,sdpMediaDescription,index,isLocalDescription,isOffer,isRenegotiation){var manager=this.getMediaDescriptionManager(),requirements=new fm.liveswitch.MediaDescriptionRequirements,error=manager.processSdpMediaDescription(requirements,sdpMessage,index,isLocalDescription,isRenegotiation,isOffer);if(null!=error)return error;if(isLocalDescription?this.setLocalMuted(manager.localMuted):this.setRemoteMuted(manager.remoteMuted),!isLocalDescription)for(var _i=0,_a=sdpMediaDescription.getMediaAttributes();_i<_a.length;_i++){var sdpMediaAttribute=_a[_i];fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.SendReceiveAttribute]")?this.setRemoteDirection(fm.liveswitch.StreamDirection.SendReceive):fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.SendOnlyAttribute]")?this.setRemoteDirection(fm.liveswitch.StreamDirection.SendOnly):fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.ReceiveOnlyAttribute]")?this.setRemoteDirection(fm.liveswitch.StreamDirection.ReceiveOnly):fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.InactiveAttribute]")&&this.setRemoteDirection(fm.liveswitch.StreamDirection.Inactive)}return this.extractCanonicalName(sdpMediaDescription,isLocalDescription),null},WebRtcMediaStream.prototype.getDirectionCapabilities=function(){return fm.liveswitch.StreamDirection.SendReceive},WebRtcMediaStream.prototype.setControlTransportInfo=function(info){this._controlTransportInfo=info},WebRtcMediaStream.prototype.getControlTransportInfo=function(){return this._controlTransportInfo},WebRtcMediaStream.prototype.getSimulcastMode=function(){return this._simulcastMode},WebRtcMediaStream.prototype.setSimulcastMode=function(value){this._simulcastMode=value},WebRtcMediaStream.prototype.addOnDiscardBitrateRequest=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardBitrateRequestValues,value)},WebRtcMediaStream.prototype.removeOnDiscardBitrateRequest=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardBitrateRequestValues,value)},WebRtcMediaStream.prototype.raiseOnDiscardBitrateRequest=function(bitrateNotification){for(var _i=0,_a=this._onDiscardBitrateRequestValues;_i<_a.length;_i++){(0,_a[_i])(bitrateNotification)}},WebRtcMediaStream.prototype.processBitrateRequest=function(bitrateRequest){bitrateRequest.setMediaDescriptionId(this.getMediaDescriptionId()||new fm.liveswitch.StreamTypeWrapper(this.getType()).toString().toLowerCase()),this.raiseOnDiscardBitrateRequest(bitrateRequest)},WebRtcMediaStream.prototype.raiseBitrateRequest=function(bitrateRequest){var _this=this;if(this.getSimulcastMode()==fm.liveswitch.SimulcastMode.Disabled||null==this._sendEncodings||0==this._sendEncodings.length||1==this._sendEncodings.length&&-1==this._sendEncodings[0].getSynchronizationSource()&&null==this._sendEncodings[0].getRtpStreamId()&&-1==this._sendEncodings[0].getBitrate()){var connection=this.getConnection();return!!connection&&(connection.setMaxSendBitrate(bitrateRequest.getBitrate(),this.getType()).then((function(){_this._singleSendBitrate=bitrateRequest.getBitrate();var bitrateNotification=new fm.liveswitch.BitrateNotification;bitrateNotification.setBitrate(bitrateRequest.getBitrate()),bitrateNotification.setRtpStreamId(bitrateRequest.getRtpStreamId()),bitrateNotification.setSynchronizationSource(bitrateRequest.getSynchronizationSource()),_this.processBitrateNotification(bitrateNotification)}),(function(ex){fm.liveswitch.Log.error("Could not process bitrate request for "+new fm.liveswitch.StreamTypeWrapper(_this.getType()).toString()+" stream.",ex)})),!0)}var sendEncodingIndex=this.findSendEncodingIndex(bitrateRequest);if(-1==sendEncodingIndex)return!1;var rid=bitrateRequest.getRtpStreamId(),ssrc=bitrateRequest.getSynchronizationSource(),requestBitrate=bitrateRequest.getBitrate();if(0==requestBitrate){if(this.remoteRequestedMaxSendBitrate(sendEncodingIndex,requestBitrate));else(bitrateNotification=new fm.liveswitch.BitrateNotification).setBitrate(this._sendEncodings[sendEncodingIndex].getBitrate()),bitrateNotification.setRtpStreamId(bitrateRequest.getRtpStreamId()),bitrateNotification.setSynchronizationSource(bitrateRequest.getSynchronizationSource()),this.processBitrateNotification(bitrateNotification)}else{var oldBitrate=this._sendEncodings[sendEncodingIndex].getBitrate();if(this.remoteRequestedMaxSendBitrate(sendEncodingIndex,requestBitrate)){(bitrateNotification=new fm.liveswitch.BitrateNotification).setBitrate(0),bitrateNotification.setRtpStreamId(bitrateRequest.getRtpStreamId()),bitrateNotification.setSynchronizationSource(bitrateRequest.getSynchronizationSource()),this.processBitrateNotification(bitrateNotification)}else{var bitrateNotification,bitrate=this._sendEncodings[sendEncodingIndex].getBitrate();if(oldBitrate!=bitrate)(bitrateNotification=new fm.liveswitch.BitrateNotification).setBitrate(bitrate),bitrateNotification.setRtpStreamId(bitrateRequest.getRtpStreamId()),bitrateNotification.setSynchronizationSource(bitrateRequest.getSynchronizationSource()),this.processBitrateNotification(bitrateNotification),-1==ssrc&&null==rid?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding has maximum bitrate "+bitrate+"kbps."):-1==ssrc?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with RTP stream ID "+rid+" has maximum bitrate "+bitrate+"kbps."):null==rid?fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with SSRC "+ssrc+" has maximum bitrate "+bitrate+"kbps."):fm.liveswitch.Log.debug(new fm.liveswitch.StreamTypeWrapper(this.getType()).toString()+" stream encoding with SSRC "+ssrc+" and RTP stream ID "+rid+" has maximum bitrate "+bitrate+"kbps.")}}return!0},WebRtcMediaStream.prototype.remoteRequestedMaxSendBitrate=function(sendEncodingIndex,maxBitrate){var sendEncodings=this._sendEncodings;if(!sendEncodings||0==sendEncodings.length)return null;var sender=this._sender;if(!sender||!sender.getParameters)return!1;var params=sender.getParameters();return!(!params||!params.encodings)&&(this._deactivatedByServer[sendEncodingIndex]=0==maxBitrate,0!=maxBitrate&&sendEncodings[sendEncodingIndex].setBitrate(maxBitrate),!(params=this.applySendEncodings(sendEncodingIndex)).encodings[sendEncodingIndex].active)},WebRtcMediaStream.prototype.findSendEncodingIndex=function(bitrateRequest){var sender=this._sender;if(sender&&sender.getParameters){var params=sender.getParameters();if(params&&params.encodings)for(var i=0;i<params.encodings.length;i++){var rid="rid"in params.encodings[i]?params.encodings[i].rid:null;if(null!=rid&&rid==bitrateRequest.getRtpStreamId())return i;var ssrc="ssrc"in params.encodings[i]?params.encodings[i].ssrc:-1;if(-1!=ssrc&&ssrc==bitrateRequest.getSynchronizationSource())return i}}return-1},WebRtcMediaStream.prototype.addOnDiscardBitrateNotification=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardBitrateNotificationValues,value)},WebRtcMediaStream.prototype.removeOnDiscardBitrateNotification=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardBitrateNotificationValues,value)},WebRtcMediaStream.prototype._raiseOnDiscardBitrateNotification=function(bitrateNotification){for(var _i=0,_a=this._onDiscardBitrateNotificationValues;_i<_a.length;_i++){(0,_a[_i])(bitrateNotification)}},WebRtcMediaStream.prototype.processBitrateNotification=function(bitrateNotification){bitrateNotification.setMediaDescriptionId(this.getMediaDescriptionId()||new fm.liveswitch.StreamTypeWrapper(this.getType()).toString().toLowerCase()),this._raiseOnDiscardBitrateNotification(bitrateNotification)},WebRtcMediaStream.prototype.raiseBitrateNotification=function(bitrateNotification){return!0},WebRtcMediaStream.prototype.setMaxSendBitrate=function(value){var _this=this;_super.prototype.setMaxSendBitrate.call(this,value);var connection=this.getConnection();if(!connection)return fm.liveswitch.Promise.rejectNow(new fm.liveswitch.Exception("Media stream is not attached to a connection."));var promise=new fm.liveswitch.Promise;return connection.setMaxSendBitrate(_super.prototype.getMaxSendBitrate.call(this),this.getType()).then((function(o){_this.applySendEncodings(),promise.resolve(o)}),(function(ex){promise.reject(ex)})),promise},WebRtcMediaStream.prototype.setMaxReceiveBitrate=function(value){_super.prototype.setMaxReceiveBitrate.call(this,value);var bitrateRequest=new fm.liveswitch.BitrateRequest;bitrateRequest.setBitrate(_super.prototype.getMaxReceiveBitrate.call(this)),this.processBitrateRequest(bitrateRequest)},WebRtcMediaStream}(fm.liveswitch.WebRtcMediaStreamBase);liveswitch.WebRtcMediaStream=WebRtcMediaStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcAudioStream=function(_super){function WebRtcAudioStream(external,localTrack,remoteTrack){var _this=_super.call(this,external,localTrack,remoteTrack,fm.liveswitch.StreamType.Audio)||this;return _this._dtmfSender=null,_this._onSendDtmfToneValues=[],_this._onSendDtmfToneChangeValues=[],_this._onDiscardOutboundDtmfTonesValues=[],_this._external=external,_this}return __extends(WebRtcAudioStream,_super),WebRtcAudioStream.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcAudioStream],"+_super.prototype.getTypeString.call(this)},WebRtcAudioStream.prototype._getExternal=function(){return this._external},WebRtcAudioStream.prototype.getDiscardDtmfTones=function(){return this._discardDtmfTones},WebRtcAudioStream.prototype.setDiscardDtmfTones=function(value){this._discardDtmfTones=value},WebRtcAudioStream.prototype.addOnDiscardOutboundDtmfTones=function(value){fm.liveswitch.ArrayExtensions.add(this._onDiscardOutboundDtmfTonesValues,value)},WebRtcAudioStream.prototype.removeOnDiscardOutboundDtmfTones=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDiscardOutboundDtmfTonesValues,value)},WebRtcAudioStream.prototype.raiseOnDiscardOutboundDtmfTones=function(dtmfTones){for(var _i=0,_a=this._onDiscardOutboundDtmfTonesValues;_i<_a.length;_i++){(0,_a[_i])(dtmfTones)}},WebRtcAudioStream.prototype.addOnReceiveDtmfTone=function(value){throw new fm.liveswitch.Exception("DTMF receive-tone events are not supported by WebRTC.")},WebRtcAudioStream.prototype.addOnReceiveDtmfToneChange=function(value){throw new fm.liveswitch.Exception("DTMF receive-tone-change events are not supported by WebRTC.")},WebRtcAudioStream.prototype.addOnSendDtmfTone=function(value){throw new fm.liveswitch.Exception("DTMF send-tone events are not supported by WebRTC.")},WebRtcAudioStream.prototype.addOnSendDtmfToneChange=function(value){fm.liveswitch.ArrayExtensions.add(this._onSendDtmfToneChangeValues,value)},WebRtcAudioStream.prototype.insertDtmfTone=function(dtmfTone){return this.insertDtmfTones([dtmfTone])},WebRtcAudioStream.prototype.insertDtmfTones=function(dtmfTones){var _this=this;if(this._discardDtmfTones)return this.raiseOnDiscardOutboundDtmfTones(dtmfTones),!0;if(null==this._dtmfSender){var connection=this.getConnection();if(!connection)return this.raiseOnDiscardOutboundDtmfTones(dtmfTones),!1;if(this._dtmfSender=connection.getDtmfSender(),null==this._dtmfSender)return this.raiseOnDiscardOutboundDtmfTones(dtmfTones),!1;this._dtmfSender.ontonechange=function(ev){for(var tones=fm.liveswitch.dtmf.Tone.fromToneString(ev.tone),_i=0,_a=_this._onSendDtmfToneChangeValues;_i<_a.length;_i++)for(var value=_a[_i],_b=0,tones_2=tones;_b<tones_2.length;_b++){value(tones_2[_b])}}}return this._dtmfSender.insertDTMF(fm.liveswitch.dtmf.Tone.toToneString(dtmfTones)),!0},WebRtcAudioStream.prototype.removeOnReceiveDtmfTone=function(value){throw new fm.liveswitch.Exception("DTMF receive-tone events are not supported by WebRTC.")},WebRtcAudioStream.prototype.removeOnReceiveDtmfToneChange=function(value){throw new fm.liveswitch.Exception("DTMF receive-tone-change events are not supported by WebRTC.")},WebRtcAudioStream.prototype.removeOnSendDtmfTone=function(value){throw new fm.liveswitch.Exception("DTMF send-tone events are not supported by WebRTC.")},WebRtcAudioStream.prototype.removeOnSendDtmfToneChange=function(value){fm.liveswitch.ArrayExtensions.remove(this._onSendDtmfToneChangeValues,value)},WebRtcAudioStream.prototype.getOpusDisabled=function(){return this.getCodecDisabled(fm.liveswitch.AudioFormat.getOpusName())},WebRtcAudioStream.prototype.getG722Disabled=function(){return this.getCodecDisabled(fm.liveswitch.AudioFormat.getG722Name())},WebRtcAudioStream.prototype.getPcmuDisabled=function(){return this.getCodecDisabled(fm.liveswitch.AudioFormat.getPcmuName())},WebRtcAudioStream.prototype.getPcmaDisabled=function(){return this.getCodecDisabled(fm.liveswitch.AudioFormat.getPcmaName())},WebRtcAudioStream.prototype.setOpusDisabled=function(value){return this.setCodecDisabled(fm.liveswitch.AudioFormat.getOpusName(),value)},WebRtcAudioStream.prototype.setG722Disabled=function(value){return this.setCodecDisabled(fm.liveswitch.AudioFormat.getG722Name(),value)},WebRtcAudioStream.prototype.setPcmuDisabled=function(value){return this.setCodecDisabled(fm.liveswitch.AudioFormat.getPcmuName(),value)},WebRtcAudioStream.prototype.setPcmaDisabled=function(value){return this.setCodecDisabled(fm.liveswitch.AudioFormat.getPcmaName(),value)},WebRtcAudioStream}(fm.liveswitch.WebRtcMediaStream);liveswitch.WebRtcAudioStream=WebRtcAudioStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcMediaTrackBase=function(_super){function WebRtcMediaTrackBase(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(WebRtcMediaTrackBase,_super),WebRtcMediaTrackBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcMediaTrackBase],"+_super.prototype.getTypeString.call(this)},WebRtcMediaTrackBase}(fm.liveswitch.Dynamic);liveswitch.WebRtcMediaTrackBase=WebRtcMediaTrackBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcMediaTrack=function(_super){function WebRtcMediaTrack(external,media){var _this=_super.call(this)||this;return _this._onStartedValues=[],_this._onStoppedValues=[],_this._onDestroyedValues=[],_this._outputs=[],_this._inputs=[],_this._mediaStreamTrackDisabled=!1,_this._muted=!1,_this._media=media,_this}return __extends(WebRtcMediaTrack,_super),WebRtcMediaTrack.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcMediaTrack],"+_super.prototype.getTypeString.call(this)},WebRtcMediaTrack.prototype.getOutputs=function(){return this._outputs},WebRtcMediaTrack.prototype.addOutput=function(output){fm.liveswitch.ArrayExtensions.add(this._outputs,output)},WebRtcMediaTrack.prototype.removeOutput=function(output){return fm.liveswitch.ArrayExtensions.remove(this._outputs,output)},WebRtcMediaTrack.prototype.getInputs=function(){return this._inputs},WebRtcMediaTrack.prototype.addInput=function(input){fm.liveswitch.ArrayExtensions.add(this._inputs,input)},WebRtcMediaTrack.prototype.removeInput=function(input){return fm.liveswitch.ArrayExtensions.remove(this._inputs,input)},WebRtcMediaTrack.prototype._getMediaStreamTrack=function(){return this._mediaStreamTrack},WebRtcMediaTrack.prototype._setMediaStreamTrack=function(mediaStreamTrack){var _this=this;if(mediaStreamTrack){if(mediaStreamTrack!=this._mediaStreamTrack){mediaStreamTrack.onended=function(e){_this.raiseOnStopped()};for(var _i=0,_a=this._onStartedValues;_i<_a.length;_i++){(0,_a[_i])()}}}else this._mediaStreamTrackDisabled=!0,this._mediaStreamTrack&&(this._mediaStreamTrack.onended=null);this._mediaStreamTrack=mediaStreamTrack,this.setMuted(this._muted);for(var _loop_1=function(output){output.replaceLocalTrack(this_1).fail((function(ex){fm.liveswitch.Log.error("Could not replace local track attached to "+output.getType()+" stream for connection "+output.getConnectionId()+".",ex)}))},this_1=this,_b=0,_c=this.getOutputs();_b<_c.length;_b++){_loop_1(_c[_b])}},WebRtcMediaTrack.prototype._getMediaStreamTrackDisabled=function(){return this._mediaStreamTrackDisabled},WebRtcMediaTrack.prototype.addOnStarted=function(value){fm.liveswitch.ArrayExtensions.add(this._onStartedValues,value)},WebRtcMediaTrack.prototype.addOnStopped=function(value){fm.liveswitch.ArrayExtensions.add(this._onStoppedValues,value)},WebRtcMediaTrack.prototype.addOnDestroyed=function(value){fm.liveswitch.ArrayExtensions.add(this._onDestroyedValues,value)},WebRtcMediaTrack.prototype.removeOnStarted=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStartedValues,value)},WebRtcMediaTrack.prototype.removeOnStopped=function(value){fm.liveswitch.ArrayExtensions.remove(this._onStoppedValues,value)},WebRtcMediaTrack.prototype.removeOnDestroyed=function(value){fm.liveswitch.ArrayExtensions.remove(this._onDestroyedValues,value)},WebRtcMediaTrack.prototype.getMedia=function(){return this._media},WebRtcMediaTrack.prototype.getMuted=function(){var mediaStreamTrack=this._getMediaStreamTrack();return!!mediaStreamTrack&&!mediaStreamTrack.enabled},WebRtcMediaTrack.prototype.setMuted=function(muted){this._muted=muted;var mediaStreamTrack=this._getMediaStreamTrack();mediaStreamTrack&&(mediaStreamTrack.enabled=!muted)},WebRtcMediaTrack.prototype.stop=function(){var mediaStreamTrack=this._getMediaStreamTrack();mediaStreamTrack&&(mediaStreamTrack.stop(),this.getMedia()instanceof fm.liveswitch.WebRtcLocalMedia&&this.raiseOnStopped())},WebRtcMediaTrack.prototype.destroy=function(){if(this._mediaStreamTrack){for(var _i=0,_a=this._onDestroyedValues;_i<_a.length;_i++){(0,_a[_i])()}return!0}return!1},WebRtcMediaTrack.prototype.raiseOnStopped=function(){for(var _i=0,_a=this._onStoppedValues;_i<_a.length;_i++){(0,_a[_i])()}},WebRtcMediaTrack}(fm.liveswitch.WebRtcMediaTrackBase);liveswitch.WebRtcMediaTrack=WebRtcMediaTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcAudioTrack=function(_super){function WebRtcAudioTrack(external,media){var _this=_super.call(this,external,media)||this;return _this._external=external,_this}return __extends(WebRtcAudioTrack,_super),WebRtcAudioTrack.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcAudioTrack],"+_super.prototype.getTypeString.call(this)},WebRtcAudioTrack.prototype._getExternal=function(){return this._external},WebRtcAudioTrack.prototype.isLocal=function(){return fm.liveswitch.Util.isObjectType(this.getMedia(),"[fm.liveswitch.WebRtcLocalMedia]")},WebRtcAudioTrack.prototype.changeSinkOutput=function(sinkOutput){if(this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call AudioTrack.changeSinkOutput on a local track.")),promise}return this.getMedia().changeAudioSinkOutput(sinkOutput)},WebRtcAudioTrack.prototype.getSinkOutput=function(){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.getSinkOutput on a local track.");return this.getMedia().getAudioSinkOutput()},WebRtcAudioTrack.prototype.getSinkOutputs=function(){if(this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call AudioTrack.getSinkOutputs on a local track.")),promise}return this.getMedia().getAudioSinkOutputs()},WebRtcAudioTrack.prototype.setSinkOutput=function(value){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.setSinkOutput on a local track.");this.getMedia().setAudioSinkOutput(value)},WebRtcAudioTrack.prototype.changeSourceInput=function(sourceInput){if(!this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call AudioTrack.changeSourceInput on a remote track.")),promise}return this.getMedia().changeAudioSourceInput(sourceInput)},WebRtcAudioTrack.prototype.getSourceInput=function(){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.getSourceInput on a remote track.");return this.getMedia().getAudioSourceInput()},WebRtcAudioTrack.prototype.getSourceInputs=function(){if(!this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call AudioTrack.getSourceInputs on a remote track.")),promise}return this.getMedia().getAudioSourceInputs()},WebRtcAudioTrack.prototype.setSourceInput=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call AudioTrack.setSourceInput on a remote track.");this.getMedia().setAudioSourceInput(value)},WebRtcAudioTrack.prototype.addOnLevel=function(value){return this.getMedia().addOnAudioLevel(value)},WebRtcAudioTrack.prototype.getGain=function(){return this.getMedia().getAudioGain()},WebRtcAudioTrack.prototype.getVolume=function(){return this.getMedia().getAudioVolume()},WebRtcAudioTrack.prototype.removeOnLevel=function(value){return this.getMedia().removeOnAudioLevel(value)},WebRtcAudioTrack.prototype.setGain=function(value){this.getMedia().setAudioGain(value)},WebRtcAudioTrack.prototype.setVolume=function(value){this.getMedia().setAudioVolume(value)},WebRtcAudioTrack}(fm.liveswitch.WebRtcMediaTrack);liveswitch.WebRtcAudioTrack=WebRtcAudioTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcConnectionBase=function(_super){function WebRtcConnectionBase(sharedLock){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var sharedLock_1=__arguments[0];return(_this=_super.call(this)||this).fmliveswitchWebRtcConnectionBaseInit(),_this.__id=fm.liveswitch.Utility.generateId(),_this.__bundlePolicy=fm.liveswitch.BundlePolicy.MaxCompatibility,_this.__connected=new fm.liveswitch.Promise,_this.__closed=new fm.liveswitch.Promise,_this.__failed=new fm.liveswitch.Promise,_this.__iceServers=new fm.liveswitch.IceServerCollection,_this.__useTrickleIce=!0,_this.__trickleIcePolicy=fm.liveswitch.TrickleIcePolicy.FullTrickle,_this._earlyRemoteCandidatePromises=new Array,_this.__signallingState=fm.liveswitch.SignallingState.New,_this._connectionLock=sharedLock_1,_this.setLegacyTimeout(!0),_this.setTieBreaker(fm.liveswitch.Utility.generateId()),_this.setTimeout(3e4),_this.setDeadStreamTimeout(15e3),_this.setIceGatherPolicy(fm.liveswitch.IceGatherPolicy.All),_this.setTrickleIcePolicy(fm.liveswitch.TrickleIcePolicy.FullTrickle),_this.__stateMachine=new fm.liveswitch.ConnectionStateMachine,_this.addOnStateChange(_this.connectionBase_OnStateChange.bind(_this)),_this}return __extends(WebRtcConnectionBase,_super),WebRtcConnectionBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcConnectionBase],"+_super.prototype.getTypeString.call(this)},WebRtcConnectionBase.prototype.fmliveswitchWebRtcConnectionBaseInit=function(){var _this=this;this.__onExternalIdChange=[],this.__onGatheringStateChange=[],this.__onIceConnectionStateChange=[],this.__onLocalCandidate=[],this.__onLocalDescription=[],this.__onRemoteCandidate=[],this.__onRemoteDescription=[],this.__onSignallingStateChange=[],this.__onStateChange=[],this.__useTrickleIce=!1,this._deadStreamTimeout=0,this._legacyTimeout=!1,this._onExternalIdChange=function(p0,p1){for(var _i=0,_a=_this.__onExternalIdChange;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onGatheringStateChange=function(p0){for(var _i=0,_a=_this.__onGatheringStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onIceConnectionStateChange=function(p0){for(var _i=0,_a=_this.__onIceConnectionStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onLocalCandidate=function(p0,p1){for(var _i=0,_a=_this.__onLocalCandidate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onLocalDescription=function(p0,p1){for(var _i=0,_a=_this.__onLocalDescription;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteCandidate=function(p0,p1){for(var _i=0,_a=_this.__onRemoteCandidate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteDescription=function(p0,p1){for(var _i=0,_a=_this.__onRemoteDescription;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onSignallingStateChange=function(p0){for(var _i=0,_a=_this.__onSignallingStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onStateChange=function(p0){for(var _i=0,_a=_this.__onStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._timeout=0},WebRtcConnectionBase.prototype.addIceServer=function(iceServer){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__iceServers.add(iceServer)},WebRtcConnectionBase.prototype.addIceServers=function(iceServers){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__iceServers.addMany(iceServers)},WebRtcConnectionBase.prototype.addOnExternalIdChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onExternalIdChange,value)},WebRtcConnectionBase.prototype.addOnGatheringStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onGatheringStateChange,value)},WebRtcConnectionBase.prototype.addOnIceConnectionStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onIceConnectionStateChange,value)},WebRtcConnectionBase.prototype.addOnLocalCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onLocalCandidate,value)},WebRtcConnectionBase.prototype.addOnLocalDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onLocalDescription,value)},WebRtcConnectionBase.prototype.addOnRemoteCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteCandidate,value)},WebRtcConnectionBase.prototype.addOnRemoteDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteDescription,value)},WebRtcConnectionBase.prototype.addOnSignallingStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onSignallingStateChange,value)},WebRtcConnectionBase.prototype.addOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStateChange,value)},WebRtcConnectionBase.prototype.addRemoteCandidate=function(remoteCandidate){if(1==arguments.length){var item=new fm.liveswitch.RemoteCandidatePromise(remoteCandidate);return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.New)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Initializing)?(fm.liveswitch.ArrayExtensions.add(this._earlyRemoteCandidatePromises,item),fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.New)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Initializing)||(fm.liveswitch.ArrayExtensions.clear(this._earlyRemoteCandidatePromises),this.addRemoteCandidatePromise(item)),item):(this.getIsTerminatingOrTerminated()||this.addRemoteCandidatePromise(item),item)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.addRemoteCandidatePromise=function(remoteCandidatePromise){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{var remoteCandidate=remoteCandidatePromise.getRemoteCandidate();this.updateRemoteCandidateIndex(remoteCandidate),this.raiseRemoteCandidate(remoteCandidatePromise.getRemoteCandidate()),this.doAddRemoteCandidate(remoteCandidatePromise,remoteCandidatePromise.getRemoteCandidate())}catch(exception){remoteCandidatePromise.reject(exception)}},WebRtcConnectionBase.prototype.connectionBase_OnStateChange=function(p){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Connected)&&(this.saveDtlsSRole(this.getLocalDescription(),!0),this.saveDtlsSRole(this.getRemoteDescription(),!1))},WebRtcConnectionBase.prototype.createAnswer=function(){if(0==arguments.length){var asyncPromise=new fm.liveswitch.Promise;return this.createAnswerWrapper(asyncPromise),asyncPromise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.createAnswerWrapper=function(asyncPromise){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null;try{var promise=new fm.liveswitch.Promise;this.doCreateAnswer(promise),fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(sd){asyncPromise.resolveAsync(sd)}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){asyncPromise.rejectAsync(ex)}),promise.then(resolveAction,rejectAction)}catch(exception){asyncPromise.rejectAsync(exception)}},WebRtcConnectionBase.prototype.createOffer=function(){if(0==arguments.length){var asyncPromise=new fm.liveswitch.Promise;return this.createOfferWrapper(asyncPromise),asyncPromise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.createOfferWrapper=function(asyncPromise){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null;try{var promise=new fm.liveswitch.Promise;this.doCreateOffer(promise),fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(sd){asyncPromise.resolveAsync(sd)}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){asyncPromise.rejectAsync(ex)}),promise.then(resolveAction,rejectAction)}catch(exception){asyncPromise.rejectAsync(exception)}},WebRtcConnectionBase.prototype.doProcessDescription=function(description,isLocalDescription){if(2==arguments.length){var error=this.getSessionDescriptionManager().processDescription(description,isLocalDescription);return fm.liveswitch.Global.equals(error,null)?(!isLocalDescription&&fm.liveswitch.Global.equals(this.getTrickleIcePolicy(),fm.liveswitch.TrickleIcePolicy.HalfTrickle)&&(description.getSdpMessage().getSupportsTrickleIce()?(fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Peer supports Trickle-Ice. Trickle Ice will be enabled in all subsequent communications with the peer for the lifetime of connection {0}.",this.getId())),this.setUseTrickleIce(!0)):this.setUseTrickleIce(!1)),null):error}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.doSetLocalDescriptionInternal=function(localDescription){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doSetLocalDescription(promise,localDescription),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.doSetRemoteDescriptionInternal=function(remoteDescription){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doSetRemoteDescription(promise,remoteDescription),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.dtlsRole=function(sessionDescription){if(1==arguments.length){var setup="",sdpMessage=sessionDescription.getSdpMessage();if(!fm.liveswitch.Global.equals(sdpMessage,null)){var sessionLevelSetupAttribute=sdpMessage.getSessionLevelSetupAttribute();if(fm.liveswitch.Global.equals(sessionLevelSetupAttribute,null)){var mediaDescriptions=sdpMessage.getMediaDescriptions();mediaDescriptions.length>0&&(sessionLevelSetupAttribute=mediaDescriptions[0].getSetupAttribute())}fm.liveswitch.Global.equals(sessionLevelSetupAttribute,null)||(setup=sessionLevelSetupAttribute.getSetup())}return setup}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getAudioStream=function(){if(0==arguments.length){var audioStreams=this.getAudioStreams();return fm.liveswitch.Global.equals(audioStreams,null)||fm.liveswitch.Global.equals(audioStreams.length,0)?null:audioStreams[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getBundlePolicy=function(){if(0==arguments.length)return this.__bundlePolicy;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getCanonicalName=function(){if(0==arguments.length)return fm.liveswitch.Log.warn("Getting the value of Connection.CanonicalName is deprecated. Get the value of MediaStream.LocalCanonicalName instead."),this.getConnectionWideCanonicalName();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getClosed=function(){if(0==arguments.length)return this.__closed;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getConnected=function(){if(0==arguments.length)return this.__connected;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getConnectionWideCanonicalName=function(){if(0==arguments.length){for(var streams=this.getStreams(),_i=0,streams_3=streams;_i<streams_3.length;_i++){var local=streams_3[_i];if(fm.liveswitch.Global.equals(local.getType(),fm.liveswitch.StreamType.Audio))return fm.liveswitch.Global.tryCast(local,fm.liveswitch.WebRtcMediaStreamBase).getLocalCanonicalName();if(fm.liveswitch.Global.equals(local.getType(),fm.liveswitch.StreamType.Video))return fm.liveswitch.Global.tryCast(local,fm.liveswitch.WebRtcMediaStreamBase).getLocalCanonicalName()}return this.getId()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getDataStream=function(){if(0==arguments.length){var dataStreams=this.getDataStreams();return fm.liveswitch.Global.equals(dataStreams,null)||fm.liveswitch.Global.equals(dataStreams.length,0)?null:dataStreams[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getDeadStreamTimeout=function(){if(0==arguments.length)return this._deadStreamTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getError=function(){if(0==arguments.length)return this._error;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getExternalId=function(){if(0==arguments.length)return this.__externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getFailed=function(){if(0==arguments.length)return this.__failed;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getHasAudio=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getAudioStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getHasData=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getHasVideo=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getVideoStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getIceGatherPolicy=function(){if(0==arguments.length)return this._iceGatherPolicy;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getIceServer=function(){if(0==arguments.length)return this.__iceServers.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getIceServers=function(){if(0==arguments.length)return this.__iceServers.getValues();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getId=function(){if(0==arguments.length)return this.__id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getIsTerminated=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Closed)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Failed);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getIsTerminating=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Closing)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Failing);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getIsTerminatingOrTerminated=function(){if(0==arguments.length)return this.getIsTerminating()||this.getIsTerminated();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getLegacyTimeout=function(){if(0==arguments.length)return this._legacyTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getSignallingState=function(){if(0==arguments.length)return this.__signallingState;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getState=function(){if(0==arguments.length)return this.__stateMachine.getState();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getStream=function(){if(0==arguments.length){var streams=this.getStreams();return fm.liveswitch.Global.equals(streams,null)||fm.liveswitch.Global.equals(streams.length,0)?null:streams[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getTieBreaker=function(){if(0==arguments.length)return this._tieBreaker;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getTimeout=function(){if(0==arguments.length)return this._timeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getTrickleIcePolicy=function(){if(0==arguments.length)return this.__trickleIcePolicy;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getUseTrickleIce=function(){if(0==arguments.length)return this.__useTrickleIce;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.getVideoStream=function(){if(0==arguments.length){var videoStreams=this.getVideoStreams();return fm.liveswitch.Global.equals(videoStreams,null)||fm.liveswitch.Global.equals(videoStreams.length,0)?null:videoStreams[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.logInvalidStateTransition=function(state){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.getIsDebugEnabled()&&fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Connection {0} state is currently {1}. Cannot transition to {2}.",this.getId(),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ConnectionStateWrapper(this.getState()).toString()),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ConnectionStateWrapper(state).toString())))},WebRtcConnectionBase.prototype.processDescription=function(description,isLocalDescription){if(2==arguments.length)return this.doProcessDescription(description,isLocalDescription);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.processStateChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var streams=this.getStreams();if(!fm.liveswitch.Global.equals(streams,null))for(var _i=0,streams_4=streams;_i<streams_4.length;_i++){var local=streams_4[_i];fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Initializing)?local.setState(fm.liveswitch.StreamState.Initializing):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Connecting)?local.setState(fm.liveswitch.StreamState.Connecting):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Connected)?local.setState(fm.liveswitch.StreamState.Connected):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Closing)?local.setState(fm.liveswitch.StreamState.Closing):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Closed)?local.setState(fm.liveswitch.StreamState.Closed):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Failing)?local.setState(fm.liveswitch.StreamState.Failing):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Failed)&&local.setState(fm.liveswitch.StreamState.Failed)}},WebRtcConnectionBase.prototype.raiseCachedCandidates=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,_a=this._earlyRemoteCandidatePromises;_i<_a.length;_i++){var promise=_a[_i];this.addRemoteCandidatePromise(promise)}fm.liveswitch.ArrayExtensions.clear(this._earlyRemoteCandidatePromises),this.doSendCachedLocalCandidates()},WebRtcConnectionBase.prototype.raiseConnected=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__connected.getState(),fm.liveswitch.FutureState.Pending)&&this.__connected.resolve(null)},WebRtcConnectionBase.prototype.raiseGatheringStateChange=function(connection){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onGatheringStateChange=this._onGatheringStateChange;if(!fm.liveswitch.Global.equals(onGatheringStateChange,null))try{onGatheringStateChange(connection)}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising gathering state change to the application code for connection {0}.",this.getId()),exception)}},WebRtcConnectionBase.prototype.raiseIceConnectionStateChange=function(connection){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onIceConnectionStateChange=this._onIceConnectionStateChange;if(!fm.liveswitch.Global.equals(onIceConnectionStateChange,null))try{onIceConnectionStateChange(connection)}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising ICE connection state change to the application code for connection {0}.",this.getId()),exception)}},WebRtcConnectionBase.prototype.raiseLocalCandidate=function(localCandidate){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onLocalCandidate=this._onLocalCandidate;if(!fm.liveswitch.Global.equals(onLocalCandidate,null)&&!localCandidate.getDispatched())try{onLocalCandidate(this.getInstance(),localCandidate)}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising local candidate to the application code for connection {0}.",this.getId()),exception)}fm.liveswitch.Global.equals(localCandidate.getRelayProtocol(),fm.liveswitch.ProtocolType.Tcp)?fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Local candidate for stream {0} (over TCP) for connection {2}:\n{1}",fm.liveswitch.NumberExtensions.toString(localCandidate.getSdpMediaIndex()),localCandidate.getSdpCandidateAttribute().toString(),this.getId())):fm.liveswitch.Global.equals(localCandidate.getRelayProtocol(),fm.liveswitch.ProtocolType.Tls)?fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Local candidate for stream {0} (over TLS) for connection {2}:\n{1}",fm.liveswitch.NumberExtensions.toString(localCandidate.getSdpMediaIndex()),localCandidate.getSdpCandidateAttribute().toString(),this.getId())):fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Local candidate for stream {0} for connection {2}:\n{1}",fm.liveswitch.NumberExtensions.toString(localCandidate.getSdpMediaIndex()),localCandidate.getSdpCandidateAttribute().toString(),this.getId()))},WebRtcConnectionBase.prototype.raiseLocalDescription=function(localDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onLocalDescription=this._onLocalDescription;if(!fm.liveswitch.Global.equals(onLocalDescription,null))try{onLocalDescription(this.getInstance(),localDescription)}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising local description to the application code for connection {0}.",this.getId()),exception)}},WebRtcConnectionBase.prototype.raiseRemoteCandidate=function(remoteCandidate){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onRemoteCandidate=this._onRemoteCandidate;if(!fm.liveswitch.Global.equals(onRemoteCandidate,null))try{onRemoteCandidate(this.getInstance(),remoteCandidate)}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising remote candidate to the application code for connection {0}.",this.getId()),exception)}fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Remote candidate for stream {0} for connection {2}:\n{1}",fm.liveswitch.NumberExtensions.toString(remoteCandidate.getSdpMediaIndex()),remoteCandidate.getSdpCandidateAttribute().toString(),this.getId()))},WebRtcConnectionBase.prototype.raiseRemoteDescription=function(remoteDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onRemoteDescription=this._onRemoteDescription;if(!fm.liveswitch.Global.equals(onRemoteDescription,null))try{onRemoteDescription(this.getInstance(),remoteDescription)}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising remote description to the application code for connection {0}.",this.getId()),exception)}},WebRtcConnectionBase.prototype.raiseStateChange=function(){var _this=this;if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var action2=null,action3=null,action4=null,_var0=this.getState();do{if(_var0==fm.liveswitch.ConnectionState.Connected){fm.liveswitch.Global.equals(action2,null)&&(action2=function(){_this.raiseConnected()}),fm.liveswitch.ManagedThread.dispatch(action2);break}if(_var0==fm.liveswitch.ConnectionState.Failed){fm.liveswitch.Global.equals(action4,null)&&(action4=function(){_this.raiseTerminated(!0)}),fm.liveswitch.ManagedThread.dispatch(action4);break}if(_var0==fm.liveswitch.ConnectionState.Closed){fm.liveswitch.Global.equals(action3,null)&&(action3=function(){_this.raiseTerminated(!1)}),fm.liveswitch.ManagedThread.dispatch(action3);break}}while(0);var onStateChange=this._onStateChange;if(!fm.liveswitch.Global.equals(onStateChange,null))try{onStateChange(this.getInstance())}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising state change to the application code for connection {0}.",this.getId()),exception)}},WebRtcConnectionBase.prototype.raiseTerminated=function(failed){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");failed?(fm.liveswitch.Global.equals(this.__connected.getState(),fm.liveswitch.FutureState.Pending)&&this.__connected.reject(this.getError().getException()),fm.liveswitch.Global.equals(this.__closed.getState(),fm.liveswitch.FutureState.Pending)&&this.__closed.reject(this.getError().getException()),fm.liveswitch.Global.equals(this.__failed.getState(),fm.liveswitch.FutureState.Pending)&&this.__failed.resolve(null)):(fm.liveswitch.Global.equals(this.__connected.getState(),fm.liveswitch.FutureState.Pending)&&this.__connected.reject(new fm.liveswitch.Exception("Connection closed.")),fm.liveswitch.Global.equals(this.__failed.getState(),fm.liveswitch.FutureState.Pending)&&this.__failed.reject(new fm.liveswitch.Exception("Connection closed.")),fm.liveswitch.Global.equals(this.__closed.getState(),fm.liveswitch.FutureState.Pending)&&this.__closed.resolve(null))},WebRtcConnectionBase.prototype.registerStreamWithSessionDescriptionManager=function(stream){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getSessionDescriptionManager().addStream(stream)},WebRtcConnectionBase.prototype.removeIceServer=function(iceServer){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__iceServers.remove(iceServer)},WebRtcConnectionBase.prototype.removeIceServers=function(iceServers){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__iceServers.removeMany(iceServers)},WebRtcConnectionBase.prototype.removeOnExternalIdChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onExternalIdChange,value)},WebRtcConnectionBase.prototype.removeOnGatheringStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onGatheringStateChange,value)},WebRtcConnectionBase.prototype.removeOnIceConnectionStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onIceConnectionStateChange,value)},WebRtcConnectionBase.prototype.removeOnLocalCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onLocalCandidate,value)},WebRtcConnectionBase.prototype.removeOnLocalDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onLocalDescription,value)},WebRtcConnectionBase.prototype.removeOnRemoteCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteCandidate,value)},WebRtcConnectionBase.prototype.removeOnRemoteDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteDescription,value)},WebRtcConnectionBase.prototype.removeOnSignallingStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onSignallingStateChange,value)},WebRtcConnectionBase.prototype.removeOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStateChange,value)},WebRtcConnectionBase.prototype.saveDtlsSRole=function(sessionDescription,isLocalDescription){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(sessionDescription,null)&&!fm.liveswitch.Global.equals(sessionDescription.getSdpMessage(),null)){var mediaDescriptions=sessionDescription.getSdpMessage().getMediaDescriptions();if(mediaDescriptions.length>=1){var setupAttribute=mediaDescriptions[0].getSetupAttribute();if(!fm.liveswitch.Global.equals(setupAttribute,null)){var attribute2=new fm.liveswitch.sdp.SetupAttribute(setupAttribute.getSetup());isLocalDescription?this.__localDTLSRole=attribute2:this.__remoteDTLSRole=attribute2}}}},WebRtcConnectionBase.prototype.setBundlePolicy=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,fm.liveswitch.BundlePolicy.Balanced))throw new fm.liveswitch.Exception("Balanced stream bundling is currently not supported.");this.__bundlePolicy=value,this.updateBundlePolicy(value)},WebRtcConnectionBase.prototype.setDeadStreamTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._deadStreamTimeout=fm.liveswitch.Global.toInt(value)},WebRtcConnectionBase.prototype.setError=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._error=value},WebRtcConnectionBase.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=this.__externalId;if(!fm.liveswitch.Global.equals(str,value)){this.__externalId=value;var onExternalIdChange=this._onExternalIdChange;if(!fm.liveswitch.Global.equals(onExternalIdChange,null))try{onExternalIdChange(this.getId(),str)}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising external ID change to the application code for connection {0}.",this.getId()),exception)}}},WebRtcConnectionBase.prototype.setIceGatherPolicy=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._iceGatherPolicy=value},WebRtcConnectionBase.prototype.setIceServer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__iceServers.setValue(value)},WebRtcConnectionBase.prototype.setIceServers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__iceServers.replace(value)},WebRtcConnectionBase.prototype.setLegacyTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._legacyTimeout=value},WebRtcConnectionBase.prototype.setLocalDescription=function(localDescription){if(1==arguments.length){var promise=new fm.liveswitch.Promise;try{this.setLocalDescriptionInternal(promise,localDescription)}catch(exception){promise.reject(exception)}return promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.setLocalDescriptionInternal=function(promise,localDescription){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getSessionDescriptionManager().updateLocalDescription(localDescription),this.raiseLocalDescription(localDescription);if(this.getIsTerminatingOrTerminated())throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Cannot set local description: connection is {0}.",new fm.liveswitch.ConnectionStateWrapper(this.getState()).toString()));this.doSetLocalDescriptionInternal(localDescription).then((function(ld){try{fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Local session description ({0}) for connection {2}:\n{1}",fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.SessionDescriptionTypeWrapper(ld.getType()).toString()),fm.liveswitch.StringExtensions.replace(ld.getSdpMessage().toString(),"\r\n","\n"),_this.getId()));var sdpMessage=ld.getSdpMessage();if(!fm.liveswitch.Global.equals(sdpMessage,null))for(var _i=0,_a=sdpMessage.getMediaDescriptions();_i<_a.length;_i++){var simulcastAttribute=_a[_i].getSimulcastAttribute();if(!fm.liveswitch.Global.equals(simulcastAttribute,null)&&!fm.liveswitch.Global.equals(simulcastAttribute.getReceiveDescription(),null)){var exception=new fm.liveswitch.Exception("Receiving simulcast streams is not supported.");throw _this.setError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionSimulcastNotSupported,exception)),exception}}promise.resolve(ld)}catch(exception2){promise.reject(exception2)}}),(function(ex){promise.reject(ex)}))},WebRtcConnectionBase.prototype.setRemoteDescription=function(remoteDescription){if(1==arguments.length){var promise=new fm.liveswitch.Promise;try{this.setRemoteDescriptionInternal(promise,remoteDescription)}catch(exception){promise.reject(exception)}return promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.setRemoteDescriptionInternal=function(promise,remoteDescription){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var sdpMessage=remoteDescription.getSdpMessage();if(!fm.liveswitch.Global.equals(sdpMessage,null))for(var _i=0,_a=sdpMessage.getMediaDescriptions();_i<_a.length;_i++){var description=_a[_i],exception=void 0,simulcastAttribute=description.getSimulcastAttribute();if(!fm.liveswitch.Global.equals(simulcastAttribute,null)&&!fm.liveswitch.Global.equals(simulcastAttribute.getSendDescription(),null))throw exception=new fm.liveswitch.Exception("Receiving simulcast streams is not supported."),this.setError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionSimulcastNotSupported,exception)),exception;if(!fm.liveswitch.Global.equals(description.getSsrcGroupSsrcs("SIM"),null))throw exception=new fm.liveswitch.Exception("Receiving simulcast streams is not supported."),this.setError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionSimulcastNotSupported,exception)),exception}this.updateRemoteDescriptionDtlsRole(remoteDescription),this.raiseRemoteDescription(remoteDescription);if(this.verifySessionIdAndVersion(remoteDescription),this.getIsTerminatingOrTerminated())throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Cannot set remote description: connection is {0}.",new fm.liveswitch.ConnectionStateWrapper(this.getState()).toString()));this.doSetRemoteDescriptionInternal(remoteDescription).then((function(rd){fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Remote session description ({0}) for connection {2}:\n{1}",fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.SessionDescriptionTypeWrapper(rd.getType()).toString()),fm.liveswitch.StringExtensions.replace(rd.getSdpMessage().toString(),"\r\n","\n"),_this.getId())),promise.resolve(rd)}),(function(ex){promise.reject(ex)}))},WebRtcConnectionBase.prototype.setSignallingState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(this.__signallingState,value)){this.__signallingState=value;var onSignallingStateChange=this._onSignallingStateChange;if(!fm.liveswitch.Global.equals(onSignallingStateChange,null))try{onSignallingStateChange(this.getInstance())}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising signalling state change to the application code for connection {0}.",this.getId()),exception)}}},WebRtcConnectionBase.prototype.setState=function(){if(1==arguments.length){var state=arguments[0];return this.setState(state,null)}if(2==arguments.length){state=arguments[0];var error=arguments[1],flag=!1;if(fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Failing)&&fm.liveswitch.Global.equals(error,null))throw new fm.liveswitch.Exception("Transitioning to the failing state requires an error.");if(!fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Failing)&&!fm.liveswitch.Global.equals(error,null))throw new fm.liveswitch.Exception("An error can only be specified when transitioning to the failing state.");if(!this.__stateMachine.transition(state))return fm.liveswitch.Global.equals(state,this.getState())||fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Closing)&&(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Closed)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Failed))||this.logInvalidStateTransition(state),!1;fm.liveswitch.Global.equals(error,null)||this.setError(error);var idValue=this.getId(),externalId=this.getExternalId();if(fm.liveswitch.Global.equals(externalId,null)||(idValue=fm.liveswitch.StringExtensions.format("{0} (external ID {1})",idValue,externalId)),flag=fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Connecting),fm.liveswitch.Log.getIsInfoEnabled()){fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Connecting)?fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Connection {0} took {1}ms to initialize (offer/answer signalling).",this.getId(),fm.liveswitch.NumberExtensions.toString(this.__stateMachine.getLastStateMillis()))):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Connected)&&fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Connection {0} took {1}ms to connect (connectivity checks and secure key exchange).",this.getId(),fm.liveswitch.NumberExtensions.toString(this.__stateMachine.getLastStateMillis())));var description=null;fm.liveswitch.Global.equals(error,null)||(description=error.getDescription()),fm.liveswitch.Global.equals(description,null)?fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Setting connection {0} state to {1}.",idValue,fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ConnectionStateWrapper(this.getState()).toString()))):fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Setting connection {0} state to {1}. Error: {2}",idValue,fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ConnectionStateWrapper(this.getState()).toString()),description))}return this.raiseStateChange(),this.processStateChange(),flag&&this.raiseCachedCandidates(),!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.setTieBreaker=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tieBreaker=value},WebRtcConnectionBase.prototype.setTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timeout=fm.liveswitch.Global.toInt(value)},WebRtcConnectionBase.prototype.setTrickleIcePolicy=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__trickleIcePolicy=value,fm.liveswitch.Global.equals(value,fm.liveswitch.TrickleIcePolicy.FullTrickle)?this.setUseTrickleIce(!0):(fm.liveswitch.Global.equals(value,fm.liveswitch.TrickleIcePolicy.NotSupported)||fm.liveswitch.Global.equals(value,fm.liveswitch.TrickleIcePolicy.HalfTrickle))&&this.setUseTrickleIce(!1)},WebRtcConnectionBase.prototype.setUseTrickleIce=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__useTrickleIce=value},WebRtcConnectionBase.prototype.unregisterStreamWithSessionDescriptionManager=function(stream){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getSessionDescriptionManager().removeStream(stream)},WebRtcConnectionBase.prototype.updateBundlePolicy=function(policy){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.updateRemoteCandidateIndex=function(candidate){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcConnectionBase.prototype.updateRemoteDescriptionDtlsRole=function(remoteDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(remoteDescription,null)&&!fm.liveswitch.Global.equals(remoteDescription.getSdpMessage(),null)&&!remoteDescription.getIsOffer()&&!fm.liveswitch.Global.equals(this.__localDTLSRole,null)&&!fm.liveswitch.Global.equals(this.__remoteDTLSRole,null)&&fm.liveswitch.Global.equals(this.dtlsRole(remoteDescription),fm.liveswitch.sdp.Setup.getActPass())){var setup=this.__remoteDTLSRole.getSetup();fm.liveswitch.Global.equals(setup,fm.liveswitch.sdp.Setup.getActPass())&&(setup=fm.liveswitch.Global.equals(this.__localDTLSRole.getSetup(),fm.liveswitch.sdp.Setup.getPassive())?fm.liveswitch.sdp.Setup.getActive():fm.liveswitch.sdp.Setup.getPassive());var sdpMessage=remoteDescription.getSdpMessage();sdpMessage.updateSetupValue(setup);for(var _i=0,_a=sdpMessage.getMediaDescriptions();_i<_a.length;_i++){var description=_a[_i],attribute=new fm.liveswitch.sdp.SetupAttribute(setup);description.setSetupAttribute(attribute)}}},WebRtcConnectionBase.prototype.verifySessionIdAndVersion=function(remoteDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(this.getRemoteDescription(),null)){var sessionId=this.getRemoteDescription().getSessionId(),num2=remoteDescription.getSessionId(),sessionVersion=this.getRemoteDescription().getSessionVersion(),num4=remoteDescription.getSessionVersion();if(!fm.liveswitch.Global.equals(sessionId,num2))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Received new remote description with session id {0} and session version {1}, but current remote description has id {2} and version {3}. Cannot set remote description.",[fm.liveswitch.NumberExtensions.toString(num2),fm.liveswitch.NumberExtensions.toString(num4),fm.liveswitch.NumberExtensions.toString(sessionId),fm.liveswitch.NumberExtensions.toString(sessionVersion)]));if(sessionVersion>=num4)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Received new remote description with session id {0} and session version {1}, but current remote description has id {2} and version {3}. Cannot set remote description.",[fm.liveswitch.NumberExtensions.toString(num2),fm.liveswitch.NumberExtensions.toString(num4),fm.liveswitch.NumberExtensions.toString(sessionId),fm.liveswitch.NumberExtensions.toString(sessionVersion)]))}},WebRtcConnectionBase}(fm.liveswitch.Dynamic);liveswitch.WebRtcConnectionBase=WebRtcConnectionBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcConnection=function(_super){function WebRtcConnection(external,streams,remoteMedia){var _this=_super.call(this,new Object)||this;if(_this._remoteMediaTrackCount=0,_this._dataStreamsReady=!1,_this._mediaStreamsReady=!1,_this._lastMediaComponentFrameStatsCollection={},_this._iceCandidateProcessingTimeout=2e3,_this.dtmfSender=null,_this._setMaxSendBitrateQueue=[],_this._processingMaxSendBitrate=!1,_this._external=external,_this._remoteMedia=remoteMedia,!fm.liveswitch.Plugin.hasWebRtc()&&!fm.liveswitch.Plugin.hasOrtc())throw new fm.liveswitch.Exception("Native browser support for WebRTC/ORTC could not be found.");_this._streams=[],_this._mediaStreams=[],_this._audioStreams=[],_this._videoStreams=[],_this._dataStreams=[],_this._isRenegotiation=!1,_this._initialized=!1,_this._localDescription=null,_this._remoteDescription=null,_this._sessionDescriptionManager=new fm.liveswitch.SessionDescriptionManager,_this.addStreamsInternal(streams);for(var _i=0,streams_5=streams;_i<streams_5.length;_i++){var stream=streams_5[_i];stream.setConnectionId(_this.getId()),stream.setStateLock(_this._connectionLock)}return _this}return __extends(WebRtcConnection,_super),WebRtcConnection.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcConnection],"+_super.prototype.getTypeString.call(this)},WebRtcConnection.prototype._getExternal=function(){return this._external},WebRtcConnection.prototype.getRemoteMedia=function(){return this._remoteMedia},WebRtcConnection.prototype.getNativePeerConnection=function(){return this._nativePeerConnection},WebRtcConnection.prototype.getNativeIceGatherers=function(){return this._nativeIceGatherers},WebRtcConnection.prototype.getNativeIceTransports=function(){return this._nativeIceTransports},WebRtcConnection.prototype.getNativeDtlsTransports=function(){return this._nativeDtlsTransports},WebRtcConnection.prototype.getNativeRtpSenders=function(){return this._nativeRtpSenders},WebRtcConnection.prototype.getNativeRtpReceivers=function(){return this._nativeRtpReceivers},WebRtcConnection.prototype.getInstance=function(){return this},WebRtcConnection.prototype.addStreamInternal=function(stream){if(stream.setConnection(this),stream.getType()==fm.liveswitch.StreamType.Application)fm.liveswitch.ArrayExtensions.add(this._dataStreams,stream);else{if(stream.getType()==fm.liveswitch.StreamType.Audio)fm.liveswitch.ArrayExtensions.add(this._audioStreams,stream);else{if(stream.getType()!=fm.liveswitch.StreamType.Video)throw new fm.liveswitch.Exception("Unsupported stream type.");fm.liveswitch.ArrayExtensions.add(this._videoStreams,stream)}fm.liveswitch.ArrayExtensions.add(this._mediaStreams,stream)}fm.liveswitch.ArrayExtensions.add(this._streams,stream),this.registerStreamWithSessionDescriptionManager(stream)},WebRtcConnection.prototype.addStreamsInternal=function(streams){for(var _i=0,streams_6=streams;_i<streams_6.length;_i++){var stream=streams_6[_i];this.addStreamInternal(stream)}},WebRtcConnection.prototype.processStateChange=function(){_super.prototype.processStateChange.call(this),(!this.getLegacyTimeout()&&this.getState()==fm.liveswitch.ConnectionState.Connecting||this.getLegacyTimeout()&&this.getState()==fm.liveswitch.ConnectionState.Initializing)&&this.startConnectionTimeout()},WebRtcConnection.prototype.startConnectionTimeout=function(){var _this=this;window.setTimeout((function(){_this.getState()!=fm.liveswitch.ConnectionState.Connecting&&_this.getState()!=fm.liveswitch.ConnectionState.Initializing||_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionNotEstablished,new fm.liveswitch.Exception("Could not establish connectivity with remote peer. Shutting down connection.")))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed))}),this.getTimeout())},WebRtcConnection.prototype.getStreams=function(){return this._streams},WebRtcConnection.prototype.getMediaStreams=function(){return this._mediaStreams},WebRtcConnection.prototype.getAudioStreams=function(){return this._audioStreams},WebRtcConnection.prototype.getVideoStreams=function(){return this._videoStreams},WebRtcConnection.prototype.getDataStreams=function(){return this._dataStreams},WebRtcConnection.prototype.constraintMin=function(num1,num2){return-1==num1?num2:-1==num2?num1:Math.min(num1,num2)},WebRtcConnection.prototype.constraintMax=function(num1,num2){return-1==num1?num2:-1==num2?num1:Math.max(num1,num2)},WebRtcConnection.prototype.getStats=function(){var _this=this,promise=new fm.liveswitch.Promise;try{var timestamp_1=fm.liveswitch.DateTime.getUtcNow(),stats_1=new fm.liveswitch.ConnectionStats;stats_1.setId(this.getId()),stats_1.setTimestamp(timestamp_1);var successCallback=function(result){fm.liveswitch.Util.isFunction(result.result)&&(result=result.result());var report={};fm.liveswitch.Util.isFunction(result.forEach)&&result.forEach((function(stat){if(fm.liveswitch.Util.isFunction(stat.names)){var record_1=stat;stat={id:record_1.id,type:record_1.type},record_1.names().forEach((function(name){stat[name]=record_1.stat(name)}))}report[stat.id]=stat}));var audioMediaSenderIds=null,audioMediaReceiverIds=null,audioTransportId=null,videoMediaSenderIds=null,videoMediaReceiverIds=null,videoTransportId=null;for(var key in report){var stat=report[key];switch(stat.type){case"inboundrtp":case"inbound-rtp":"audio"==stat.mediaType?(null==audioMediaReceiverIds&&(audioMediaReceiverIds=[]),audioMediaReceiverIds.push(stat.id),audioTransportId=stat.transportId):(null==videoMediaReceiverIds&&(videoMediaReceiverIds=[]),videoMediaReceiverIds.push(stat.id),videoTransportId=stat.transportId);break;case"outboundrtp":case"outbound-rtp":"audio"==stat.mediaType?(null==audioMediaSenderIds&&(audioMediaSenderIds=[]),audioMediaSenderIds.push(stat.id),audioTransportId=stat.transportId):(null==videoMediaSenderIds&&(videoMediaSenderIds=[]),videoMediaSenderIds.push(stat.id),videoTransportId=stat.transportId)}}stats_1.setMediaStreams([]);for(var _i=0,_a=_this.getStreams();_i<_a.length;_i++){var stream=_a[_i];if(stream.getType()==fm.liveswitch.StreamType.Audio||stream.getType()==fm.liveswitch.StreamType.Video){var mediaStream=stream,mediaStreamStats=new fm.liveswitch.MediaStreamStats;mediaStreamStats.setId(stream.getId()),mediaStreamStats.setTimestamp(timestamp_1),mediaStreamStats.setType(stream.getType()),mediaStreamStats.setDirection(stream.getDirection()),mediaStreamStats.setMaxSendBitrate(_this.constraintMin(mediaStream.getMaxSendBitrate(),mediaStream.getRemoteBandwidth())),mediaStreamStats.setMaxReceiveBitrate(_this.constraintMin(mediaStream.getMaxReceiveBitrate(),mediaStream.getLocalBandwidth()));var mediaSenderIds=void 0,mediaReceiverIds=void 0,transportId=void 0;if(stream.getType()==fm.liveswitch.StreamType.Audio?(mediaSenderIds=audioMediaSenderIds,mediaReceiverIds=audioMediaReceiverIds,transportId=audioTransportId):(mediaSenderIds=videoMediaSenderIds,mediaReceiverIds=videoMediaReceiverIds,transportId=videoTransportId),(mediaStream.getDirection()==fm.liveswitch.StreamDirection.SendReceive||mediaStream.getDirection()==fm.liveswitch.StreamDirection.SendOnly)&&null!=mediaSenderIds){for(var senders=[],_b=0,mediaSenderIds_1=mediaSenderIds;_b<mediaSenderIds_1.length;_b++){var mediaSenderId=mediaSenderIds_1[_b],sender=_this.getMediaSenderStats(mediaSenderId,report,mediaStream);null!=sender&&senders.push(sender)}senders.sort((function(s1,s2){var rid1=s1.getRtpStreamId(),rid2=s2.getRtpStreamId();return rid1||rid2?rid1?rid2?rid1.localeCompare(rid2):1:-1:0})),mediaStreamStats.setSenders(senders)}if((mediaStream.getDirection()==fm.liveswitch.StreamDirection.SendReceive||mediaStream.getDirection()==fm.liveswitch.StreamDirection.ReceiveOnly)&&null!=mediaReceiverIds){for(var receivers=[],_c=0,mediaReceiverIds_1=mediaReceiverIds;_c<mediaReceiverIds_1.length;_c++){var mediaReceiverId=mediaReceiverIds_1[_c],receiver=_this.getMediaReceiverStats(mediaReceiverId,report,mediaStream);null!=receiver&&receivers.push(receiver)}receivers.sort((function(r1,r2){var rid1=r1.getRtpStreamId(),rid2=r2.getRtpStreamId();return rid1||rid2?rid1?rid2?rid1.localeCompare(rid2):1:-1:0})),mediaStreamStats.setReceivers(receivers)}if(mediaStreamStats.setTransport(_this.getTransportStats(transportId,report,mediaStreamStats.getSender(),mediaStreamStats.getReceiver())),mediaStreamStats.getTransport()){var transportInfo=new fm.liveswitch.TransportInfo(mediaStreamStats.getTransport(),null);mediaStream.setTransportInfo(transportInfo);var rtcpTransport=mediaStreamStats.getTransport().getRtcpTransport();if(null!=rtcpTransport){var rtcpTransportInfo=new fm.liveswitch.TransportInfo(rtcpTransport,null);mediaStream.setControlTransportInfo(rtcpTransportInfo)}}stats_1.getMediaStreams().push(mediaStreamStats)}else{var dataStream=stream,dataStreamStats=new fm.liveswitch.DataStreamStats;dataStreamStats.setId(stream.getId()),dataStreamStats.setTimestamp(timestamp_1),dataStreamStats.setType(stream.getType()),dataStreamStats.setChannels([]);for(var _d=0,_e=dataStream.getChannels();_d<_e.length;_d++){var dataChannel=_e[_d],dataChannelStats=new fm.liveswitch.DataChannelStats;dataChannelStats.setId(dataChannel.getId()),dataChannelStats.setTimestamp(timestamp_1),dataChannelStats.setBytesSent(dataChannel.getBytesSent()),dataChannelStats.setBytesReceived(dataChannel.getBytesReceived()),dataChannelStats.setMessagesSent(dataChannel.getMessagesSent()),dataChannelStats.setMessagesReceived(dataChannel.getMessagesReceived()),dataChannelStats.setLabel(dataChannel.getLabel()),dataChannelStats.setOrdered(dataChannel.getOrdered()),dataChannelStats.setProtocol(dataChannel.getSubprotocol()),dataChannelStats.setState(dataChannel.getState()),dataStreamStats.getChannels().push(dataChannelStats)}if(dataStreamStats.getTransport()){transportInfo=new fm.liveswitch.TransportInfo(dataStreamStats.getTransport(),null);dataStream.setTransportInfo(transportInfo)}stats_1.setDataStream(dataStreamStats)}}promise.resolve(stats_1)},failureCallback=function(ex){promise.reject(ex)};if(this._nativePeerConnection&&fm.liveswitch.Util.isFunction(this._nativePeerConnection.getStats)&&this.getState()!=fm.liveswitch.ConnectionState.Closing&&this.getState()!=fm.liveswitch.ConnectionState.Closed&&this.getState()!=fm.liveswitch.ConnectionState.Failing&&this.getState()!=fm.liveswitch.ConnectionState.Failed)try{this._nativePeerConnection.getStats().then(successCallback,failureCallback)}catch(ex){try{this._nativePeerConnection.getStats(null,successCallback,failureCallback)}catch(ex){try{this._nativePeerConnection.getStats(successCallback,null,failureCallback)}catch(ex){successCallback({})}}}else successCallback({})}catch(ex){promise.reject(ex)}return promise},WebRtcConnection.prototype.getMediaSenderStats=function(mediaSenderId,report,_mediaStream){if(!mediaSenderId)return null;var mediaSender=report[mediaSenderId];if(!mediaSender)return null;var mediaSenderStats=new fm.liveswitch.MediaSenderStats;return mediaSenderStats.setId(mediaSenderId),mediaSenderStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),mediaSenderStats.setBytesSent(mediaSender.bytesSent||0),mediaSenderStats.setCodec(this.getCodecStats(mediaSender.codecId,report,!0)),mediaSenderStats.setFirCount(mediaSender.firCount||0),mediaSenderStats.setNackCount(mediaSender.nackCount||0),mediaSenderStats.setPacketsSent(mediaSender.packetsSent||0),mediaSenderStats.setPliCount(mediaSender.pliCount||0),mediaSenderStats.setRoundTripTime(Math.round(1e3*(mediaSender.roundTripTime||0))),mediaSenderStats.setSynchronizationSource(mediaSender.ssrc||0),mediaSenderStats.setRtpStreamId(mediaSender.rid||mediaSender.rtpStreamId||null),mediaSenderStats.setRepairedRtpStreamId(mediaSender.rrid||mediaSender.repairedRtpStreamId||null),mediaSenderStats.setTrack(this.getMediaTrackStats(mediaSender.trackId||mediaSender.mediaTrackId,report,_mediaStream.getLocalTrack(),mediaSender,_mediaStream,!0)),mediaSenderStats},WebRtcConnection.prototype.getMediaReceiverStats=function(mediaReceiverId,report,_mediaStream){if(!mediaReceiverId)return null;var mediaReceiver=report[mediaReceiverId];if(!mediaReceiver)return null;var mediaReceiverStats=new fm.liveswitch.MediaReceiverStats;return mediaReceiverStats.setId(mediaReceiverId),mediaReceiverStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),mediaReceiverStats.setBytesReceived(mediaReceiver.bytesReceived||0),mediaReceiverStats.setCodec(this.getCodecStats(mediaReceiver.codecId,report,!1)),mediaReceiverStats.setFirCount(mediaReceiver.firCount||0),mediaReceiverStats.setJitter(Math.round(1e3*(mediaReceiver.jitter||0))),mediaReceiverStats.setNackCount(mediaReceiver.nackCount||0),mediaReceiverStats.setPacketsDiscarded(mediaReceiver.packetsDiscarded||0),mediaReceiverStats.setPacketsDuplicated(mediaReceiver.packetsDuplicated||0),mediaReceiverStats.setPacketsLost(mediaReceiver.packetsLost||0),mediaReceiverStats.setPacketsReceived(mediaReceiver.packetsReceived||0),mediaReceiverStats.setPacketsRepaired(mediaReceiver.packetsRepaired||0),mediaReceiverStats.setPliCount(mediaReceiver.pliCount||0),mediaReceiverStats.setSynchronizationSource(mediaReceiver.ssrc||0),mediaReceiverStats.setRtpStreamId(mediaReceiver.rid||mediaReceiver.rtpStreamId||null),mediaReceiverStats.setRepairedRtpStreamId(mediaReceiver.rrid||mediaReceiver.repairedRtpStreamId||null),mediaReceiverStats.setTrack(this.getMediaTrackStats(mediaReceiver.trackId||mediaReceiver.mediaTrackId,report,_mediaStream.getRemoteTrack(),mediaReceiver,_mediaStream,!1)),mediaReceiverStats},WebRtcConnection.prototype.getTransportStats=function(transportId,report,mediaSenderStats,mediaReceiverStats){var transportStats=new fm.liveswitch.TransportStats;transportStats.setId(transportId||null),transportStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow());var localCandidateIds=[],remoteCandidateIds=[],candidatePairIds=[],selectedCandidatePairId=null;for(var key in report){var stat=report[key];switch(stat.type){case"localcandidate":case"local-candidate":localCandidateIds.push(stat.id);break;case"remotecandidate":case"remote-candidate":remoteCandidateIds.push(stat.id);break;case"candidatepair":case"candidate-pair":stat.selected&&(selectedCandidatePairId=stat.id),candidatePairIds.push(stat.id)}}transportStats.setCandidatePairs([]);for(var _i=0,candidatePairIds_1=candidatePairIds;_i<candidatePairIds_1.length;_i++){var candidatePairId=candidatePairIds_1[_i];transportStats.getCandidatePairs().push(this.getCandidatePairStats(candidatePairId,report))}transportStats.setLocalCandidates([]);for(var _a=0,localCandidateIds_1=localCandidateIds;_a<localCandidateIds_1.length;_a++){var localCandidateId=localCandidateIds_1[_a];transportStats.getLocalCandidates().push(this.getCandidateStats(localCandidateId,report))}transportStats.setRemoteCandidates([]);for(var _b=0,remoteCandidateIds_1=remoteCandidateIds;_b<remoteCandidateIds_1.length;_b++){var remoteCandidateId=remoteCandidateIds_1[_b];transportStats.getRemoteCandidates().push(this.getCandidateStats(remoteCandidateId,report))}var transport=report[transportId];return transport?(transportStats.setActiveCandidatePair(this.getCandidatePairStats(transport.selectedCandidatePairId||selectedCandidatePairId,report)),transportStats.setBytesReceived(transport.bytesReceived||0),transportStats.setBytesSent(transport.bytesSent||0),transportStats.setLocalCertificate(this.getCertificateStats(transport.localCertificateId,report)),transportStats.setRemoteCertificate(this.getCertificateStats(transport.remoteCertificateId,report)),transport.rtcpTransportStatsId?transportStats.setRtcpTransport(this.getTransportStats(transport.rtcpTransportStatsId,report,mediaSenderStats,mediaReceiverStats)):transportStats.setRtcpTransport(null)):(transportStats.setActiveCandidatePair(this.getCandidatePairStats(selectedCandidatePairId,report)),transportStats.setBytesReceived(0),mediaReceiverStats&&transportStats.setBytesReceived(mediaReceiverStats.getBytesReceived()),transportStats.setBytesSent(0),mediaSenderStats&&transportStats.setBytesSent(mediaSenderStats.getBytesSent()),transportStats.setLocalCertificate(null),transportStats.setRemoteCertificate(null),transportStats.setRtcpTransport(null)),transportStats},WebRtcConnection.prototype.getCertificateStats=function(certificateId,report){if(!certificateId)return null;var certificate=report[certificateId];if(!certificate)return null;var certificateStats=new fm.liveswitch.CertificateStats;return certificateStats.setId(certificateId),certificateStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),certificateStats.setCertificateBase64(certificate.base64Certificate||null),certificateStats.setFingerprint(certificate.fingerprint||null),certificateStats.setFingerprintAlgorithm(certificate.fingerprintAlgorithm||null),certificateStats},WebRtcConnection.prototype.getCandidateStats=function(candidateId,report){if(!candidateId)return null;var candidate=report[candidateId];if(!candidate)return null;var candidateStats=new fm.liveswitch.CandidateStats;switch(candidateStats.setId(candidateId),candidateStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),candidateStats.setIPAddress(candidate.ip||candidate.ipAddress||null),candidateStats.setPort(candidate.port||candidate.portNumber||-1),candidateStats.setPriority(candidate.priority||-1),candidateStats.setProtocol(fm.liveswitch.ProtocolType.Unknown),candidate.protocol||candidate.transport){case"UDP":case"udp":candidateStats.setProtocol(fm.liveswitch.ProtocolType.Udp);break;case"TCP":case"tcp":candidateStats.setProtocol(fm.liveswitch.ProtocolType.Tcp)}switch(candidateStats.setRelatedIPAddress(candidate.relatedIP||candidate.relatedIPAddress||null),candidateStats.setRelatedPort(candidate.relatedPort||candidate.relatedPortNumber||-1),candidateStats.setType(fm.liveswitch.CandidateType.Unknown),candidate.candidateType){case"host":candidateStats.setType(fm.liveswitch.CandidateType.Host);break;case"srflx":candidateStats.setType(fm.liveswitch.CandidateType.ServerReflexive);break;case"relay":candidateStats.setType(fm.liveswitch.CandidateType.Relayed);break;case"prflx":candidateStats.setType(fm.liveswitch.CandidateType.PeerReflexive)}return candidateStats},WebRtcConnection.prototype.getCandidatePairStats=function(candidatePairId,report){if(!candidatePairId)return null;var candidatePair=report[candidatePairId];if(!candidatePair)return null;var candidatePairStats=new fm.liveswitch.CandidatePairStats;switch(candidatePairStats.setId(candidatePairId),candidatePairStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),candidatePairStats.setBytesReceived(candidatePair.bytesReceived||0),candidatePairStats.setBytesSent(candidatePair.bytesSent||0),candidatePairStats.setCurrentRoundTripTime(Math.round(1e3*(candidatePair.currentRoundTripTime||0))),candidatePairStats.setLocalCandidateId(candidatePair.localCandidateId||null),candidatePairStats.setNominated(candidatePair.nominated||!1),candidatePairStats.setPriority(candidatePair.priority||-1),candidatePairStats.setRemoteCandidateId(candidatePair.remoteCandidateId||null),candidatePairStats.setState(fm.liveswitch.CandidatePairState.New),candidatePair.state){case"frozen":candidatePairStats.setState(fm.liveswitch.CandidatePairState.New);break;case"waiting":candidatePairStats.setState(fm.liveswitch.CandidatePairState.Waiting);break;case"inprogress":candidatePairStats.setState(fm.liveswitch.CandidatePairState.InProgress);break;case"failed":candidatePairStats.setState(fm.liveswitch.CandidatePairState.Failed);break;case"succeeded":candidatePairStats.setState(fm.liveswitch.CandidatePairState.Succeeded);break;case"cancelled":candidatePairStats.setState(fm.liveswitch.CandidatePairState.Closed)}return candidatePairStats.setTotalRoundTripTime(Math.round(1e3*(candidatePair.totalRoundTripTime||0))),candidatePairStats.setTransportId(candidatePair.transportId||null),candidatePairStats},WebRtcConnection.prototype.getCodecStats=function(codecId,report,sender){if(!codecId)return null;var codec=report[codecId];if(!codec)return null;var name=codec.codec||codec.mimeType||codec.name;!name||0!=name.indexOf("audio/")&&0!=name.indexOf("video/")||(name=name.substr(6));var codecStats=new fm.liveswitch.CodecStats;return codecStats.setId(codecId),sender?codecStats.setCodecType(fm.liveswitch.CodecType.Encode):codecStats.setCodecType(fm.liveswitch.CodecType.Decode),codecStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),codecStats.setChannelCount(codec.channels||codec.channelCount||0),codecStats.setClockRate(codec.clockRate||0),codecStats.setName(name||null),codecStats.setParameters(codec.parameters||null),codecStats.setPayloadType(codec.payloadType||-1),"opus"==codecStats.getName()&&0==codecStats.getChannelCount()&&codecStats.setChannelCount(2),codecStats},WebRtcConnection.prototype.getWebRTCBundlePolicyString=function(){var bundlePolicy=this.getBundlePolicy();return bundlePolicy==fm.liveswitch.BundlePolicy.Balanced?"balanced":bundlePolicy==fm.liveswitch.BundlePolicy.MaxBundle?"max-bundle":(fm.liveswitch.BundlePolicy.MaxCompatibility,"max-compat")},WebRtcConnection.prototype.getMediaTrackStats=function(mediaTrackId,report,_mediaTrack,mediaComponent,_mediaStream,local){var _this=this;if(!mediaTrackId)return null;var mediaTrack=report[mediaTrackId];if(!mediaTrack)return null;var lastMediaComponentFrameStats=this._lastMediaComponentFrameStatsCollection[mediaComponent.id];lastMediaComponentFrameStats||(lastMediaComponentFrameStats=this._lastMediaComponentFrameStatsCollection[mediaComponent.id]={}),mediaComponent.hasOwnProperty("frameWidth")&&(lastMediaComponentFrameStats.frameWidth=mediaComponent.frameWidth),mediaComponent.hasOwnProperty("frameHeight")&&(lastMediaComponentFrameStats.frameHeight=mediaComponent.frameHeight),mediaComponent.hasOwnProperty("framesPerSecond")&&(lastMediaComponentFrameStats.framesPerSecond=mediaComponent.framesPerSecond),mediaComponent.hasOwnProperty("framesCorrupted")&&(lastMediaComponentFrameStats.framesCorrupted=mediaComponent.framesCorrupted),mediaComponent.hasOwnProperty("framesDecoded")&&(lastMediaComponentFrameStats.framesDecoded=mediaComponent.framesDecoded),mediaComponent.hasOwnProperty("framesDropped")&&(lastMediaComponentFrameStats.framesDropped=mediaComponent.framesDropped),mediaComponent.hasOwnProperty("framesEncoded")&&(lastMediaComponentFrameStats.framesEncoded=mediaComponent.framesEncoded),mediaComponent.hasOwnProperty("framesReceived")&&(lastMediaComponentFrameStats.framesReceived=mediaComponent.framesReceived),mediaComponent.hasOwnProperty("framesSent")&&(lastMediaComponentFrameStats.framesSent=mediaComponent.framesSent),mediaComponent.hasOwnProperty("targetBitrate")&&(lastMediaComponentFrameStats.targetBitrate=mediaComponent.targetBitrate);var mediaTrackStats=new fm.liveswitch.MediaTrackStats;if(mediaTrackStats.setId(mediaTrackId),mediaTrackStats.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),mediaTrackStats.setDetached(mediaTrack.detached||!1),mediaTrackStats.setFrameWidth(lastMediaComponentFrameStats.frameWidth||mediaTrack.frameWidth||0),mediaTrackStats.setFrameHeight(lastMediaComponentFrameStats.frameHeight||mediaTrack.frameHeight||0),mediaTrackStats.setFrameRate(lastMediaComponentFrameStats.framesPerSecond||mediaTrack.framesPerSecond||mediaTrack.frameRate||0),mediaTrackStats.setFramesCorrupted(lastMediaComponentFrameStats.framesCorrupted||mediaTrack.framesCorrupted||0),mediaTrackStats.setFramesDecoded(lastMediaComponentFrameStats.framesDecoded||mediaTrack.framesDecoded||0),mediaTrackStats.setFramesDropped(lastMediaComponentFrameStats.framesDropped||mediaTrack.framesDropped||0),mediaTrackStats.setFramesEncoded(lastMediaComponentFrameStats.framesEncoded||mediaTrack.framesEncoded||0),mediaTrackStats.setFramesReceived(lastMediaComponentFrameStats.framesReceived||mediaTrack.framesReceived||0),mediaTrackStats.setFramesSent(lastMediaComponentFrameStats.framesSent||mediaTrack.framesSent||0),mediaTrackStats.setMuted(!!_mediaTrack&&_mediaTrack.getMuted()),mediaTrackStats.setStopped(mediaTrack.ended||mediaTrack.stopped||!1),mediaTrackStats.setSynchronizationSources(mediaTrack.ssrcIds||[]),local){var bitrate_1=-1;lastMediaComponentFrameStats.hasOwnProperty("targetBitrate")&&(bitrate_1=lastMediaComponentFrameStats.targetBitrate/1e3);var maxBitrate_1=_mediaStream.getSingleSendBitrate(),frameRate_1=mediaTrackStats.getFrameRate();maxBitrate_1=this.constraintMin(maxBitrate_1,_mediaStream.getMaxSendBitrate()),maxBitrate_1=this.constraintMin(maxBitrate_1,_mediaStream.getRemoteBandwidth());var sendEncodings=_mediaStream.getSendEncodings();if(sendEncodings&&sendEncodings.length>0){for(var applySendEncoding=function(sendEncoding){if(bitrate_1=sendEncoding.getBitrate(),maxBitrate_1=_this.constraintMax(maxBitrate_1,sendEncoding.getBitrate()),sendEncoding instanceof fm.liveswitch.VideoEncodingConfig){var videoSendEncoding=sendEncoding;videoSendEncoding.getFrameRate()>0&&(frameRate_1=videoSendEncoding.getFrameRate())}},_i=0,sendEncodings_2=sendEncodings;_i<sendEncodings_2.length;_i++){var sendEncoding=sendEncodings_2[_i];(mediaComponent.rid&&mediaComponent.rid==sendEncoding.getRtpStreamId()||mediaComponent.ssrc&&mediaComponent.ssrc==sendEncoding.getSynchronizationSource())&&applySendEncoding(sendEncoding)}if(-1==bitrate_1)for(var i=0;i<sendEncodings.length;i++)if(mediaComponent.rid){var index=parseInt(mediaComponent.rid);isNaN(index)||index!=i||applySendEncoding(sendEncodings[i])}}mediaTrackStats.setBitrate(bitrate_1),mediaTrackStats.setMinBitrate(this.constraintMax(-1,_mediaStream.getType()==fm.liveswitch.StreamType.Audio?6:100)),mediaTrackStats.setMaxBitrate(this.constraintMin(maxBitrate_1,_mediaStream.getType()==fm.liveswitch.StreamType.Audio?510:1e5)),mediaTrackStats.setFrameRate(frameRate_1)}return mediaTrackStats},WebRtcConnection.prototype.initialize=function(){var _this=this;this.setState(fm.liveswitch.ConnectionState.Initializing);for(var allowTcp=this._ortcSupportsTcp||fm.liveswitch.Plugin.hasWebRtc()&&!fm.liveswitch.Plugin.hasOrtc(),servers=[],_i=0,_a=this.getIceServers();_i<_a.length;_i++){var server=_a[_i];fm.liveswitch.StringExtensions.endsWith(server.getUrl(),"?transport=udp")?servers.push(server):fm.liveswitch.StringExtensions.endsWith(server.getUrl(),"?transport=tcp")?allowTcp&&servers.push(server):server.getIsStun()?servers.push(new fm.liveswitch.IceServer(server.getUrl()+"?transport=udp")):(servers.push(new fm.liveswitch.IceServer(server.getUrl()+"?transport=udp",server.getUsername(),server.getPassword())),allowTcp&&servers.push(new fm.liveswitch.IceServer(server.getUrl()+"?transport=tcp",server.getUsername(),server.getPassword())))}for(var rtcServers=[],_b=0,servers_1=servers;_b<servers_1.length;_b++){server=servers_1[_b];fm.liveswitch.Log.debug("Using "+server.getUrl()+".");var rtcServer={};rtcServer.urls=[server.getUrl()],server.getIsTurn()&&(rtcServer.username=server.getUsername(),rtcServer.credential=server.getPassword()),rtcServers.push(rtcServer)}for(var mediaStreamCount=this._mediaStreams.length,dataChannelCount=0,_c=0,_d=this._dataStreams;_c<_d.length;_c++){var dataStream=_d[_c];dataChannelCount+=dataStream.getChannels().length}if(fm.liveswitch.Plugin.hasOrtc()){if(dataChannelCount>0)throw new fm.liveswitch.Exception("ORTC does not currently support data channels.");if(this._remoteNativeMediaStream=new MediaStream,this._nativeIceGatherers=[],this._nativeIceTransports=[],this._nativeDtlsTransports=[],this._nativeRtpSenders=[],this._nativeRtpReceivers=[],this._rtpKinds=[],this._localDescription=null,this._remoteDescription=null,this._gatheringState=fm.liveswitch.IceGatheringState.New,this._iceConnectionState=fm.liveswitch.IceConnectionState.New,this._transportsRemaining=0,mediaStreamCount>0){for(var elements=[],index=0,_e=0,mediaStreams_1=this.getMediaStreams();_e<mediaStreams_1.length;_e++){var streamType=(mediaStream=mediaStreams_1[_e]).getType(),localTrack=mediaStream.getLocalTrack(),mediaStreamTrack=null==localTrack?null:localTrack._getMediaStreamTrack(),streamKind=streamType==fm.liveswitch.StreamType.Audio?"audio":"video";streamType!=fm.liveswitch.StreamType.Audio&&streamType!=fm.liveswitch.StreamType.Video||elements.push({track:mediaStreamTrack,kind:streamKind,index:index++})}for(var _f=0,elements_1=elements;_f<elements_1.length;_f++){var element=elements_1[_f];this._remoteNativeMediaStream.addTrack(this.initializeTrack(element,rtcServers))}}}else{this._discoveredCandidates=[],this._gatheringState=fm.liveswitch.IceGatheringState.New,this._iceConnectionState=fm.liveswitch.IceConnectionState.New;var webRtcBundlePolicy=this.getWebRTCBundlePolicyString();try{this._nativePeerConnection=new RTCPeerConnection({iceServers:rtcServers,bundlePolicy:webRtcBundlePolicy})}catch(ex){try{for(var _g=0,rtcServers_1=rtcServers;_g<rtcServers_1.length;_g++){var rtcServer_1=rtcServers_1[_g];rtcServer_1.urls&&(rtcServer_1.urls=rtcServer_1.urls[0])}this._nativePeerConnection=new RTCPeerConnection({iceServers:rtcServers,bundlePolicy:webRtcBundlePolicy})}catch(ex){try{for(var _h=0,rtcServers_2=rtcServers;_h<rtcServers_2.length;_h++){var rtcServer_2=rtcServers_2[_h];rtcServer_2.urls&&(rtcServer_2.url=rtcServer_2.urls)}delete rtcServer.urls,this._nativePeerConnection=new RTCPeerConnection({iceServers:rtcServers,bundlePolicy:webRtcBundlePolicy})}catch(ex){throw""==ex.message?new fm.liveswitch.Exception("Unable to create internal RTCPeerConnection."):ex}}}this._nativePeerConnection.onicegatheringstatechange=function(event){switch(_this._nativePeerConnection.iceGatheringState){case"new":_this.setGatheringState(fm.liveswitch.IceGatheringState.New);break;case"complete":_this.setGatheringState(fm.liveswitch.IceGatheringState.Complete);break;case"gathering":_this.setGatheringState(fm.liveswitch.IceGatheringState.Gathering)}},this._nativePeerConnection.oniceconnectionstatechange=function(event){switch(_this._nativePeerConnection.iceConnectionState){case"new":_this.setIceConnectionState(fm.liveswitch.IceConnectionState.New);break;case"checking":_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Checking);break;case"connected":_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Connected);break;case"completed":_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Completed);break;case"failed":_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Failed);break;case"disconnected":_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Disconnected);break;case"closed":_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Closed)}},this._nativePeerConnection.onicecandidate=function(event){if(event.candidate){var sdpCandidateString=event.candidate.candidate;if(sdpCandidateString&&sdpCandidateString.length>0){fm.liveswitch.StringExtensions.startsWith(sdpCandidateString,"a=")||(sdpCandidateString="a="+sdpCandidateString);var localCandidate=new fm.liveswitch.Candidate;localCandidate.setSdpMediaIndex(event.candidate.sdpMLineIndex),localCandidate.setSdpCandidateAttribute(fm.liveswitch.sdp.Attribute.parse(sdpCandidateString)),_this.getUseTrickleIce()?_this.validateCandidate(localCandidate)&&_this.raiseLocalCandidate(localCandidate):_this.validateCandidate(localCandidate)&&_this._discoveredCandidates.push(localCandidate)}}};var dataChannelsConnected_1=0;this._dataStreamsReady=dataChannelsConnected_1==dataChannelCount;for(var processDataChannelStateChange_1=function(dataChannel){var dataChannelState=dataChannel.getState();dataChannelState==fm.liveswitch.DataChannelState.Connected?dataChannelsConnected_1++:dataChannelState==fm.liveswitch.DataChannelState.Closed?0==--dataChannelsConnected_1&&0==mediaStreamCount&&_this.setState(fm.liveswitch.ConnectionState.Closing)&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Closed)):dataChannelState==fm.liveswitch.DataChannelState.Failed&&0==--dataChannelsConnected_1&&0==mediaStreamCount&&_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ReliableDataChannelSendError,new fm.liveswitch.Exception("Data channel failed.")))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),_this._dataStreamsReady=dataChannelsConnected_1==dataChannelCount,_this._dataStreamsReady&&_this._mediaStreamsReady&&_this.getState()==fm.liveswitch.ConnectionState.Connecting&&_this.setState(fm.liveswitch.ConnectionState.Connected)},_loop_2=function(dataStream){if(this_2._offerer)for(var _i=0,_a=dataStream.getChannels();_i<_a.length;_i++){var dataChannel=_a[_i],rtcDataChannel=this_2._nativePeerConnection.createDataChannel(dataChannel.getLabel(),{ordered:dataChannel.getOrdered(),negotiated:!1});dataChannel.setNativeDataChannel(rtcDataChannel),dataChannel.addOnStateChange(processDataChannelStateChange_1)}else this_2._nativePeerConnection.ondatachannel=function(event){for(var rtcDataChannel=event.channel,_i=0,_a=dataStream.getChannels();_i<_a.length;_i++){var dataChannel=_a[_i];dataChannel.getLabel()==rtcDataChannel.label&&(dataChannel.setNativeDataChannel(rtcDataChannel),dataChannel.addOnStateChange(processDataChannelStateChange_1))}}},this_2=this,_j=0,_k=this._dataStreams;_j<_k.length;_j++){_loop_2(dataStream=_k[_j])}if(this._mediaStreamsReady=0==mediaStreamCount,mediaStreamCount>0){var pendingNativeMediaStreams_1=[],processNativeMediaStream_1=function(nativeMediaStreams){pendingNativeMediaStreams_1=pendingNativeMediaStreams_1.concat(nativeMediaStreams);for(var remainingTracks=_this._remoteMediaTrackCount,nativeAudioStream=null,nativeVideoStream=null,_i=0,pendingNativeMediaStreams_2=pendingNativeMediaStreams_1;_i<pendingNativeMediaStreams_2.length;_i++){var pendingNativeMediaStream=pendingNativeMediaStreams_2[_i],nativeAudioTracks=pendingNativeMediaStream.getAudioTracks();nativeAudioTracks.length&&(nativeAudioStream=pendingNativeMediaStream,remainingTracks-=nativeAudioTracks.length);var nativeVideoTracks=pendingNativeMediaStream.getVideoTracks();if(nativeVideoTracks.length>0&&(nativeVideoStream=pendingNativeMediaStream,remainingTracks-=nativeVideoTracks.length),0==remainingTracks){_this._remoteMedia._setMediaStreams(nativeAudioStream,nativeVideoStream);for(var remoteAudioTracks=_this._remoteMedia.getAudioTracks(),i=0;i<remoteAudioTracks.length;i++)if(i<_this._audioStreams.length){var audioStream=_this._audioStreams[i];audioStream.getRemoteTrack()||audioStream.setRemoteTrack(remoteAudioTracks[i])}var remoteVideoTracks=_this._remoteMedia.getVideoTracks();for(i=0;i<remoteVideoTracks.length;i++)if(i<_this._videoStreams.length){var videoStream=_this._videoStreams[i];videoStream.getRemoteTrack()||videoStream.setRemoteTrack(remoteVideoTracks[i])}_this._mediaStreamsReady=!0,_this._dataStreamsReady&&_this._mediaStreamsReady&&_this.getState()==fm.liveswitch.ConnectionState.Connecting&&_this.setState(fm.liveswitch.ConnectionState.Connected)}}};"ontrack"in this._nativePeerConnection?this._nativePeerConnection.ontrack=function(event){processNativeMediaStream_1(event.streams)}:this._nativePeerConnection.onaddstream=function(event){processNativeMediaStream_1([event.stream])}}for(var useAddTrack=fm.liveswitch.Util.isFunction(this._nativePeerConnection.addTrack),useAddTransceiver=fm.liveswitch.Util.isFunction(this._nativePeerConnection.addTransceiver),addedStreams=[],_loop_3=function(mediaStream){var localMediaTrack=mediaStream.getLocalTrack();if(localMediaTrack){var localMedia_1=localMediaTrack.getMedia(),nativeMediaStreamTrack=localMediaTrack._getMediaStreamTrack();if(nativeMediaStreamTrack){var kind=nativeMediaStreamTrack.kind,nativeMediaStream="audio"==kind?localMedia_1._getAudioMediaStream():localMedia_1._getVideoMediaStream();nativeMediaStream&&("audio"==kind?(localMedia_1.addAudioStream(mediaStream),this_3.addOnStateChange((function(c){c.getIsTerminating()&&localMedia_1.removeAudioStream(mediaStream)}))):(localMedia_1.addVideoStream(mediaStream),this_3.addOnStateChange((function(c){c.getIsTerminating()&&localMedia_1.removeVideoStream(mediaStream)}))),useAddTransceiver||useAddTrack?this_3.getSignallingState()==fm.liveswitch.SignallingState.New&&this_3._offerer&&this_3.setupTransceivers(useAddTransceiver,useAddTrack,nativeMediaStreamTrack,nativeMediaStream,mediaStream):fm.liveswitch.ArrayExtensions.contains(addedStreams,nativeMediaStream)||(this_3._nativePeerConnection.addStream(nativeMediaStream),addedStreams.push(nativeMediaStream)))}}},this_3=this,_l=0,_m=this._mediaStreams;_l<_m.length;_l++){var mediaStream;_loop_3(mediaStream=_m[_l])}var deadStreamTimer_1=0;this._nativePeerConnection.oniceconnectionstatechange=function(event){"connected"!=_this._nativePeerConnection.iceConnectionState&&"completed"!=_this._nativePeerConnection.iceConnectionState||(deadStreamTimer_1&&(fm.liveswitch.Log.debug("Connectivity checks have restored."),window.clearTimeout(deadStreamTimer_1),deadStreamTimer_1=null),_this.getState()==fm.liveswitch.ConnectionState.Initializing&&(fm.liveswitch.Log.debug("Transitioning Connection from Initializing to Connecting state because inner iceConnectionState state is Connected."),_this.setState(fm.liveswitch.ConnectionState.Connecting)),_this._dataStreamsReady&&_this._mediaStreamsReady&&_this.getState()==fm.liveswitch.ConnectionState.Connecting&&_this.setState(fm.liveswitch.ConnectionState.Connected)),"disconnected"==_this._nativePeerConnection.iceConnectionState&&_this.getState()==fm.liveswitch.ConnectionState.Connected&&(fm.liveswitch.Log.debug("Some connectivity checks have failed. Monitoring for dead stream."),deadStreamTimer_1||(deadStreamTimer_1=window.setTimeout((function(){deadStreamTimer_1=null,_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionDeadStream,new fm.liveswitch.Exception("Dead stream detected.")))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed))}),_this.getDeadStreamTimeout())))}}this._initialized=!0},WebRtcConnection.prototype.setupTransceivers=function(useAddTransceiver,useAddTrack,nativeMediaStreamTrack,nativeMediaStream,mediaStream){var nativeSendEncodings=mediaStream.getNativeSendEncodings(),useSimulcast=nativeSendEncodings&&nativeSendEncodings.length>1;if(useSimulcast){var simulcastMode=mediaStream.getSimulcastMode();if(simulcastMode==fm.liveswitch.SimulcastMode.Disabled)throw new fm.liveswitch.Exception("Multiple send encodings were specified, but the SimulcastMode is Disabled. Choose a different SimulcastMode for the stream or reduce the number of encodings to one.");if(simulcastMode!=fm.liveswitch.SimulcastMode.RtpStreamId)throw new fm.liveswitch.Exception("Multiple send encodings were specified, but the SimulcastMode "+new fm.liveswitch.SimulcastModeWrapper(simulcastMode).toString()+" was not recognized.");for(var rtpStreamIndex=0,_i=0,nativeSendEncodings_2=nativeSendEncodings;_i<nativeSendEncodings_2.length;_i++){nativeSendEncodings_2[_i].rid=(rtpStreamIndex++).toString()}}if(useAddTransceiver&&useSimulcast){var nativeDirection=void 0,direction=mediaStream.getDirection();direction!=fm.liveswitch.StreamDirection.Unset&&(nativeDirection=fm.liveswitch.StreamDirectionHelper.directionToString(direction));var nativeTransceiverInit={};nativeDirection&&(nativeTransceiverInit.direction=nativeDirection),nativeSendEncodings&&(nativeTransceiverInit.sendEncodings=nativeSendEncodings);var transceiver=this._nativePeerConnection.addTransceiver(nativeMediaStreamTrack.kind,nativeTransceiverInit);this._nativePeerConnection.addTrack(nativeMediaStreamTrack,nativeMediaStream),transceiver.sender&&mediaStream.setSender(transceiver.sender,!0),transceiver.receiver&&mediaStream.setReceiver(transceiver.receiver)}else if(useSimulcast&&fm.liveswitch.Log.warn("Multiple send encodings were specified, but this browser does not support simulcast. The default encoding will be sent."),useAddTrack){var sender=this._nativePeerConnection.addTrack(nativeMediaStreamTrack,nativeMediaStream);sender&&mediaStream.setSender(sender,!1)}},WebRtcConnection.prototype.initializeTrack=function(element,rtcServers){var _this=this,iceGatherer=this.createIceGatherer(rtcServers);this._nativeIceGatherers.push(iceGatherer),iceGatherer.onlocalcandidate=function(event){var rtcCandidate=event.candidate;if(Object.keys(rtcCandidate).length>0){var localCandidate=new fm.liveswitch.Candidate;localCandidate.setSdpMediaIndex(element.index),localCandidate.setSdpCandidateAttribute(_this.rtcCandidateToSdpCandidateAttribute(rtcCandidate)),_this.validateCandidate(localCandidate)&&_this.raiseLocalCandidate(localCandidate)}};var iceTransport=new RTCIceTransport;this._nativeIceTransports.push(iceTransport);var dtlsTransport=new window.RTCDtlsTransport(iceTransport);if(this._nativeDtlsTransports.push(dtlsTransport),element.track&&"ended"!=element.track.readyState){var rtpSender=new window.RTCRtpSender(element.track,dtlsTransport);this._nativeRtpSenders.push(rtpSender)}else this._nativeRtpSenders.push(null);var rtpReceiver=new window.RTCRtpReceiver(dtlsTransport,element.kind);return this._nativeRtpReceivers.push(rtpReceiver),this._rtpKinds.push(element.kind),rtpReceiver.track},WebRtcConnection.prototype.validateCandidate=function(candidate){return this.getIceGatherPolicy()==fm.liveswitch.IceGatherPolicy.NoHost?candidate.getSdpCandidateAttribute().getCandidateType()!==fm.liveswitch.sdp.ice.CandidateType.getHost():this.getIceGatherPolicy()!=fm.liveswitch.IceGatherPolicy.Relay||candidate.getSdpCandidateAttribute().getCandidateType()===fm.liveswitch.sdp.ice.CandidateType.getRelayed()},WebRtcConnection.prototype.createIceGatherer=function(rtcServers){var iceGatherer;rtcServers=rtcServers.slice(0);this.getIceGatherPolicy()==fm.liveswitch.IceGatherPolicy.NoHost||(this.getIceGatherPolicy(),fm.liveswitch.IceGatherPolicy.Relay);try{for(var _i=0,rtcServers_3=rtcServers;_i<rtcServers_3.length;_i++){var rtcServer=rtcServers_3[_i];fm.liveswitch.Util.isArray(rtcServer.urls)&&(rtcServer.urls=rtcServer.urls[0])}iceGatherer=new RTCIceGatherer({gatherPolicy:"all",iceServers:rtcServers})}catch(ex){try{for(var i=rtcServers.length;i--;)fm.liveswitch.StringExtensions.startsWith(rtcServers[i].urls,"stun:")?(fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("ORTC currently does not support STUN protocol. Removing {0} from the list of ICE servers.",rtcServers[i].urls)),rtcServers.splice(i,1)):fm.liveswitch.StringExtensions.startsWith(rtcServers[i].urls,"turns:")&&(fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("ORTC currently does not support TURNS protocol. Removing {0} from the list of ICE servers.",rtcServers[i].urls)),rtcServers.splice(i,1));iceGatherer=new RTCIceGatherer({gatherPolicy:"all",iceServers:rtcServers})}catch(ex){try{for(var _a=0,rtcServers_4=rtcServers;_a<rtcServers_4.length;_a++){""==(rtcServer=rtcServers_4[_a]).username&&(rtcServer.username="unspecified"),""==rtcServer.credential&&(rtcServer.credential="unspecified")}iceGatherer=new RTCIceGatherer({gatherPolicy:"all",iceServers:rtcServers})}catch(ex){try{if(!(rtcServers.length>1))throw fm.liveswitch.Log.error("Could not create ORTC IceGatherer.",ex),ex;var server=rtcServers[0];(rtcServers=new Array(1))[0]=server,iceGatherer=new RTCIceGatherer({gatherPolicy:"all",iceServers:rtcServers})}catch(ex){throw fm.liveswitch.Log.error("Could not create ORTC IceGatherer.",ex),ex}}}}return iceGatherer},WebRtcConnection.prototype.sessionDescriptionTypeToString=function(typeEnum){return typeEnum==fm.liveswitch.SessionDescriptionType.Offer?"offer":"answer"},WebRtcConnection.prototype.sessionDescriptionTypeToEnum=function(typeString){return"offer"==typeString?fm.liveswitch.SessionDescriptionType.Offer:fm.liveswitch.SessionDescriptionType.Answer},WebRtcConnection.prototype.webrtcCandidateToCandidate=function(webrtcCandidate){var candidate=new fm.liveswitch.Candidate;return candidate.setSdpCandidateAttribute(fm.liveswitch.sdp.Attribute.parse(webrtcCandidate.candidate)),candidate.setSdpMediaIndex(webrtcCandidate.sdpMLineIndex),candidate},WebRtcConnection.prototype.webrtcCandidateFromCandidate=function(candidate){return new RTCIceCandidate({candidate:candidate.getSdpCandidateAttribute().toString(),sdpMLineIndex:candidate.getSdpMediaIndex()})},WebRtcConnection.prototype.webrtcSessionDescriptionToSessionDescription=function(webrtcSessionDescription){var sessionDescription=new fm.liveswitch.SessionDescription;return sessionDescription.setSdpMessage(fm.liveswitch.sdp.Message.parse(webrtcSessionDescription.sessionDescription.sdp)),sessionDescription.setType(this.sessionDescriptionTypeToEnum(webrtcSessionDescription.sessionDescription.type)),sessionDescription.setTieBreaker(webrtcSessionDescription.tieBreaker),sessionDescription},WebRtcConnection.prototype.webrtcSessionDescriptionFromSessionDescription=function(sessionDescription){return{sessionDescription:new RTCSessionDescription({sdp:sessionDescription.getSdpMessage().toString(),type:this.sessionDescriptionTypeToString(sessionDescription.getType())}),tieBreaker:sessionDescription.getTieBreaker()}},WebRtcConnection.prototype.rtcCandidateToSdpCandidateAttribute=function(rtcCandidate){var sdpCandidateAttribute=new fm.liveswitch.sdp.ice.CandidateAttribute;return sdpCandidateAttribute.setFoundation(rtcCandidate.foundation),sdpCandidateAttribute.setComponentId(1),sdpCandidateAttribute.setProtocol(rtcCandidate.protocol),sdpCandidateAttribute.setPriority(rtcCandidate.priority),sdpCandidateAttribute.setConnectionAddress(rtcCandidate.ip),sdpCandidateAttribute.setPort(rtcCandidate.port),sdpCandidateAttribute.setCandidateType(rtcCandidate.type),rtcCandidate.relatedAddress&&(sdpCandidateAttribute.setRelatedAddress(rtcCandidate.relatedAddress),sdpCandidateAttribute.setRelatedPort(rtcCandidate.relatedPort)),sdpCandidateAttribute},WebRtcConnection.prototype.rtcCandidateFromSdpCandidateAttribute=function(sdpCandidateAttribute){return{foundation:sdpCandidateAttribute.getFoundation(),protocol:sdpCandidateAttribute.getProtocol(),priority:sdpCandidateAttribute.getPriority(),ip:sdpCandidateAttribute.getConnectionAddress(),port:sdpCandidateAttribute.getPort(),type:sdpCandidateAttribute.getCandidateType(),relatedAddress:sdpCandidateAttribute.getRelatedAddress(),relatedPort:sdpCandidateAttribute.getRelatedPort(),tcpType:sdpCandidateAttribute.getProtocol()==fm.liveswitch.sdp.ice.TransportProtocol.getTcp()?"active":void 0}},WebRtcConnection.prototype.ortcCandidateToCandidate=function(ortcCandidate){var candidate=new fm.liveswitch.Candidate;return candidate.setSdpCandidateAttribute(this.rtcCandidateToSdpCandidateAttribute(ortcCandidate.candidate)),candidate.setSdpMediaIndex(ortcCandidate.mediaIndex),candidate},WebRtcConnection.prototype.ortcCandidateFromCandidate=function(candidate){return{candidate:this.rtcCandidateFromSdpCandidateAttribute(candidate.getSdpCandidateAttribute()),mediaIndex:candidate.getSdpMediaIndex()}},WebRtcConnection.prototype.ortcSessionDescriptionToSessionDescription=function(ortcSessionDescription){for(var sdpMessage=new fm.liveswitch.sdp.Message(new fm.liveswitch.sdp.Origin("127.0.0.1"),"Frozen Mountain ORTC"),mediaDescriptions=new Array(ortcSessionDescription.mediaDescriptions.length),index=0,_i=0,_a=ortcSessionDescription.mediaDescriptions;_i<_a.length;_i++){for(var ortcMediaDescription=_a[_i],codecPayloadTypes=[],_b=0,_c=ortcMediaDescription.codecCaps;_b<_c.length;_b++){var ortcCodecCap=_c[_b];codecPayloadTypes.push(ortcCodecCap.preferredPayloadType)}var sdpMediaDescription=new fm.liveswitch.sdp.MediaDescription(new fm.liveswitch.sdp.Media(ortcMediaDescription.kind,9,"RTP/SAVPF",codecPayloadTypes.join(" ")));sdpMediaDescription.setConnectionData(new fm.liveswitch.sdp.ConnectionData("0.0.0.0")),sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.rtcp.Attribute(9,"0.0.0.0")),sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.ice.UfragAttribute(ortcMediaDescription.iceParams.usernameFragment)),sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.ice.PasswordAttribute(ortcMediaDescription.iceParams.password));for(var _d=0,_e=ortcMediaDescription.dtlsParams.fingerprints;_d<_e.length;_d++){var fingerprint=_e[_d];sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.ice.FingerprintAttribute(fingerprint.algorithm,fingerprint.value))}"auto"==ortcMediaDescription.dtlsParams.role?sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.SetupAttribute(fm.liveswitch.sdp.Setup.getActPass())):"client"==ortcMediaDescription.dtlsParams.role?sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.SetupAttribute(fm.liveswitch.sdp.Setup.getActive())):"server"==ortcMediaDescription.dtlsParams.role&&sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.SetupAttribute(fm.liveswitch.sdp.Setup.getPassive())),ortcMediaDescription.direction==fm.liveswitch.StreamDirection.SendReceive?sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.SendReceiveAttribute):ortcMediaDescription.direction==fm.liveswitch.StreamDirection.SendOnly?sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.SendOnlyAttribute):ortcMediaDescription.direction==fm.liveswitch.StreamDirection.ReceiveOnly?sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.ReceiveOnlyAttribute):sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.InactiveAttribute),sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.rtcp.MuxAttribute);for(var _f=0,_g=ortcMediaDescription.codecCaps;_f<_g.length;_f++){if((ortcCodecCap=_g[_f]).numChannels>1?sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.rtp.MapAttribute(ortcCodecCap.preferredPayloadType,ortcCodecCap.name,ortcCodecCap.clockRate,ortcCodecCap.numChannels.toString())):sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.rtp.MapAttribute(ortcCodecCap.preferredPayloadType,ortcCodecCap.name,ortcCodecCap.clockRate)),ortcCodecCap.parameters&&fm.liveswitch.HashExtensions.getCount(ortcCodecCap.parameters)>0){var sdpFormatParametersAttribute=new fm.liveswitch.sdp.FormatParametersAttribute(ortcCodecCap.preferredPayloadType);for(var key in ortcCodecCap.parameters)sdpFormatParametersAttribute.setFormatSpecificParameter(key,ortcCodecCap.parameters[key]);sdpMediaDescription.addMediaAttribute(sdpFormatParametersAttribute)}if(ortcCodecCap.rtcpFeedback)for(var _h=0,_j=ortcCodecCap.rtcpFeedback;_h<_j.length;_h++){var rtcpFeedback=_j[_h];fm.liveswitch.StringExtensions.isNullOrEmpty(rtcpFeedback.parameter)?sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.rtcp.FeedbackAttribute(ortcCodecCap.preferredPayloadType,rtcpFeedback.type)):sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.rtcp.FeedbackAttribute(ortcCodecCap.preferredPayloadType,rtcpFeedback.type,rtcpFeedback.parameter))}}for(var _k=0,_l=ortcMediaDescription.candidates;_k<_l.length;_k++){var ortcCandidate=_l[_k];sdpMediaDescription.addMediaAttribute(this.rtcCandidateToSdpCandidateAttribute(ortcCandidate))}0!=ortcMediaDescription.ssrc&&sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.rtp.SsrcAttribute(ortcMediaDescription.ssrc,fm.liveswitch.sdp.rtp.SsrcAttributeName.getCName(),ortcMediaDescription.cname)),mediaDescriptions[index]=sdpMediaDescription,index++}this.getSessionDescriptionManager().addMediaDescriptions(sdpMessage,mediaDescriptions);var sessionDescription=new fm.liveswitch.SessionDescription;return sessionDescription.setSdpMessage(sdpMessage),sessionDescription.setTieBreaker(ortcSessionDescription.tieBreaker),sessionDescription.setType(ortcSessionDescription.type),sessionDescription},WebRtcConnection.prototype.ortcSessionDescriptionFromSessionDescription=function(sessionDescription){for(var sdpMessage=sessionDescription.getSdpMessage(),sdpOrigin=sdpMessage.getOrigin(),ortcSessionDescription={sessionId:sdpOrigin.getSessionId(),sessionVersion:sdpOrigin.getSessionVersion(),mediaDescriptions:[],tieBreaker:sessionDescription.getTieBreaker(),type:sessionDescription.getType()},sessionUfragAttribute=null,sessionPasswordAttribute=null,sessionFingerprintAttributes=[],_i=0,_a=sdpMessage.getSessionAttributes();_i<_a.length;_i++){var sdpSessionAttribute=_a[_i];fm.liveswitch.Util.isObjectType(sdpSessionAttribute,"[fm.liveswitch.sdp.ice.UfragAttribute]")?sessionUfragAttribute=sdpSessionAttribute:fm.liveswitch.Util.isObjectType(sdpSessionAttribute,"[fm.liveswitch.sdp.ice.PasswordAttribute]")?sessionPasswordAttribute=sdpSessionAttribute:fm.liveswitch.Util.isObjectType(sdpSessionAttribute,"[fm.liveswitch.sdp.ice.FingerprintAttribute]")&&sessionFingerprintAttributes.push(sdpSessionAttribute)}for(var _b=0,_c=sdpMessage.getMediaDescriptions();_b<_c.length;_b++){var sdpMediaDescription=_c[_b],ortcMediaDescription={kind:sdpMediaDescription.getMedia().getMediaType(),direction:fm.liveswitch.StreamDirection.SendReceive,iceParams:{},dtlsParams:{fingerprints:[]},codecCaps:[],candidates:[],ssrc:0,cname:null};null!=sessionUfragAttribute&&(ortcMediaDescription.iceParams.usernameFragment=sessionUfragAttribute.getUfrag()),null!=sessionPasswordAttribute&&(ortcMediaDescription.iceParams.password=sessionPasswordAttribute.getPassword());for(var _d=0,sessionFingerprintAttributes_1=sessionFingerprintAttributes;_d<sessionFingerprintAttributes_1.length;_d++){var sessionFingerprintAttribute=sessionFingerprintAttributes_1[_d];ortcMediaDescription.dtlsParams.fingerprints.push({algorithm:sessionFingerprintAttribute.getHashFunction(),value:sessionFingerprintAttribute.getFingerprint()})}for(var mediaFormatParametersHash={},mediaFeedbackAttributeHash={},_e=0,_f=sdpMediaDescription.getMediaAttributes();_e<_f.length;_e++){var sdpMediaAttribute=_f[_e];if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.FormatParametersAttribute]")){var mediaFormatParametersAttribute=sdpMediaAttribute,mediaFormatParametersList=mediaFormatParametersHash[key=mediaFormatParametersAttribute.getFormat().toString()];mediaFormatParametersList||(mediaFormatParametersHash[key]=mediaFormatParametersList=[]),mediaFormatParametersList.push(mediaFormatParametersAttribute)}else if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.rtcp.FeedbackAttribute]")){var key,mediaFeedbackAttribute=sdpMediaAttribute,mediaFeedbackAttributeList=mediaFeedbackAttributeHash[key=mediaFeedbackAttribute.getPayloadType().toString()];mediaFeedbackAttributeList||(mediaFeedbackAttributeHash[key]=mediaFeedbackAttributeList=[]),mediaFeedbackAttributeList.push(mediaFeedbackAttribute)}}for(var _g=0,_h=sdpMediaDescription.getMediaAttributes();_g<_h.length;_g++){sdpMediaAttribute=_h[_g];if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.ice.UfragAttribute]")){var mediaUfragAttribute=sdpMediaAttribute;ortcMediaDescription.iceParams.usernameFragment=mediaUfragAttribute.getUfrag()}else if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.ice.PasswordAttribute]")){var mediaPasswordAttribute=sdpMediaAttribute;ortcMediaDescription.iceParams.password=mediaPasswordAttribute.getPassword()}else if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.ice.FingerprintAttribute]")){var mediaFingerprintAttribute=sdpMediaAttribute;ortcMediaDescription.dtlsParams.fingerprints.push({algorithm:mediaFingerprintAttribute.getHashFunction(),value:mediaFingerprintAttribute.getFingerprint()})}else if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.SetupAttribute]")){var mediaSetupAttribute=sdpMediaAttribute;mediaSetupAttribute.getSetup()==fm.liveswitch.sdp.Setup.getActPass()?ortcMediaDescription.dtlsParams.role="auto":mediaSetupAttribute.getSetup()==fm.liveswitch.sdp.Setup.getActive()?ortcMediaDescription.dtlsParams.role="client":mediaSetupAttribute.getSetup()==fm.liveswitch.sdp.Setup.getPassive()&&(ortcMediaDescription.dtlsParams.role="server")}else if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.rtp.MapAttribute]")){var mediaRtpMapAttribute=sdpMediaAttribute,formatParameters=mediaRtpMapAttribute.getFormatParameters(),codecCap={preferredPayloadType:mediaRtpMapAttribute.getPayloadType(),name:mediaRtpMapAttribute.getFormatName(),clockRate:mediaRtpMapAttribute.getClockRate(),numChannels:fm.liveswitch.StringExtensions.isNullOrEmpty(formatParameters)?1:fm.liveswitch.ParseAssistant.parseIntegerValue(formatParameters),parameters:{},rtcpFeedback:[]},payloadTypeKey=mediaRtpMapAttribute.getPayloadType().toString();this.applyMediaFormatParametersAttributes(codecCap,mediaFormatParametersHash[payloadTypeKey]),this.applyMediaFeedbackAttributes(codecCap,mediaFeedbackAttributeHash[payloadTypeKey]),this.applyMediaFeedbackAttributes(codecCap,mediaFeedbackAttributeHash[-1]),ortcMediaDescription.codecCaps.push(codecCap)}else if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.ice.CandidateAttribute]")){var mediaCandidateAttribute=sdpMediaAttribute;(mediaCandidateAttribute.getProtocol()!=fm.liveswitch.sdp.ice.TransportProtocol.getTcp()||this._ortcSupportsTcp)&&ortcMediaDescription.candidates.push(this.rtcCandidateFromSdpCandidateAttribute(mediaCandidateAttribute))}else if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.rtp.SsrcAttribute]")){var mediaSsrcAttribute=sdpMediaAttribute;0==ortcMediaDescription.ssrc&&(ortcMediaDescription.ssrc=mediaSsrcAttribute.getSynchronizationSource()),mediaSsrcAttribute.getName()==fm.liveswitch.sdp.rtp.SsrcAttributeName.getCName()&&ortcMediaDescription.ssrc==mediaSsrcAttribute.getSynchronizationSource()&&(ortcMediaDescription.cname=mediaSsrcAttribute.getValue())}}ortcSessionDescription.mediaDescriptions.push(ortcMediaDescription)}return ortcSessionDescription},WebRtcConnection.prototype.applyMediaFormatParametersAttributes=function(codecCap,mediaFormatParametersList){if(mediaFormatParametersList)for(var _i=0,mediaFormatParametersList_1=mediaFormatParametersList;_i<mediaFormatParametersList_1.length;_i++){var params=mediaFormatParametersList_1[_i].deserializeFormatSpecificParameters();for(var key in params)codecCap.parameters[key]=params[key]}},WebRtcConnection.prototype.applyMediaFeedbackAttributes=function(codecCap,mediaFeedbackAttributeList){if(mediaFeedbackAttributeList)for(var _i=0,mediaFeedbackAttributeList_1=mediaFeedbackAttributeList;_i<mediaFeedbackAttributeList_1.length;_i++){var mediaFeedbackAttribute=mediaFeedbackAttributeList_1[_i];codecCap.rtcpFeedback.push({type:mediaFeedbackAttribute.getType(),parameter:mediaFeedbackAttribute.getSubType()||""})}},WebRtcConnection.prototype.getIceCandidateProcessingTimeout=function(){return this._iceCandidateProcessingTimeout},WebRtcConnection.prototype.setIceCandidateProcessingTimeout=function(value){if(!(value>0))throw new fm.liveswitch.Exception("");this._iceCandidateProcessingTimeout=value},WebRtcConnection.prototype.doCreateOffer=function(promise){return this._offerer=!0,this.doCreate(promise),!0},WebRtcConnection.prototype.doCreateAnswer=function(promise){this._offerer=!1,this.doCreate(promise)},WebRtcConnection.prototype.processIceGatheringStateComplete=function(){this._iceGatheringComplete=!0,this.getUseTrickleIce()||this._isRenegotiation||!this._originalSetNativeDescriptionComplete||this.injectDiscoveredCandidatesIntoSdp()},WebRtcConnection.prototype.injectDiscoveredCandidatesIntoSdp=function(){if(this._injectingCandidates);else if(null==this._localSessionDescriptionPromise||null==this._localSessionDescription){this._injectingCandidates=!0;var errorMsg="Local Session Description not ready when trying to inject local candidates into session description.";null==this._localSessionDescriptionPromise&&(errorMsg="Local Session Description Promise not set when trying to inject local candidates into session description.");var error=new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInternalError,errorMsg);this.setState(fm.liveswitch.ConnectionState.Failing,error)&&(this.doClose(),this.setState(fm.liveswitch.ConnectionState.Failed)),null!=this._localSessionDescriptionPromise&&this._localSessionDescriptionPromise.reject(new fm.liveswitch.Exception(errorMsg))}else{this._injectingCandidates=!0;var medias=this._localSessionDescription.getSdpMessage().getMediaDescriptions();if(null!=medias)for(var _i=0,_a=this._discoveredCandidates;_i<_a.length;_i++){var candidate=_a[_i],media=medias[candidate.getSdpMediaIndex()],candidateAttribute=candidate.getSdpCandidateAttribute();media.addMediaAttribute(candidateAttribute);var connectionData=media.getConnectionData(),existingIp=connectionData.getConnectionAddress(),candidatePort=candidateAttribute.getPort(),candidateIp=candidateAttribute.getConnectionAddress(),candidateComponent=candidateAttribute.getComponentId();if(2==candidateComponent){var rtcpAttribute=media.getRtcpAttribute();null==rtcpAttribute?(rtcpAttribute=new fm.liveswitch.sdp.rtcp.Attribute(candidatePort,candidateIp),media.setRtcpAttribute(rtcpAttribute)):rtcpAttribute.update(candidatePort,candidateIp)}var existingIpBlank="0.0.0.0"==existingIp||"::"==existingIp||"0:0:0:0:0:0:0:0"==existingIp,candidateIpBlank="0.0.0.0"==candidateIp||"::"==candidateIp||"0:0:0:0:0:0:0:0"==existingIp,isUdpCandidate=candidateAttribute.getProtocol().toLowerCase()==fm.liveswitch.sdp.ice.TransportProtocol.getUdp().toLowerCase();if(1==candidateComponent&&isUdpCandidate&&existingIpBlank&&!candidateIpBlank&&candidatePort>0)connectionData.update(candidateIp),media.getMedia().setTransportPort(candidatePort)}this._localSessionDescriptionPromise.resolve(this._localSessionDescription)}},WebRtcConnection.prototype.setNativeDescriptionSuccess=function(sessionDescription,promise){var _this=this;this._originalSetNativeDescriptionComplete=!0,this._localSessionDescriptionPromise=promise,this._localSessionDescription=sessionDescription,this.getUseTrickleIce()||this._isRenegotiation?promise.resolve(sessionDescription):this._iceGatheringComplete?this.injectDiscoveredCandidatesIntoSdp():window.setTimeout((function(){_this.injectDiscoveredCandidatesIntoSdp()}),this.getIceCandidateProcessingTimeout())},WebRtcConnection.prototype.modifyExtRtpMapId=function(newId,oldId,sdpMessage){var extAttrbutes=sdpMessage.getSessionLevelRtpExtMapAttributes().filter((function(x){return x.getId()==oldId}));sdpMessage.getMediaDescriptions().forEach((function(md){var mdExtAttrbutes=md.getRtpExtMapAttributes();extAttrbutes=extAttrbutes.concat(mdExtAttrbutes.filter((function(x){return x.getId()==oldId})))})),extAttrbutes.forEach((function(x){return x.setId(newId)}))},WebRtcConnection.prototype.getExtRtpMapAttributesWithNoDuplicateUri=function(newList,sessionDescription){if(null!=sessionDescription&&null!=sessionDescription.getSdpMessage()){sessionDescription.getSdpMessage().getMediaDescriptions().forEach((function(ms){for(var mediaDescriptionAttributes=ms.getRtpExtMapAttributes(),_loop_5=function(i){var found=!1;newList.forEach((function(attribute){null!=mediaDescriptionAttributes[i].getUri()&&null!=attribute.getUri()&&mediaDescriptionAttributes[i].getUri()==attribute.getUri()&&(found=!0)})),found||newList.push(mediaDescriptionAttributes[i])},i=0;i<mediaDescriptionAttributes.length;i++)_loop_5(i)}));for(var sessionLevelAttributes_1=sessionDescription.getSdpMessage().getSessionLevelRtpExtMapAttributes(),_loop_4=function(i){var found=!1;newList.forEach((function(attribute){null!=sessionLevelAttributes_1[i].getUri()&&null!=attribute.getUri()&&sessionLevelAttributes_1[i].getUri()==attribute.getUri()&&(found=!0)})),found||newList.push(sessionLevelAttributes_1[i])},i=0;i<sessionLevelAttributes_1.length;i++)_loop_4(i)}return newList},WebRtcConnection.prototype.reallocateRtpExtMapId=function(id,sdpMessage,extMapAttributes,extMapReservedIds){for(var indexOfId=-1,i=0;i<extMapAttributes.length;i++)if(id==extMapAttributes[i].getId()){indexOfId=i;break}if(-1!=indexOfId){var allIds_1=new Array;extMapAttributes.forEach((function(id){allIds_1.push(id.getId())})),extMapReservedIds.forEach((function(id){allIds_1.push(id.getId())})),allIds_1.sort();var newId=allIds_1[allIds_1.length-1]+1;for(i=0;i<allIds_1.length-1;i++)if(allIds_1[i]!=allIds_1[i+1]&&allIds_1[i]+1!=allIds_1[i+1]){newId=allIds_1[i]+1;break}this.modifyExtRtpMapId(newId,id,sdpMessage),extMapAttributes[indexOfId].setId(newId)}},WebRtcConnection.prototype.reorderExtRtpMapIdsOnRenegotiationOffer=function(newOffer,lastLocalDescription,lastRemoteDescription){var extRtpMapAttrtibutesFromLastTime=new Array;extRtpMapAttrtibutesFromLastTime=this.getExtRtpMapAttributesWithNoDuplicateUri(extRtpMapAttrtibutesFromLastTime,lastLocalDescription),extRtpMapAttrtibutesFromLastTime=this.getExtRtpMapAttributesWithNoDuplicateUri(extRtpMapAttrtibutesFromLastTime,lastRemoteDescription);var offerExtRtpMapAttrtibutes=new Array;offerExtRtpMapAttrtibutes=this.getExtRtpMapAttributesWithNoDuplicateUri(offerExtRtpMapAttrtibutes,newOffer);for(var i=0;i<extRtpMapAttrtibutesFromLastTime.length;i++){for(var found=!1,j=0;j<offerExtRtpMapAttrtibutes.length;j++)if(offerExtRtpMapAttrtibutes[j].getUri()==extRtpMapAttrtibutesFromLastTime[i].getUri()){found=!0;break}found||extRtpMapAttrtibutesFromLastTime.splice(i,1)}if(null!=newOffer&&null!=newOffer.getSdpMessage())for(i=0;i<offerExtRtpMapAttrtibutes.length;i++)for(j=0;j<extRtpMapAttrtibutesFromLastTime.length;j++)offerExtRtpMapAttrtibutes[i].getUri()==extRtpMapAttrtibutesFromLastTime[j].getUri()&&offerExtRtpMapAttrtibutes[i].getId()!=extRtpMapAttrtibutesFromLastTime[j].getId()&&(this.reallocateRtpExtMapId(extRtpMapAttrtibutesFromLastTime[j].getId(),newOffer.getSdpMessage(),offerExtRtpMapAttrtibutes,extRtpMapAttrtibutesFromLastTime),this.modifyExtRtpMapId(extRtpMapAttrtibutesFromLastTime[j].getId(),offerExtRtpMapAttrtibutes[i].getId(),newOffer.getSdpMessage()))},WebRtcConnection.prototype.doCreate=function(promise){var _this=this;fm.liveswitch.ManagedThread.dispatch((function(){try{if(_this._initialized||_this.initialize(),fm.liveswitch.Plugin.hasOrtc()){_this._ortcLocalDescription={sessionId:Math.floor(0x8000000000000000*Math.random()),sessionVersion:Math.floor(2147483647*Math.random()),mediaDescriptions:[],tieBreaker:_this.getTieBreaker(),type:_this._offerer?fm.liveswitch.SessionDescriptionType.Offer:fm.liveswitch.SessionDescriptionType.Answer};for(var cname=fm.liveswitch.Guid.newGuid().toString().replace("-","").substr(0,8),i=0;i<_this._nativeIceGatherers.length;i++){for(var localMediaDescription={kind:_this._rtpKinds[i],direction:_this._mediaStreams[i].getDirection(),iceParams:_this._nativeIceGatherers[i].getLocalParameters(),dtlsParams:_this._nativeDtlsTransports[i].getLocalParameters(),codecCaps:[],candidates:[],ssrc:null==_this._nativeRtpSenders[i]?0:Math.floor(4294967296*Math.random()),cname:cname},send=RTCRtpSender.getCapabilities(_this._rtpKinds[i]),receive=RTCRtpReceiver.getCapabilities(_this._rtpKinds[i]),receiveCodecs={},_i=0,_a=receive.codecs;_i<_a.length;_i++){receiveCodecs[[(codec=_a[_i]).name,codec.clockRate,codec.numChannels,codec.preferredPayloadType].join("/").toLowerCase()]=codec,"h264"==codec.name.toLowerCase()&&null==codec.parameters["level-asymmetry-allowed"]&&(codec.parameters["level-asymmetry-allowed"]="1")}for(var _b=0,_c=send.codecs;_b<_c.length;_b++){var codec;receiveCodecs[[(codec=_c[_b]).name,codec.clockRate,codec.numChannels,codec.preferredPayloadType].join("/").toLowerCase()]&&localMediaDescription.codecCaps.push(codec),"h264"==codec.name.toLowerCase()&&null==codec.parameters["level-asymmetry-allowed"]&&(codec.parameters["level-asymmetry-allowed"]="1")}if(localMediaDescription.codecCaps.sort((function(a,b){return a.clockRate==b.clockRate?b.numChannels-a.numChannels:b.clockRate-a.clockRate})),_this._ortcRemoteDescription){var remoteMediaDescription=_this._ortcRemoteDescription.mediaDescriptions[i];"auto"==remoteMediaDescription.dtlsParams.role||"server"==remoteMediaDescription.dtlsParams.role?localMediaDescription.dtlsParams.role="client":localMediaDescription.dtlsParams.role="server";for(var localCodecs=[],_d=0,_e=remoteMediaDescription.codecCaps;_d<_e.length;_d++){var remoteCodec=_e[_d];if("rtx"!=remoteCodec.name)for(var skip=!1,_f=0,_g=localMediaDescription.codecCaps;_f<_g.length;_f++){var localCodec=_g[_f];if(localCodec.name.toLowerCase()==remoteCodec.name.toLowerCase()&&localCodec.clockRate==remoteCodec.clockRate&&localCodec.numChannels==remoteCodec.numChannels){for(var _h=0,_j=localCodecs;_h<_j.length;_h++){var negotiatedCodec=_j[_h];if(remoteCodec.name.toLowerCase()==negotiatedCodec.name.toLowerCase()&&remoteCodec.clockRate==negotiatedCodec.clockRate&&remoteCodec.numChannels==negotiatedCodec.numChannels){skip=!0;break}}skip||(localCodec.name=remoteCodec.name,localCodec.preferredPayloadType=remoteCodec.preferredPayloadType,localCodecs.push(localCodec));break}}}localMediaDescription.codecCaps=localCodecs}_this._ortcLocalDescription.mediaDescriptions.push(localMediaDescription)}promise.resolve(_this.ortcSessionDescriptionToSessionDescription(_this._ortcLocalDescription))}else{for(var _k=0,_l=_this.getStreams();_k<_l.length;_k++){var stream=_l[_k],streamType=stream.getType();_this._offerer&&_this.getState()==fm.liveswitch.ConnectionState.Connected&&(streamType==fm.liveswitch.StreamType.Audio||streamType==fm.liveswitch.StreamType.Video)&&(stream.processCachedChanges(),stream.resetRemoteDirection())}var createSuccess=function(rtcSessionDescription){for(var sessionDescription=_this.webrtcSessionDescriptionToSessionDescription({sessionDescription:rtcSessionDescription,tieBreaker:_this.getTieBreaker()}),audioDirections=[],videoDirections=[],_i=0,_a=_this.getStreams();_i<_a.length;_i++){var stream=_a[_i];(streamDirection=stream.getLocalDirection())==fm.liveswitch.StreamDirection.Unset&&(streamDirection=stream.getDirectionCapabilities());var streamType=stream.getType();streamType===fm.liveswitch.StreamType.Audio?audioDirections.push(streamDirection):streamType===fm.liveswitch.StreamType.Video&&videoDirections.push(streamDirection)}for(var audioDirectionIndex=0,videoDirectionIndex=0,_b=0,_c=sessionDescription.getSdpMessage().getMediaDescriptions();_b<_c.length;_b++){var sdpMediaDescription=_c[_b],streamDirection=fm.liveswitch.StreamDirection.Unset;if(sdpMediaDescription.getMedia().getMediaType()==fm.liveswitch.sdp.MediaType.getAudio())streamDirection=audioDirections[audioDirectionIndex++];else{if(sdpMediaDescription.getMedia().getMediaType()!=fm.liveswitch.sdp.MediaType.getVideo())continue;streamDirection=videoDirections[videoDirectionIndex++]}sdpMediaDescription.getIsAudio()&&null!=_this.getAudioStream()&&_this.getAudioStream().getLocalMuted()&&sdpMediaDescription.setIsMuted(!0),sdpMediaDescription.getIsVideo()&&null!=_this.getVideoStream()&&_this.getVideoStream().getLocalMuted()&&sdpMediaDescription.setIsMuted(!0);for(var needsDirectionAttribute=!1,_d=0,_e=sdpMediaDescription.getMediaAttributes();_d<_e.length;_d++){var sdpMediaAttribute=_e[_d];if(fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.SendReceiveAttribute]")&&streamDirection!=fm.liveswitch.StreamDirection.SendReceive||fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.SendOnlyAttribute]")&&streamDirection!=fm.liveswitch.StreamDirection.SendOnly||fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.ReceiveOnlyAttribute]")&&streamDirection!=fm.liveswitch.StreamDirection.ReceiveOnly||fm.liveswitch.Util.isObjectType(sdpMediaAttribute,"[fm.liveswitch.sdp.InactiveAttribute]")&&streamDirection!=fm.liveswitch.StreamDirection.Inactive){sdpMediaDescription.removeMediaAttribute(sdpMediaAttribute),needsDirectionAttribute=!0;break}}if(needsDirectionAttribute)switch(streamDirection){case fm.liveswitch.StreamDirection.SendReceive:sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.SendReceiveAttribute);break;case fm.liveswitch.StreamDirection.SendOnly:sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.SendOnlyAttribute);break;case fm.liveswitch.StreamDirection.ReceiveOnly:sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.ReceiveOnlyAttribute);break;case fm.liveswitch.StreamDirection.Inactive:sdpMediaDescription.addMediaAttribute(new fm.liveswitch.sdp.InactiveAttribute)}}fm.liveswitch.SessionDescriptionManager.updateTrickleIcePolicy(sessionDescription.getSdpMessage(),_this.getTrickleIcePolicy()),_this.getSignallingState()==fm.liveswitch.SignallingState.Stable&&(_this._isRenegotiation=!0),promise.resolve(sessionDescription)},createFailure=function(domError){var ex=new fm.liveswitch.Exception("Could not create "+(_this._offerer?"offer":"answer")+" ("+domError+").");_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,ex))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(ex)},audioStreamCount=_this.getAudioStreams().length,videoStreamCount=_this.getVideoStreams().length;try{if(_this._offerer){for(var transceivers=_this._nativePeerConnection.getTransceivers(),videoTransceiverCount=0,audioTransceiverCount=0,_m=0,transceivers_1=transceivers;_m<transceivers_1.length;_m++){var transceiver=transceivers_1[_m];(transceiver.sender.track&&"video"==transceiver.sender.track.kind||transceiver.receiver.track&&"video"==transceiver.receiver.track.kind)&&videoTransceiverCount++,(transceiver.sender.track&&"audio"==transceiver.sender.track.kind||transceiver.receiver.track&&"audio"==transceiver.receiver.track.kind)&&audioTransceiverCount++}for(var addAudioTransceivers=audioStreamCount-audioTransceiverCount,addVideoTransceivers=videoStreamCount-videoTransceiverCount,j=0;j<addAudioTransceivers;j++)_this._nativePeerConnection.addTransceiver("audio");for(j=0;j<addVideoTransceivers;j++)_this._nativePeerConnection.addTransceiver("video");_this._nativePeerConnection.createOffer().then(createSuccess,createFailure)}else _this._nativePeerConnection.createAnswer().then(createSuccess,createFailure)}catch(ex){try{_this._offerer?_this._nativePeerConnection.createOffer({offerToReceiveAudio:audioStreamCount,offerToReceiveVideo:videoStreamCount}).then(createSuccess,createFailure):_this._nativePeerConnection.createAnswer().then(createSuccess,createFailure)}catch(ex){try{_this._offerer?_this._nativePeerConnection.createOffer(createSuccess,createFailure,{offerToReceiveAudio:audioStreamCount,offerToReceiveVideo:videoStreamCount}):_this._nativePeerConnection.createAnswer(createSuccess,createFailure)}catch(ex){_this._offerer?_this._nativePeerConnection.createOffer(createSuccess,createFailure,{optional:[],mandatory:{OfferToReceiveAudio:audioStreamCount,OfferToReceiveVideo:videoStreamCount}}):_this._nativePeerConnection.createAnswer(createSuccess,createFailure)}}}}}catch(ex){_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,ex))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(ex)}}))},WebRtcConnection.prototype.getLocalDescription=function(){return this._localDescription},WebRtcConnection.prototype.getGatheringState=function(){return this._gatheringState},WebRtcConnection.prototype.getIceConnectionState=function(){return this._iceConnectionState},WebRtcConnection.prototype.setGatheringState=function(state){this._gatheringState!=state&&(this._gatheringState=state,state==fm.liveswitch.IceGatheringState.Complete&&this.processIceGatheringStateComplete(),this.raiseGatheringStateChange(this))},WebRtcConnection.prototype.setIceConnectionState=function(state){this._iceConnectionState!=state&&(this._iceConnectionState=state,this.raiseIceConnectionStateChange(this))},WebRtcConnection.prototype.getRemoteDescription=function(){return this._remoteDescription},WebRtcConnection.prototype.getSessionDescriptionManager=function(){return this._sessionDescriptionManager},WebRtcConnection.prototype.setSessionDescriptionManager=function(manager){this._sessionDescriptionManager=manager},WebRtcConnection.prototype.updateLocalDescription=function(localDescription){var mediaDescriptions=localDescription.getSdpMessage().getMediaDescriptions(),streamDirection=fm.liveswitch.StreamDirection.Inactive,updatedStreamDirection=!1;if(null!=mediaDescriptions)for(var mediaIndex=-1,streams=this.getStreams(),_i=0,mediaDescriptions_2=mediaDescriptions;_i<mediaDescriptions_2.length;_i++){var mediaDescription=mediaDescriptions_2[_i];if(mediaIndex++,fm.liveswitch.Util.isSafari()&&mediaDescription.getRtpMapAttribute("VP8",9e4)&&mediaDescription.purgeFormat("H264"),mediaIndex<streams.length){var stream_1=streams[mediaIndex];if(stream_1.getType()==fm.liveswitch.StreamType.Audio||stream_1.getType()==fm.liveswitch.StreamType.Video){var mediaStream=stream_1,usedRtpStreamIds=[],midAttribute=mediaDescription.getMediaStreamIdentifierAttribute();midAttribute&&mediaStream.setMediaStreamIdentification(midAttribute.getIdentificationTag());var ridAttributes=mediaDescription.getRidAttributes();if(ridAttributes&&ridAttributes.length>0){var sendEncodings;if((sendEncodings=mediaStream.getSendEncodingInfos())&&sendEncodings.length<=ridAttributes.length)for(var i=0;i<sendEncodings.length;i++)ridAttributes[i].setRestrictions(sendEncodings[i].getSdpRidRestrictions());for(var _a=0,ridAttributes_1=ridAttributes;_a<ridAttributes_1.length;_a++){var ridAttribute=ridAttributes_1[_a];usedRtpStreamIds.push(ridAttribute.getId())}}else if(stream_1.getType()==fm.liveswitch.StreamType.Video){var sourceEncoding=mediaStream.getSourceEncoding();if(sourceEncoding){var ssrcAttributes=mediaDescription.getSsrcAttributes(fm.liveswitch.sdp.rtp.SsrcAttributeName.getCName());if(ssrcAttributes.length>0){sourceEncoding.setSynchronizationSource(ssrcAttributes[0].getSynchronizationSource());for(var _b=0,_c=sourceEncoding.getSdpSsrcRestrictionAttributes();_b<_c.length;_b++){var ssrcRestrictionAttribute=_c[_b];mediaDescription.addMediaAttribute(ssrcRestrictionAttribute)}}}}if(mediaStream.getSimulcastMode()!=fm.liveswitch.SimulcastMode.Disabled)(sendEncodings=mediaStream.getSendEncodingInfos()).length>1&&mediaDescription.purgeFormat("VP9");var remoteEncoding=mediaStream.getRemoteEncoding();if(remoteEncoding){for(var remoteRtpStreamIndex=0;fm.liveswitch.ArrayExtensions.contains(usedRtpStreamIds,remoteRtpStreamIndex.toString());)remoteRtpStreamIndex++;var remoteRtpStreamId=remoteRtpStreamIndex.toString();ridAttribute=new fm.liveswitch.sdp.rtp.RidAttribute(remoteRtpStreamId,fm.liveswitch.sdp.rtp.RidDirection.getReceive(),remoteEncoding.getSdpRidRestrictions());mediaDescription.addMediaAttribute(ridAttribute)}}}updatedStreamDirection=!1;var mediaType=mediaDescription.getMedia().getMediaType(),streamType=fm.liveswitch.sdp.MediaType.toStreamType(mediaType);if(streamType==fm.liveswitch.StreamType.Audio){var audioStreams=this.getAudioStreams();if(null!=audioStreams&&audioStreams.length>0){var stream_2=audioStreams[0];streamDirection=stream_2.getDirection(),updatedStreamDirection=!0;for(var _d=0,_e=mediaDescription.getBandwidths();_d<_e.length;_d++){if("tias"==(bandwidth=_e[_d]).getBandwidthType().toLowerCase()||"as"==bandwidth.getBandwidthType().toLowerCase()){mediaDescription.removeBandwidth(bandwidth);break}}stream_2.getLocalBandwidth()>0&&(mediaDescription.addBandwidth(new fm.liveswitch.sdp.Bandwidth("TIAS",1e3*stream_2.getLocalBandwidth())),mediaDescription.addBandwidth(new fm.liveswitch.sdp.Bandwidth("AS",stream_2.getLocalBandwidth())))}}else if(streamType==fm.liveswitch.StreamType.Video){var videoStreams=this.getVideoStreams();if(null!=videoStreams&&videoStreams.length>0){var stream=videoStreams[0];streamDirection=stream.getDirection(),updatedStreamDirection=!0;for(var _f=0,_g=mediaDescription.getBandwidths();_f<_g.length;_f++){var bandwidth;if("tias"==(bandwidth=_g[_f]).getBandwidthType().toLowerCase()||"as"==bandwidth.getBandwidthType().toLowerCase()){mediaDescription.removeBandwidth(bandwidth);break}}stream.getLocalBandwidth()>0&&(mediaDescription.addBandwidth(new fm.liveswitch.sdp.Bandwidth("TIAS",1e3*stream.getLocalBandwidth())),mediaDescription.addBandwidth(new fm.liveswitch.sdp.Bandwidth("AS",stream.getLocalBandwidth())))}}updatedStreamDirection&&mediaDescription.setStreamDirection(streamDirection)}return localDescription},WebRtcConnection.prototype.doSetLocalDescription=function(promise,localDescription){var _this=this;fm.liveswitch.ManagedThread.dispatch((function(){try{_this._initialized||_this.initialize(),localDescription=_this.updateLocalDescription(localDescription);var error=_this.processDescription(localDescription,!0);if(null==error){var signallingState=_this.getSignallingState();if(signallingState==fm.liveswitch.SignallingState.New?_this.setSignallingState(fm.liveswitch.SignallingState.HaveLocalOffer):signallingState==fm.liveswitch.SignallingState.HaveRemoteOffer?_this.setSignallingState(fm.liveswitch.SignallingState.Stable):signallingState==fm.liveswitch.SignallingState.Stable&&_this.setSignallingState(fm.liveswitch.SignallingState.HaveLocalOffer),fm.liveswitch.Plugin.hasOrtc())_this._ortcLocalDescription=_this.ortcSessionDescriptionFromSessionDescription(localDescription),_this._localDescription=localDescription,_this.getRemoteDescription()&&_this.getState()!=fm.liveswitch.ConnectionState.Connected&&(_this.setState(fm.liveswitch.ConnectionState.Connecting),_this.startOrtc()),promise.resolve(localDescription);else{_this._offerer&&_this._isRenegotiation&&fm.liveswitch.Util.isFirefox()&&_this.reorderExtRtpMapIdsOnRenegotiationOffer(localDescription,_this._localDescription,_this._remoteDescription);var webrtcSessionDescription=_this.webrtcSessionDescriptionFromSessionDescription(localDescription),successCallback=function(){_this._localDescription=localDescription,_this.getRemoteDescription()&&_this.getState()!=fm.liveswitch.ConnectionState.Connected&&_this.setState(fm.liveswitch.ConnectionState.Connecting),_this.setNativeDescriptionSuccess(localDescription,promise)},failureCallback=function(ex){_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,ex))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(ex)};try{_this._nativePeerConnection.setLocalDescription(webrtcSessionDescription.sessionDescription).then(successCallback,failureCallback)}catch(ex){_this._nativePeerConnection.setLocalDescription(webrtcSessionDescription.sessionDescription,successCallback,failureCallback)}}for(var canonicalName=_this.getConnectionWideCanonicalName(),streams=_this.getStreams(),_i=0,streams_7=streams;_i<streams_7.length;_i++){var stream=streams_7[_i];stream.getType()==fm.liveswitch.StreamType.Application&&stream.setCanonicalName(canonicalName)}}else _this.setState(fm.liveswitch.ConnectionState.Failing,error)&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(error.getException())}catch(ex){_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,ex))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(ex)}}))},WebRtcConnection.prototype.processRemoteDescriptionOnRenegotiation=function(promise,remoteDescription){if(null!=this._localDescription&&null!=this._remoteDescription){var description=this._localDescription.getSdpMessage().getMediaDescriptions()[0],localRole=description.getSetupAttribute().getSetup(),remoteRole=fm.liveswitch.sdp.Setup.getPassive(),currentRemoteMessage=this._remoteDescription.getSdpMessage();fm.liveswitch.Log.info("Current remote description:"),fm.liveswitch.Log.info(currentRemoteMessage.toString());var currentRemoteDescriptions=currentRemoteMessage.getMediaDescriptions();if(localRole==fm.liveswitch.sdp.Setup.getActive())remoteRole=fm.liveswitch.sdp.Setup.getPassive();else if(localRole==fm.liveswitch.sdp.Setup.getPassive())remoteRole=fm.liveswitch.sdp.Setup.getActive();else{var remoteSetupAttribute=(description=currentRemoteDescriptions[0]).getSetupAttribute();remoteRole=remoteSetupAttribute.getSetup()}for(var newRemoteMessage=remoteDescription.getSdpMessage(),_i=0,newRemoteDescriptions_1=newRemoteMessage.getMediaDescriptions();_i<newRemoteDescriptions_1.length;_i++){newRemoteDescriptions_1[_i].setSetupAttribute(remoteSetupAttribute)}newRemoteMessage.updateSetupValue(remoteRole),newRemoteMessage.updateSetupValue(remoteRole),this._remoteDescription=remoteDescription,this.doCreateAnswer(promise)}},WebRtcConnection.prototype.removeSdesAttributesIfNeeded=function(remoteDescription){if(remoteDescription.getIsOffer()){for(var message=remoteDescription.getSdpMessage(),sessionFingerprint=message.getSessionLevelFingerprintAttribute(),sessionCryptos=message.getSessionLevelCryptoAttributes(),removeSessionCryptos=!1,_i=0,mediaDescriptions_3=message.getMediaDescriptions();_i<mediaDescriptions_3.length;_i++){var mediaDescription=mediaDescriptions_3[_i],cryptoAttributes=mediaDescription.getCryptoAttributes();if(null!=mediaDescription.getFingerprintAttribute()||null!=sessionFingerprint){if(null!=cryptoAttributes)for(var _a=0,cryptoAttributes_1=cryptoAttributes;_a<cryptoAttributes_1.length;_a++){var cryptoAttribute=cryptoAttributes_1[_a];mediaDescription.removeMediaAttribute(cryptoAttribute)}removeSessionCryptos=!0}}removeSessionCryptos&&null!=sessionCryptos&&message.removeSessionAttribute(fm.liveswitch.sdp.AttributeType.CryptoAttribute)}},WebRtcConnection.prototype.doSetRemoteDescription=function(promise,remoteDescription){var _this=this;fm.liveswitch.ManagedThread.dispatch((function(){try{_this._initialized||_this.initialize();var error=_this.processDescription(remoteDescription,!1);if(null==error)if(fm.liveswitch.Plugin.hasOrtc()){_this._ortcRemoteDescription=_this.ortcSessionDescriptionFromSessionDescription(remoteDescription);for(var i=0;i<_this._ortcRemoteDescription.mediaDescriptions.length;i++){var remoteMediaDescription=_this._ortcRemoteDescription.mediaDescriptions[i];if(remoteMediaDescription.ssrc||(remoteMediaDescription.ssrc=0),remoteMediaDescription.cname||(remoteMediaDescription.cname=""),remoteMediaDescription.candidates.length>0)for(var j=0;j<remoteMediaDescription.candidates.length;j++)"closed"!=_this._nativeIceTransports[i].state&&_this._nativeIceTransports[i].addRemoteCandidate(remoteMediaDescription.candidates[j])}_this.setRemoteCandidatesDoneTimer(),_this._remoteDescription=remoteDescription;var signallingState=_this.getSignallingState();signallingState==fm.liveswitch.SignallingState.New?_this.setSignallingState(fm.liveswitch.SignallingState.HaveRemoteOffer):signallingState==fm.liveswitch.SignallingState.HaveLocalOffer?_this.setSignallingState(fm.liveswitch.SignallingState.Stable):signallingState==fm.liveswitch.SignallingState.Stable&&_this.setSignallingState(fm.liveswitch.SignallingState.HaveRemoteOffer),_this.getLocalDescription()&&_this.getState()!=fm.liveswitch.ConnectionState.Connected&&(_this.setState(fm.liveswitch.ConnectionState.Connecting),_this.startOrtc()),promise.resolve(remoteDescription)}else{_this._remoteMediaTrackCount=0;for(var _i=0,_a=remoteDescription.getSdpMessage().getMediaDescriptions();_i<_a.length;_i++){var sdpMediaDescription=_a[_i],direction=sdpMediaDescription.getStreamDirection();sdpMediaDescription.getSsrcAttributes().length>0&&(direction==fm.liveswitch.StreamDirection.SendReceive||direction==fm.liveswitch.StreamDirection.SendOnly)&&_this._remoteMediaTrackCount++}0==_this._remoteMediaTrackCount&&(_this._mediaStreamsReady=!0),_this.removeSdesAttributesIfNeeded(remoteDescription);var webrtcSessionDescription=_this.webrtcSessionDescriptionFromSessionDescription(remoteDescription),successCallback=function(){_this._remoteDescription=remoteDescription;var remoteMedia=_this.getRemoteMedia();remoteMedia._setMediaStreams(remoteMedia._getAudioMediaStream(),remoteMedia._getVideoMediaStream());for(var remoteVideoTrack=remoteMedia.getVideoTrack(),_i=0,_a=_this.getVideoStreams();_i<_a.length;_i++){var videoStream=_a[_i];null==videoStream.getRemoteTrack()&&videoStream.setRemoteTrack(remoteVideoTrack)}for(var remoteAudioTrack=remoteMedia.getAudioTrack(),_b=0,_c=_this.getAudioStreams();_b<_c.length;_b++){var audioStream=_c[_b];null==audioStream.getRemoteTrack()&&audioStream.setRemoteTrack(remoteAudioTrack)}var signallingState=_this.getSignallingState();if(signallingState==fm.liveswitch.SignallingState.New?_this.setSignallingState(fm.liveswitch.SignallingState.HaveRemoteOffer):signallingState==fm.liveswitch.SignallingState.HaveLocalOffer?_this.setSignallingState(fm.liveswitch.SignallingState.Stable):signallingState==fm.liveswitch.SignallingState.Stable&&_this.setSignallingState(fm.liveswitch.SignallingState.HaveRemoteOffer),_this.getSignallingState()==fm.liveswitch.SignallingState.Stable&&(_this._isRenegotiation=!0),_this.getLocalDescription()&&_this.getState()!=fm.liveswitch.ConnectionState.Connected&&_this.setState(fm.liveswitch.ConnectionState.Connecting),_this.getSignallingState()==fm.liveswitch.SignallingState.HaveRemoteOffer&&!_this._offerer&&!_this._isRenegotiation){var useAddTrack=fm.liveswitch.Util.isFunction(_this._nativePeerConnection.addTrack),useAddTransceiver=fm.liveswitch.Util.isFunction(_this._nativePeerConnection.addTransceiver);if(useAddTransceiver||useAddTrack)for(var _d=0,_e=_this._mediaStreams;_d<_e.length;_d++){var mediaStream=_e[_d],localMediaTrack=mediaStream.getLocalTrack();if(localMediaTrack){var localMedia=localMediaTrack.getMedia(),nativeMediaStreamTrack=localMediaTrack._getMediaStreamTrack();if(nativeMediaStreamTrack){var nativeMediaStream="audio"==nativeMediaStreamTrack.kind?localMedia._getAudioMediaStream():localMedia._getVideoMediaStream();nativeMediaStream&&_this.setupTransceivers(useAddTransceiver,useAddTrack,nativeMediaStreamTrack,nativeMediaStream,mediaStream)}}}}promise.resolve(remoteDescription)},failureCallback=function(ex){_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,ex))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(ex)};try{_this._nativePeerConnection.setRemoteDescription(webrtcSessionDescription.sessionDescription).then(successCallback,failureCallback)}catch(ex){_this._nativePeerConnection.setRemoteDescription(webrtcSessionDescription.sessionDescription,successCallback,failureCallback)}}else _this.setState(fm.liveswitch.ConnectionState.Failing,error)&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(error.getException())}catch(ex){_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,ex))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed)),promise.reject(ex)}}))},WebRtcConnection.prototype.doSendCachedLocalCandidates=function(){},WebRtcConnection.prototype.startOrtc=function(){this._transportsRemaining=this._nativeDtlsTransports.length;for(var i=0;i<this._nativeIceGatherers.length;i++)this.startOrtcTrack(this._nativeIceGatherers[i],this._nativeIceTransports[i],this._nativeDtlsTransports[i],this._ortcLocalDescription.mediaDescriptions[i],this._ortcRemoteDescription.mediaDescriptions[i]);for(i=0;i<this._nativeRtpReceivers.length;i++){this._ortcRemoteDescription.mediaDescriptions[i].ssrc>0&&this._nativeRtpReceivers[i]&&this._nativeRtpReceivers[i].receive({muxId:"",codecs:this.selectCodecs(i),headerExtensions:[],encodings:this.selectEncodings(i,!1),rtcp:this.selectRtcp(i,!1)})}for(i=0;i<this._nativeRtpSenders.length;i++){this._ortcLocalDescription.mediaDescriptions[i].ssrc>0&&this._nativeRtpSenders[i]&&this._nativeRtpSenders[i].send({muxId:"",codecs:this.selectCodecs(i),headerExtensions:[],encodings:this.selectEncodings(i,!0),rtcp:this.selectRtcp(i,!0)})}this._remoteMedia._setMediaStream(this._remoteNativeMediaStream)},WebRtcConnection.prototype.startOrtcTrack=function(iceGatherer,iceTransport,dtlsTransport,localMediaDescription,remoteMediaDescription){var _this=this,iceRole="controlling";"client"!=localMediaDescription.dtlsParams.role&&"server"!=remoteMediaDescription.dtlsParams.role||(iceRole="controlled"),iceGatherer.onerror=function(evt){_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.IceStartError,new fm.liveswitch.Exception("An ICE gatherer error occurred.")))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed))},dtlsTransport.onerror=function(evt){_this.setState(fm.liveswitch.ConnectionState.Failing,new fm.liveswitch.Error(fm.liveswitch.ErrorCode.DtlsInternalError,new fm.liveswitch.Exception("A DTLS transport error occurred.")))&&(_this.doClose(),_this.setState(fm.liveswitch.ConnectionState.Failed))},iceTransport.onicestatechange=function(evt){fm.liveswitch.Log.debug("ORTC ICE transport state has changed to "+iceTransport.state),"new"==iceTransport.state?(_this.setIceConnectionState(fm.liveswitch.IceConnectionState.New),_this.setGatheringState(fm.liveswitch.IceGatheringState.New)):"checking"==iceTransport.state?(_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Checking),_this.setGatheringState(fm.liveswitch.IceGatheringState.Gathering)):"connected"==iceTransport.state?_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Connected):"completed"==iceTransport.state?(_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Completed),_this.setGatheringState(fm.liveswitch.IceGatheringState.Complete)):"disconnected"==iceTransport.state?_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Disconnected):"closed"==iceTransport.state&&_this.setIceConnectionState(fm.liveswitch.IceConnectionState.Closed)},dtlsTransport.ondtlsstatechange=function(evt){fm.liveswitch.Log.debug("ORTC DTLS transport state has changed to "+dtlsTransport.state),"connected"==dtlsTransport.state&&(_this._transportsRemaining--,0==_this._transportsRemaining&&_this.setState(fm.liveswitch.ConnectionState.Connected))},iceTransport.start(iceGatherer,remoteMediaDescription.iceParams,iceRole),dtlsTransport.start(remoteMediaDescription.dtlsParams)},WebRtcConnection.prototype.selectCodecs=function(mediaIndex){for(var localMediaDescription=this._ortcLocalDescription.mediaDescriptions[mediaIndex],remoteMediaDescription=this._ortcRemoteDescription.mediaDescriptions[mediaIndex],selectedCodecs=[],_i=0,_a=localMediaDescription.codecCaps;_i<_a.length;_i++)for(var localCodec=_a[_i],_b=0,_c=remoteMediaDescription.codecCaps;_b<_c.length;_b++){var remoteCodec=_c[_b];if(localCodec.name.toLowerCase()==remoteCodec.name.toLowerCase()&&localCodec.clockRate==remoteCodec.clockRate&&localCodec.numChannels==remoteCodec.numChannels&&localCodec.preferredPayloadType==remoteCodec.preferredPayloadType){selectedCodecs.push({name:localCodec.name,payloadType:localCodec.preferredPayloadType,clockRate:localCodec.clockRate,numChannels:localCodec.numChannels,rtcpFeedback:localCodec.rtcpFeedback,parameters:localCodec.parameters});break}}return selectedCodecs},WebRtcConnection.prototype.selectEncodings=function(mediaIndex,send){var localMediaDescription=this._ortcLocalDescription.mediaDescriptions[mediaIndex],remoteMediaDescription=this._ortcRemoteDescription.mediaDescriptions[mediaIndex];return[{active:!0,codecPayloadType:0,fec:0,framerateBias:.5,framerateScale:1,maxBitrate:2e6,minQuality:0,priority:1,resolutionScale:1,rtx:0,ssrc:send?localMediaDescription.ssrc:remoteMediaDescription.ssrc}]},WebRtcConnection.prototype.selectRtcp=function(mediaIndex,send){this._ortcLocalDescription.mediaDescriptions[mediaIndex],this._ortcRemoteDescription.mediaDescriptions[mediaIndex];return{cname:"",mux:!0,reducedSize:!1,ssrc:0}},WebRtcConnection.prototype.doAddRemoteCandidate=function(promise,remoteCandidate){var _this=this;fm.liveswitch.ManagedThread.dispatch((function(){try{if(fm.liveswitch.Plugin.hasOrtc()){if(_this._remoteCandidatesDone)throw new fm.liveswitch.Exception("Could not add remote candidate. End of candidates has been signalled.");var ortcCandidate=_this.ortcCandidateFromCandidate(remoteCandidate);if(ortcCandidate.candidate.protocol==fm.liveswitch.sdp.ice.TransportProtocol.getTcp()&&!_this._ortcSupportsTcp)throw new fm.liveswitch.Exception("ORTC does not currently support the TCP protocol.");"closed"!=_this._nativeIceTransports[ortcCandidate.mediaIndex].state&&_this._nativeIceTransports[ortcCandidate.mediaIndex].addRemoteCandidate(ortcCandidate.candidate),_this.setRemoteCandidatesDoneTimer(),promise.resolve(remoteCandidate)}else{var successCallback=function(){promise.resolve(remoteCandidate)},failureCallback=function(ex){promise.reject(ex)};try{_this._nativePeerConnection.addIceCandidate(_this.webrtcCandidateFromCandidate(remoteCandidate)).then(successCallback,failureCallback)}catch(ex){_this._nativePeerConnection.addIceCandidate(_this.webrtcCandidateFromCandidate(remoteCandidate),successCallback,failureCallback)}}}catch(ex){promise.reject(ex)}}))},WebRtcConnection.prototype.setRemoteCandidatesDoneTimer=function(){var _this=this;this._remoteCandidatesTimer&&clearTimeout(this._remoteCandidatesTimer),this._remoteCandidatesTimer=setTimeout((function(){if(_this.getState()!=fm.liveswitch.ConnectionState.Connected){for(var i=0;i<_this._nativeIceTransports.length;i++){var iceTransport=_this._nativeIceTransports[i];"new"===iceTransport.state&&iceTransport.getRemoteCandidates().length>0&&iceTransport.addRemoteCandidate({})}_this._remoteCandidatesDone=!0}}),1500)},WebRtcConnection.prototype.assignRemoteDescriptionInternal=function(sessionDescription){throw new fm.liveswitch.Exception("assignRemoteDescriptionInternal")},WebRtcConnection.prototype.close=function(){return!!this.setState(fm.liveswitch.ConnectionState.Closing)&&(this.doClose(),this.setState(fm.liveswitch.ConnectionState.Closed),!0)},WebRtcConnection.prototype.doClose=function(){if(fm.liveswitch.Plugin.hasOrtc()){if(this._nativeRtpSenders){for(var _i=0,_a=this._nativeRtpSenders;_i<_a.length;_i++){var rtpSender=_a[_i];try{rtpSender.stop()}catch(ex){}}this._nativeRtpSenders=[]}if(this._nativeRtpReceivers){for(var _b=0,_c=this._nativeRtpReceivers;_b<_c.length;_b++){var rtpReceiver=_c[_b];try{rtpReceiver.stop()}catch(ex){}}this._nativeRtpReceivers=[]}if(this._nativeIceTransports){for(var _d=0,_e=this._nativeIceTransports;_d<_e.length;_d++){var iceTransport=_e[_d];try{iceTransport.stop()}catch(ex){}}this._nativeIceTransports=[]}if(this._nativeDtlsTransports){for(var _f=0,_g=this._nativeDtlsTransports;_f<_g.length;_f++){var dtlsTransport=_g[_f];try{dtlsTransport.stop()}catch(ex){}}this._nativeDtlsTransports=[]}}else if(this._nativePeerConnection)try{this._nativePeerConnection.close()}catch(ex){}},WebRtcConnection.prototype.getDtmfSender=function(){if(!this.dtmfSender)if(fm.liveswitch.Plugin.hasOrtc()){if(!this._nativeRtpSenders)return null;for(var audioSender=null,_i=0,senders_1=this._nativeRtpSenders;_i<senders_1.length;_i++){(sender=senders_1[_i]).track&&"audio"==sender.track.kind&&(audioSender=sender)}if(!audioSender)return null;this.dtmfSender=new RTCDtmfSender(audioSender)}else{if(!this._nativePeerConnection)return null;if(this._nativePeerConnection.createDTMFSender){for(var audioStream=null,_a=0,mediaStreams_2=this._mediaStreams;_a<mediaStreams_2.length;_a++){var mediaStream=mediaStreams_2[_a];mediaStream.getType()==fm.liveswitch.StreamType.Audio&&(audioStream=mediaStream)}if(!audioStream)return null;var localAudioTrack=audioStream.getLocalTrack();if(!localAudioTrack)return null;var nativeAudioTrack=localAudioTrack._getMediaStreamTrack();if(!nativeAudioTrack)return null;this.dtmfSender=this._nativePeerConnection.createDTMFSender(nativeAudioTrack)}else{if(!this._nativePeerConnection.getSenders)return null;audioSender=null;for(var _b=0,senders_2=this._nativePeerConnection.getSenders();_b<senders_2.length;_b++){var sender;(sender=senders_2[_b]).track&&"audio"==sender.track.kind&&(audioSender=sender)}if(!audioSender)return null;if(!audioSender.dtmf)return null;this.dtmfSender=audioSender.dtmf}}return this.dtmfSender},WebRtcConnection.prototype.replaceLocalTrack=function(localTrack,mediaStream){var promise=new fm.liveswitch.Promise;try{for(var mediaStreamIndex=0,mediaStreams=this.getMediaStreams(),_i=0,mediaStreams_3=mediaStreams;_i<mediaStreams_3.length;_i++){if(mediaStreams_3[_i]==mediaStream)break;mediaStreamIndex++}if(mediaStreamIndex==mediaStreams.length)throw new fm.liveswitch.Exception("Media stream is not attached to this connection.");var rtpSender=this.getRtpSender(mediaStreamIndex);if(!rtpSender.replaceTrack)throw new fm.liveswitch.Exception("Browser does not support replaceTrack.");rtpSender.replaceTrack(localTrack._getMediaStreamTrack()).then((function(){promise.resolve(null)}),(function(ex){promise.reject(ex)}))}catch(ex){promise.reject(ex)}return promise},WebRtcConnection.prototype.replaceRemoteTrack=function(remoteTrack,mediaStream){return fm.liveswitch.Promise.rejectNow(new fm.liveswitch.Exception("Replacing the remote track is not supported."))},WebRtcConnection.prototype.getRtpSender=function(mediaStreamIndex){var rtpSenders=[];if(fm.liveswitch.Plugin.hasOrtc()){if(!this._nativeRtpSenders)throw new fm.liveswitch.Exception("ORTC peer connection not initialized.");rtpSenders=this._nativeRtpSenders}else{if(!this._nativePeerConnection)throw new fm.liveswitch.Exception("WebRTC peer connection not initialized.");if(!this._nativePeerConnection.getSenders)throw new fm.liveswitch.Exception("WebRTC browser does not support getSenders.");rtpSenders=this._nativePeerConnection.getSenders()}if(mediaStreamIndex>=rtpSenders.length)throw new fm.liveswitch.Exception("Media stream index exceeds RTP senders count.");return rtpSenders[mediaStreamIndex]},WebRtcConnection.prototype.tryGetRtpSender=function(mediaStreamIndex){var rtpSenders=[];if(fm.liveswitch.Plugin.hasOrtc()){if(!this._nativeRtpSenders)return null;rtpSenders=this._nativeRtpSenders}else{if(!this._nativePeerConnection)return null;if(!this._nativePeerConnection.getSenders)return null;rtpSenders=this._nativePeerConnection.getSenders()}return mediaStreamIndex>=rtpSenders.length?null:rtpSenders[mediaStreamIndex]},WebRtcConnection.prototype.setMaxSendBitrate=function(bitrate,streamType){var promise=new fm.liveswitch.Promise;return this._processingMaxSendBitrate?(this._setMaxSendBitrateQueue.push({bitrate:bitrate,streamType:streamType,promise:promise}),promise):(this.doSetMaxSendBitrate(bitrate,streamType,promise),promise)},WebRtcConnection.prototype.processNextSetMaxSendBitrate=function(){if(this._setMaxSendBitrateQueue.length>0){var next=this._setMaxSendBitrateQueue[0];this._setMaxSendBitrateQueue.splice(0,1),this.doSetMaxSendBitrate(next.bitrate,next.streamType,next.promise)}},WebRtcConnection.prototype.doSetMaxSendBitrate=function(bitrate,streamType,promise){var _this=this;this._processingMaxSendBitrate=!0;try{if(!fm.liveswitch.Plugin.hasWebRtc())throw new fm.liveswitch.Exception("Browser not supported.");var nativePeerConnection_1=this._nativePeerConnection;if(!nativePeerConnection_1)throw new fm.liveswitch.Exception("No connection.");var localDescription=this.getLocalDescription();if(!localDescription)throw new fm.liveswitch.Exception("No local description.");var remoteDescription=this.getRemoteDescription();if(!remoteDescription)throw new fm.liveswitch.Exception("No remote description.");var sdpMessage=remoteDescription.getSdpMessage();if(!this.updateMaxBitrateSdpMessage(bitrate,streamType,sdpMessage))throw new fm.liveswitch.Exception("No "+new fm.liveswitch.StreamTypeWrapper(streamType).toString().toLowerCase()+" description.");var nativeLocalDescription_1=this.webrtcSessionDescriptionFromSessionDescription(localDescription).sessionDescription,nativeRemoteDescription_1=this.webrtcSessionDescriptionFromSessionDescription(remoteDescription).sessionDescription,successCallback_1=function(){try{promise.resolve(null)}finally{_this._processingMaxSendBitrate=!1,_this.processNextSetMaxSendBitrate()}},failureCallback_1=function(ex){try{promise.reject(ex)}finally{_this._processingMaxSendBitrate=!1,_this.processNextSetMaxSendBitrate()}};nativePeerConnection_1.createOffer().then((function(){nativePeerConnection_1.setLocalDescription(nativeLocalDescription_1).then((function(){nativePeerConnection_1.setRemoteDescription(nativeRemoteDescription_1).then(successCallback_1,failureCallback_1)}),failureCallback_1)}),failureCallback_1)}catch(ex){promise.reject(ex),this._processingMaxSendBitrate=!1,this.processNextSetMaxSendBitrate()}},WebRtcConnection.prototype.updateMaxBitrateSdpMessage=function(bitrate,streamType,sdpMessage){if(streamType==fm.liveswitch.StreamType.Audio){var sdpAudioDescription=sdpMessage.getAudioDescription();if(sdpAudioDescription)return this.updateMaxBitrateSdpMediaDescription(bitrate,sdpAudioDescription),!0}if(streamType==fm.liveswitch.StreamType.Video){var sdpVideoDescription=sdpMessage.getVideoDescription();if(sdpVideoDescription)return this.updateMaxBitrateSdpMediaDescription(bitrate,sdpVideoDescription),!0}return!1},WebRtcConnection.prototype.updateMaxBitrateSdpMediaDescription=function(bitrate,sdpMediaDescription){for(var _i=0,_a=sdpMediaDescription.getBandwidths();_i<_a.length;_i++){var bandwidth=_a[_i];if("tias"==bandwidth.getBandwidthType().toLowerCase()||"as"==bandwidth.getBandwidthType().toLowerCase()){sdpMediaDescription.removeBandwidth(bandwidth);break}}bitrate>0&&(sdpMediaDescription.addBandwidth(new fm.liveswitch.sdp.Bandwidth("TIAS",1e3*bitrate)),sdpMediaDescription.addBandwidth(new fm.liveswitch.sdp.Bandwidth("AS",bitrate)))},WebRtcConnection.webRtcConnectionInitialize=function(){this.__webRtcConnectionInitialized||(window.RTCPeerConnection=window.RTCPeerConnection||window.webkitRTCPeerConnection||window.mozRTCPeerConnection||window.msRTCPeerConnection,window.RTCDataChannel=window.RTCDataChannel||window.webkitRTCDataChannel||window.mozRTCDataChannel||window.msRTCDataChannel,window.RTCSessionDescription=window.RTCSessionDescription||window.webkitRTCSessionDescription||window.mozRTCSessionDescription||window.msRTCPeerConnection,window.RTCIceCandidate=window.RTCIceCandidate||window.webkitRTCIceCandidate||window.mozRTCIceCandidate||window.msRTCIceCandidate),fm.liveswitch.WebRtcConnection.__webRtcConnectionInitialized=!0},WebRtcConnection.__webRtcConnectionInitialized=!1,WebRtcConnection}(fm.liveswitch.WebRtcConnectionBase);liveswitch.WebRtcConnection=WebRtcConnection,fm.liveswitch.WebRtcConnection.webRtcConnectionInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcDataChannelBase=function(_super){function WebRtcDataChannelBase(label,ordered,subprotocol){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var label_1=__arguments[0],ordered_1=__arguments[1],subprotocol_1=__arguments[2];return(_this=_super.call(this)||this).fmliveswitchWebRtcDataChannelBaseInit(),_this.__log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.DataChannel]")),_this.__id=fm.liveswitch.Utility.generateId(),_this.__stateLock=new Object,_this.__messagesSent=new fm.liveswitch.AtomicLong,_this.__messagesReceived=new fm.liveswitch.AtomicLong,_this.__bytesSent=new fm.liveswitch.AtomicLong,_this.__bytesReceived=new fm.liveswitch.AtomicLong,_this.setLabel(label_1),_this.setOrdered(ordered_1),_this.setSubprotocol(subprotocol_1),_this.__stateMachine=new fm.liveswitch.DataChannelStateMachine,_this}return __extends(WebRtcDataChannelBase,_super),WebRtcDataChannelBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcDataChannelBase],"+_super.prototype.getTypeString.call(this)},WebRtcDataChannelBase.prototype.fmliveswitchWebRtcDataChannelBaseInit=function(){var _this=this;this.__onDataReceived=[],this.__onDataSent=[],this.__onStateChange=[],this._onDataReceived=function(p0){for(var _i=0,_a=_this.__onDataReceived;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onDataSent=function(p0){for(var _i=0,_a=_this.__onDataSent;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onStateChange=function(p0){for(var _i=0,_a=_this.__onStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._ordered=!1},WebRtcDataChannelBase.prototype.addOnDataReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onDataReceived,value)},WebRtcDataChannelBase.prototype.addOnDataSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onDataSent,value)},WebRtcDataChannelBase.prototype.addOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStateChange,value)},WebRtcDataChannelBase.prototype.getBytesReceived=function(){if(0==arguments.length)return this.__bytesReceived.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getBytesSent=function(){if(0==arguments.length)return this.__bytesSent.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getConnectionId=function(){if(0==arguments.length)return this._connectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getGetRemoteConnectionInfo=function(){if(0==arguments.length)return this._getRemoteConnectionInfo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getId=function(){if(0==arguments.length)return this.__id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getInfo=function(){if(0==arguments.length){var info=new fm.liveswitch.DataChannelInfo;return info.setId(this.getId()),info.setLabel(this.getLabel()),info.setOrdered(this.getOrdered()),info.setSubprotocol(this.getSubprotocol()),info}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getIsTerminated=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.DataChannelState.Closed)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.DataChannelState.Failed);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getIsTerminating=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.DataChannelState.Closing);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getIsTerminatingOrTerminated=function(){if(0==arguments.length)return this.getIsTerminating()||this.getIsTerminated();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getMessagesReceived=function(){if(0==arguments.length)return this.__messagesReceived.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getMessagesSent=function(){if(0==arguments.length)return this.__messagesSent.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getOnReceive=function(){if(0==arguments.length)return this._onReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getOrdered=function(){if(0==arguments.length)return this._ordered;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getState=function(){if(0==arguments.length)return this.__stateMachine.getState();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getStateLock=function(){if(0==arguments.length)return this.__stateLock;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getStreamId=function(){if(0==arguments.length)return this._streamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.getSubprotocol=function(){if(0==arguments.length)return this._subprotocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.logInvalidStateTransition=function(state){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.getIsDebugEnabled()&&fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Data channel {0} ({1}) state for stream {2} for connection {3} is currently {4}. Cannot transition to {5} state.",[this.getId(),this.getLabel(),this.getStreamId(),this.getConnectionId(),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.DataChannelStateWrapper(this.getState()).toString()),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.DataChannelStateWrapper(state).toString())]))},WebRtcDataChannelBase.prototype.prepareAndSendMessage=function(){if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var buffer=arguments[0],promise=arguments[1],length_7=buffer.getLength();buffer=new fm.liveswitch.DataMessage(buffer).getBytes(),this.promisedSendDataBytes(buffer,length_7,promise)}else{if(2!=arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[0])&&!fm.liveswitch.Util.isString(arguments[0]))throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var msg=arguments[0],length_8=(promise=arguments[1],fm.liveswitch.Utf8.encode(msg).length),bytes=new fm.liveswitch.DataMessage(msg).getBytes();this.promisedSendDataBytes(bytes,length_8,promise)}},WebRtcDataChannelBase.prototype.processStateChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.processStateLockChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.raiseDataBytes=function(dataBytes){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var message=fm.liveswitch.DataMessage.parseBytes(dataBytes);if(fm.liveswitch.Global.equals(message,null))fm.liveswitch.Log.error("DataChannelBase.RaiseDataBytes: Could not parse received bytes as data message.");else{fm.liveswitch.Global.equals(message.getDataBytes(),null)?this.registerDataReceived(fm.liveswitch.Utf8.encode(message.getDataString()).length):this.registerDataReceived(message.getDataBytes().getLength());var args2=new fm.liveswitch.DataChannelReceiveArgs;args2.setDataString(message.getDataString()),args2.setDataBytes(message.getDataBytes()),args2.setDataMessage(message);var p=args2,getRemoteConnectionInfo=this.getGetRemoteConnectionInfo(),remoteConnectionId=message.getRemoteConnectionId();fm.liveswitch.Global.equals(getRemoteConnectionInfo,null)||fm.liveswitch.Global.equals(remoteConnectionId,null)||p.setRemoteConnectionInfo(getRemoteConnectionInfo(remoteConnectionId));var onReceive=this.getOnReceive();fm.liveswitch.Global.equals(onReceive,null)||onReceive(p)}},WebRtcDataChannelBase.prototype.raiseDataString=function(dataString){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.registerDataReceived(fm.liveswitch.Utf8.encode(dataString).length),this.__log.error(fm.liveswitch.StringExtensions.format("Discarding unexpected string on data channel with label '{0}' for connection with ID '{1}': {2}.",this.getLabel(),this.getConnectionId(),dataString))},WebRtcDataChannelBase.prototype.raiseStateChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onStateChange=this._onStateChange;if(!fm.liveswitch.Global.equals(onStateChange,null))try{onStateChange(this.getInstance())}catch(exception){fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Exception occurred while raising state change to the application code for data stream {0}.",this.getId()),exception)}},WebRtcDataChannelBase.prototype.registerDataReceived=function(dataLength){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");dataLength=fm.liveswitch.Global.toInt(arguments[0]);var onDataReceived=this._onDataReceived;fm.liveswitch.Global.equals(onDataReceived,null)||onDataReceived(dataLength),this.__messagesReceived.increment(),this.__bytesReceived.add(dataLength)},WebRtcDataChannelBase.prototype.registerDataSent=function(dataLength){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");dataLength=fm.liveswitch.Global.toInt(arguments[0]);var onDataSent=this._onDataSent;fm.liveswitch.Global.equals(onDataSent,null)||onDataSent(dataLength),this.__messagesSent.increment(),this.__bytesSent.add(dataLength)},WebRtcDataChannelBase.prototype.removeOnDataReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onDataReceived,value)},WebRtcDataChannelBase.prototype.removeOnDataSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onDataSent,value)},WebRtcDataChannelBase.prototype.removeOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStateChange,value)},WebRtcDataChannelBase.prototype.setConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionId=value},WebRtcDataChannelBase.prototype.setGetRemoteConnectionInfo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._getRemoteConnectionInfo=value},WebRtcDataChannelBase.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},WebRtcDataChannelBase.prototype.setOnReceive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onReceive=value},WebRtcDataChannelBase.prototype.setOrdered=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ordered=value},WebRtcDataChannelBase.prototype.setState=function(state){if(1==arguments.length)return this.__stateMachine.transition(state)?(fm.liveswitch.Log.getIsInfoEnabled()&&(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.DataChannelState.Connected)&&fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Data channel {0} ({1} for stream {2} for connection {3} took {4}ms to connect.",[this.getId(),this.getLabel(),this.getStreamId(),this.getConnectionId(),fm.liveswitch.NumberExtensions.toString(this.__stateMachine.getLastStateMillis())])),fm.liveswitch.Log.info(fm.liveswitch.StringExtensions.format("Setting data channel {0} ({1}) state for stream {2} for connection {3} to {4}.",[this.getId(),this.getLabel(),this.getStreamId(),this.getConnectionId(),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.DataChannelStateWrapper(this.getState()).toString())]))),this.raiseStateChange(),this.processStateChange(),!0):(fm.liveswitch.Global.equals(state,this.getState())||fm.liveswitch.Global.equals(state,fm.liveswitch.DataChannelState.Closing)&&(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.DataChannelState.Closed)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.DataChannelState.Failed))||this.logInvalidStateTransition(state),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataChannelBase.prototype.setStateLock=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__stateLock,value)||(this.__stateLock=value,this.processStateLockChange())},WebRtcDataChannelBase.prototype.setStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._streamId=value},WebRtcDataChannelBase.prototype.setSubprotocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._subprotocol=value},WebRtcDataChannelBase}(fm.liveswitch.Dynamic);liveswitch.WebRtcDataChannelBase=WebRtcDataChannelBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcDataChannel=function(_super){function WebRtcDataChannel(external,label,ordered,subprotocol){var _this=this;return fm.liveswitch.Util.isNullOrUndefined(ordered)&&(ordered=!0),fm.liveswitch.Util.isNullOrUndefined(subprotocol)&&(subprotocol=""),(_this=_super.call(this,label,ordered,subprotocol)||this)._external=external,_this.sendQueue=[],_this}return __extends(WebRtcDataChannel,_super),WebRtcDataChannel.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcDataChannel],"+_super.prototype.getTypeString.call(this)},WebRtcDataChannel.prototype._getExternal=function(){return this._external},WebRtcDataChannel.prototype.getNativeDataChannel=function(){return this._nativeDataChannel},WebRtcDataChannel.prototype.setNativeDataChannel=function(nativeDataChannel){var _this=this;nativeDataChannel!=this._nativeDataChannel&&(this._nativeDataChannel&&(this._nativeDataChannel.onmessage=null),this._nativeDataChannel=nativeDataChannel,this._nativeDataChannel&&(this._nativeDataChannel.onmessage=function(event){fm.liveswitch.Util.isString(event.data)?_this.raiseDataString(event.data):_this.raiseDataBytes(fm.liveswitch.DataBuffer.wrap(new Uint8Array(event.data)))},this.setState(fm.liveswitch.DataChannelState.Connecting),this._nativeDataChannel.onopen=function(event){_this.setState(fm.liveswitch.DataChannelState.Connected),_this._nativeDataChannel.binaryType="arraybuffer",_this.sendQueue.forEach((function(o){o.dataBytes?(_this._nativeDataChannel.send(o.dataBytes),_this.registerDataSent(o.dataLength)):o.dataString&&(_this._nativeDataChannel.send(o.dataString),_this.registerDataSent(o.dataLength))}))},this._nativeDataChannel.onerror=function(event){_this.setState(fm.liveswitch.DataChannelState.Failed)},this._nativeDataChannel.onclose=function(event){_this.setState(fm.liveswitch.DataChannelState.Closing)&&_this.setState(fm.liveswitch.DataChannelState.Closed)}))},WebRtcDataChannel.prototype.getInstance=function(){return this},WebRtcDataChannel.prototype.sendDataString=function(dataString){var promise=new fm.liveswitch.Promise;return this.prepareAndSendMessage(dataString,promise),promise},WebRtcDataChannel.prototype.promisedSendDataBytes=function(dataBytes,dataLength,promise){var nativeDataChannel=this.getNativeDataChannel();if(nativeDataChannel){var state=nativeDataChannel.readyState;if("open"===state)nativeDataChannel.send(dataBytes.toArray()),this.registerDataSent(dataLength),promise.resolve(dataBytes);else if("connecting"==state)this.sendQueue.push({dataBytes:dataBytes,dataLength:dataLength}),promise.resolve(dataBytes);else{var errorStr="Attempt to communicate on a data channel that is not open or connecting.";fm.liveswitch.Log.debug(errorStr),promise.reject(new fm.liveswitch.Exception(errorStr))}}else{errorStr="Attempt to communicate on a data channel that has not been prepared.";fm.liveswitch.Log.debug(errorStr),promise.reject(new fm.liveswitch.Exception(errorStr))}},WebRtcDataChannel.prototype.promisedSendDataString=function(dataString,dataLength,promise){var nativeDataChannel=this.getNativeDataChannel();if(nativeDataChannel){var state=nativeDataChannel.readyState;if("open"===state)nativeDataChannel.send(dataString),this.registerDataSent(dataLength),promise.resolve(dataString);else if("connecting"==state)this.sendQueue.push({dataString:dataString,dataLength:dataLength}),promise.resolve(dataString);else{var errorStr="Attempt to communicate on a data channel that is not open or connecting.";fm.liveswitch.Log.debug(errorStr),promise.reject(new fm.liveswitch.Exception(errorStr))}}else{errorStr="Attempt to communicate on a data channel that has not been prepared.";fm.liveswitch.Log.debug(errorStr),promise.reject(new fm.liveswitch.Exception(errorStr))}},WebRtcDataChannel.prototype.sendDataBytes=function(dataBytes){var promise=new fm.liveswitch.Promise;return this.prepareAndSendMessage(dataBytes,promise),promise},WebRtcDataChannel}(fm.liveswitch.WebRtcDataChannelBase);liveswitch.WebRtcDataChannel=WebRtcDataChannel}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcDataStreamBase=function(_super){function WebRtcDataStreamBase(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this,fm.liveswitch.StreamType.Application)||this).__messagesSent=new fm.liveswitch.AtomicLong,_this.__messagesReceived=new fm.liveswitch.AtomicLong,_this.__bytesSent=new fm.liveswitch.AtomicLong,_this.__bytesReceived=new fm.liveswitch.AtomicLong,_this}return __extends(WebRtcDataStreamBase,_super),WebRtcDataStreamBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcDataStreamBase],"+_super.prototype.getTypeString.call(this)},WebRtcDataStreamBase.prototype.attachToChannel=function(channel){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(channel.getStreamId(),null)&&(channel.setStreamId(_super.prototype.getId.call(this)),channel.removeOnDataSent(this.registerDataSent.bind(this)),channel.addOnDataSent(this.registerDataSent.bind(this)),channel.removeOnDataReceived(this.registerDataReceived.bind(this)),channel.addOnDataReceived(this.registerDataReceived.bind(this)))},WebRtcDataStreamBase.prototype.changeDirection=function(newDirection){if(1==arguments.length)return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.DataStreamDirectionCannotBeChanged,new fm.liveswitch.Exception("Changes to Stream Direction of Data Streams are not permitted."));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getBytesReceived=function(){if(0==arguments.length)return this.__bytesReceived.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getBytesSent=function(){if(0==arguments.length)return this.__bytesSent.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getCanonicalName=function(){if(0==arguments.length)return fm.liveswitch.Log.warn("Getting the value of DataStream.CanonicalName is deprecated and will be removed in a future release."),this.__obsoleteCanonicalName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getDirection=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.SendReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getDirectionCapabilities=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.SendReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getGetRemoteConnectionInfo=function(){if(0==arguments.length)return this.__getRemoteConnectionInfo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getInfo=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=this.getChannels();_i<_a.length;_i++){var local=_a[_i];fm.liveswitch.ArrayExtensions.add(list,local.getInfo())}var info=new fm.liveswitch.DataStreamInfo;info.setId(_super.prototype.getId.call(this)),info.setTag(_super.prototype.getTag.call(this)),info.setChannels(fm.liveswitch.ArrayExtensions.toArray(list));var report=new fm.liveswitch.DataStreamReport;return report.setBytesReceived(this.getBytesReceived()),report.setBytesSent(this.getBytesSent()),report.setMessagesReceived(this.getMessagesReceived()),report.setMessagesSent(this.getMessagesSent()),info.setReport(report),info}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getLabel=function(){if(0==arguments.length)return"Data Stream";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getLocalDirection=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.SendReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getMessagesReceived=function(){if(0==arguments.length)return this.__messagesReceived.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getMessagesSent=function(){if(0==arguments.length)return this.__messagesSent.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.getRemoteDirection=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.SendReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcDataStreamBase.prototype.processStateChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.processStateChange.call(this);var channels=this.getChannels();if(!fm.liveswitch.Global.equals(channels,null))for(var _i=0,channels_1=channels;_i<channels_1.length;_i++){var local=channels_1[_i];fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.StreamState.Closing)?local.setState(fm.liveswitch.DataChannelState.Closing):fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.StreamState.Closed)?local.setState(fm.liveswitch.DataChannelState.Closed):fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.StreamState.Failed)&&local.setState(fm.liveswitch.DataChannelState.Failed)}},WebRtcDataStreamBase.prototype.processStateLockChange=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.processStateLockChange.call(this);var channels=this.getChannels();if(!fm.liveswitch.Global.equals(channels,null))for(var _i=0,channels_2=channels;_i<channels_2.length;_i++){var local=channels_2[_i];this.attachToChannel(local),local.setConnectionId(_super.prototype.getConnectionId.call(this)),local.setStateLock(_super.prototype.getStateLock.call(this))}},WebRtcDataStreamBase.prototype.registerDataReceived=function(dataLength){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");dataLength=fm.liveswitch.Global.toInt(arguments[0]),this.__messagesReceived.increment(),this.__bytesReceived.add(dataLength)},WebRtcDataStreamBase.prototype.registerDataSent=function(dataLength){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");dataLength=fm.liveswitch.Global.toInt(arguments[0]),this.__messagesSent.increment(),this.__bytesSent.add(dataLength)},WebRtcDataStreamBase.prototype.setCanonicalName=function(canonicalName){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__obsoleteCanonicalName=canonicalName},WebRtcDataStreamBase.prototype.setGetRemoteConnectionInfo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(this.__getRemoteConnectionInfo,value)){this.__getRemoteConnectionInfo=value;for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var local=_a[_i];local.setGetRemoteConnectionInfo(value)}}},WebRtcDataStreamBase.prototype.setLocalDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(value,fm.liveswitch.StreamDirection.SendReceive))throw new fm.liveswitch.Exception("Local direction other than SendReceive for DataStreams is not currently supported.")},WebRtcDataStreamBase.prototype.setRemoteDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(value,fm.liveswitch.StreamDirection.SendReceive))throw new fm.liveswitch.Exception("Remote direction other than SendReceive for DataStreams is not currently supported.")},WebRtcDataStreamBase}(fm.liveswitch.WebRtcStream);liveswitch.WebRtcDataStreamBase=WebRtcDataStreamBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcDataStream=function(_super){function WebRtcDataStream(external,channels){var _this=_super.call(this)||this;return _this._external=external,_this._channels=channels,_this}return __extends(WebRtcDataStream,_super),WebRtcDataStream.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcDataStream],"+_super.prototype.getTypeString.call(this)},WebRtcDataStream.prototype.processSdpMediaDescription=function(sdpMessage,sdpMediaDescription,index,isLocalDescription,isOffer,isRenegotiation){var manager=this.getMediaDescriptionManager(),requirements=new fm.liveswitch.MediaDescriptionRequirements;return manager.processSdpMediaDescription(requirements,sdpMessage,index,isLocalDescription,isRenegotiation,isOffer)},WebRtcDataStream.prototype._getExternal=function(){return this._external},WebRtcDataStream.prototype.getChannels=function(){return this._channels},WebRtcDataStream}(fm.liveswitch.WebRtcDataStreamBase);liveswitch.WebRtcDataStream=WebRtcDataStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcDomAudioSink=function(_super){function WebRtcDomAudioSink(external,track){var _this=_super.call(this)||this;return _this._external=external,_this._audio=document.createElement("audio"),_this._audio.setAttribute("autoplay","autoplay"),_this.setTrack(track),_this}return __extends(WebRtcDomAudioSink,_super),WebRtcDomAudioSink.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcDomAudioSink],"+_super.prototype.getTypeString.call(this)},WebRtcDomAudioSink.prototype._getExternal=function(){return this._external},WebRtcDomAudioSink.prototype.getTrack=function(){return this._track},WebRtcDomAudioSink.prototype.getLocal=function(){return this._local},WebRtcDomAudioSink.prototype.getAudio=function(){return this._audio},WebRtcDomAudioSink.prototype.getVolume=function(){return this._audio.volume},WebRtcDomAudioSink.prototype.setVolume=function(volume){this._audio.volume=volume},WebRtcDomAudioSink.prototype.getMuted=function(){return this._audio.muted},WebRtcDomAudioSink.prototype.setMuted=function(muted){this._audio.muted=muted},WebRtcDomAudioSink.prototype.setTrack=function(track){var _this=this;return!!track&&(this._track=track,this._local=fm.liveswitch.Util.isObjectType(track.getMedia(),"[fm.liveswitch.WebRtcLocalMedia]"),this.setMuted(this.getLocal()),fm.liveswitch.ManagedThread.dispatch((function(){var nativeMediaStream=track.getMedia()._getAudioMediaStream();try{void 0!==_this._audio.srcObject?_this._audio.srcObject=nativeMediaStream:void 0!==_this._audio.mozSrcObject?_this._audio.mozSrcObject=nativeMediaStream:void 0!==window.attachMediaStream?window.attachMediaStream(_this._audio,nativeMediaStream):(URL=window.URL||window.webkitURL,_this._audio.src=URL.createObjectURL(nativeMediaStream))}catch(error){fm.liveswitch.Log.error("Could not attach "+(_this.getLocal()?"local":"remote")+" media stream to audio element.",error)}navigator.mozGetUserMedia&&_this.playAudio()})),!0)},WebRtcDomAudioSink.prototype.playAudio=function(){var _this=this,playPromise=this.getAudio().play();void 0!==playPromise&&playPromise.then((function(){fm.liveswitch.Log.debug("Audio playback started.")})).catch((function(){setTimeout((function(){_this.getAudio().play().catch((function(error){fm.liveswitch.Log.error("Audio playback failed to start.",error)}))}),100)}))},WebRtcDomAudioSink}(fm.liveswitch.Dynamic);liveswitch.WebRtcDomAudioSink=WebRtcDomAudioSink}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcDomVideoSink=function(_super){function WebRtcDomVideoSink(external,track){var _this=_super.call(this)||this;return _this._external=external,_this._container=document.createElement("div"),_this._container.style.position="relative",_this._container.style.overflow="hidden",_this._container.className="fm-video",_this._video=document.createElement("video"),_this._video.style.position="absolute",_this._video.setAttribute("autoplay","autoplay"),_this._video.setAttribute("playsinline","playsinline"),_this._video.setAttribute("webkit-playsinline","webkit-playsinline"),_this._video.muted=!0,_this._video.addEventListener("resize",(function(event){var track=_this.getTrack();if(track)if(_this._local)for(var _i=0,_a=track.getOutputs();_i<_a.length;_i++){_a[_i].setMaxWidthAndHeight(_this._video.videoWidth,_this._video.videoHeight)}else for(var _b=0,_c=track.getInputs();_b<_c.length;_b++){_c[_b].setMaxWidthAndHeight(_this._video.videoWidth,_this._video.videoHeight)}})),fm.liveswitch.WebRtcDomVideoSink._observer||(fm.liveswitch.WebRtcDomVideoSink._observer=new MutationObserver((function(mutationList){mutationList.forEach((function(mutation){"childList"==mutation.type&&mutation.addedNodes.forEach((function(node){for(var i=0;i<fm.liveswitch.WebRtcDomVideoSink._videoSinks.length;i++){var sink=fm.liveswitch.WebRtcDomVideoSink._videoSinks[i];node.contains(sink.getVideo())&&sink.playVideo()}}))}))})),fm.liveswitch.WebRtcDomVideoSink._observer.observe(document.body,{childList:!0,subtree:!0})),fm.liveswitch.WebRtcDomVideoSink._videoSinks.push(_this),_this._container.appendChild(_this._video),_this.setTrack(track),_this}return __extends(WebRtcDomVideoSink,_super),WebRtcDomVideoSink.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcDomVideoSink],"+_super.prototype.getTypeString.call(this)},WebRtcDomVideoSink.prototype._getExternal=function(){return this._external},WebRtcDomVideoSink.prototype.getTrack=function(){return this._track},WebRtcDomVideoSink.prototype.getLocal=function(){return this._local},WebRtcDomVideoSink.prototype.getView=function(){return this._container},WebRtcDomVideoSink.prototype.getViewScale=function(){return this._viewScale},WebRtcDomVideoSink.prototype.setViewScale=function(viewScale){this.applyScale(viewScale),this._viewScale=viewScale},WebRtcDomVideoSink.prototype.getViewMirror=function(){return this._viewMirror},WebRtcDomVideoSink.prototype.setViewMirror=function(viewMirror){this._container.style.transform=viewMirror?"scale(-1,1)":"",this._viewMirror=viewMirror},WebRtcDomVideoSink.prototype.getVideo=function(){return this._video},WebRtcDomVideoSink.prototype.getVideoWidth=function(){return this._video?this._video.videoWidth:0},WebRtcDomVideoSink.prototype.getVideoHeight=function(){return this._video?this._video.videoHeight:0},WebRtcDomVideoSink.prototype.getVolume=function(){return this._video.volume},WebRtcDomVideoSink.prototype.setVolume=function(volume){this._video.volume=volume},WebRtcDomVideoSink.prototype.getMuted=function(){return this._video.muted},WebRtcDomVideoSink.prototype.setMuted=function(muted){this._video.muted=muted},WebRtcDomVideoSink.prototype.destroy=function(){var sinkCount=fm.liveswitch.WebRtcDomVideoSink._videoSinks.length;if(sinkCount>0){for(;sinkCount--;)if(fm.liveswitch.WebRtcDomVideoSink._videoSinks[sinkCount]==this){fm.liveswitch.WebRtcDomVideoSink._videoSinks.splice(sinkCount,1);break}0===fm.liveswitch.WebRtcDomVideoSink._videoSinks.length&&WebRtcDomVideoSink._observer&&(fm.liveswitch.WebRtcDomVideoSink._observer.disconnect(),fm.liveswitch.WebRtcDomVideoSink._observer=null)}},WebRtcDomVideoSink.prototype.setTrack=function(track){var _this=this;if(!track)return!1;if(this._track=track,this._local=fm.liveswitch.Util.isObjectType(this._track.getMedia(),"[fm.liveswitch.WebRtcLocalMedia]"),this._local?this._container.className="fm-video fm-video-local":this._container.className="fm-video fm-video-remote",this.getLocal()){var localMedia=this.getTrack().getMedia(),videoConstraints=localMedia.getVideoConstraints();if(localMedia.getScreen())this.setViewMirror(!1);else if(videoConstraints){var facingMode=videoConstraints.facingMode;facingMode&&facingMode.exact?facingMode=facingMode.exact:facingMode&&facingMode.ideal&&(facingMode=facingMode.ideal),this.setViewMirror("user"==facingMode)}else this.setViewMirror(!0)}else this.setViewMirror(!1);return fm.liveswitch.ManagedThread.dispatch((function(){var nativeMediaStream=_this.getTrack().getMedia()._getVideoMediaStream();try{_this._video.audioVolume=0,_this._video.muted=!0}catch(error){fm.liveswitch.Log.error("Could not set "+(_this.getLocal()?"local":"remote")+" video element audio volume.",error)}try{if(void 0!==_this._video.srcObject)_this._video.srcObject=nativeMediaStream;else if(void 0!==_this._video.mozSrcObject)_this._video.mozSrcObject=nativeMediaStream;else if(void 0!==window.attachMediaStream){var detached=null==_this._container.parentNode;detached&&document.body.appendChild(_this._container),window.attachMediaStream(_this._video,nativeMediaStream),_this._video=_this._container.firstChild,detached&&document.body.removeChild(_this._container)}else URL=window.URL||window.webkitURL,_this._video.src=URL.createObjectURL(nativeMediaStream)}catch(error){fm.liveswitch.Log.error("Could not attach "+(_this.getLocal()?"local":"remote")+" media stream to video element.",error)}_this.playVideo(),_this.setViewScale(_this.getViewScale()||fm.liveswitch.LayoutScale.Contain)})),!0},WebRtcDomVideoSink.prototype.playVideo=function(){var _this=this,playPromise=this.getVideo().play();void 0!==playPromise&&playPromise.then((function(){fm.liveswitch.Log.debug("Video playback started.")})).catch((function(){setTimeout((function(){try{_this.getVideo().play().catch((function(error){fm.liveswitch.Log.error("Video playback failed to start.",error)}))}catch(error){fm.liveswitch.Log.error("Video playback failed to start.",error)}}),100)}))},WebRtcDomVideoSink.prototype.applyScale=function(scale){},WebRtcDomVideoSink._videoSinks=[],WebRtcDomVideoSink}(fm.liveswitch.Dynamic);liveswitch.WebRtcDomVideoSink=WebRtcDomVideoSink}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcMediaBase=function(_super){function WebRtcMediaBase(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).setId(fm.liveswitch.Utility.generateId()),_this}return __extends(WebRtcMediaBase,_super),WebRtcMediaBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcMediaBase],"+_super.prototype.getTypeString.call(this)},WebRtcMediaBase.prototype.getAudioGain=function(){if(0==arguments.length){var audioTrack=this.getAudioTrack();return fm.liveswitch.Global.equals(audioTrack,null)?1:audioTrack.getGain()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaBase.prototype.getAudioMuted=function(){if(0==arguments.length){var audioTrack=this.getAudioTrack();return!fm.liveswitch.Global.equals(audioTrack,null)&&audioTrack.getMuted()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaBase.prototype.getAudioTrack=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getAudioTracks());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaBase.prototype.getAudioVolume=function(){if(0==arguments.length){var audioTrack=this.getAudioTrack();return fm.liveswitch.Global.equals(audioTrack,null)?1:audioTrack.getVolume()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaBase.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaBase.prototype.getVideoMuted=function(){if(0==arguments.length){var videoTrack=this.getVideoTrack();return!fm.liveswitch.Global.equals(videoTrack,null)&&videoTrack.getMuted()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaBase.prototype.getVideoTrack=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getVideoTracks());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcMediaBase.prototype.setAudioGain=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioTrack=this.getAudioTrack();fm.liveswitch.Global.equals(audioTrack,null)||audioTrack.setGain(value)},WebRtcMediaBase.prototype.setAudioMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioTrack=this.getAudioTrack();fm.liveswitch.Global.equals(audioTrack,null)||audioTrack.setMuted(value)},WebRtcMediaBase.prototype.setAudioVolume=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioTrack=this.getAudioTrack();fm.liveswitch.Global.equals(audioTrack,null)||audioTrack.setVolume(value)},WebRtcMediaBase.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},WebRtcMediaBase.prototype.setVideoMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var videoTrack=this.getVideoTrack();fm.liveswitch.Global.equals(videoTrack,null)||videoTrack.setMuted(value)},WebRtcMediaBase}(fm.liveswitch.Dynamic);liveswitch.WebRtcMediaBase=WebRtcMediaBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcMedia=function(_super){function WebRtcMedia(external){var _this=_super.call(this)||this;_this._audioMediaStream=null,_this._videoMediaStream=null,_this._audioTrack=null,_this._videoTrack=null,_this._audioSink=null,_this._videoSink=null,_this._onAudioLevelValues=[],_this._onVideoSizeValues=[],_this._onAudioDestroyedValues=[],_this._onVideoDestroyedValues=[];var externalAudioTrack=new fm.liveswitch.AudioTrack(external,_this),externalVideoTrack=new fm.liveswitch.VideoTrack(external,_this),externalAudioSink=new fm.liveswitch.DomAudioSink(null),externalVideoSink=new fm.liveswitch.DomVideoSink(null);return _this._audioTrack=externalAudioTrack._getInternal(),_this._videoTrack=externalVideoTrack._getInternal(),_this._audioSink=externalAudioSink._getInternal(),_this._videoSink=externalVideoSink._getInternal(),_this._audioTrack.addOnDestroyed((function(){for(var _i=0,_a=_this._onAudioDestroyedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._videoTrack.addOnDestroyed((function(){_this._videoSink.destroy();for(var _i=0,_a=_this._onVideoDestroyedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this}return __extends(WebRtcMedia,_super),WebRtcMedia.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcMedia],"+_super.prototype.getTypeString.call(this)},WebRtcMedia.prototype._getAudioMediaStream=function(){return this._audioMediaStream},WebRtcMedia.prototype._getVideoMediaStream=function(){return this._videoMediaStream},WebRtcMedia.prototype._setAudioMediaStream=function(audioMediaStream){if(audioMediaStream==this._audioMediaStream)return!1;(this._audioMediaStream=audioMediaStream,audioMediaStream)?audioMediaStream.getAudioTracks().length>0?(this._audioTrack._setMediaStreamTrack(audioMediaStream.getAudioTracks()[0]),this._audioSink.setTrack(this._audioTrack),this.initializeAudioContext()):(this._audioTrack._setMediaStreamTrack(null),this.destroyAudioContext()):(this._audioTrack._setMediaStreamTrack(null),this.destroyAudioContext());return!0},WebRtcMedia.prototype._setVideoMediaStream=function(videoMediaStream){if(videoMediaStream==this._videoMediaStream)return!1;(this._videoMediaStream=videoMediaStream,videoMediaStream)?videoMediaStream.getVideoTracks().length>0?(this._videoTrack._setMediaStreamTrack(videoMediaStream.getVideoTracks()[0]),this._videoSink.setTrack(this._videoTrack)):this._videoTrack._setMediaStreamTrack(null):this._videoTrack._setMediaStreamTrack(null);return!0},WebRtcMedia.prototype._setMediaStreams=function(audioMediaStream,videoMediaStream){this._setAudioMediaStream(audioMediaStream),this._setVideoMediaStream(videoMediaStream)},WebRtcMedia.prototype._setMediaStream=function(mediaStream){this._setMediaStreams(mediaStream,mediaStream)},WebRtcMedia.prototype.getAudio=function(){return this._audio},WebRtcMedia.prototype.setAudio=function(audio){this._audio=audio},WebRtcMedia.prototype.getVideo=function(){return this._video},WebRtcMedia.prototype.setVideo=function(video){this._video=video},WebRtcMedia.prototype.addOnAudioDestroyed=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioDestroyedValues,value)},WebRtcMedia.prototype.addOnVideoDestroyed=function(value){fm.liveswitch.ArrayExtensions.add(this._onVideoDestroyedValues,value)},WebRtcMedia.prototype.removeOnAudioDestroyed=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioDestroyedValues,value)},WebRtcMedia.prototype.removeOnVideoDestroyed=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoDestroyedValues,value)},WebRtcMedia.prototype.addOnAudioLevel=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioLevelValues,value),this.initializeAudioContext()},WebRtcMedia.prototype.addOnVideoSize=function(value){var _this=this;fm.liveswitch.ArrayExtensions.add(this._onVideoSizeValues,value);var video=this._videoSink.getVideo();if(video&&!this._videoSizeEventsAttached)try{fm.liveswitch.Util.observe(video,"loadedmetadata",(function(evt){for(var _i=0,_a=_this._onVideoSizeValues;_i<_a.length;_i++){(0,_a[_i])(new fm.liveswitch.Size(video.videoWidth,video.videoHeight))}})),fm.liveswitch.Util.observe(video,"timeupdate",(function(evt){for(var _i=0,_a=_this._onVideoSizeValues;_i<_a.length;_i++){(0,_a[_i])(new fm.liveswitch.Size(video.videoWidth,video.videoHeight))}}))}catch(ex){fm.liveswitch.Log.error("Could not initialize AudioContext.",ex)}},WebRtcMedia.prototype.destroy=function(){this._audioTrack.destroy(),this._videoTrack.destroy()},WebRtcMedia.prototype.getAudioGain=function(){return this.getAudioVolume()},WebRtcMedia.prototype.getAudioTracks=function(){return!this._audio||this._audioTrack._getMediaStreamTrackDisabled()?[]:[this._audioTrack]},WebRtcMedia.prototype.getAudioVolume=function(){return this._audioSink.getTrack()?this._audioSink.getVolume():this._videoSink.getTrack()?this._videoSink.getVolume():1},WebRtcMedia.prototype.getVideoSize=function(){return new fm.liveswitch.Size(this._videoSink.getVideoWidth(),this._videoSink.getVideoHeight())},WebRtcMedia.prototype.getVideoTracks=function(){return!this._video||this._videoTrack._getMediaStreamTrackDisabled()?[]:[this._videoTrack]},WebRtcMedia.prototype.getAudioSink=function(){return this._audio?this._audioSink:null},WebRtcMedia.prototype.getVideoSink=function(){return this._video?this._videoSink:null},WebRtcMedia.prototype.getView=function(){return this._video?this._videoSink.getView():null},WebRtcMedia.prototype.getViewSink=function(){return this._video?this._videoSink:null},WebRtcMedia.prototype.grabVideoFrame=function(){var promise=new fm.liveswitch.Promise,video=this._videoSink.getVideo();if(video&&video.videoWidth&&video.videoHeight){var width=video.videoWidth,height=video.videoHeight,canvas=document.createElement("canvas");canvas.width=width,canvas.height=height;var context=canvas.getContext("2d");context.drawImage(video,0,0,width,height);var image=context.getImageData(0,0,width,height),data=new Uint8Array(image.data.buffer);promise.resolve(new fm.liveswitch.VideoBuffer(width,height,fm.liveswitch.DataBuffer.wrap(data),fm.liveswitch.VideoFormat.getRgba()))}else promise.reject(new fm.liveswitch.Exception("No video to grab."));return promise},WebRtcMedia.prototype.removeOnAudioLevel=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioLevelValues,value),0==this._onAudioLevelValues.length&&this.destroyAudioContext()},WebRtcMedia.prototype.removeOnVideoSize=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoSizeValues,value)},WebRtcMedia.prototype.setAudioGain=function(value){this.setAudioVolume(value)},WebRtcMedia.prototype.setAudioVolume=function(value){this._audioSink.getTrack()&&this._audioSink.setVolume(value),this._videoSink.getTrack()&&this._videoSink.setVolume(value)},WebRtcMedia.prototype.initializeAudioContext=function(){var _this=this;if(this._audioMediaStream&&!this._audioContext&&this._onAudioLevelValues.length>0)try{var audioTracks=this._audioMediaStream.getAudioTracks();if(audioTracks&&audioTracks.length>0){null==this._audioContext&&"undefined"!=typeof AudioContext&&(this._audioContext=new AudioContext),null==this._audioContext&&void 0!==window.webkitAudioContext&&(this._audioContext=new window.webkitAudioContext),null!=this._audioContext&&(this._audioMicrophone=this._audioContext.createMediaStreamSource(this._audioMediaStream),this._audioAnalyser=this._audioContext.createAnalyser(),this._audioScriptNode=this._audioContext.createScriptProcessor(2048,1,1),this._audioMicrophone.connect(this._audioAnalyser),this._audioAnalyser.connect(this._audioScriptNode),this._audioScriptNode.connect(this._audioContext.destination),this._audioScriptNode.onaudioprocess=function(event){for(var input=event.inputBuffer.getChannelData(0),sum=0,i=0;i<input.length;i++)sum+=input[i]*input[i];for(var level=Math.sqrt(sum/input.length),_i=0,_a=_this._onAudioLevelValues;_i<_a.length;_i++){(0,_a[_i])(level)}});for(var _i=0,audioTracks_1=audioTracks;_i<audioTracks_1.length;_i++){audioTracks_1[_i].onended=function(event){_this.destroyAudioContext()}}}}catch(ex){fm.liveswitch.Log.error("Could not initialize AudioContext.",ex)}},WebRtcMedia.prototype.destroyAudioContext=function(){try{this._audioContext&&(this._audioMicrophone&&(this._audioMicrophone.disconnect(this._audioAnalyser),this._audioMicrophone=null),this._audioAnalyser&&(this._audioAnalyser.disconnect(this._audioScriptNode),this._audioAnalyser=null),this._audioScriptNode&&(this._audioScriptNode.disconnect(this._audioContext.destination),this._audioScriptNode=null),this._audioContext.close(),this._audioContext=null)}catch(ex){fm.liveswitch.Log.error("Could not destroy AudioContext.",ex)}},WebRtcMedia}(fm.liveswitch.WebRtcMediaBase);liveswitch.WebRtcMedia=WebRtcMedia}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcLocalMediaBase=function(_super){function WebRtcLocalMediaBase(external){var _this=this;fm.liveswitch.WebRtcLocalMediaBase.fmliveswitchWebRtcLocalMediaBaseInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var external_1=__arguments[0];return(_this=_super.call(this,external_1)||this).fmliveswitchWebRtcLocalMediaBaseInit(),_this.__audioEncodingsSetLock=new Object,_this.__videoEncodingsSetLock=new Object,_this.__audioEncodingsSet=!1,_this.__videoEncodingsSet=!1,_this.__stateLock=new Object,_this.setState(fm.liveswitch.LocalMediaState.New),_this.initializeSimulcastConfigs(),_this}return __extends(WebRtcLocalMediaBase,_super),WebRtcLocalMediaBase.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcLocalMediaBase],"+_super.prototype.getTypeString.call(this)},WebRtcLocalMediaBase.prototype.fmliveswitchWebRtcLocalMediaBaseInit=function(){this.__audioEncodingsSet=!1,this.__videoEncodingsSet=!1},WebRtcLocalMediaBase.getDefaultVideoBitsPerPixel=function(){if(fm.liveswitch.WebRtcLocalMediaBase.fmliveswitchWebRtcLocalMediaBaseInitialize(),0==arguments.length)return fm.liveswitch.WebRtcLocalMediaBase.fm_liveswitch_WebRtcLocalMediaBase___defaultVideoBitsPerPixel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.setDefaultVideoBitsPerPixel=function(value){if(fm.liveswitch.WebRtcLocalMediaBase.fmliveswitchWebRtcLocalMediaBaseInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(value<0)throw new fm.liveswitch.Exception("Default bits-per-pixel must be greater than or equal to zero.");fm.liveswitch.WebRtcLocalMediaBase.fm_liveswitch_WebRtcLocalMediaBase___defaultVideoBitsPerPixel=value},WebRtcLocalMediaBase.prototype.abortStart=function(promise,exception){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media failed to start and is in a partial state. Stopping...",new Array(0))),this.doStop().then((function(result){fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media has successfully stopped.",new Array(0))),_this.setState(fm.liveswitch.LocalMediaState.Stopped),promise.reject(exception)}),(function(ex){fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media did not stop successfully.",new Array(0))),_this.setState(fm.liveswitch.LocalMediaState.Stopped),promise.reject(exception)}))},WebRtcLocalMediaBase.prototype.getAudioEncoding=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getAudioEncodings());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getAudioEncodings=function(){if(0==arguments.length)return this.doGetAudioEncodings();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getAudioSimulcastDisabled=function(){if(0==arguments.length)return this.__audioSimulcast.getDisabled();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getAudioSimulcastEncodingCount=function(){if(0==arguments.length)return this.__audioSimulcast.getEncodingCount();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getAudioSimulcastPreferredBitrate=function(){if(0==arguments.length)return this.__audioSimulcast.getPreferredBitrate();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getVideoEncoding=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getVideoEncodings());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getVideoEncodings=function(){if(0==arguments.length)return this.doGetVideoEncodings();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getVideoSimulcastBitsPerPixel=function(){if(0==arguments.length)return this.__videoSimulcast.getBitsPerPixel();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getVideoSimulcastDegradationPreference=function(){if(0==arguments.length)return this.__videoSimulcast.getDegradationPreference();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getVideoSimulcastDisabled=function(){if(0==arguments.length)return this.__videoSimulcast.getDisabled();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getVideoSimulcastEncodingCount=function(){if(0==arguments.length)return this.__videoSimulcast.getEncodingCount();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.getVideoSimulcastPreferredBitrate=function(){if(0==arguments.length)return this.__videoSimulcast.getPreferredBitrate();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.initializeSimulcastConfigs=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var config=new fm.liveswitch.AudioSimulcastConfig(1,32);config.setDisabled(!0),this.__audioSimulcast=config;var config2=new fm.liveswitch.VideoSimulcastConfig(2,1024,fm.liveswitch.WebRtcLocalMediaBase.getDefaultVideoBitsPerPixel());config2.setDisabled(!1),this.__videoSimulcast=config2},WebRtcLocalMediaBase.prototype.lockAudioEncodings=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");(fm.liveswitch.Global.equals(this.getAudioEncodings(),null)||fm.liveswitch.Global.equals(this.getAudioEncodings().length,0))&&this.setAudioEncodings(this.__audioSimulcast.getEncodingConfigs())},WebRtcLocalMediaBase.prototype.lockVideoEncodings=function(){if(0==arguments.length)this.lockVideoEncodings(fm.liveswitch.VideoType.Unknown);else if(1==arguments.length){var sourceType=arguments[0];this.lockVideoEncodings(sourceType,-1,-1,-1)}else{if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");sourceType=arguments[0];var sourceWidth=fm.liveswitch.Global.toInt(arguments[1]),sourceHeight=fm.liveswitch.Global.toInt(arguments[2]),sourceFrameRate=arguments[3];(fm.liveswitch.Global.equals(this.getVideoEncodings(),null)||fm.liveswitch.Global.equals(this.getVideoEncodings().length,0))&&this.setVideoEncodings(this.__videoSimulcast.getEncodingConfigs(sourceType,sourceWidth,sourceHeight,sourceFrameRate))}},WebRtcLocalMediaBase.prototype.setAudioEncodings=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null)&&(value=[new fm.liveswitch.AudioEncodingConfig]),fm.liveswitch.Global.equals(value.length,0))throw new fm.liveswitch.Exception("Audio encodings cannot be empty.");var audioEncodings=this.getAudioEncodings();if(this.__audioEncodingsSet&&!fm.liveswitch.Global.equals(audioEncodings,null)&&!fm.liveswitch.Global.equals(audioEncodings.length,value.length))throw new fm.liveswitch.Exception("The number of audio encodings cannot be changed once set.");this.__audioEncodingsSet=!0,this.doSetAudioEncodings(value)},WebRtcLocalMediaBase.prototype.setAudioSimulcastDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__audioSimulcast.setDisabled(value)},WebRtcLocalMediaBase.prototype.setAudioSimulcastEncodingCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__audioSimulcast.setEncodingCount(value)},WebRtcLocalMediaBase.prototype.setAudioSimulcastPreferredBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__audioSimulcast.setPreferredBitrate(value)},WebRtcLocalMediaBase.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},WebRtcLocalMediaBase.prototype.setVideoEncodings=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Video encodings cannot be null.");if(fm.liveswitch.Global.equals(value.length,0))throw new fm.liveswitch.Exception("Video encodings cannot be empty.");var videoEncodings=this.getVideoEncodings();if(this.__videoEncodingsSet&&!fm.liveswitch.Global.equals(videoEncodings,null)&&!fm.liveswitch.Global.equals(videoEncodings.length,value.length))throw new fm.liveswitch.Exception("The number of video encodings cannot be changed once set.");this.__videoEncodingsSet=!0,this.doSetVideoEncodings(value)},WebRtcLocalMediaBase.prototype.setVideoSimulcastBitsPerPixel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__videoSimulcast.setBitsPerPixel(value)},WebRtcLocalMediaBase.prototype.setVideoSimulcastDegradationPreference=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__videoSimulcast.setDegradationPreference(value)},WebRtcLocalMediaBase.prototype.setVideoSimulcastDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__videoSimulcast.setDisabled(value)},WebRtcLocalMediaBase.prototype.setVideoSimulcastEncodingCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__videoSimulcast.setEncodingCount(value)},WebRtcLocalMediaBase.prototype.setVideoSimulcastPreferredBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__videoSimulcast.setPreferredBitrate(value)},WebRtcLocalMediaBase.prototype.start=function(){if(0==arguments.length)return this.startInternal(new fm.liveswitch.Promise);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.startInternal=function(promise){var _this=this;if(1==arguments.length){var _var0=this.getState();return _var0==fm.liveswitch.LocalMediaState.Starting?(promise.reject(new fm.liveswitch.Exception("Local media cannot be started while it is being started on a different thread.")),promise):_var0==fm.liveswitch.LocalMediaState.Started?(promise.resolve(this),promise):_var0==fm.liveswitch.LocalMediaState.Stopping?(promise.reject(new fm.liveswitch.Exception("Local media cannot be started while it is being stopped.")),promise):_var0==fm.liveswitch.LocalMediaState.Destroying?(promise.reject(new fm.liveswitch.Exception("Local media cannot be started while it is being destroyed.")),promise):_var0==fm.liveswitch.LocalMediaState.Destroyed?(promise.reject(new fm.liveswitch.Exception("Local media cannot be started while it is destroyed.")),promise):(this.setState(fm.liveswitch.LocalMediaState.Starting),fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media is being started.",new Array(0))),this.doStart().then((function(result){fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media has successfully started.",new Array(0))),_this.setState(fm.liveswitch.LocalMediaState.Started),promise.resolve(result)}),(function(exception){fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media did not start successfully.",new Array(0))),_this.setState(fm.liveswitch.LocalMediaState.Stopped),promise.reject(exception)})),promise)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.stop=function(){if(0==arguments.length)return this.stopInternal(new fm.liveswitch.Promise);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.prototype.stopInternal=function(promise){var _this=this;if(1==arguments.length){var _var0=this.getState();return _var0==fm.liveswitch.LocalMediaState.New?(promise.resolve(this),promise):_var0==fm.liveswitch.LocalMediaState.Starting?(promise.reject(new fm.liveswitch.Exception("Local media cannot be stopped while it is being started.")),promise):_var0==fm.liveswitch.LocalMediaState.Stopping?(promise.reject(new fm.liveswitch.Exception("Local media cannot be stopped while it is being stopped on a different thread.")),promise):_var0==fm.liveswitch.LocalMediaState.Stopped?(promise.resolve(this),promise):_var0==fm.liveswitch.LocalMediaState.Destroying?(promise.reject(new fm.liveswitch.Exception("Local media cannot be stopped while it is being destroyed.")),promise):_var0==fm.liveswitch.LocalMediaState.Destroyed?(promise.reject(new fm.liveswitch.Exception("Local media cannot be stopped while it is destroyed.")),promise):(this.setState(fm.liveswitch.LocalMediaState.Stopping),fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media is being stopped.",new Array(0))),this.doStop().then((function(result){fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media has successfully stopped.",new Array(0))),_this.setState(fm.liveswitch.LocalMediaState.Stopped),promise.resolve(result)}),(function(exception){fm.liveswitch.Log.debug(fm.liveswitch.StringExtensions.format("Local media did not stop successfully.",new Array(0))),_this.setState(fm.liveswitch.LocalMediaState.Started),promise.reject(exception)})),promise)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebRtcLocalMediaBase.fmliveswitchWebRtcLocalMediaBaseInitialize=function(){fm.liveswitch.WebRtcLocalMediaBase.__fmliveswitchWebRtcLocalMediaBaseInitialized||fm.liveswitch.WebRtcLocalMediaBase.__fmliveswitchWebRtcLocalMediaBaseInitializing||(fm.liveswitch.WebRtcLocalMediaBase.__fmliveswitchWebRtcLocalMediaBaseInitializing=!0,WebRtcLocalMediaBase.fm_liveswitch_WebRtcLocalMediaBase___defaultVideoBitsPerPixel=0,fm.liveswitch.WebRtcLocalMediaBase.fm_liveswitch_WebRtcLocalMediaBase___defaultVideoBitsPerPixel=.05,fm.liveswitch.WebRtcLocalMediaBase.__fmliveswitchWebRtcLocalMediaBaseInitialized=!0,fm.liveswitch.WebRtcLocalMediaBase.__fmliveswitchWebRtcLocalMediaBaseInitializing=!1)},WebRtcLocalMediaBase.__fmliveswitchWebRtcLocalMediaBaseInitialized=!1,WebRtcLocalMediaBase.__fmliveswitchWebRtcLocalMediaBaseInitializing=!1,WebRtcLocalMediaBase}(fm.liveswitch.WebRtcMedia);liveswitch.WebRtcLocalMediaBase=WebRtcLocalMediaBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcGetUserMediaResult=function(){},WebRtcLocalMedia=function(_super){function WebRtcLocalMedia(external,audio,video,screen){var _this=_super.call(this,external)||this;return _this._onAudioStartedValues=[],_this._onAudioStoppedValues=[],_this._onVideoStartedValues=[],_this._onVideoStoppedValues=[],_this._audioStreams=[],_this._videoStreams=[],_this._audioEncodings=[],_this._videoEncodings=[],_this._external=external,_this._audio=audio,_this._video=video,_this._screen=!fm.liveswitch.Util.isNullOrUndefined(screen)&&screen,audio||_this._audioTrack._setMediaStreamTrack(null),video||_this._videoTrack._setMediaStreamTrack(null),_this._audioTrack.addOnStarted((function(){for(var _i=0,_a=_this._onAudioStartedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._audioTrack.addOnStopped((function(){for(var _i=0,_a=_this._onAudioStoppedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._videoTrack.addOnStarted((function(){for(var _i=0,_a=_this._onVideoStartedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this._videoTrack.addOnStopped((function(){for(var _i=0,_a=_this._onVideoStoppedValues;_i<_a.length;_i++){(0,_a[_i])()}})),_this}return __extends(WebRtcLocalMedia,_super),WebRtcLocalMedia.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcLocalMedia],"+_super.prototype.getTypeString.call(this)},WebRtcLocalMedia.prototype._getExternal=function(){return this._external},WebRtcLocalMedia.getChromeExtensionId=function(){return this._chromeExtensionId},WebRtcLocalMedia.setChromeExtensionId=function(chromeExtensionId){this._chromeExtensionId=chromeExtensionId,this._chromeExtensionUrl="https://chrome.google.com/webstore/detail/"+chromeExtensionId;for(var head=document.getElementsByTagName("head")[0],linkExists=!1,i=0;i<head.childNodes.length;i++){var child=head.childNodes[i];"LINK"==child.tagName&&child.href==this._chromeExtensionUrl&&(linkExists=!0);break}if(!linkExists){var link=document.createElement("link");link.rel="chrome-webstore-item",link.href=this._chromeExtensionUrl,head.appendChild(link)}},WebRtcLocalMedia.getChromeExtensionUrl=function(){return this._chromeExtensionUrl},WebRtcLocalMedia.getChromeExtensionInstalled=function(){return this._chromeExtensionInstalled},WebRtcLocalMedia.getChromeExtensionRequiresUserGesture=function(){return this._chromeExtensionRequiresUserGesture},WebRtcLocalMedia.setChromeExtensionRequiresUserGesture=function(chromeExtensionRequiresUserGesture){this._chromeExtensionRequiresUserGesture=chromeExtensionRequiresUserGesture},WebRtcLocalMedia.getChromeExtensionRequired=function(){return!!window.navigator&&(navigator.webkitGetUserMedia&&(null!=this._chromeExtensionId||!navigator.getDisplayMedia&&!navigator.mediaDevices.getDisplayMedia))},WebRtcLocalMedia.prototype.addOnAudioStarted=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioStartedValues,value)},WebRtcLocalMedia.prototype.addOnAudioStopped=function(value){fm.liveswitch.ArrayExtensions.add(this._onAudioStoppedValues,value)},WebRtcLocalMedia.prototype.addOnVideoStarted=function(value){fm.liveswitch.ArrayExtensions.add(this._onVideoStartedValues,value)},WebRtcLocalMedia.prototype.addOnVideoStopped=function(value){fm.liveswitch.ArrayExtensions.add(this._onVideoStoppedValues,value)},WebRtcLocalMedia.prototype.removeOnAudioStarted=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioStartedValues,value)},WebRtcLocalMedia.prototype.removeOnAudioStopped=function(value){fm.liveswitch.ArrayExtensions.remove(this._onAudioStoppedValues,value)},WebRtcLocalMedia.prototype.removeOnVideoStarted=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoStartedValues,value)},WebRtcLocalMedia.prototype.removeOnVideoStopped=function(value){fm.liveswitch.ArrayExtensions.remove(this._onVideoStoppedValues,value)},WebRtcLocalMedia.prototype.getAudioSourceInputs=function(){return this.getSourceInputs("audio")},WebRtcLocalMedia.prototype.getVideoSourceInputs=function(){return this.getSourceInputs("video")},WebRtcLocalMedia.prototype.getSourceInputs=function(kind){var promise=new fm.liveswitch.Promise;if(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices)try{navigator.mediaDevices.enumerateDevices().then((function(mediaDeviceInfos){for(var inputs=[],index=-1,_i=0,mediaDeviceInfos_1=mediaDeviceInfos;_i<mediaDeviceInfos_1.length;_i++){var mediaDeviceInfo=mediaDeviceInfos_1[_i];if(mediaDeviceInfo.kind==kind||mediaDeviceInfo.kind==kind+"input"){index++;var id=mediaDeviceInfo.deviceId;id||(id="audio-"+index);var name_4=mediaDeviceInfo.label;name_4||(name_4=id),inputs.push(new fm.liveswitch.SourceInput(id,name_4))}}promise.resolve(inputs)})).catch((function(ex){promise.reject(ex)}))}catch(error){promise.reject(error)}else if(MediaStreamTrack&&MediaStreamTrack.getSources)try{MediaStreamTrack.getSources((function(sources){for(var inputs=[],index=-1,_i=0,sources_1=sources;_i<sources_1.length;_i++){var source=sources_1[_i];if(source.kind==kind||source.kind==kind+"input"){index++;var id=source.deviceId;id||(id="audio-"+index);var name_5=source.label;name_5||(name_5=id),inputs.push(new fm.liveswitch.SourceInput(id,name_5))}}promise.resolve(inputs)}))}catch(error){promise.reject(error)}else promise.reject(new fm.liveswitch.Exception("Browser does not support media device enumeration."));return promise},WebRtcLocalMedia.prototype.getAudioSourceInput=function(){return this._audioSourceInput},WebRtcLocalMedia.prototype.setAudioSourceInput=function(audioInput){if(this.getState()==fm.liveswitch.LocalMediaState.Started)throw new fm.liveswitch.Exception("Cannot set audio source input while the local media is started. Use 'changeAudioSourceInput' instead or stop the local media first.");this._audioSourceInput=audioInput},WebRtcLocalMedia.prototype.getVideoSourceInput=function(){return this._videoSourceInput},WebRtcLocalMedia.prototype.setVideoSourceInput=function(videoInput){if(this.getState()==fm.liveswitch.LocalMediaState.Started)throw new fm.liveswitch.Exception("Cannot set video source input while the local media is started. Use 'changeVideoSourceInput' instead or stop the local media first.");this._videoSourceInput=videoInput},WebRtcLocalMedia.prototype.getScreen=function(){return this._screen},WebRtcLocalMedia.prototype.setScreen=function(screen){this._screen=screen},WebRtcLocalMedia.prototype.getAudioConstraints=function(){return this._audioConstraints},WebRtcLocalMedia.prototype.getVideoConstraints=function(){return this._videoConstraints},WebRtcLocalMedia.prototype.changeAudioConstraints=function(audioConstraints){var promise=new fm.liveswitch.Promise;try{if(null==this.getAudioTrack())throw new fm.liveswitch.Exception("No audio track.");var nativeAudioTrack=this.getAudioTrack()._getMediaStreamTrack();if(null==nativeAudioTrack)throw new fm.liveswitch.Exception("No active audio track.");if(void 0===nativeAudioTrack.applyConstraints)throw new fm.liveswitch.Exception("Browser does not support changing audio constraints.");nativeAudioTrack.applyConstraints(audioConstraints).then((function(){promise.resolve(null)}),(function(ex){promise.reject(ex)}))}catch(ex){promise.reject(ex)}return promise},WebRtcLocalMedia.prototype.changeVideoConstraints=function(videoConstraints){var promise=new fm.liveswitch.Promise;try{if(null==this.getVideoTrack())throw new fm.liveswitch.Exception("No video track.");var nativeVideoTrack=this.getVideoTrack()._getMediaStreamTrack();if(null==nativeVideoTrack)throw new fm.liveswitch.Exception("No active video track.");if(void 0===nativeVideoTrack.applyConstraints)throw new fm.liveswitch.Exception("Browser does not support changing video constraints.");nativeVideoTrack.applyConstraints(videoConstraints).then((function(){promise.resolve(null)}),(function(ex){promise.reject(ex)}))}catch(ex){promise.reject(ex)}return promise},WebRtcLocalMedia.prototype.changeAudioSourceInput=function(audioSourceInput){var _this=this,promise=new fm.liveswitch.Promise;return audioSourceInput==this.getAudioSourceInput()?fm.liveswitch.ManagedThread.dispatch((function(){promise.resolve(null)})):this.getState()==fm.liveswitch.LocalMediaState.Started?(fm.liveswitch.Plugin.hasRtcRtpSender()&&RTCRtpSender.prototype.replaceTrack||fm.liveswitch.Plugin.hasRtcRtpSender())&&(this.doStopAudio(),this._audioSourceInput=audioSourceInput,this.doGetUserMedia(this.getAudio(),null).then((function(result){_this._audioConstraints=result.audioConstraints,_this._setAudioMediaStream(result.audioMediaStream),promise.resolve(null)}),(function(ex){promise.reject(ex)}))):fm.liveswitch.ManagedThread.dispatch((function(){_this.setAudioSourceInput(audioSourceInput),promise.resolve(null)})),promise},WebRtcLocalMedia.prototype.changeVideoSourceInput=function(videoSourceInput){var _this=this,promise=new fm.liveswitch.Promise;return videoSourceInput==this.getVideoSourceInput()?fm.liveswitch.ManagedThread.dispatch((function(){promise.resolve(null)})):this.getState()==fm.liveswitch.LocalMediaState.Started?(fm.liveswitch.Plugin.hasRtcRtpSender()&&RTCRtpSender.prototype.replaceTrack||fm.liveswitch.Plugin.hasRtcRtpSender())&&(this.doStopVideo(),this._videoSourceInput=videoSourceInput,this.doGetUserMedia(null,this.getVideo()).then((function(result){_this._videoConstraints=result.videoConstraints,_this._setVideoMediaStream(result.videoMediaStream),promise.resolve(null)}),(function(ex){promise.reject(ex)}))):fm.liveswitch.ManagedThread.dispatch((function(){_this.setVideoSourceInput(videoSourceInput),promise.resolve(null)})),promise},WebRtcLocalMedia.prototype.doStart=function(){var _this=this,promise=new fm.liveswitch.Promise;return fm.liveswitch.ManagedThread.dispatch((function(){if(_this._screen&&fm.liveswitch.WebRtcLocalMedia.getChromeExtensionRequired())if(fm.liveswitch.WebRtcLocalMedia.getChromeExtensionInstalled())_this._chromeScreenEventListener=function(event){if(event.origin==window.location.origin){var message=event.data;message.namespace&&"fm.liveswitch.chrome"==message.namespace&&("chooseDesktopMediaSuccess"==message.type?(_this._chromeScreenStreamId=message.streamId,_this.doStartInternal(promise)):"chooseDesktopMediaFailure"==message.type&&(_this._chromeScreenEventListener&&(window.removeEventListener("message",_this._chromeScreenEventListener),_this._chromeScreenEventListener=null),message.audioUnavailable?promise.reject(new fm.liveswitch.Exception("Chrome 50+ is required to allow audio with screen-sharing. Please update your browser and try again.")):promise.reject(new fm.liveswitch.Exception("Request for screen sharing access was denied."))))}},window.addEventListener("message",_this._chromeScreenEventListener),window.postMessage({namespace:"fm.liveswitch.chrome",type:"chooseDesktopMedia",origin:window.location.origin,audio:!!_this._audio},"*");else{var chrome=window.chrome;if(chrome&&chrome.webstore&&chrome.webstore.install)try{chrome.webstore.install(fm.liveswitch.WebRtcLocalMedia.getChromeExtensionUrl(),(function(){location.reload()}),(function(error){fm.liveswitch.WebRtcLocalMedia.setChromeExtensionRequiresUserGesture(!1),promise.reject(new fm.liveswitch.Exception("Chrome extension is not installed and inline installation failed. "+error))}))}catch(error){fm.liveswitch.WebRtcLocalMedia.setChromeExtensionRequiresUserGesture(!0),promise.reject(new fm.liveswitch.Exception("Chrome extension is not installed and inline installation could not be started. "+error))}else fm.liveswitch.WebRtcLocalMedia.setChromeExtensionRequiresUserGesture(!1),promise.reject(new fm.liveswitch.Exception("Chrome extension is not installed."))}else _this.doStartInternal(promise)})),promise},WebRtcLocalMedia.prototype.doStartInternal=function(promise){var _this=this;this.doGetUserMedia(this.getAudio(),this.getVideo()).then((function(result){_this._audioConstraints=result.audioConstraints,_this._videoConstraints=result.videoConstraints,_this._setMediaStreams(result.audioMediaStream,result.videoMediaStream),promise.resolve(_this)}),(function(ex){promise.reject(ex)}))},WebRtcLocalMedia.prototype.doGetUserMedia=function(audio,video,deprecated){var _this=this;if(2==arguments.length)try{return deprecated=!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia,this.doGetUserMedia(audio,video,deprecated)}catch(error){return this.doGetUserMedia(audio,video,!deprecated)}var promise=new fm.liveswitch.Promise;try{var result_1=new WebRtcGetUserMediaResult,audioIsMediaStream_1=audio&&void 0!==audio.getAudioTracks,videoIsMediaStream_1=video&&void 0!==video.getVideoTracks,getUserMediaSuccess_1=function(nativeMediaStream){var mediaStream;if((result_1.audioMediaStream=audioIsMediaStream_1?audio:nativeMediaStream,result_1.videoMediaStream=videoIsMediaStream_1?video:nativeMediaStream,audio)&&(mediaStream=result_1.audioMediaStream)){var audioTracks=mediaStream.getAudioTracks();if(audioTracks&&audioTracks.length>0)audioTracks[0]&&_this.lockAudioEncodings()}if(video&&(mediaStream=result_1.videoMediaStream)){var videoTracks=mediaStream.getVideoTracks();if(videoTracks&&videoTracks.length>0){var videoTrack=videoTracks[0];if(videoTrack){var sourceType=_this.getScreen()?fm.liveswitch.VideoType.Screen:fm.liveswitch.VideoType.Camera,sourceWidth=-1,sourceHeight=-1,sourceFrameRate=-1;if(videoTrack.getSettings){var videoSettings=videoTrack.getSettings();videoSettings&&(videoSettings.width&&(sourceWidth=videoSettings.width),videoSettings.height&&(sourceHeight=videoSettings.height),videoSettings.frameRate&&(sourceFrameRate=videoSettings.frameRate))}_this.lockVideoEncodings(sourceType,sourceWidth,sourceHeight,sourceFrameRate)}}}promise.resolve(result_1)},getUserMediaFailure=function(error){_this.getScreen()?"https:"==document.location.protocol?fm.liveswitch.Log.error("Local screen access denied.",error):fm.liveswitch.Log.error("Local screen access denied. (The page may need to be loaded using HTTPS.)",error):"file:"==document.location.protocol?fm.liveswitch.Log.error("Local media access denied. (The media source may be unavailable/locked or you may need to access this page through a webserver instead of the file system.)",error):fm.liveswitch.Log.error("Local media access denied. (The media source may be unavailable/locked.)",error),promise.reject(error)};if(audio&&!audioIsMediaStream_1&&(result_1.audioConstraints=this.createAudioConstraints(audio,deprecated)),video&&!videoIsMediaStream_1&&(result_1.videoConstraints=this.createVideoConstraints(video,deprecated)),result_1.audioConstraints||result_1.videoConstraints){var getUserMediaArgs={};result_1.audioConstraints&&(getUserMediaArgs.audio=result_1.audioConstraints),result_1.videoConstraints&&(getUserMediaArgs.video=result_1.videoConstraints);var getMedia=navigator.fmGetUserMedia,getDisplayMedia=!fm.liveswitch.WebRtcLocalMedia.getChromeExtensionRequired()&&(navigator.getDisplayMedia||navigator.mediaDevices.getDisplayMedia);this.getScreen()&&getDisplayMedia&&(getMedia=function(constraints,success,failure){(navigator.getDisplayMedia?navigator.getDisplayMedia(constraints):navigator.mediaDevices.getDisplayMedia?navigator.mediaDevices.getDisplayMedia(constraints):navigator.mediaDevices.getUserMedia(constraints)).then(success).catch(failure)}),getMedia(getUserMediaArgs,(function(nativeMediaStream){_this.updateAudioSourceInput(nativeMediaStream.getAudioTracks()),_this.updateVideoSourceInput(nativeMediaStream.getVideoTracks()),result_1.videoConstraints&&_this.updateFacingMode(result_1.videoConstraints),getUserMediaSuccess_1(nativeMediaStream)}),getUserMediaFailure)}else getUserMediaSuccess_1(null)}catch(ex){promise.reject(ex)}return promise},WebRtcLocalMedia.prototype.updateAudioSourceInput=function(nativeAudioTracks){if(nativeAudioTracks.length>0){var nativeAudioTrack=nativeAudioTracks[0];this._audioSourceInput;if(null==this._audioSourceInput){if(void 0!==nativeAudioTrack.getSettings){var settings=nativeAudioTrack.getSettings();null!=settings&&(this._audioSourceInput=new fm.liveswitch.SourceInput(settings.deviceId,nativeAudioTrack.label))}}else this._audioSourceInput.setName(nativeAudioTrack.label)}},WebRtcLocalMedia.prototype.updateVideoSourceInput=function(nativeVideoTracks){if(nativeVideoTracks.length>0){var nativeVideoTrack=nativeVideoTracks[0];this._videoSourceInput;if(null==this._videoSourceInput){if(void 0!==nativeVideoTrack.getSettings){var settings=nativeVideoTrack.getSettings();null!=settings&&(this._videoSourceInput=new fm.liveswitch.SourceInput(settings.deviceId,nativeVideoTrack.label))}}else this._videoSourceInput.setName(nativeVideoTrack.label)}},WebRtcLocalMedia.prototype.updateFacingMode=function(videoConstraints){if(!this.getScreen()){var videoSourceInput=this.getVideoSourceInput();if(videoConstraints.facingMode||(videoConstraints.facingMode="user"),videoConstraints.deviceId&&null!=videoSourceInput){var name_6=videoSourceInput.getName();(fm.liveswitch.StringExtensions.startsWith(name_6,"back",fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)||fm.liveswitch.StringExtensions.endsWith(name_6,"back",fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)||fm.liveswitch.StringExtensions.startsWith(name_6,"rear",fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)||fm.liveswitch.StringExtensions.endsWith(name_6,"rear",fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)||fm.liveswitch.StringExtensions.startsWith(name_6,"environment",fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)||fm.liveswitch.StringExtensions.endsWith(name_6,"environment",fm.liveswitch.StringComparison.InvariantCultureIgnoreCase))&&(videoConstraints.facingMode="environment")}}},WebRtcLocalMedia.prototype.createAudioConstraints=function(audio,deprecated){var audioSourceInput=this.getAudioSourceInput();if(deprecated){var audioConstraints_1={optional:[],mandatory:{}};if(this.getScreen()&&this._chromeScreenStreamId&&(audioConstraints_1.mandatory.chromeMediaSource="desktop",audioConstraints_1.mandatory.chromeMediaSourceId=this._chromeScreenStreamId),audioSourceInput&&audioConstraints_1.optional.push({sourceId:audioSourceInput.getId()}),fm.liveswitch.Util.isPlainObject(audio)){if(audio.mandatory)for(var key in audio.mandatory)audioConstraints_1.mandatory[key]=audio.mandatory[key];if(audio.optional)for(var _i=0,_a=audio.optional;_i<_a.length;_i++){var value=_a[_i];audioConstraints_1.optional.push(value)}}return audioConstraints_1}var audioConstraints={echoCancellation:!0};if(this.getScreen()&&this._chromeScreenStreamId&&(audioConstraints.chromeMediaSource="desktop",audioConstraints.chromeMediaSourceId=this._chromeScreenStreamId),audioSourceInput&&(audioConstraints.deviceId={exact:audioSourceInput.getId()}),fm.liveswitch.Util.isPlainObject(audio))for(var key in audio)"mandatory"!==key&&"optional"!==key&&(audioConstraints[key]=audio[key]);return audioConstraints},WebRtcLocalMedia.prototype.createVideoConstraints=function(video,deprecated){var videoSourceInput=this.getVideoSourceInput();if(deprecated){var videoConstraints_1={optional:[],mandatory:{}};if(video.getTypeString){var videoConfig=video;videoConstraints_1.mandatory.maxWidth=videoConfig.getWidth(),videoConstraints_1.mandatory.maxHeight=videoConfig.getHeight(),videoConstraints_1.mandatory.maxFrameRate=videoConfig.getFrameRate()}if(this.getScreen()?this._chromeScreenStreamId?(videoConstraints_1.mandatory.chromeMediaSource="desktop",videoConstraints_1.mandatory.chromeMediaSourceId=this._chromeScreenStreamId):videoConstraints_1.mandatory.mediaSource="screen":videoSourceInput&&videoConstraints_1.optional.push({sourceId:videoSourceInput.getId()}),fm.liveswitch.Util.isPlainObject(video)){if(video.mandatory)for(var key in video.mandatory)videoConstraints_1.mandatory[key]=video.mandatory[key];if(video.optional)for(var _i=0,_a=video.optional;_i<_a.length;_i++){var value=_a[_i];videoConstraints_1.optional.push(value)}}return videoConstraints_1}var videoConstraints={};if(video.getTypeString){videoConfig=video;videoConstraints.width=videoConfig.getWidth(),videoConstraints.height=videoConfig.getHeight(),videoConstraints.frameRate=videoConfig.getFrameRate()}if(this.getScreen()?this._chromeScreenStreamId?(videoConstraints.chromeMediaSource="desktop",videoConstraints.chromeMediaSourceId=this._chromeScreenStreamId):videoConstraints.mediaSource="screen":videoSourceInput&&(videoConstraints.deviceId={exact:videoSourceInput.getId()}),fm.liveswitch.Util.isPlainObject(video))for(var key in video)"mandatory"!==key&&"optional"!==key&&(videoConstraints[key]=video[key]);return fm.liveswitch.Util.isMobile()&&this.updateFacingMode(videoConstraints),videoConstraints},WebRtcLocalMedia.prototype.doStop=function(){var _this=this,promise=new fm.liveswitch.Promise;return fm.liveswitch.ManagedThread.dispatch((function(){try{_this._chromeScreenEventListener&&(window.removeEventListener("message",_this._chromeScreenEventListener),_this._chromeScreenEventListener=null),_this._chromeScreenStreamId&&window.postMessage({namespace:"fm.liveswitch.chrome",type:"cancelChooseDesktopMedia"},"*"),_this.doStopAudio(),_this.doStopVideo(),promise.resolve(_this)}catch(error){promise.reject(error)}})),promise},WebRtcLocalMedia.prototype.doStopAudio=function(){try{for(var _i=0,_a=this.getAudioTracks();_i<_a.length;_i++){_a[_i].stop()}}catch(error){try{var audioMediaStream=this._getAudioMediaStream();audioMediaStream&&audioMediaStream.stop()}catch(error){}}this.destroyAudioContext()},WebRtcLocalMedia.prototype.doStopVideo=function(){try{for(var _i=0,_a=this.getVideoTracks();_i<_a.length;_i++){_a[_i].stop()}}catch(error){try{var videoMediaStream=this._getVideoMediaStream();videoMediaStream&&videoMediaStream.stop()}catch(error){}}},WebRtcLocalMedia.prototype.doGetAudioEncodings=function(){return this._audioEncodings},WebRtcLocalMedia.prototype.doSetAudioEncodings=function(encodings){this._audioEncodings=encodings;for(var _i=0,_a=this._audioStreams;_i<_a.length;_i++){_a[_i].setSendEncodings(encodings)}},WebRtcLocalMedia.prototype.doGetVideoEncodings=function(){return this._videoEncodings},WebRtcLocalMedia.prototype.doSetVideoEncodings=function(encodings){this._videoEncodings=encodings;for(var _i=0,_a=this._videoStreams;_i<_a.length;_i++){_a[_i].setSendEncodings(encodings)}},WebRtcLocalMedia.prototype.addAudioStream=function(value){value&&(value.setSendEncodings(this._audioEncodings),fm.liveswitch.ArrayExtensions.add(this._audioStreams,value))},WebRtcLocalMedia.prototype.removeAudioStream=function(value){return!(!value||!fm.liveswitch.ArrayExtensions.remove(this._audioStreams,value))&&(value.setSendEncodings(null),!0)},WebRtcLocalMedia.prototype.addVideoStream=function(value){value&&(value.setSendEncodings(this._videoEncodings),fm.liveswitch.ArrayExtensions.add(this._videoStreams,value))},WebRtcLocalMedia.prototype.removeVideoStream=function(value){return!(!value||!fm.liveswitch.ArrayExtensions.remove(this._videoStreams,value))&&(value.setSendEncodings(null),!0)},WebRtcLocalMedia.webRtcLocalMediaInitialize=function(){var _this=this;this.__webRtcLocalMediaInitialized||(window.navigator&&(navigator.fmGetUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.fmGetUserMedia=function(constraints,success,failure){navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure)})),window.navigator&&navigator.webkitGetUserMedia&&(window.addEventListener("message",(function(event){if(event.origin==window.location.origin){var message=event.data;message.namespace&&"fm.liveswitch.chrome"==message.namespace&&"active"==message.type&&(_this._chromeExtensionInstalled=!0)}})),window.postMessage({namespace:"fm.liveswitch.chrome",type:"testActive"},"*"))),fm.liveswitch.WebRtcLocalMedia.__webRtcLocalMediaInitialized=!0},WebRtcLocalMedia.__webRtcLocalMediaInitialized=!1,WebRtcLocalMedia}(fm.liveswitch.WebRtcLocalMediaBase);liveswitch.WebRtcLocalMedia=WebRtcLocalMedia,fm.liveswitch.WebRtcLocalMedia.webRtcLocalMediaInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcRemoteMedia=function(_super){function WebRtcRemoteMedia(external,audio,video){var _this=_super.call(this,external)||this;return _this._external=external,_this._audio=audio,_this._video=video,_this}return __extends(WebRtcRemoteMedia,_super),WebRtcRemoteMedia.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcRemoteMedia],"+_super.prototype.getTypeString.call(this)},WebRtcRemoteMedia.prototype._getExternal=function(){return this._external},WebRtcRemoteMedia.prototype.getAudioSinkOutputs=function(){return this.getSinkOutputs("audio")},WebRtcRemoteMedia.prototype.getVideoSinkOutputs=function(){return this.getSinkOutputs("video")},WebRtcRemoteMedia.prototype.getSinkOutputs=function(kind){var promise=new fm.liveswitch.Promise;if(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices)try{navigator.mediaDevices.enumerateDevices().then((function(mediaDeviceInfos){for(var outputs=[],index=-1,_i=0,mediaDeviceInfos_2=mediaDeviceInfos;_i<mediaDeviceInfos_2.length;_i++){var mediaDeviceInfo=mediaDeviceInfos_2[_i];if(mediaDeviceInfo.kind==kind||mediaDeviceInfo.kind==kind+"output"){index++;var id=mediaDeviceInfo.deviceId;id||(id="audio-"+index);var name_7=mediaDeviceInfo.label;name_7||(name_7=id),outputs.push(new fm.liveswitch.SinkOutput(id,name_7))}}promise.resolve(outputs)})).catch((function(ex){promise.reject(ex)}))}catch(error){promise.reject(error)}else if(MediaStreamTrack&&MediaStreamTrack.getSources)try{MediaStreamTrack.getSources((function(sources){for(var outputs=[],index=-1,_i=0,sources_2=sources;_i<sources_2.length;_i++){var source=sources_2[_i];if(source.kind==kind||source.kind==kind+"output"){index++;var id=source.deviceId;id||(id="audio-"+index);var name_8=source.label;name_8||(name_8=id),outputs.push(new fm.liveswitch.SinkOutput(id,name_8))}}promise.resolve(outputs)}))}catch(error){promise.reject(error)}else promise.reject(new fm.liveswitch.Exception("Browser does not support media device enumeration."));return promise},WebRtcRemoteMedia.prototype.getAudioSinkOutput=function(){return this._audioSinkOutput},WebRtcRemoteMedia.prototype.setAudioSinkOutput=function(audioSinkOutput){this._audioSinkOutput!=audioSinkOutput&&(this._audioSink.getTrack()?this.attachAudioSinkOutput(audioSinkOutput,this._audioSink.getAudio()):this._videoSink.getTrack()&&this.attachAudioSinkOutput(audioSinkOutput,this._videoSink.getVideo()),this._audioSinkOutput=audioSinkOutput)},WebRtcRemoteMedia.prototype.attachAudioSinkOutput=function(audioSinkOutput,element){if(void 0===element.setSinkId)throw new fm.liveswitch.Exception("Browser does not support changing audio sink output.");element.setSinkId(audioSinkOutput.getId())},WebRtcRemoteMedia.prototype.getVideoSinkOutput=function(){return this._videoSinkOutput},WebRtcRemoteMedia.prototype.setVideoSinkOutput=function(videoSinkOutput){this._videoSinkOutput!=videoSinkOutput&&(this._videoSinkOutput=videoSinkOutput)},WebRtcRemoteMedia.prototype.changeAudioSinkOutput=function(audioInput){var _this=this,promise=new fm.liveswitch.Promise;return audioInput==this.getAudioSinkOutput()?fm.liveswitch.ManagedThread.dispatch((function(){promise.resolve(null)})):fm.liveswitch.ManagedThread.dispatch((function(){try{_this.setAudioSinkOutput(audioInput),promise.resolve(null)}catch(ex){promise.reject(ex)}})),promise},WebRtcRemoteMedia.prototype.changeVideoSinkOutput=function(videoInput){var _this=this,promise=new fm.liveswitch.Promise;return videoInput==this.getVideoSinkOutput()?fm.liveswitch.ManagedThread.dispatch((function(){promise.resolve(null)})):fm.liveswitch.ManagedThread.dispatch((function(){try{_this.setVideoSinkOutput(videoInput),promise.resolve(null)}catch(ex){promise.reject(ex)}})),promise},WebRtcRemoteMedia}(fm.liveswitch.WebRtcMedia);liveswitch.WebRtcRemoteMedia=WebRtcRemoteMedia}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcVideoStream=function(_super){function WebRtcVideoStream(external,localTrack,remoteTrack){var _this=_super.call(this,external,localTrack,remoteTrack,fm.liveswitch.StreamType.Video)||this;return _this._external=external,_this}return __extends(WebRtcVideoStream,_super),WebRtcVideoStream.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcVideoStream],"+_super.prototype.getTypeString.call(this)},WebRtcVideoStream.prototype._getExternal=function(){return this._external},WebRtcVideoStream.prototype.getVp8Disabled=function(){return this.getCodecDisabled(fm.liveswitch.VideoFormat.getVp8Name())},WebRtcVideoStream.prototype.getVp9Disabled=function(){return this.getCodecDisabled(fm.liveswitch.VideoFormat.getVp9Name())},WebRtcVideoStream.prototype.getH264Disabled=function(){return this.getCodecDisabled(fm.liveswitch.VideoFormat.getH264Name())},WebRtcVideoStream.prototype.getH265Disabled=function(){return this.getCodecDisabled(fm.liveswitch.VideoFormat.getH265Name())},WebRtcVideoStream.prototype.setVp8Disabled=function(value){return this.setCodecDisabled(fm.liveswitch.VideoFormat.getVp8Name(),value)},WebRtcVideoStream.prototype.setVp9Disabled=function(value){return this.setCodecDisabled(fm.liveswitch.VideoFormat.getVp9Name(),value)},WebRtcVideoStream.prototype.setH264Disabled=function(value){return this.setCodecDisabled(fm.liveswitch.VideoFormat.getH264Name(),value)},WebRtcVideoStream.prototype.setH265Disabled=function(value){return this.setCodecDisabled(fm.liveswitch.VideoFormat.getH265Name(),value)},WebRtcVideoStream.prototype.addOnDiscardKeyFrameRequest=function(value){},WebRtcVideoStream.prototype.removeOnDiscardKeyFrameRequest=function(value){},WebRtcVideoStream.prototype.raiseKeyFrameRequest=function(synchronizationSources){},WebRtcVideoStream}(fm.liveswitch.WebRtcMediaStream);liveswitch.WebRtcVideoStream=WebRtcVideoStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebRtcVideoTrack=function(_super){function WebRtcVideoTrack(external,media){var _this=_super.call(this,external,media)||this;return _this._external=external,_this}return __extends(WebRtcVideoTrack,_super),WebRtcVideoTrack.prototype.getTypeString=function(){return"[fm.liveswitch.WebRtcVideoTrack],"+_super.prototype.getTypeString.call(this)},WebRtcVideoTrack.prototype._getExternal=function(){return this._external},WebRtcVideoTrack.prototype.setConfig=function(config){var nativeMediaStreamTrack=this._getMediaStreamTrack();if(nativeMediaStreamTrack.applyConstraints){var constraints={};config.getWidth()>0&&(constraints.width=config.getWidth()),config.getHeight()>0&&(constraints.height=config.getHeight()),config.getFrameRate()>0&&(constraints.frameRate=config.getFrameRate()),nativeMediaStreamTrack.applyConstraints(constraints)}},WebRtcVideoTrack.prototype.isLocal=function(){return fm.liveswitch.Util.isObjectType(this.getMedia(),"[fm.liveswitch.WebRtcLocalMedia]")},WebRtcVideoTrack.prototype.changeSinkOutput=function(sinkOutput){if(this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call VideoTrack.changeSinkOutput on a local track.")),promise}return this.getMedia().changeVideoSinkOutput(sinkOutput)},WebRtcVideoTrack.prototype.getSinkOutput=function(){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.getSinkOutput on a local track.");return this.getMedia().getVideoSinkOutput()},WebRtcVideoTrack.prototype.getSinkOutputs=function(){if(this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call VideoTrack.getSinkOutputs on a local track.")),promise}return this.getMedia().getVideoSinkOutputs()},WebRtcVideoTrack.prototype.setSinkOutput=function(value){if(this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.setSinkOutput on a local track.");this.getMedia().setVideoSinkOutput(value)},WebRtcVideoTrack.prototype.changeSourceInput=function(sourceInput){if(!this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call VideoTrack.changeSourceInput on a remote track.")),promise}return this.getMedia().changeVideoSourceInput(sourceInput)},WebRtcVideoTrack.prototype.getSourceInput=function(){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.getSourceInput on a remote track.");return this.getMedia().getVideoSourceInput()},WebRtcVideoTrack.prototype.getSourceInputs=function(){if(!this.isLocal()){var promise=new fm.liveswitch.Promise;return promise.reject(new fm.liveswitch.Exception("Cannot call VideoTrack.getSourceInputs on a remote track.")),promise}return this.getMedia().getVideoSourceInputs()},WebRtcVideoTrack.prototype.setSourceInput=function(value){if(!this.isLocal())throw new fm.liveswitch.Exception("Cannot call VideoTrack.setSourceInput on a remote track.");this.getMedia().setVideoSourceInput(value)},WebRtcVideoTrack.prototype.addOnSize=function(value){this.getMedia().addOnVideoSize(value)},WebRtcVideoTrack.prototype.getSize=function(){return this.getMedia().getVideoSize()},WebRtcVideoTrack.prototype.grabFrame=function(){return this.getMedia().grabVideoFrame()},WebRtcVideoTrack.prototype.removeOnSize=function(value){this.getMedia().removeOnVideoSize(value)},WebRtcVideoTrack}(fm.liveswitch.WebRtcMediaTrack);liveswitch.WebRtcVideoTrack=WebRtcVideoTrack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CryptoLibrary){CryptoLibrary[CryptoLibrary.Default=1]="Default"}(liveswitch.CryptoLibrary||(liveswitch.CryptoLibrary={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(AddressType){AddressType[AddressType.IPv4=1]="IPv4",AddressType[AddressType.IPv6=2]="IPv6",AddressType[AddressType.Unknown=3]="Unknown"}(liveswitch.AddressType||(liveswitch.AddressType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(JsonCheckerMode){JsonCheckerMode[JsonCheckerMode.Array=1]="Array",JsonCheckerMode[JsonCheckerMode.Done=2]="Done",JsonCheckerMode[JsonCheckerMode.Key=3]="Key",JsonCheckerMode[JsonCheckerMode.Object=4]="Object",JsonCheckerMode[JsonCheckerMode.String=5]="String"}(liveswitch.JsonCheckerMode||(liveswitch.JsonCheckerMode={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(OperatingSystem){OperatingSystem[OperatingSystem.Unknown=1]="Unknown",OperatingSystem[OperatingSystem.Windows=2]="Windows",OperatingSystem[OperatingSystem.Android=3]="Android",OperatingSystem[OperatingSystem.MacOS=4]="MacOS",OperatingSystem[OperatingSystem.IOS=5]="IOS",OperatingSystem[OperatingSystem.Linux=6]="Linux",OperatingSystem[OperatingSystem.TvOS=7]="TvOS",OperatingSystem[OperatingSystem.WatchOS=8]="WatchOS"}(liveswitch.OperatingSystem||(liveswitch.OperatingSystem={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(Architecture){Architecture[Architecture.Unknown=1]="Unknown",Architecture[Architecture.X86=2]="X86",Architecture[Architecture.X64=3]="X64",Architecture[Architecture.Armv7=4]="Armv7",Architecture[Architecture.Armv8=5]="Armv8",Architecture[Architecture.Arm64=6]="Arm64",Architecture[Architecture.Mips=7]="Mips",Architecture[Architecture.Mips64=8]="Mips64"}(liveswitch.Architecture||(liveswitch.Architecture={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(ProtocolType){ProtocolType[ProtocolType.Udp=1]="Udp",ProtocolType[ProtocolType.Tcp=2]="Tcp",ProtocolType[ProtocolType.Tls=3]="Tls",ProtocolType[ProtocolType.Unknown=4]="Unknown"}(liveswitch.ProtocolType||(liveswitch.ProtocolType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(SourceLanguage){SourceLanguage[SourceLanguage.CSharp=1]="CSharp",SourceLanguage[SourceLanguage.Java=2]="Java",SourceLanguage[SourceLanguage.ObjectiveC=3]="ObjectiveC",SourceLanguage[SourceLanguage.TypeScript=4]="TypeScript"}(liveswitch.SourceLanguage||(liveswitch.SourceLanguage={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(StringType){StringType[StringType.None=1]="None",StringType[StringType.Single=2]="Single",StringType[StringType.Double=3]="Double"}(liveswitch.StringType||(liveswitch.StringType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CompareResult){CompareResult[CompareResult.Equal=1]="Equal",CompareResult[CompareResult.Negative=2]="Negative",CompareResult[CompareResult.Positive=3]="Positive"}(liveswitch.CompareResult||(liveswitch.CompareResult={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(HashType){HashType[HashType.Md5=1]="Md5",HashType[HashType.Sha1=2]="Sha1",HashType[HashType.Sha256=3]="Sha256"}(liveswitch.HashType||(liveswitch.HashType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(MacType){MacType[MacType.HmacMd5=1]="HmacMd5",MacType[MacType.HmacSha1=2]="HmacSha1",MacType[MacType.HmacSha256=3]="HmacSha256"}(liveswitch.MacType||(liveswitch.MacType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(ErrorCode){ErrorCode[ErrorCode.SocketSendError=1e5]="SocketSendError",ErrorCode[ErrorCode.SocketReceiveError=100001]="SocketReceiveError",ErrorCode[ErrorCode.SocketClosed=100002]="SocketClosed",ErrorCode[ErrorCode.SocketSendBufferFull=100003]="SocketSendBufferFull",ErrorCode[ErrorCode.IPProtocolMismatch=100004]="IPProtocolMismatch",ErrorCode[ErrorCode.PacketTooLarge=100005]="PacketTooLarge",ErrorCode[ErrorCode.NetworkUnreachable=100006]="NetworkUnreachable",ErrorCode[ErrorCode.StunTryAlternate=114e3]="StunTryAlternate",ErrorCode[ErrorCode.StunBadRequest=114001]="StunBadRequest",ErrorCode[ErrorCode.StunUnauthorized=114002]="StunUnauthorized",ErrorCode[ErrorCode.StunTurnForbidden=114003]="StunTurnForbidden",ErrorCode[ErrorCode.StunTurnMobilityForbidden=114004]="StunTurnMobilityForbidden",ErrorCode[ErrorCode.StunUnknownAttribute=114005]="StunUnknownAttribute",ErrorCode[ErrorCode.StunStaleCredentials=114006]="StunStaleCredentials",ErrorCode[ErrorCode.StunIntegrityCheckFailure=114007]="StunIntegrityCheckFailure",ErrorCode[ErrorCode.StunMissingUsername=114008]="StunMissingUsername",ErrorCode[ErrorCode.StunTurnAllocationMismatch=114009]="StunTurnAllocationMismatch",ErrorCode[ErrorCode.StunStaleNonce=114010]="StunStaleNonce",ErrorCode[ErrorCode.StunAddressFamilyNotSupported=114011]="StunAddressFamilyNotSupported",ErrorCode[ErrorCode.StunTurnWrongCredentials=114012]="StunTurnWrongCredentials",ErrorCode[ErrorCode.StunTurnUnsupportedTransportProtocol=114013]="StunTurnUnsupportedTransportProtocol",ErrorCode[ErrorCode.StunTurnPeerAddressFamilyMismatch=114014]="StunTurnPeerAddressFamilyMismatch",ErrorCode[ErrorCode.StunTurnConnectionAlreadyExists=114015]="StunTurnConnectionAlreadyExists",ErrorCode[ErrorCode.StunTurnConnectionTimeoutOrFailure=114016]="StunTurnConnectionTimeoutOrFailure",ErrorCode[ErrorCode.StunTurnAllocationQuotaReached=114017]="StunTurnAllocationQuotaReached",ErrorCode[ErrorCode.StunIceRoleConflict=114018]="StunIceRoleConflict",ErrorCode[ErrorCode.StunServerError=114019]="StunServerError",ErrorCode[ErrorCode.StunTurnInsufficientCapacity=114020]="StunTurnInsufficientCapacity",ErrorCode[ErrorCode.StunInvalidResponseType=114021]="StunInvalidResponseType",ErrorCode[ErrorCode.StunInvalidErrorCode=114022]="StunInvalidErrorCode",ErrorCode[ErrorCode.StunInvalidTransactionId=114023]="StunInvalidTransactionId",ErrorCode[ErrorCode.StunUnknownStunErrorCode=114024]="StunUnknownStunErrorCode",ErrorCode[ErrorCode.StunInvalidMessageIntegrity=114025]="StunInvalidMessageIntegrity",ErrorCode[ErrorCode.SocketIPError=115001]="SocketIPError",ErrorCode[ErrorCode.IceLocalRelayedDatagramCandidateError=101e3]="IceLocalRelayedDatagramCandidateError",ErrorCode[ErrorCode.IceLocalServerReflexiveCandidateError=101001]="IceLocalServerReflexiveCandidateError",ErrorCode[ErrorCode.SocketManagerInvalidState=101002]="SocketManagerInvalidState",ErrorCode[ErrorCode.IceStartError=102e3]="IceStartError",ErrorCode[ErrorCode.IceUnsuitableSocketAssignment=102001]="IceUnsuitableSocketAssignment",ErrorCode[ErrorCode.IceAllPortsInUse=102002]="IceAllPortsInUse",ErrorCode[ErrorCode.IceLocalAddressUnavailable=102003]="IceLocalAddressUnavailable",ErrorCode[ErrorCode.IceGenericGathererError=102004]="IceGenericGathererError",ErrorCode[ErrorCode.IceRefreshTimeout=103e3]="IceRefreshTimeout",ErrorCode[ErrorCode.IceRefreshError=103001]="IceRefreshError",ErrorCode[ErrorCode.IceCreatePermissionTimeout=104e3]="IceCreatePermissionTimeout",ErrorCode[ErrorCode.IceCreatePermissionError=104001]="IceCreatePermissionError",ErrorCode[ErrorCode.IceConnectivityCheckFailed=104002]="IceConnectivityCheckFailed",ErrorCode[ErrorCode.IceSendError=105e3]="IceSendError",ErrorCode[ErrorCode.IcePeerReflexiveError=105001]="IcePeerReflexiveError",ErrorCode[ErrorCode.IncompatibleIceSetup=105002]="IncompatibleIceSetup",ErrorCode[ErrorCode.DtlsInternalError=106e3]="DtlsInternalError",ErrorCode[ErrorCode.DtlsKeyExchangeFailed=106001]="DtlsKeyExchangeFailed",ErrorCode[ErrorCode.DtlsNotReady=106002]="DtlsNotReady",ErrorCode[ErrorCode.SctpNoPayloadData=107e3]="SctpNoPayloadData",ErrorCode[ErrorCode.SctpUnsupportedStream=107001]="SctpUnsupportedStream",ErrorCode[ErrorCode.SctpInvalidState=107002]="SctpInvalidState",ErrorCode[ErrorCode.SctpInternalError=107003]="SctpInternalError",ErrorCode[ErrorCode.MediaTransportFailed=108e3]="MediaTransportFailed",ErrorCode[ErrorCode.ReliableDataChannelOpenError=109e3]="ReliableDataChannelOpenError",ErrorCode[ErrorCode.ReliableDataChannelSendError=109001]="ReliableDataChannelSendError",ErrorCode[ErrorCode.ConnectionInvalidArchitecture=11e4]="ConnectionInvalidArchitecture",ErrorCode[ErrorCode.ConnectionInternalError=110001]="ConnectionInternalError",ErrorCode[ErrorCode.ConnectionTransportStartError=110002]="ConnectionTransportStartError",ErrorCode[ErrorCode.ConnectionTransportClosed=110003]="ConnectionTransportClosed",ErrorCode[ErrorCode.ConnectionDeadStream=110004]="ConnectionDeadStream",ErrorCode[ErrorCode.ConnectionNotEstablished=110005]="ConnectionNotEstablished",ErrorCode[ErrorCode.ConnectionRemoteFailure=110006]="ConnectionRemoteFailure",ErrorCode[ErrorCode.ConnectionSimulcastNotSupported=110007]="ConnectionSimulcastNotSupported",ErrorCode[ErrorCode.StreamDisabled=111e3]="StreamDisabled",ErrorCode[ErrorCode.StreamEncryptionMismatch=111001]="StreamEncryptionMismatch",ErrorCode[ErrorCode.StreamDirectionMismatch=111002]="StreamDirectionMismatch",ErrorCode[ErrorCode.DataStreamDirectionCannotBeChanged=111003]="DataStreamDirectionCannotBeChanged",ErrorCode[ErrorCode.InvalidStreamDirectionChange=111004]="InvalidStreamDirectionChange",ErrorCode[ErrorCode.LocalDescriptionError=112e3]="LocalDescriptionError",ErrorCode[ErrorCode.RemoteDescriptionError=112001]="RemoteDescriptionError",ErrorCode[ErrorCode.IceLocalRelayedStreamCandidateError=113e3]="IceLocalRelayedStreamCandidateError",ErrorCode[ErrorCode.IceInvalidServerAssignmentError=113001]="IceInvalidServerAssignmentError"}(liveswitch.ErrorCode||(liveswitch.ErrorCode={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(HttpMethod){HttpMethod[HttpMethod.Get=1]="Get",HttpMethod[HttpMethod.Head=2]="Head",HttpMethod[HttpMethod.Post=3]="Post",HttpMethod[HttpMethod.Put=4]="Put",HttpMethod[HttpMethod.Patch=5]="Patch",HttpMethod[HttpMethod.Delete=6]="Delete"}(liveswitch.HttpMethod||(liveswitch.HttpMethod={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(LogLevel){LogLevel[LogLevel.Verbose=1]="Verbose",LogLevel[LogLevel.Debug=2]="Debug",LogLevel[LogLevel.Info=3]="Info",LogLevel[LogLevel.Warn=4]="Warn",LogLevel[LogLevel.Error=5]="Error",LogLevel[LogLevel.Fatal=6]="Fatal",LogLevel[LogLevel.None=7]="None"}(liveswitch.LogLevel||(liveswitch.LogLevel={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(FutureState){FutureState[FutureState.Pending=1]="Pending",FutureState[FutureState.Resolved=2]="Resolved",FutureState[FutureState.Rejected=3]="Rejected"}(liveswitch.FutureState||(liveswitch.FutureState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(WebSocketStatusCode){WebSocketStatusCode[WebSocketStatusCode.Normal=1e3]="Normal",WebSocketStatusCode[WebSocketStatusCode.GoingAway=1001]="GoingAway",WebSocketStatusCode[WebSocketStatusCode.ProtocolError=1002]="ProtocolError",WebSocketStatusCode[WebSocketStatusCode.InvalidType=1003]="InvalidType",WebSocketStatusCode[WebSocketStatusCode.NoStatus=1005]="NoStatus",WebSocketStatusCode[WebSocketStatusCode.Abnormal=1006]="Abnormal",WebSocketStatusCode[WebSocketStatusCode.InvalidData=1007]="InvalidData",WebSocketStatusCode[WebSocketStatusCode.PolicyViolation=1008]="PolicyViolation",WebSocketStatusCode[WebSocketStatusCode.MessageTooLarge=1009]="MessageTooLarge",WebSocketStatusCode[WebSocketStatusCode.UnsupportedExtension=1010]="UnsupportedExtension",WebSocketStatusCode[WebSocketStatusCode.UnexpectedCondition=1011]="UnexpectedCondition",WebSocketStatusCode[WebSocketStatusCode.SecureHandshakeFailure=1015]="SecureHandshakeFailure"}(liveswitch.WebSocketStatusCode||(liveswitch.WebSocketStatusCode={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CandidatePairState){CandidatePairState[CandidatePairState.New=1]="New",CandidatePairState[CandidatePairState.Waiting=2]="Waiting",CandidatePairState[CandidatePairState.InProgress=3]="InProgress",CandidatePairState[CandidatePairState.Succeeded=4]="Succeeded",CandidatePairState[CandidatePairState.Failed=5]="Failed",CandidatePairState[CandidatePairState.Closed=6]="Closed",CandidatePairState[CandidatePairState.ConnectivityLost=7]="ConnectivityLost"}(liveswitch.CandidatePairState||(liveswitch.CandidatePairState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CandidateType){CandidateType[CandidateType.Host=1]="Host",CandidateType[CandidateType.ServerReflexive=2]="ServerReflexive",CandidateType[CandidateType.Relayed=3]="Relayed",CandidateType[CandidateType.PeerReflexive=4]="PeerReflexive",CandidateType[CandidateType.Unknown=5]="Unknown"}(liveswitch.CandidateType||(liveswitch.CandidateType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CodecType){CodecType[CodecType.Encode=1]="Encode",CodecType[CodecType.Decode=2]="Decode"}(liveswitch.CodecType||(liveswitch.CodecType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(ConnectionState){ConnectionState[ConnectionState.New=1]="New",ConnectionState[ConnectionState.Initializing=2]="Initializing",ConnectionState[ConnectionState.Connecting=3]="Connecting",ConnectionState[ConnectionState.Connected=4]="Connected",ConnectionState[ConnectionState.Failing=5]="Failing",ConnectionState[ConnectionState.Failed=6]="Failed",ConnectionState[ConnectionState.Closing=7]="Closing",ConnectionState[ConnectionState.Closed=8]="Closed"}(liveswitch.ConnectionState||(liveswitch.ConnectionState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(DataChannelState){DataChannelState[DataChannelState.New=1]="New",DataChannelState[DataChannelState.Connecting=2]="Connecting",DataChannelState[DataChannelState.Connected=3]="Connected",DataChannelState[DataChannelState.Closing=4]="Closing",DataChannelState[DataChannelState.Closed=5]="Closed",DataChannelState[DataChannelState.Failed=6]="Failed"}(liveswitch.DataChannelState||(liveswitch.DataChannelState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(EncryptionMode){EncryptionMode[EncryptionMode.Null=1]="Null",EncryptionMode[EncryptionMode.Aes128Strong=2]="Aes128Strong",EncryptionMode[EncryptionMode.Aes128Weak=3]="Aes128Weak",EncryptionMode[EncryptionMode.NullStrong=4]="NullStrong",EncryptionMode[EncryptionMode.NullWeak=5]="NullWeak"}(liveswitch.EncryptionMode||(liveswitch.EncryptionMode={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(LayoutScale){LayoutScale[LayoutScale.Contain=1]="Contain",LayoutScale[LayoutScale.Cover=2]="Cover",LayoutScale[LayoutScale.Stretch=3]="Stretch"}(liveswitch.LayoutScale||(liveswitch.LayoutScale={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(AttributeCategory){AttributeCategory[AttributeCategory.Normal=1]="Normal",AttributeCategory[AttributeCategory.Caution=2]="Caution",AttributeCategory[AttributeCategory.Identical=3]="Identical",AttributeCategory[AttributeCategory.Sum=4]="Sum",AttributeCategory[AttributeCategory.Transport=5]="Transport",AttributeCategory[AttributeCategory.Inherit=6]="Inherit",AttributeCategory[AttributeCategory.IdenticalPerPT=7]="IdenticalPerPT",AttributeCategory[AttributeCategory.Special=8]="Special"}(sdp.AttributeCategory||(sdp.AttributeCategory={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(AttributeType){AttributeType[AttributeType.UnknownAttribute=999666]="UnknownAttribute",AttributeType[AttributeType.DirectionAttribute=1]="DirectionAttribute",AttributeType[AttributeType.CategoryAttribute=2]="CategoryAttribute",AttributeType[AttributeType.CharacterSetAttribute=3]="CharacterSetAttribute",AttributeType[AttributeType.ConferenceTypeAttribute=4]="ConferenceTypeAttribute",AttributeType[AttributeType.CryptoAttribute=5]="CryptoAttribute",AttributeType[AttributeType.FormatParametersAttribute=6]="FormatParametersAttribute",AttributeType[AttributeType.FrameRateAttribute=7]="FrameRateAttribute",AttributeType[AttributeType.KeywordsAttribute=8]="KeywordsAttribute",AttributeType[AttributeType.LanguageAttribute=9]="LanguageAttribute",AttributeType[AttributeType.MaxPacketTimeAttribute=10]="MaxPacketTimeAttribute",AttributeType[AttributeType.OrientationAttribute=11]="OrientationAttribute",AttributeType[AttributeType.PacketTimeAttribute=12]="PacketTimeAttribute",AttributeType[AttributeType.QualityAttribute=13]="QualityAttribute",AttributeType[AttributeType.SdpLanguageAttribute=14]="SdpLanguageAttribute",AttributeType[AttributeType.SetupAttribute=15]="SetupAttribute",AttributeType[AttributeType.ToolAttribute=16]="ToolAttribute",AttributeType[AttributeType.MediaStreamIdSemanticAttribute=17]="MediaStreamIdSemanticAttribute",AttributeType[AttributeType.MediaStreamIdAttribute=18]="MediaStreamIdAttribute",AttributeType[AttributeType.BundleOnlyAttribute=40]="BundleOnlyAttribute",AttributeType[AttributeType.IceCandidateAttribute=19]="IceCandidateAttribute",AttributeType[AttributeType.IceFingerprintAttribute=20]="IceFingerprintAttribute",AttributeType[AttributeType.IceLiteAttribute=21]="IceLiteAttribute",AttributeType[AttributeType.IceMismatchAttribute=22]="IceMismatchAttribute",AttributeType[AttributeType.IceOptionsAttribute=23]="IceOptionsAttribute",AttributeType[AttributeType.IcePasswordAttribute=24]="IcePasswordAttribute",AttributeType[AttributeType.IceUfragAttribute=25]="IceUfragAttribute",AttributeType[AttributeType.IceRemoteCandidatesAttribute=26]="IceRemoteCandidatesAttribute",AttributeType[AttributeType.RtpMapAttribute=27]="RtpMapAttribute",AttributeType[AttributeType.RtpSsrcAttribute=28]="RtpSsrcAttribute",AttributeType[AttributeType.RtpExtMapAttribute=29]="RtpExtMapAttribute",AttributeType[AttributeType.RtcpAttribute=30]="RtcpAttribute",AttributeType[AttributeType.RtcpFeedbackAttribute=31]="RtcpFeedbackAttribute",AttributeType[AttributeType.RtcpMuxAttribute=32]="RtcpMuxAttribute",AttributeType[AttributeType.SctpPortAttribute=33]="SctpPortAttribute",AttributeType[AttributeType.SctpMapAttribute=34]="SctpMapAttribute",AttributeType[AttributeType.SctpMaxMessageSizeAttribute=35]="SctpMaxMessageSizeAttribute",AttributeType[AttributeType.GroupAttribute=36]="GroupAttribute",AttributeType[AttributeType.RtpRidAttribute=37]="RtpRidAttribute",AttributeType[AttributeType.SimulcastAttribute=38]="SimulcastAttribute",AttributeType[AttributeType.RtpSsrcGroupAttribute=39]="RtpSsrcGroupAttribute",AttributeType[AttributeType.MutedAttribute=41]="MutedAttribute"}(sdp.AttributeType||(sdp.AttributeType={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(GroupSemanticsType){GroupSemanticsType[GroupSemanticsType.LipSynchronization=1]="LipSynchronization",GroupSemanticsType[GroupSemanticsType.FlowIdentification=2]="FlowIdentification",GroupSemanticsType[GroupSemanticsType.Bundling=3]="Bundling",GroupSemanticsType[GroupSemanticsType.Unknown=4]="Unknown"}(sdp.GroupSemanticsType||(sdp.GroupSemanticsType={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){!function(OptionTagType){OptionTagType[OptionTagType.Unknown=1]="Unknown",OptionTagType[OptionTagType.Trickle=2]="Trickle"}(ice.OptionTagType||(ice.OptionTagType={}))}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(MediaStreamIdSemanticToken){MediaStreamIdSemanticToken[MediaStreamIdSemanticToken.Wms=1]="Wms"}(sdp.MediaStreamIdSemanticToken||(sdp.MediaStreamIdSemanticToken={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(SessionDescriptionType){SessionDescriptionType[SessionDescriptionType.Offer=1]="Offer",SessionDescriptionType[SessionDescriptionType.Answer=2]="Answer"}(liveswitch.SessionDescriptionType||(liveswitch.SessionDescriptionType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(StreamDirection){StreamDirection[StreamDirection.SendReceive=1]="SendReceive",StreamDirection[StreamDirection.SendOnly=2]="SendOnly",StreamDirection[StreamDirection.ReceiveOnly=3]="ReceiveOnly",StreamDirection[StreamDirection.Inactive=4]="Inactive",StreamDirection[StreamDirection.Unset=5]="Unset"}(liveswitch.StreamDirection||(liveswitch.StreamDirection={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(StreamState){StreamState[StreamState.New=1]="New",StreamState[StreamState.Initializing=2]="Initializing",StreamState[StreamState.Connecting=3]="Connecting",StreamState[StreamState.Connected=4]="Connected",StreamState[StreamState.Failing=5]="Failing",StreamState[StreamState.Failed=6]="Failed",StreamState[StreamState.Closing=7]="Closing",StreamState[StreamState.Closed=8]="Closed"}(liveswitch.StreamState||(liveswitch.StreamState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(StreamType){StreamType[StreamType.Audio=1]="Audio",StreamType[StreamType.Video=2]="Video",StreamType[StreamType.Application=3]="Application",StreamType[StreamType.Message=4]="Message",StreamType[StreamType.Text=5]="Text"}(liveswitch.StreamType||(liveswitch.StreamType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CcmTmmbnPolicy){CcmTmmbnPolicy[CcmTmmbnPolicy.Disabled=1]="Disabled",CcmTmmbnPolicy[CcmTmmbnPolicy.Negotiated=2]="Negotiated"}(liveswitch.CcmTmmbnPolicy||(liveswitch.CcmTmmbnPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CcmTmmbrPolicy){CcmTmmbrPolicy[CcmTmmbrPolicy.Disabled=1]="Disabled",CcmTmmbrPolicy[CcmTmmbrPolicy.Negotiated=2]="Negotiated"}(liveswitch.CcmTmmbrPolicy||(liveswitch.CcmTmmbrPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(VideoType){VideoType[VideoType.Unknown=1]="Unknown",VideoType[VideoType.Camera=2]="Camera",VideoType[VideoType.Screen=3]="Screen"}(liveswitch.VideoType||(liveswitch.VideoType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(VideoDegradationPreference){VideoDegradationPreference[VideoDegradationPreference.Automatic=1]="Automatic",VideoDegradationPreference[VideoDegradationPreference.Balanced=2]="Balanced",VideoDegradationPreference[VideoDegradationPreference.FrameRate=3]="FrameRate",VideoDegradationPreference[VideoDegradationPreference.Resolution=4]="Resolution"}(liveswitch.VideoDegradationPreference||(liveswitch.VideoDegradationPreference={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CcmLrrPolicy){CcmLrrPolicy[CcmLrrPolicy.Disabled=1]="Disabled",CcmLrrPolicy[CcmLrrPolicy.Negotiated=2]="Negotiated"}(liveswitch.CcmLrrPolicy||(liveswitch.CcmLrrPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(CcmFirPolicy){CcmFirPolicy[CcmFirPolicy.Disabled=1]="Disabled",CcmFirPolicy[CcmFirPolicy.Negotiated=2]="Negotiated"}(liveswitch.CcmFirPolicy||(liveswitch.CcmFirPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(NackPliPolicy){NackPliPolicy[NackPliPolicy.Disabled=1]="Disabled",NackPliPolicy[NackPliPolicy.Negotiated=2]="Negotiated"}(liveswitch.NackPliPolicy||(liveswitch.NackPliPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(SimulcastMode){SimulcastMode[SimulcastMode.Disabled=1]="Disabled",SimulcastMode[SimulcastMode.RtpStreamId=3]="RtpStreamId"}(liveswitch.SimulcastMode||(liveswitch.SimulcastMode={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(BundlePolicy){BundlePolicy[BundlePolicy.Balanced=1]="Balanced",BundlePolicy[BundlePolicy.MaxCompatibility=2]="MaxCompatibility",BundlePolicy[BundlePolicy.MaxBundle=3]="MaxBundle",BundlePolicy[BundlePolicy.Disabled=4]="Disabled"}(liveswitch.BundlePolicy||(liveswitch.BundlePolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(EncryptionPolicy){EncryptionPolicy[EncryptionPolicy.Required=1]="Required",EncryptionPolicy[EncryptionPolicy.Negotiated=2]="Negotiated",EncryptionPolicy[EncryptionPolicy.Disabled=3]="Disabled"}(liveswitch.EncryptionPolicy||(liveswitch.EncryptionPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(IceConnectionState){IceConnectionState[IceConnectionState.New=1]="New",IceConnectionState[IceConnectionState.Checking=2]="Checking",IceConnectionState[IceConnectionState.Connected=3]="Connected",IceConnectionState[IceConnectionState.Completed=4]="Completed",IceConnectionState[IceConnectionState.Failed=5]="Failed",IceConnectionState[IceConnectionState.Disconnected=6]="Disconnected",IceConnectionState[IceConnectionState.Closed=7]="Closed"}(liveswitch.IceConnectionState||(liveswitch.IceConnectionState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(IceGatheringState){IceGatheringState[IceGatheringState.New=1]="New",IceGatheringState[IceGatheringState.Gathering=2]="Gathering",IceGatheringState[IceGatheringState.Complete=3]="Complete",IceGatheringState[IceGatheringState.Closing=4]="Closing",IceGatheringState[IceGatheringState.Closed=5]="Closed",IceGatheringState[IceGatheringState.Failed=6]="Failed"}(liveswitch.IceGatheringState||(liveswitch.IceGatheringState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(IceGatherPolicy){IceGatherPolicy[IceGatherPolicy.All=1]="All",IceGatherPolicy[IceGatherPolicy.NoHost=2]="NoHost",IceGatherPolicy[IceGatherPolicy.Relay=3]="Relay"}(liveswitch.IceGatherPolicy||(liveswitch.IceGatherPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(LayoutAlignment){LayoutAlignment[LayoutAlignment.TopLeft=1]="TopLeft",LayoutAlignment[LayoutAlignment.Top=2]="Top",LayoutAlignment[LayoutAlignment.TopRight=3]="TopRight",LayoutAlignment[LayoutAlignment.Left=4]="Left",LayoutAlignment[LayoutAlignment.Center=5]="Center",LayoutAlignment[LayoutAlignment.Right=6]="Right",LayoutAlignment[LayoutAlignment.BottomLeft=7]="BottomLeft",LayoutAlignment[LayoutAlignment.Bottom=8]="Bottom",LayoutAlignment[LayoutAlignment.BottomRight=9]="BottomRight"}(liveswitch.LayoutAlignment||(liveswitch.LayoutAlignment={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(LayoutDirection){LayoutDirection[LayoutDirection.Horizontal=1]="Horizontal",LayoutDirection[LayoutDirection.Vertical=2]="Vertical"}(liveswitch.LayoutDirection||(liveswitch.LayoutDirection={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(LayoutMode){LayoutMode[LayoutMode.FloatLocal=1]="FloatLocal",LayoutMode[LayoutMode.FloatRemote=2]="FloatRemote",LayoutMode[LayoutMode.Block=3]="Block",LayoutMode[LayoutMode.Inline=4]="Inline",LayoutMode[LayoutMode.InlineOverflow=5]="InlineOverflow"}(liveswitch.LayoutMode||(liveswitch.LayoutMode={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(LayoutOrigin){LayoutOrigin[LayoutOrigin.TopLeft=1]="TopLeft",LayoutOrigin[LayoutOrigin.TopRight=2]="TopRight",LayoutOrigin[LayoutOrigin.BottomRight=3]="BottomRight",LayoutOrigin[LayoutOrigin.BottomLeft=4]="BottomLeft"}(liveswitch.LayoutOrigin||(liveswitch.LayoutOrigin={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(LocalMediaState){LocalMediaState[LocalMediaState.New=1]="New",LocalMediaState[LocalMediaState.Starting=2]="Starting",LocalMediaState[LocalMediaState.Started=3]="Started",LocalMediaState[LocalMediaState.Stopping=4]="Stopping",LocalMediaState[LocalMediaState.Stopped=5]="Stopped",LocalMediaState[LocalMediaState.Destroying=6]="Destroying",LocalMediaState[LocalMediaState.Destroyed=7]="Destroyed"}(liveswitch.LocalMediaState||(liveswitch.LocalMediaState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(NackPolicy){NackPolicy[NackPolicy.Disabled=1]="Disabled",NackPolicy[NackPolicy.Negotiated=2]="Negotiated"}(liveswitch.NackPolicy||(liveswitch.NackPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(RedFecPolicy){RedFecPolicy[RedFecPolicy.Disabled=1]="Disabled",RedFecPolicy[RedFecPolicy.Negotiated=2]="Negotiated"}(liveswitch.RedFecPolicy||(liveswitch.RedFecPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(RembPolicy){RembPolicy[RembPolicy.Disabled=1]="Disabled",RembPolicy[RembPolicy.Negotiated=2]="Negotiated"}(liveswitch.RembPolicy||(liveswitch.RembPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(rtp){!function(HeaderExtensionForm){HeaderExtensionForm[HeaderExtensionForm.OneByte=1]="OneByte",HeaderExtensionForm[HeaderExtensionForm.TwoByte=2]="TwoByte"}(rtp.HeaderExtensionForm||(rtp.HeaderExtensionForm={}))}(liveswitch.rtp||(liveswitch.rtp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(SdesPolicy){SdesPolicy[SdesPolicy.Negotiated=2]="Negotiated",SdesPolicy[SdesPolicy.Disabled=3]="Disabled"}(liveswitch.SdesPolicy||(liveswitch.SdesPolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(SignallingState){SignallingState[SignallingState.New=1]="New",SignallingState[SignallingState.HaveLocalOffer=2]="HaveLocalOffer",SignallingState[SignallingState.HaveRemoteOffer=3]="HaveRemoteOffer",SignallingState[SignallingState.Stable=4]="Stable"}(liveswitch.SignallingState||(liveswitch.SignallingState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(TransportType){TransportType[TransportType.Gatherer=1]="Gatherer",TransportType[TransportType.IceTransport=2]="IceTransport",TransportType[TransportType.DtlsTransport=3]="DtlsTransport",TransportType[TransportType.SctpTransport=4]="SctpTransport",TransportType[TransportType.ReliableDataTransport=5]="ReliableDataTransport",TransportType[TransportType.SrtpTransport=6]="SrtpTransport",TransportType[TransportType.Unset=7]="Unset",TransportType[TransportType.MediaTransport=8]="MediaTransport"}(liveswitch.TransportType||(liveswitch.TransportType={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(TrickleIcePolicy){TrickleIcePolicy[TrickleIcePolicy.NotSupported=1]="NotSupported",TrickleIcePolicy[TrickleIcePolicy.FullTrickle=2]="FullTrickle",TrickleIcePolicy[TrickleIcePolicy.HalfTrickle=3]="HalfTrickle"}(liveswitch.TrickleIcePolicy||(liveswitch.TrickleIcePolicy={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(PeerRole){PeerRole[PeerRole.Offerer=1]="Offerer",PeerRole[PeerRole.Answerer=2]="Answerer"}(liveswitch.PeerRole||(liveswitch.PeerRole={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(FailureSource){FailureSource[FailureSource.None=1]="None",FailureSource[FailureSource.Network=2]="Network",FailureSource[FailureSource.Message=3]="Message"}(liveswitch.FailureSource||(liveswitch.FailureSource={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(ClientState){ClientState[ClientState.New=1]="New",ClientState[ClientState.Registering=2]="Registering",ClientState[ClientState.Registered=3]="Registered",ClientState[ClientState.Unregistering=4]="Unregistering",ClientState[ClientState.Unregistered=5]="Unregistered"}(liveswitch.ClientState||(liveswitch.ClientState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(InvitationState){InvitationState[InvitationState.Unknown=1]="Unknown",InvitationState[InvitationState.Pending=2]="Pending",InvitationState[InvitationState.Proceeding=3]="Proceeding",InvitationState[InvitationState.Sent=4]="Sent",InvitationState[InvitationState.Cancelled=5]="Cancelled",InvitationState[InvitationState.Cancelling=6]="Cancelling",InvitationState[InvitationState.Rejected=7]="Rejected",InvitationState[InvitationState.Accepted=8]="Accepted",InvitationState[InvitationState.NotFound=9]="NotFound",InvitationState[InvitationState.Busy=10]="Busy",InvitationState[InvitationState.NoResponse=11]="NoResponse",InvitationState[InvitationState.Invalid=12]="Invalid",InvitationState[InvitationState.AlreadyInvited=13]="AlreadyInvited"}(liveswitch.InvitationState||(liveswitch.InvitationState={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){!function(ClientState){ClientState[ClientState.New=1]="New",ClientState[ClientState.Connecting=2]="Connecting",ClientState[ClientState.Connected=3]="Connected",ClientState[ClientState.Disconnecting=4]="Disconnecting",ClientState[ClientState.Disconnected=5]="Disconnected"}(signalling.ClientState||(signalling.ClientState={}))}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){!function(ConcurrencyMode){ConcurrencyMode[ConcurrencyMode.Low=1]="Low",ConcurrencyMode[ConcurrencyMode.High=2]="High",ConcurrencyMode[ConcurrencyMode.Default=1]="Default"}(signalling.ConcurrencyMode||(signalling.ConcurrencyMode={}))}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){!function(ConnectionType){ConnectionType[ConnectionType.WebSocket=1]="WebSocket",ConnectionType[ConnectionType.LongPolling=2]="LongPolling",ConnectionType[ConnectionType.CallbackPolling=3]="CallbackPolling",ConnectionType[ConnectionType.IFrame=4]="IFrame",ConnectionType[ConnectionType.Flash=5]="Flash",ConnectionType[ConnectionType.NotSet=99]="NotSet"}(signalling.ConnectionType||(signalling.ConnectionType={}))}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){!function(MessageType){MessageType[MessageType.Connect=1]="Connect",MessageType[MessageType.Disconnect=2]="Disconnect",MessageType[MessageType.Bind=3]="Bind",MessageType[MessageType.Unbind=4]="Unbind",MessageType[MessageType.Subscribe=5]="Subscribe",MessageType[MessageType.Unsubscribe=6]="Unsubscribe",MessageType[MessageType.Publish=7]="Publish",MessageType[MessageType.Service=9]="Service",MessageType[MessageType.Stream=10]="Stream",MessageType[MessageType.Unknown=11]="Unknown"}(signalling.MessageType||(signalling.MessageType={}))}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){!function(Reconnect){Reconnect[Reconnect.Retry=1]="Retry",Reconnect[Reconnect.Handshake=2]="Handshake",Reconnect[Reconnect.None=3]="None",Reconnect[Reconnect.NotSet=99]="NotSet"}(signalling.Reconnect||(signalling.Reconnect={}))}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CryptoLibraryWrapper=function(){function CryptoLibraryWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_2=__arguments[0];this._value=value_2}return CryptoLibraryWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CryptoLibraryWrapper]"},CryptoLibraryWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CryptoLibrary.Default?"Default":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoLibraryWrapper}();liveswitch.CryptoLibraryWrapper=CryptoLibraryWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataBufferPoolTracer=function(){function DataBufferPoolTracer(tag,pool){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var tag_2=__arguments[0],pool_1=__arguments[1];if(fm.liveswitch.Global.equals(tag_2,null))throw new fm.liveswitch.Exception("Tag cannot be null.");if(fm.liveswitch.Global.equals(pool_1,null))throw new fm.liveswitch.Exception("Pool cannot be null.");this.setTag(tag_2),this.setPool(pool_1)}return DataBufferPoolTracer.prototype.getTypeString=function(){return"[fm.liveswitch.DataBufferPoolTracer]"},DataBufferPoolTracer.prototype.getPool=function(){if(0==arguments.length)return this._pool;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPoolTracer.prototype.getStatistics=function(){if(0==arguments.length)return this.getPool().getOrAddTraceStatistics(this.getTag());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPoolTracer.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPoolTracer.prototype.setPool=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._pool=value},DataBufferPoolTracer.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},DataBufferPoolTracer.prototype.take=function(){if(1==arguments.length){var size=fm.liveswitch.Global.toInt(arguments[0]);return this.getPool().traceTake(size,this.getTag())}if(2==arguments.length){size=fm.liveswitch.Global.toInt(arguments[0]);var littleEndian=arguments[1];return this.getPool().traceTake(size,littleEndian,this.getTag())}if(3==arguments.length){size=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var clearBytes=arguments[2];return this.getPool().traceTake(size,littleEndian,clearBytes,this.getTag())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPoolTracer}();liveswitch.DataBufferPoolTracer=DataBufferPoolTracer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PendingPromise=function(){function PendingPromise(promise,result){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var promise_1=__arguments[0],result_2=__arguments[1];this.__promise=promise_1,this.__result=result_2}return PendingPromise.prototype.getTypeString=function(){return"[fm.liveswitch.PendingPromise]"},PendingPromise.prototype.reject=function(ex){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__promise.reject(ex)},PendingPromise.prototype.resolve=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__promise.castAndResolve(this.__result)},PendingPromise}();liveswitch.PendingPromise=PendingPromise}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SystemClock=function(){function SystemClock(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return SystemClock.prototype.getTypeString=function(){return"[fm.liveswitch.SystemClock]"},SystemClock.prototype.getTimestamp=function(){if(0==arguments.length)return fm.liveswitch.ManagedStopwatch.getTimestamp();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SystemClock}();liveswitch.SystemClock=SystemClock}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AddressTypeWrapper=function(){function AddressTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_3=__arguments[0];this._value=value_3}return AddressTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.AddressTypeWrapper]"},AddressTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.AddressType.IPv4?"IPv4":this._value==fm.liveswitch.AddressType.IPv6?"IPv6":this._value==fm.liveswitch.AddressType.Unknown?"Unknown":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AddressTypeWrapper}();liveswitch.AddressTypeWrapper=AddressTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Ascii=function(){function Ascii(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Ascii.prototype.getTypeString=function(){return"[fm.liveswitch.Ascii]"},Ascii.decode=function(){if(1==arguments.length){var input=arguments[0];return fm.liveswitch.Ascii.decode(input,0,input.length)}if(3==arguments.length){input=arguments[0];var index=fm.liveswitch.Global.toInt(arguments[1]),length_9=fm.liveswitch.Global.toInt(arguments[2]);return fm.liveswitch.Encoding.getAscii().getString(input,index,length_9)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Ascii.encode=function(input){if(1==arguments.length)return fm.liveswitch.Encoding.getAscii().getBytes(input);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Ascii.getByteCount=function(input){if(1==arguments.length)return fm.liveswitch.Encoding.getAscii().getByteCount(input);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Ascii}();liveswitch.Ascii=Ascii}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AtomicMutex=function(){function AtomicMutex(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__lock=new fm.liveswitch.AtomicInteger(0)}return AtomicMutex.prototype.getTypeString=function(){return"[fm.liveswitch.AtomicMutex]"},AtomicMutex.prototype.getIsLocked=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__lock.getValue(),1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AtomicMutex.prototype.release=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__lock.compareAndSwap(1,0)},AtomicMutex.prototype.tryLock=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__lock.compareAndSwap(0,1),0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AtomicMutex}();liveswitch.AtomicMutex=AtomicMutex}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Binary=function(){function Binary(){fm.liveswitch.Binary.fmliveswitchBinaryInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Binary.prototype.getTypeString=function(){return"[fm.liveswitch.Binary]"},Binary.bitStringToBytes=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),1==arguments.length){var bitString=arguments[0],numberOfUnusedBits=0,_var0=new fm.liveswitch.Holder(numberOfUnusedBits),_var1=fm.liveswitch.Binary.bitStringToBytes(bitString,_var0);return numberOfUnusedBits=_var0.getValue(),_var1}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.Holder<number>]"))){bitString=arguments[0],numberOfUnusedBits=arguments[1];return _var0=fm.liveswitch.Binary.bitStringToBytes(bitString,!1,numberOfUnusedBits)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isBoolean(arguments[1]))){bitString=arguments[0];var padLeft=arguments[1];numberOfUnusedBits=0,_var0=new fm.liveswitch.Holder(numberOfUnusedBits),_var1=fm.liveswitch.Binary.bitStringToBytes(bitString,padLeft,_var0);return numberOfUnusedBits=_var0.getValue(),_var1}if(3==arguments.length){bitString=arguments[0],padLeft=arguments[1],numberOfUnusedBits=arguments[2];var num=fm.liveswitch.StringExtensions.getLength(bitString)%8;if(numberOfUnusedBits.setValue(0),num>0){numberOfUnusedBits.setValue(8-num);for(var j=0;j<numberOfUnusedBits.getValue();j++)bitString=padLeft?fm.liveswitch.StringExtensions.concat("0",bitString):fm.liveswitch.StringExtensions.concat(bitString,"0")}for(var buffer=new Uint8Array(fm.liveswitch.MathAssistant.floor(fm.liveswitch.StringExtensions.getLength(bitString)/8)),index=0,i=0;index<buffer.length;i+=8){var flag=!fm.liveswitch.Global.equals(bitString.charCodeAt(i),48),flag2=!fm.liveswitch.Global.equals(bitString.charCodeAt(i+1),48),flag3=!fm.liveswitch.Global.equals(bitString.charCodeAt(i+2),48),flag4=!fm.liveswitch.Global.equals(bitString.charCodeAt(i+3),48),flag5=!fm.liveswitch.Global.equals(bitString.charCodeAt(i+4),48),flag6=!fm.liveswitch.Global.equals(bitString.charCodeAt(i+5),48),flag7=!fm.liveswitch.Global.equals(bitString.charCodeAt(i+6),48),flag8=!fm.liveswitch.Global.equals(bitString.charCodeAt(i+7),48),num5=0;flag&&(num5+=128),flag2&&(num5+=64),flag3&&(num5+=32),flag4&&(num5+=16),flag5&&(num5+=8),flag6&&(num5+=4),flag7&&(num5+=2),flag8&&num5++,buffer[index]=fm.liveswitch.BitAssistant.castByte(num5),index++}return buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.bytesToBitString=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),1==arguments.length){var bytes=arguments[0];return fm.liveswitch.Binary.bytesToBitString(bytes,0,bytes.length)}if(3==arguments.length){bytes=arguments[0];var offset=fm.liveswitch.Global.toInt(arguments[1]),length_10=fm.liveswitch.Global.toInt(arguments[2]);return fm.liveswitch.Binary.bytesToBitString(bytes,offset,length_10,0)}if(4==arguments.length){bytes=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]);var length_11=fm.liveswitch.Global.toInt(arguments[2]),numberOfUnusedBits=fm.liveswitch.Global.toInt(arguments[3]);return fm.liveswitch.Binary.bytesToBitString(bytes,offset,length_11,numberOfUnusedBits,!1)}if(5==arguments.length){bytes=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]);for(var length_12=fm.liveswitch.Global.toInt(arguments[2]),trimLeft=(numberOfUnusedBits=fm.liveswitch.Global.toInt(arguments[3]),arguments[4]),str="",i=offset;i<offset+length_12;i++){var num2=bytes[i],flag=fm.liveswitch.Global.equals(128&num2,128),flag2=fm.liveswitch.Global.equals(64&num2,64),flag3=fm.liveswitch.Global.equals(32&num2,32),flag4=fm.liveswitch.Global.equals(16&num2,16),flag5=fm.liveswitch.Global.equals(8&num2,8),flag6=fm.liveswitch.Global.equals(4&num2,4),flag7=fm.liveswitch.Global.equals(2&num2,2),flag8=fm.liveswitch.Global.equals(1&num2,1);str=fm.liveswitch.StringExtensions.concat(str,fm.liveswitch.StringExtensions.format("{0}{1}{2}{3}{4}{5}{6}{7}",[flag?"1":"0",flag2?"1":"0",flag3?"1":"0",flag4?"1":"0",flag5?"1":"0",flag6?"1":"0",flag7?"1":"0",flag8?"1":"0"]))}return trimLeft?fm.liveswitch.StringExtensions.substring(str,numberOfUnusedBits,fm.liveswitch.StringExtensions.getLength(str)-numberOfUnusedBits):fm.liveswitch.StringExtensions.substring(str,0,fm.liveswitch.StringExtensions.getLength(str)-numberOfUnusedBits)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.deinterleave=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var inputFrame=arguments[0],outputFrame=arguments[1];fm.liveswitch.Binary.deinterleave(inputFrame,outputFrame,0,inputFrame.length,!1)}else if(4==arguments.length){inputFrame=arguments[0],outputFrame=arguments[1];var start=fm.liveswitch.Global.toInt(arguments[2]),length_13=fm.liveswitch.Global.toInt(arguments[3]);fm.liveswitch.Binary.deinterleave(inputFrame,outputFrame,start,length_13,!1)}else{if(5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");inputFrame=arguments[0],outputFrame=arguments[1],start=fm.liveswitch.Global.toInt(arguments[2]);var length_14=fm.liveswitch.Global.toInt(arguments[3]),reversePlanes=arguments[4],num=start+length_14,num2=fm.liveswitch.MathAssistant.floor(length_14/2);if(num>outputFrame.length)fm.liveswitch.Log.error("start + length greater than outputFrame length");else{var num3=void 0,num4=void 0;reversePlanes?(num3=start+num2,num4=start):(num3=start,num4=start+num2);for(var i=start;i<num;i+=2)outputFrame[num3++]=inputFrame[i],outputFrame[num4++]=inputFrame[i+1]}}},Binary.deinterleaveTransform=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),6==arguments.length){var inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]);fm.liveswitch.Binary.deinterleaveTransform(inputFrame,outputFrame,width,height,stride,rotation,0,!1)}else if(7==arguments.length){inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]);var start=fm.liveswitch.Global.toInt(arguments[6]);fm.liveswitch.Binary.deinterleaveTransform(inputFrame,outputFrame,width,height,stride,rotation,start,!1)}else{if(8!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]),start=fm.liveswitch.Global.toInt(arguments[6]);var reversePlanes=arguments[7],num=width*height,length_15=2*num,num3=stride-width,num4=start+length_15;if(num4>outputFrame.length)fm.liveswitch.Log.error("start + length greater than outputFrame length");else{var num5=void 0,num6=void 0,num9=void 0,num10=void 0;reversePlanes?(num5=start+num,num6=start):(num5=start,num6=start+num);var num7=height+1,numArray=new Array(num7),num8=2*width;for(num9=0;num9<num7;num9++)numArray[num9]=num8*num9+start,num9>1&&(numArray[num9]=numArray[num9]+num3*(num9-1));if(fm.liveswitch.Global.equals(rotation,270))for(num9=1;num9<=num8;num9+=2)for(num10=1;num10<num7;)outputFrame[num5++]=inputFrame[numArray[num10]-(num9+1)],outputFrame[num6++]=inputFrame[numArray[num10]-num9],num10++;else if(fm.liveswitch.Global.equals(rotation,90))for(num9=0;num9<num8;num9+=2)for(num10=num7-2;num10>=0;num10--)outputFrame[num5++]=inputFrame[numArray[num10]+num9],outputFrame[num6++]=inputFrame[numArray[num10]+(num9+1)];else if(fm.liveswitch.Global.equals(rotation,180))for(num9=start+length_15-1;num9>=start;num9-=2)outputFrame[num5++]=inputFrame[num9-1],outputFrame[num6++]=inputFrame[num9];else fm.liveswitch.Binary.deinterleave(inputFrame,outputFrame,start,length_15,reversePlanes)}}},Binary.fromBytes1=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return fm.liveswitch.Global.equals(1&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes8(input,inputIndex),7-bitOffset),1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes10=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=7){if(inputIndex+2<input.length)return 1023&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),14-bitOffset)}else if(inputIndex+1<input.length)return 1023&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes16(input,inputIndex,!1),6-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 10 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes11=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=6){if(inputIndex+2<input.length)return 2047&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),13-bitOffset)}else if(inputIndex+1<input.length)return 2047&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes16(input,inputIndex,!1),5-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 11 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes12=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=5){if(inputIndex+2<input.length)return 4095&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),12-bitOffset)}else if(inputIndex+1<input.length)return 4095&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes16(input,inputIndex,!1),4-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 12 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes13=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=4){if(inputIndex+2<input.length)return 8191&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),11-bitOffset)}else if(inputIndex+1<input.length)return 8191&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes16(input,inputIndex,!1),3-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 13 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes14=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=3){if(inputIndex+2<input.length)return 16383&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),10-bitOffset)}else if(inputIndex+1<input.length)return 16383&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes16(input,inputIndex,!1),2-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 14 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes15=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=2){if(inputIndex+2<input.length)return 32767&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),9-bitOffset)}else if(inputIndex+1<input.length)return 32767&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes16(input,inputIndex,!1),1-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 15 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes16=function(input,inputIndex,littleEndian){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){inputIndex=fm.liveswitch.Global.toInt(arguments[1]);var num=0;return littleEndian?(num|=fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),0))|fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),8):(num|=fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes17=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return 131071&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),7-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes18=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=7){if(inputIndex+3<input.length)return 262143&fm.liveswitch.BitAssistant.rightShiftLong(fm.liveswitch.Binary.fromBytes32(input,inputIndex,!1),14-bitOffset)}else if(inputIndex+2<input.length)return 262143&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),6-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 18 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes19=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=6){if(inputIndex+3<input.length)return 524287&fm.liveswitch.BitAssistant.rightShiftLong(fm.liveswitch.Binary.fromBytes32(input,inputIndex,!1),13-bitOffset)}else if(inputIndex+2<input.length)return 524287&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),5-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 19 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes2=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return 3&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes8(input,inputIndex),6-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes20=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=5){if(inputIndex+3<input.length)return 1048575&fm.liveswitch.BitAssistant.rightShiftLong(fm.liveswitch.Binary.fromBytes32(input,inputIndex,!1),12-bitOffset)}else if(inputIndex+2<input.length)return 1048575&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),4-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 20 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes21=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=4){if(inputIndex+3<input.length)return 2097151&fm.liveswitch.BitAssistant.rightShiftLong(fm.liveswitch.Binary.fromBytes32(input,inputIndex,!1),11-bitOffset)}else if(inputIndex+2<input.length)return 2097151&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),3-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 21 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes22=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=3){if(inputIndex+3<input.length)return 4194303&fm.liveswitch.BitAssistant.rightShiftLong(fm.liveswitch.Binary.fromBytes32(input,inputIndex,!1),10-bitOffset)}else if(inputIndex+2<input.length)return 4194303&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),2-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 22 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes23=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(bitOffset>=2){if(inputIndex+3<input.length)return 8388607&fm.liveswitch.BitAssistant.rightShiftLong(fm.liveswitch.Binary.fromBytes32(input,inputIndex,!1),9-bitOffset)}else if(inputIndex+2<input.length)return 8388607&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes24(input,inputIndex,!1),1-bitOffset);throw new fm.liveswitch.Exception("Input data is not large enough to read 23 bits.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes24=function(input,inputIndex,littleEndian){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){inputIndex=fm.liveswitch.Global.toInt(arguments[1]);var num=0;return littleEndian?(num|=fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),0),(num|=fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),16)):(num|=fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),16),(num|=fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex++]),0))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes3=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return 7&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes8(input,inputIndex),5-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes32=function(input,inputIndex,littleEndian){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){inputIndex=fm.liveswitch.Global.toInt(arguments[1]);var num=0;return littleEndian?(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24)):(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes4=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return 15&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes8(input,inputIndex),4-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes40=function(input,inputIndex,littleEndian){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){inputIndex=fm.liveswitch.Global.toInt(arguments[1]);var num=0;return littleEndian?(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32)):(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes48=function(input,inputIndex,littleEndian){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){inputIndex=fm.liveswitch.Global.toInt(arguments[1]);var num=0;return littleEndian?(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),40)):(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),40),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes5=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return 31&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes8(input,inputIndex),3-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes56=function(input,inputIndex,littleEndian){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){inputIndex=fm.liveswitch.Global.toInt(arguments[1]);var num=0;return littleEndian?(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),40))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),48)):(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),48),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),40),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes6=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return 63&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes8(input,inputIndex),2-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes64=function(input,inputIndex,littleEndian){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){inputIndex=fm.liveswitch.Global.toInt(arguments[1]);var num=0;return littleEndian?(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),40),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),48))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),56)):(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),56),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),48),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),40),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),32),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),24),num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),16),(num|=fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),8))|fm.liveswitch.BitAssistant.leftShiftLong(fm.liveswitch.BitAssistant.castLong(input[inputIndex++]),0))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes7=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;return 127&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes8(input,inputIndex),1-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes8=function(input,inputIndex){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.BitAssistant.leftShiftInteger(fm.liveswitch.BitAssistant.castInteger(input[inputIndex]),0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fromBytes9=function(input,inputIndex,bitOffset){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]);bitOffset>=8;)bitOffset-=8,inputIndex++;if(inputIndex+1>=input.length)throw new fm.liveswitch.Exception("Input data is not large enough to read 9 bits.");return 511&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fromBytes16(input,inputIndex,!1),7-bitOffset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.interleave=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var inputFrame=arguments[0],outputFrame=arguments[1];fm.liveswitch.Binary.interleave(inputFrame,outputFrame,0,inputFrame.length,!1)}else if(4==arguments.length){inputFrame=arguments[0],outputFrame=arguments[1];var start=fm.liveswitch.Global.toInt(arguments[2]),length_16=fm.liveswitch.Global.toInt(arguments[3]);fm.liveswitch.Binary.interleave(inputFrame,outputFrame,start,length_16,!1)}else{if(5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");inputFrame=arguments[0],outputFrame=arguments[1],start=fm.liveswitch.Global.toInt(arguments[2]);var length_17=fm.liveswitch.Global.toInt(arguments[3]),reversePlanes=arguments[4],num=start+length_17,num2=fm.liveswitch.MathAssistant.floor(length_17/2);if(num>outputFrame.length)fm.liveswitch.Log.error("start + length greater than outputFrame length");else{var num3=void 0,num4=void 0;reversePlanes?(num3=start+num2,num4=start):(num3=start,num4=start+num2);for(var num5=0,i=0;i<num2;i++)outputFrame[num5++]=inputFrame[num3+i],outputFrame[num5++]=inputFrame[num4+i]}}},Binary.interleaveTransform=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),6==arguments.length){var inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]);fm.liveswitch.Binary.interleaveTransform(inputFrame,outputFrame,width,height,stride,rotation,0,!1)}else if(7==arguments.length){inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]);var start=fm.liveswitch.Global.toInt(arguments[6]);fm.liveswitch.Binary.interleaveTransform(inputFrame,outputFrame,width,height,stride,rotation,start,!1)}else{if(8!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]),start=fm.liveswitch.Global.toInt(arguments[6]);var reversePlanes=arguments[7],num=stride>0?stride*height:width*height,num2=width*height*2,num3=stride>0?stride-width:width,num4=start+num2;if(num4>outputFrame.length)fm.liveswitch.Log.error("start + length greater than outputFrame length");else{var num5=void 0,num6=void 0,num9=void 0,num11=void 0;reversePlanes?(num5=start+num,num6=start):(num5=start,num6=start+num);var num7=height+1,numArray=new Array(num7),num8=width;for(num9=0;num9<num7;num9++)numArray[num9]=num8*num9+start+num3*(num9-1);var num10=0;if(fm.liveswitch.Global.equals(rotation,270))for(num9=1;num9<=num8;num9++)for(num11=1;num11<num7;)outputFrame[num10++]=inputFrame[num5+numArray[num11]-num9],outputFrame[num10++]=inputFrame[num6+numArray[num11]-num9],num11++;else if(fm.liveswitch.Global.equals(rotation,90))for(num9=0;num9<num8;num9++)for(num11=num7-2;num11>=0;num11--)outputFrame[num10++]=inputFrame[num5+numArray[num11]+num9+num3],outputFrame[num10++]=inputFrame[num6+numArray[num11]+num9+num3];else if(fm.liveswitch.Global.equals(rotation,180))for(num9=num-1;num9>=0;num9--)outputFrame[num10++]=inputFrame[num5+num9],outputFrame[num10++]=inputFrame[num6+num9];else fm.liveswitch.Binary.interleave(inputFrame,outputFrame,start,2*num,reversePlanes)}}},Binary.roundUp=function(value,multiple){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){if(value=fm.liveswitch.Global.toInt(arguments[0]),multiple=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(multiple,0))return value;var num=value%multiple;return fm.liveswitch.Global.equals(num,0)?value:value+multiple-num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes=function(value,bitOffset,littleEndian,output,outputIndex,bitCount){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),6==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),outputIndex=fm.liveswitch.Global.toInt(arguments[4]),bitCount=fm.liveswitch.Global.toInt(arguments[5]);var num4=void 0,num5=void 0;if(bitOffset>=8)return fm.liveswitch.Binary.toBytes(value,bitOffset%8,littleEndian,output,outputIndex+fm.liveswitch.MathAssistant.floor(bitOffset/8),bitCount);var num=fm.liveswitch.Binary.roundUp(bitCount+bitOffset,8),num2=fm.liveswitch.MathAssistant.floor(num/8);if(outputIndex+num2>output.length)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Output data is not large enough to write {0} bits.",fm.liveswitch.NumberExtensions.toString(bitCount)));if(littleEndian)throw new fm.liveswitch.Exception("Little-endian bit-level serialization is not supported.");var num3=fm.liveswitch.BitAssistant.leftShiftInteger(value,num-bitCount-bitOffset);return num2>0&&(num4=255&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fm_liveswitch_Binary___bitmasks[bitCount-1][0],bitOffset),num5=num-8,output[outputIndex]=output[outputIndex]&num4|fm.liveswitch.BitAssistant.rightShiftInteger(num3&fm.liveswitch.BitAssistant.leftShiftInteger(~num4,num5),num5),outputIndex++),num2>1&&(num4=255&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fm_liveswitch_Binary___bitmasks[bitCount-1][1],bitOffset),num5=num-16,output[outputIndex]=output[outputIndex]&num4|fm.liveswitch.BitAssistant.rightShiftInteger(num3&fm.liveswitch.BitAssistant.leftShiftInteger(~num4,num5),num5),outputIndex++),num2>2&&(num4=255&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fm_liveswitch_Binary___bitmasks[bitCount-1][2],bitOffset),num5=num-24,output[outputIndex]=output[outputIndex]&num4|fm.liveswitch.BitAssistant.rightShiftInteger(num3&fm.liveswitch.BitAssistant.leftShiftInteger(~num4,num5),num5),outputIndex++),num2>3&&(num4=255&fm.liveswitch.BitAssistant.rightShiftInteger(fm.liveswitch.Binary.fm_liveswitch_Binary___bitmasks[bitCount-1][3],bitOffset),num5=num-32,output[outputIndex]=output[outputIndex]&num4|fm.liveswitch.BitAssistant.rightShiftInteger(num3&fm.liveswitch.BitAssistant.leftShiftInteger(~num4,num5),num5),outputIndex++),output}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes1=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){for(var value=arguments[0],bitOffset=fm.liveswitch.Global.toInt(arguments[1]),num=1,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return fm.liveswitch.Binary.toBytes1(value,bitOffset,new Uint8Array(num),outputIndex)}if(4==arguments.length){value=arguments[0],bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var output=arguments[2];for(outputIndex=fm.liveswitch.Global.toInt(arguments[3]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value?1:0,bitOffset,!1,output,outputIndex,1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes10=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=2,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=7?fm.liveswitch.Binary.toBytes10(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes10(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,10)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes11=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=2,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=6?fm.liveswitch.Binary.toBytes11(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes11(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,11)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes12=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=2,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=5?fm.liveswitch.Binary.toBytes12(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes12(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,12)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes13=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=2,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=4?fm.liveswitch.Binary.toBytes13(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes13(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,13)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes14=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=2,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=3?fm.liveswitch.Binary.toBytes14(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes14(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,14)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes15=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=2,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=2?fm.liveswitch.Binary.toBytes15(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes15(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,15)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes16=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];return fm.liveswitch.Binary.toBytes16(value,littleEndian,new Uint8Array(2),0)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var output=arguments[2],outputIndex=fm.liveswitch.Global.toInt(arguments[3]);return outputIndex+1<output.length?littleEndian?(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(255&value,0),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(65280&value,8),output):(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(255&value,0),output):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes17=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=3,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return fm.liveswitch.Binary.toBytes17(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,17)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes18=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=3,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=7?fm.liveswitch.Binary.toBytes18(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes18(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,18)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes19=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=3,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=6?fm.liveswitch.Binary.toBytes19(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes19(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,19)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes2=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),num=1,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=7?fm.liveswitch.Binary.toBytes2(value,bitOffset,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes2(value,bitOffset,new Uint8Array(num),outputIndex)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var output=arguments[2];for(outputIndex=fm.liveswitch.Global.toInt(arguments[3]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,!1,output,outputIndex,2)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes20=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=3,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=5?fm.liveswitch.Binary.toBytes20(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes20(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,20)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes21=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=3,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=4?fm.liveswitch.Binary.toBytes21(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes21(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,21)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes22=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=3,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=3?fm.liveswitch.Binary.toBytes22(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes22(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,!1,output,outputIndex,22)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes23=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=3,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=2?fm.liveswitch.Binary.toBytes23(value,bitOffset,littleEndian,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes23(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,23)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes24=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];return fm.liveswitch.Binary.toBytes24(value,littleEndian,new Uint8Array(3),0)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var output=arguments[2],outputIndex=fm.liveswitch.Global.toInt(arguments[3]);return outputIndex+2<output.length?littleEndian?(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(255&value,0),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(16711680&value,16),output):(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftInteger(255&value,0),output):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes3=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),num=1,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=6?fm.liveswitch.Binary.toBytes3(value,bitOffset,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes3(value,bitOffset,new Uint8Array(num),outputIndex)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var output=arguments[2];for(outputIndex=fm.liveswitch.Global.toInt(arguments[3]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,!1,output,outputIndex,3)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes32=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];return fm.liveswitch.Binary.toBytes32(value,littleEndian,new Uint8Array(4),0)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var output=arguments[2],outputIndex=fm.liveswitch.Global.toInt(arguments[3]);return outputIndex+3<output.length?littleEndian?(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output):(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes4=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),num=1,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=5?fm.liveswitch.Binary.toBytes4(value,bitOffset,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes4(value,bitOffset,new Uint8Array(num),outputIndex)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var output=arguments[2];for(outputIndex=fm.liveswitch.Global.toInt(arguments[3]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,!1,output,outputIndex,4)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes40=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];return fm.liveswitch.Binary.toBytes40(value,littleEndian,new Uint8Array(5),0)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var output=arguments[2],outputIndex=fm.liveswitch.Global.toInt(arguments[3]);return outputIndex+4<output.length?littleEndian?(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output):(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes48=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];return fm.liveswitch.Binary.toBytes48(value,littleEndian,new Uint8Array(6),0)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var output=arguments[2],outputIndex=fm.liveswitch.Global.toInt(arguments[3]);return outputIndex+5<output.length?littleEndian?(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff0000000000&value,40),output):(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff0000000000&value,40),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes5=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),num=1,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=4?fm.liveswitch.Binary.toBytes5(value,bitOffset,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes5(value,bitOffset,new Uint8Array(num),outputIndex)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var output=arguments[2];for(outputIndex=fm.liveswitch.Global.toInt(arguments[3]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,!1,output,outputIndex,5)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes56=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];return fm.liveswitch.Binary.toBytes56(value,littleEndian,new Uint8Array(7),0)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var output=arguments[2],outputIndex=fm.liveswitch.Global.toInt(arguments[3]);return outputIndex+6<output.length?littleEndian?(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff0000000000&value,40),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff000000000000&value,48),output):(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff000000000000&value,48),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff0000000000&value,40),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes6=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),num=1,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=3?fm.liveswitch.Binary.toBytes6(value,bitOffset,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes6(value,bitOffset,new Uint8Array(num),outputIndex)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var output=arguments[2];for(outputIndex=fm.liveswitch.Global.toInt(arguments[3]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,!1,output,outputIndex,6)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes64=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];return fm.liveswitch.Binary.toBytes64(value,littleEndian,new Uint8Array(8),0)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var output=arguments[2],outputIndex=fm.liveswitch.Global.toInt(arguments[3]);return outputIndex+7<output.length?littleEndian?(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(value,0),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff0000000000&value,40),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff000000000000&value,48),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(value,56),output):(output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(value,56),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff000000000000&value,48),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff0000000000&value,40),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(0xff00000000&value,32),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(4278190080&value,24),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(16711680&value,16),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(65280&value,8),output[outputIndex++]=fm.liveswitch.BitAssistant.rightShiftLong(255&value,0),output):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes7=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),2==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),num=1,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return bitOffset>=2?fm.liveswitch.Binary.toBytes7(value,bitOffset,new Uint8Array(num+1),outputIndex):fm.liveswitch.Binary.toBytes7(value,bitOffset,new Uint8Array(num),outputIndex)}if(4==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var output=arguments[2];for(outputIndex=fm.liveswitch.Global.toInt(arguments[3]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,!1,output,outputIndex,7)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes8=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),1==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.toBytes8(value,new Uint8Array(1),0)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]);var output=arguments[1],outputIndex=fm.liveswitch.Global.toInt(arguments[2]);if(outputIndex>=output.length)throw new fm.liveswitch.Exception("Output data is not large enough to write 8 bits.");return output[outputIndex]=fm.liveswitch.BitAssistant.rightShiftInteger(255&value,0),output}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.toBytes9=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length){for(var value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2],num=2,outputIndex=0;bitOffset>=8;)bitOffset-=8,outputIndex++,num++;return fm.liveswitch.Binary.toBytes9(value,bitOffset,littleEndian,new Uint8Array(num),outputIndex)}if(5==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];var output=arguments[3];for(outputIndex=fm.liveswitch.Global.toInt(arguments[4]);bitOffset>=8;)bitOffset-=8,outputIndex++;return fm.liveswitch.Binary.toBytes(value,bitOffset,littleEndian,output,outputIndex,9)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.transform=function(){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),6==arguments.length){var inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]);fm.liveswitch.Binary.transform(inputFrame,outputFrame,width,height,stride,rotation,0,0)}else if(8==arguments.length){inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]);var inputStart=fm.liveswitch.Global.toInt(arguments[6]),outputStart=fm.liveswitch.Global.toInt(arguments[7]);fm.liveswitch.Binary.transform(inputFrame,outputFrame,width,height,stride,rotation,inputStart,outputStart,1)}else if(9==arguments.length){inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]),inputStart=fm.liveswitch.Global.toInt(arguments[6]),outputStart=fm.liveswitch.Global.toInt(arguments[7]);var chunkLength=fm.liveswitch.Global.toInt(arguments[8]),num=width*height*chunkLength,length_18=stride>0?stride*height*chunkLength:num,num3=outputStart>0?outputStart:inputStart,num4=stride>0?(stride-width)*chunkLength:0,num5=outputStart+num;if(num5>outputFrame.length)fm.liveswitch.Log.error("otuputStart + calculated output plane length is greater than outputFrame length");else{var num8=void 0,num9=void 0,num10=void 0,num6=height+1,numArray=new Array(num6),num7=width*chunkLength;for(num8=0;num8<num6;num8++)numArray[num8]=num7*num8+inputStart+num4*(num8-1);if(fm.liveswitch.Global.equals(rotation,270))for(num8=1;num8<=num7;num8+=chunkLength)for(num9=1;num9<num6;){for(num10=chunkLength-1;num10>=0;)outputFrame[num3++]=inputFrame[numArray[num9]-num8-num10],num10--;num9++}else if(fm.liveswitch.Global.equals(rotation,90))for(num8=0;num8<num7;num8+=chunkLength)for(num9=num6-2;num9>=0;num9--)for(num10=0;num10<chunkLength;)outputFrame[num3++]=inputFrame[numArray[num9]+num4+num8+num10],num10++;else if(fm.liveswitch.Global.equals(rotation,180)){var num11=0;for(num8=inputStart+length_18-num4-1;num8>=inputStart;num8-=chunkLength)if(fm.liveswitch.Global.equals(num4,0)||fm.liveswitch.Global.equals(num11,0)||!fm.liveswitch.Global.equals(num11%num7,0))for(num10=chunkLength-1;num10>=0;num10--)outputFrame[num3++]=inputFrame[num8-num10],num11++;else num8-=num4-chunkLength,num11=0}else if(fm.liveswitch.Global.equals(num4,0))fm.liveswitch.BitAssistant.copy(inputFrame,inputStart,outputFrame,outputStart,length_18);else for(num8=0;num8<height;num8++)fm.liveswitch.BitAssistant.copy(inputFrame,inputStart+stride*chunkLength*num8,outputFrame,outputStart+width*chunkLength*num8,width*chunkLength)}}else{if(7!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");inputFrame=arguments[0],outputFrame=arguments[1],width=fm.liveswitch.Global.toInt(arguments[2]),height=fm.liveswitch.Global.toInt(arguments[3]),stride=fm.liveswitch.Global.toInt(arguments[4]),rotation=fm.liveswitch.Global.toInt(arguments[5]);var start=fm.liveswitch.Global.toInt(arguments[6]);fm.liveswitch.Binary.transform(inputFrame,outputFrame,width,height,stride,rotation,start,start)}},Binary.tryFromBytes1=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes1(input,inputIndex,bitOffset)),!0):(value.setValue(!1),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes10=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length){if(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),(bitOffset=fm.liveswitch.Global.toInt(arguments[2]))>=7){if(inputIndex+2<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes10(input,inputIndex,bitOffset)),!0}else if(inputIndex+1<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes10(input,inputIndex,bitOffset)),!0;return value.setValue(0),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes11=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length){if(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),(bitOffset=fm.liveswitch.Global.toInt(arguments[2]))>=6){if(inputIndex+2<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes11(input,inputIndex,bitOffset)),!0}else if(inputIndex+1<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes11(input,inputIndex,bitOffset)),!0;return value.setValue(0),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes12=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length){if(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),(bitOffset=fm.liveswitch.Global.toInt(arguments[2]))>=5){if(inputIndex+2<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes12(input,inputIndex,bitOffset)),!0}else if(inputIndex+1<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes12(input,inputIndex,bitOffset)),!0;return value.setValue(0),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes13=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length){if(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),(bitOffset=fm.liveswitch.Global.toInt(arguments[2]))>=4){if(inputIndex+2<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes13(input,inputIndex,bitOffset)),!0}else if(inputIndex+1<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes13(input,inputIndex,bitOffset)),!0;return value.setValue(0),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes14=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length){if(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),(bitOffset=fm.liveswitch.Global.toInt(arguments[2]))>=3){if(inputIndex+2<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes14(input,inputIndex,bitOffset)),!0}else if(inputIndex+1<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes14(input,inputIndex,bitOffset)),!0;return value.setValue(0),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes15=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length){if(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),(bitOffset=fm.liveswitch.Global.toInt(arguments[2]))>=2){if(inputIndex+2<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes15(input,inputIndex,bitOffset)),!0}else if(inputIndex+1<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes15(input,inputIndex,bitOffset)),!0;return value.setValue(0),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes16=function(input,inputIndex,littleEndian,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))+1<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes16(input,inputIndex,littleEndian)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes17=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes17(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes18=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length){if(inputIndex=fm.liveswitch.Global.toInt(arguments[1]),(bitOffset=fm.liveswitch.Global.toInt(arguments[2]))>=7){if(inputIndex+3<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes18(input,inputIndex,bitOffset)),!0}else if(inputIndex+2<input.length)return value.setValue(fm.liveswitch.Binary.fromBytes18(input,inputIndex,bitOffset)),!0;return value.setValue(0),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes19=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes19(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes2=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes2(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes20=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes20(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes21=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes21(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes22=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes22(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes23=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes23(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes24=function(input,inputIndex,littleEndian,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))+2<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes24(input,inputIndex,littleEndian)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes3=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes3(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes32=function(input,inputIndex,littleEndian,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))+3<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes32(input,inputIndex,littleEndian)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes4=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes4(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes40=function(input,inputIndex,littleEndian,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))+4<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes40(input,inputIndex,littleEndian)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes48=function(input,inputIndex,littleEndian,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))+5<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes48(input,inputIndex,littleEndian)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes5=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes5(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes56=function(input,inputIndex,littleEndian,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))+6<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes56(input,inputIndex,littleEndian)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes6=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes6(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes64=function(input,inputIndex,littleEndian,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))+7<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes64(input,inputIndex,littleEndian)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes7=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes7(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes8=function(input,inputIndex,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),3==arguments.length)return(inputIndex=fm.liveswitch.Global.toInt(arguments[1]))<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes8(input,inputIndex)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.tryFromBytes9=function(input,inputIndex,bitOffset,value){if(fm.liveswitch.Binary.fmliveswitchBinaryInitialize(),4==arguments.length)return inputIndex=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),inputIndex+1<input.length?(value.setValue(fm.liveswitch.Binary.fromBytes9(input,inputIndex,bitOffset)),!0):(value.setValue(0),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Binary.fmliveswitchBinaryInitialize=function(){if(!fm.liveswitch.Binary.__fmliveswitchBinaryInitialized&&!fm.liveswitch.Binary.__fmliveswitchBinaryInitializing){fm.liveswitch.Binary.__fmliveswitchBinaryInitializing=!0;var numArray=new Array(24);numArray[0]=[65407,32767],numArray[1]=[65343,16383],numArray[2]=[65311,8191],numArray[3]=[65295,4095],numArray[4]=[65287,2047],numArray[5]=[65283,1023],numArray[6]=[65281,511],numArray[7]=[65280,255],numArray[8]=[65280,127,32767],numArray[9]=[65280,63,16383],numArray[10]=[65280,31,8191],numArray[11]=[65280,15,4095],numArray[12]=[65280,7,2047],numArray[13]=[65280,3,1023],numArray[14]=[65280,1,511];var numArray2=new Array(3);numArray2[0]=65280,numArray2[2]=255,numArray[15]=numArray2,numArray[16]=[65280,0,127,32767],numArray[17]=[65280,0,63,16383],numArray[18]=[65280,0,31,8191],numArray[19]=[65280,0,15,4095],numArray[20]=[65280,0,7,2047],numArray[21]=[65280,0,3,1023],numArray[22]=[65280,0,1,511],(numArray2=new Array(4))[0]=65280,numArray2[3]=255,numArray[23]=numArray2,fm.liveswitch.Binary.fm_liveswitch_Binary___bitmasks=numArray,fm.liveswitch.Binary.__fmliveswitchBinaryInitialized=!0,fm.liveswitch.Binary.__fmliveswitchBinaryInitializing=!1}},Binary.__fmliveswitchBinaryInitialized=!1,Binary.__fmliveswitchBinaryInitializing=!1,Binary}();liveswitch.Binary=Binary}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var BooleanHolder=function(){function BooleanHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchBooleanHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchBooleanHolderInit(),this.setValue(value)}}return BooleanHolder.prototype.getTypeString=function(){return"[fm.liveswitch.BooleanHolder]"},BooleanHolder.prototype.fmliveswitchBooleanHolderInit=function(){this._value=!1},BooleanHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BooleanHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},BooleanHolder}();liveswitch.BooleanHolder=BooleanHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Build=function(){function Build(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Build.prototype.getTypeString=function(){return"[fm.liveswitch.Build]"},Build.getDate=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(fm.liveswitch.Build.getYear(),0)&&fm.liveswitch.Global.equals(fm.liveswitch.Build.getMonth(),0)&&fm.liveswitch.Global.equals(fm.liveswitch.Build.getDay(),0)?new fm.liveswitch.DateTime(1970,1,1,0,0,0):new fm.liveswitch.DateTime(fm.liveswitch.Build.getYear(),fm.liveswitch.Build.getMonth(),fm.liveswitch.Build.getDay(),0,0,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getDay=function(){if(0==arguments.length)return fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring("2021-04-17",8,2));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getMajorVersion=function(){if(0==arguments.length)return fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.split("1.12.3.46193",[46])[0]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getMinorVersion=function(){if(0==arguments.length)return fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.split("1.12.3.46193",[46])[1]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getMonth=function(){if(0==arguments.length)return fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring("2021-04-17",5,2));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getPatchVersion=function(){if(0==arguments.length)return fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.split("1.12.3.46193",[46])[2]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getRevisionVersion=function(){if(0==arguments.length)return fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.split("1.12.3.46193",[46])[3]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getVersion=function(){if(0==arguments.length)return"1.12.3.46193";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.getYear=function(){if(0==arguments.length)return fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring("2021-04-17",0,4));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Build.VersionConstant="1.12.3.46193",Build}();liveswitch.Build=Build}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ByteHolder=function(){function ByteHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchByteHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchByteHolderInit(),this.setValue(value)}}return ByteHolder.prototype.getTypeString=function(){return"[fm.liveswitch.ByteHolder]"},ByteHolder.prototype.fmliveswitchByteHolderInit=function(){this._value=0},ByteHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ByteHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._value=fm.liveswitch.Global.toInt(value)},ByteHolder}();liveswitch.ByteHolder=ByteHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CharacterHolder=function(){function CharacterHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchCharacterHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchCharacterHolderInit(),this.setValue(value)}}return CharacterHolder.prototype.getTypeString=function(){return"[fm.liveswitch.CharacterHolder]"},CharacterHolder.prototype.fmliveswitchCharacterHolderInit=function(){this._value=0},CharacterHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CharacterHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},CharacterHolder}();liveswitch.CharacterHolder=CharacterHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CircularBuffer=function(){function CircularBuffer(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2==__arguments.length){var length_19=__arguments[0],latency=__arguments[1];(__arguments=new Array(3))[0]=length_19,__arguments[1]=latency,__arguments[2]=!1;var length_20=__arguments[0],latency_1=__arguments[1],littleEndian=__arguments[2];if(this.fmliveswitchCircularBufferInit(),this.__allowRead=!1,length_20<=0)throw new fm.liveswitch.Exception("Cannot create a circular buffer with no length.");this.__buffer=fm.liveswitch.DataBuffer.allocate(length_20,littleEndian),this.setReadOffset(0),this.setWriteOffset(this.getLatency()),this.setLatency(latency_1),this.setLittleEndian(littleEndian)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var length_21=__arguments[0];latency=__arguments[1],littleEndian=__arguments[2];if(this.fmliveswitchCircularBufferInit(),this.__allowRead=!1,length_21<=0)throw new fm.liveswitch.Exception("Cannot create a circular buffer with no length.");this.__buffer=fm.liveswitch.DataBuffer.allocate(length_21,littleEndian),this.setReadOffset(0),this.setWriteOffset(this.getLatency()),this.setLatency(latency),this.setLittleEndian(littleEndian)}}return CircularBuffer.prototype.getTypeString=function(){return"[fm.liveswitch.CircularBuffer]"},CircularBuffer.prototype.fmliveswitchCircularBufferInit=function(){this.__allowRead=!1,this._latency=0,this._littleEndian=!1,this._readOffset=0,this._writeOffset=0},CircularBuffer.prototype.getAvailable=function(){if(0==arguments.length)return this.getWriteOffset()-this.getReadOffset();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CircularBuffer.prototype.getLatency=function(){if(0==arguments.length)return this._latency;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CircularBuffer.prototype.getLength=function(){if(0==arguments.length)return this.__buffer.getLength();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CircularBuffer.prototype.getLittleEndian=function(){if(0==arguments.length)return this._littleEndian;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CircularBuffer.prototype.getReadOffset=function(){if(0==arguments.length)return this._readOffset;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CircularBuffer.prototype.getWriteOffset=function(){if(0==arguments.length)return this._writeOffset;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CircularBuffer.prototype.read=function(length){if(1==arguments.length){if((length=fm.liveswitch.Global.toInt(arguments[0]))>this.getLength())return null;var buffer=fm.liveswitch.DataBuffer.allocate(length,this.getLittleEndian());if(this.__allowRead){if(this.getReadOffset()+length<=this.getLength())buffer.write(this.__buffer.subset(this.getReadOffset(),length),0),this.__buffer.set(0,this.getReadOffset(),length);else{var num=this.__buffer.getLength()-this.getReadOffset(),num2=length-num;buffer.write(this.__buffer.subset(this.getReadOffset(),num),0),buffer.write(this.__buffer.subset(0,num2),num),this.__buffer.set(0,this.getReadOffset(),num),this.__buffer.set(0,0,num2)}this.setReadOffset((this.getReadOffset()+length)%this.getLength())}return buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CircularBuffer.prototype.setLatency=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._latency=fm.liveswitch.Global.toInt(value)},CircularBuffer.prototype.setLittleEndian=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._littleEndian=value},CircularBuffer.prototype.setReadOffset=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._readOffset=fm.liveswitch.Global.toInt(value)},CircularBuffer.prototype.setWriteOffset=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._writeOffset=fm.liveswitch.Global.toInt(value)},CircularBuffer.prototype.write=function(buffer){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var num2=void 0,i=0;i<buffer.getLength();i+=num2)num2=0,num2=buffer.getLength()-i<this.getLength()-this.getWriteOffset()?buffer.getLength()-i:this.getLength()-this.getWriteOffset(),this.__buffer.write(buffer.subset(i,num2),this.getWriteOffset()),this.setWriteOffset((this.getWriteOffset()+num2)%this.getLength());!this.__allowRead&&this.getWriteOffset()>=this.getReadOffset()+this.getLatency()&&(this.__allowRead=!0)},CircularBuffer}();liveswitch.CircularBuffer=CircularBuffer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Collection=function(){function Collection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__values=new Array,this.__valuesLock=new Object,this.__valuesCache=this.arrayFromList(this.__values)}return Collection.prototype.getTypeString=function(){return"[fm.liveswitch.Collection]"},Collection.prototype.add=function(value){if(1==arguments.length){var flag=!1;return fm.liveswitch.Global.equals(value,null)||(fm.liveswitch.ArrayExtensions.contains(this.__values,value)||(flag=!0,fm.liveswitch.ArrayExtensions.add(this.__values,value),this.__valuesCache=this.arrayFromList(this.__values),this.addSuccess(value)),flag&&this.addSuccessNoLock(value)),flag}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.addMany=function(values){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(values,null)){for(var list=new Array,_i=0,values_2=values;_i<values_2.length;_i++){var local=values_2[_i];fm.liveswitch.ArrayExtensions.contains(this.__values,local)||(fm.liveswitch.ArrayExtensions.add(this.__values,local),this.__valuesCache=this.arrayFromList(this.__values),fm.liveswitch.ArrayExtensions.add(list,local),this.addSuccess(local))}for(var _a=0,list_1=list;_a<list_1.length;_a++){var local2=list_1[_a];this.addSuccessNoLock(local2)}}},Collection.prototype.addSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.addSuccessNoLock=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.any=function(){if(0==arguments.length)return this.any(null);if(1==arguments.length){for(var predicate=arguments[0],_i=0,_a=this.__values;_i<_a.length;_i++){var local=_a[_i];if(fm.liveswitch.Global.equals(predicate,null)||predicate(local))return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.contains=function(value){if(1==arguments.length)return!fm.liveswitch.Global.equals(value,null)&&fm.liveswitch.ArrayExtensions.contains(this.__values,value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.first=function(){if(0==arguments.length){var local=this.firstOrDefault();if(fm.liveswitch.Global.equals(local,null))throw new fm.liveswitch.Exception("The collection does not contain any values.");return local}if(1==arguments.length){var predicate=arguments[0];local=this.firstOrDefault(predicate);if(fm.liveswitch.Global.equals(local,null))throw new fm.liveswitch.Exception("The collection does not contain any matching values.");return local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.firstOrDefault=function(){if(0==arguments.length)return this.firstOrDefault(null);if(1==arguments.length){for(var predicate=arguments[0],i=0;i<fm.liveswitch.ArrayExtensions.getCount(this.__values);i++){var p=this.__values[i];if(fm.liveswitch.Global.equals(predicate,null)||predicate(p))return p}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.forEach=function(callback){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var num=0,_i=0,_a=this.getValues();_i<_a.length;_i++){var local=_a[_i];callback(local,num++)}},Collection.prototype.getCount=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.getCount(this.__values);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.getValue=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.getCount(this.__values)>0?this.__values[0]:null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.getValues=function(){if(0==arguments.length)return this.__valuesCache;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.last=function(){if(0==arguments.length){var local=this.lastOrDefault();if(fm.liveswitch.Global.equals(local,null))throw new fm.liveswitch.Exception("The collection does not contain any values.");return local}if(1==arguments.length){var predicate=arguments[0];local=this.lastOrDefault(predicate);if(fm.liveswitch.Global.equals(local,null))throw new fm.liveswitch.Exception("The collection does not contain any matching values.");return local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.lastOrDefault=function(){if(0==arguments.length)return this.lastOrDefault(null);if(1==arguments.length){for(var predicate=arguments[0],i=fm.liveswitch.ArrayExtensions.getCount(this.__values)-1;i>-1;i--){var p=this.__values[i];if(fm.liveswitch.Global.equals(predicate,null)||predicate(p))return p}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.remove=function(value){if(1==arguments.length){var flag=!1;return fm.liveswitch.Global.equals(value,null)||(fm.liveswitch.ArrayExtensions.remove(this.__values,value)&&(this.__valuesCache=this.arrayFromList(this.__values),flag=!0,this.removeSuccess(value)),flag&&this.removeSuccessNoLock(value)),flag}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.removeAll=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var localArray=void 0;localArray=this.arrayFromList(this.__values),this.__values=new Array,this.__valuesCache=this.arrayFromList(this.__values);for(var _i=0,localArray_1=localArray;_i<localArray_1.length;_i++){var local=localArray_1[_i];this.removeSuccess(local)}for(var _a=0,localArray_2=localArray;_a<localArray_2.length;_a++){local=localArray_2[_a];this.removeSuccessNoLock(local)}},Collection.prototype.removeFirst=function(){if(0==arguments.length){if(fm.liveswitch.ArrayExtensions.getCount(this.__values)>0){var local=this.__values[0];return this.remove(local),local}return null}if(1==arguments.length){for(var condition=arguments[0],i=0;i<fm.liveswitch.ArrayExtensions.getCount(this.__values);i++){var p=this.__values[i];if(condition(p))return p}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.removeLast=function(){if(0==arguments.length){if(fm.liveswitch.ArrayExtensions.getCount(this.__values)>0){var local=this.__values[fm.liveswitch.ArrayExtensions.getCount(this.__values)-1];return this.remove(local),local}return null}if(1==arguments.length){for(var condition=arguments[0],i=fm.liveswitch.ArrayExtensions.getCount(this.__values)-1;i>=0;i++){var p=this.__values[i];if(condition(p))return p}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.removeMany=function(values){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(values,null)&&values.length>0){for(var list=new Array,_i=0,values_3=values;_i<values_3.length;_i++){var local=values_3[_i];fm.liveswitch.ArrayExtensions.remove(this.__values,local)&&(this.__valuesCache=this.arrayFromList(this.__values),fm.liveswitch.ArrayExtensions.add(list,local),this.removeSuccess(local))}for(var _a=0,list_2=list;_a<list_2.length;_a++){var local2=list_2[_a];this.removeSuccessNoLock(local2)}}},Collection.prototype.removeSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.removeSuccessNoLock=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.replace=function(values){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.clear(this.__values),fm.liveswitch.Global.equals(values,null)||fm.liveswitch.ArrayExtensions.addRange(this.__values,values),this.__valuesCache=this.arrayFromList(this.__values)},Collection.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.clear(this.__values),fm.liveswitch.Global.equals(value,null)||fm.liveswitch.ArrayExtensions.add(this.__values,value),this.__valuesCache=this.arrayFromList(this.__values)},Collection.prototype.setValues=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.clear(this.__values),fm.liveswitch.Global.equals(value,null)||fm.liveswitch.ArrayExtensions.addRange(this.__values,value),this.__valuesCache=this.arrayFromList(this.__values)},Collection.prototype.single=function(){if(0==arguments.length){var local=this.singleOrDefault();if(fm.liveswitch.Global.equals(local,null))throw new fm.liveswitch.Exception("The collection does not contain a single value.");return local}if(1==arguments.length){var predicate=arguments[0];local=this.singleOrDefault(predicate);if(fm.liveswitch.Global.equals(local,null))throw new fm.liveswitch.Exception("The collection does not contain a single matching value.");return local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.singleOrDefault=function(){if(0==arguments.length)return this.singleOrDefault(null);if(1==arguments.length){for(var predicate=arguments[0],local=null,flag=!1,i=0;i<fm.liveswitch.ArrayExtensions.getCount(this.__values);i++){var p=this.__values[i];if(fm.liveswitch.Global.equals(predicate,null)||predicate(p)){if(flag)throw new fm.liveswitch.Exception("Collection contains more than one matching element.");local=p,flag=!0}}return local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.toArray=function(){if(0==arguments.length)return this.arrayFromList(this.__values);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.valueAt=function(index){if(1==arguments.length){index=fm.liveswitch.Global.toInt(arguments[0]);var local=this.valueAtOrDefault(index);if(fm.liveswitch.Global.equals(local,null))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Value does not exist at index {0}.",fm.liveswitch.NumberExtensions.toString(index)));return local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.valueAtOrDefault=function(index){if(1==arguments.length){if((index=fm.liveswitch.Global.toInt(arguments[0]))<fm.liveswitch.ArrayExtensions.getCount(this.__values))for(var i=0;i<fm.liveswitch.ArrayExtensions.getCount(this.__values);i++)if(fm.liveswitch.Global.equals(i,index))return this.__values[i];return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection.prototype.where=function(predicate){if(1==arguments.length){for(var local=this.createCollection(),i=0;i<fm.liveswitch.ArrayExtensions.getCount(this.__values);i++){var local2=this.__values[i];(fm.liveswitch.Global.equals(predicate,null)||predicate(local2,i))&&local.add(local2)}return local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Collection}();liveswitch.Collection=Collection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DiagnosticSampler=function(){function DiagnosticSampler(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=null;var label=__arguments[0];(__arguments=new Array(2))[0]=100,__arguments[1]=label;var averageSampleCount=__arguments[0],label_2=__arguments[1];this.fmliveswitchDiagnosticSamplerInit(),this.setLastValue(0),this.setLabel(label_2),this.__min=new fm.liveswitch.AtomicLong(0x8000000000000000),this.__max=new fm.liveswitch.AtomicLong,this.__count=new fm.liveswitch.AtomicLong,this.__sum=new fm.liveswitch.AtomicLong,this.__arrayPointer=new fm.liveswitch.AtomicInteger,this.__samples=new Array(averageSampleCount)}else if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){averageSampleCount=__arguments[0];(__arguments=new Array(2))[0]=averageSampleCount,__arguments[1]=null;var averageSampleCount_1=__arguments[0];label=__arguments[1];this.fmliveswitchDiagnosticSamplerInit(),this.setLastValue(0),this.setLabel(label),this.__min=new fm.liveswitch.AtomicLong(0x8000000000000000),this.__max=new fm.liveswitch.AtomicLong,this.__count=new fm.liveswitch.AtomicLong,this.__sum=new fm.liveswitch.AtomicLong,this.__arrayPointer=new fm.liveswitch.AtomicInteger,this.__samples=new Array(averageSampleCount_1)}else if(2==__arguments.length){averageSampleCount=__arguments[0],label=__arguments[1];this.fmliveswitchDiagnosticSamplerInit(),this.setLastValue(0),this.setLabel(label),this.__min=new fm.liveswitch.AtomicLong(0x8000000000000000),this.__max=new fm.liveswitch.AtomicLong,this.__count=new fm.liveswitch.AtomicLong,this.__sum=new fm.liveswitch.AtomicLong,this.__arrayPointer=new fm.liveswitch.AtomicInteger,this.__samples=new Array(averageSampleCount)}else{if(1!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[0])&&!fm.liveswitch.Util.isString(arguments[0]))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");label=__arguments[0];(__arguments=new Array(2))[0]=100,__arguments[1]=label;averageSampleCount=__arguments[0];var label_3=__arguments[1];this.fmliveswitchDiagnosticSamplerInit(),this.setLastValue(0),this.setLabel(label_3),this.__min=new fm.liveswitch.AtomicLong(0x8000000000000000),this.__max=new fm.liveswitch.AtomicLong,this.__count=new fm.liveswitch.AtomicLong,this.__sum=new fm.liveswitch.AtomicLong,this.__arrayPointer=new fm.liveswitch.AtomicInteger,this.__samples=new Array(averageSampleCount)}}return DiagnosticSampler.prototype.getTypeString=function(){return"[fm.liveswitch.DiagnosticSampler]"},DiagnosticSampler.prototype.fmliveswitchDiagnosticSamplerInit=function(){this._lastValue=0},DiagnosticSampler.prototype.addSample=function(longSample){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");longSample=fm.liveswitch.Global.toInt(arguments[0]),this.setLastValue(longSample),this.__count.increment(),this.__sum.add(longSample);var index=this.__arrayPointer.increment()%this.__samples.length;if(this.__samples[index]=longSample,this.__min.getValue()>longSample)for(var num2=this.__min.getValue(),i=fm.liveswitch.MathAssistant.min(num2,longSample);!fm.liveswitch.Global.equals(this.__min.compareAndSwap(num2,i),num2);i=fm.liveswitch.MathAssistant.min(num2,longSample))num2=this.__min.getValue();if(this.__max.getValue()<longSample)for(var num4=this.__max.getValue(),j=fm.liveswitch.MathAssistant.max(num4,longSample);!fm.liveswitch.Global.equals(this.__max.compareAndSwap(num4,j),num4);j=fm.liveswitch.MathAssistant.max(num4,longSample))num4=this.__max.getValue()},DiagnosticSampler.prototype.getAverage=function(){if(0==arguments.length){for(var num=fm.liveswitch.MathAssistant.min(this.__samples.length,this.getCount()),num2=0,i=0;i<num;i++)num2+=this.__samples[i];return num2/num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.getCount=function(){if(0==arguments.length)return this.__count.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.getLastValue=function(){if(0==arguments.length)return this._lastValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.getMax=function(){if(0==arguments.length)return this.__max.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.getMin=function(){if(0==arguments.length)return this.__min.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.getSamplesInAverage=function(){if(0==arguments.length)return this.__samples.length;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.getSum=function(){if(0==arguments.length)return this.__sum.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DiagnosticSampler.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},DiagnosticSampler.prototype.setLastValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._lastValue=fm.liveswitch.Global.toInt(value)},DiagnosticSampler}();liveswitch.DiagnosticSampler=DiagnosticSampler}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Iso8601Timestamp=function(){function Iso8601Timestamp(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Iso8601Timestamp.prototype.getTypeString=function(){return"[fm.liveswitch.Iso8601Timestamp]"},Iso8601Timestamp.dateTimeToIso8601=function(dateTime){if(1==arguments.length){for(var str=fm.liveswitch.NumberExtensions.toString(dateTime.getYear()),str2=fm.liveswitch.NumberExtensions.toString(dateTime.getMonth()),str3=fm.liveswitch.NumberExtensions.toString(dateTime.getDay()),str4=fm.liveswitch.NumberExtensions.toString(dateTime.getHour()),str5=fm.liveswitch.NumberExtensions.toString(dateTime.getMinute()),str6=fm.liveswitch.NumberExtensions.toString(dateTime.getSecond()),str7=fm.liveswitch.NumberExtensions.toString(dateTime.getMillisecond());fm.liveswitch.StringExtensions.getLength(str)<4;)str=fm.liveswitch.StringExtensions.concat("0",str);for(;fm.liveswitch.StringExtensions.getLength(str2)<2;)str2=fm.liveswitch.StringExtensions.concat("0",str2);for(;fm.liveswitch.StringExtensions.getLength(str3)<2;)str3=fm.liveswitch.StringExtensions.concat("0",str3);for(;fm.liveswitch.StringExtensions.getLength(str4)<2;)str4=fm.liveswitch.StringExtensions.concat("0",str4);for(;fm.liveswitch.StringExtensions.getLength(str5)<2;)str5=fm.liveswitch.StringExtensions.concat("0",str5);for(;fm.liveswitch.StringExtensions.getLength(str6)<2;)str6=fm.liveswitch.StringExtensions.concat("0",str6);for(;fm.liveswitch.StringExtensions.getLength(str7)<3;)str7=fm.liveswitch.StringExtensions.concat("0",str7);return fm.liveswitch.StringExtensions.format("{0}-{1}-{2}T{3}:{4}:{5}.{6}Z",[str,str2,str3,str4,str5,str6,str7])}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp.getMinimumNeedleIndex=function(haystack,needles){if(2==arguments.length){for(var num=-1,_i=0,needles_1=needles;_i<needles_1.length;_i++){var str=needles_1[_i],index=fm.liveswitch.StringExtensions.indexOf(haystack,str);fm.liveswitch.Global.equals(index,-1)||(num=fm.liveswitch.Global.equals(num,-1)?index:fm.liveswitch.MathAssistant.min(num,index))}return num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp.getUtcNow=function(){if(0==arguments.length)return fm.liveswitch.Iso8601Timestamp.dateTimeToIso8601(fm.liveswitch.DateTime.getUtcNow());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp.iso8601ToDateTime=function(iso8601){if(1==arguments.length){var year=0,month=0,day=0,hour=0,minute=0,second=0,millisecond=0,num8=0,num9=0,offset=0,_var0=new fm.liveswitch.Holder(offset),_var1=new fm.liveswitch.Holder(year),_var2=new fm.liveswitch.Holder(month),_var3=new fm.liveswitch.Holder(day),_var4=fm.liveswitch.Iso8601Timestamp.tryParseDate(iso8601,offset,_var0,_var1,_var2,_var3);offset=_var0.getValue(),year=_var1.getValue(),month=_var2.getValue(),day=_var3.getValue();var _var5=new fm.liveswitch.Holder(offset),_var6=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,"T",_var5);offset=_var5.getValue();var _var7=new fm.liveswitch.Holder(offset),_var8=new fm.liveswitch.Holder(hour),_var9=new fm.liveswitch.Holder(minute),_var10=new fm.liveswitch.Holder(second),_var11=new fm.liveswitch.Holder(millisecond),_var12=fm.liveswitch.Iso8601Timestamp.tryParseTime(iso8601,offset,_var7,_var8,_var9,_var10,_var11);if(offset=_var7.getValue(),hour=_var8.getValue(),minute=_var9.getValue(),second=_var10.getValue(),millisecond=_var11.getValue(),_var4&&_var6&&_var12){var _var13=new fm.liveswitch.Holder(offset),_var14=new fm.liveswitch.Holder(num8),_var15=new fm.liveswitch.Holder(num9);fm.liveswitch.Iso8601Timestamp.tryParseTimezone(iso8601,offset,_var13,_var14,_var15);offset=_var13.getValue(),num8=_var14.getValue(),num9=_var15.getValue()}var time2=new fm.liveswitch.DateTime(year,month,day,hour,minute,second,millisecond);return time2.addHours(num8).addMinutes(num9)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp.tryParseDate=function(iso8601,offset,offsetPlus,year,month,day){if(6==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[1]),year.setValue(1970),month.setValue(1),day.setValue(1);var str=null,str2=null,str3=null,_var0=new fm.liveswitch.Holder(str),_var1=new fm.liveswitch.Holder(offset),_var2=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,4,_var0,_var1);if(str=_var0.getValue(),offset=_var1.getValue(),_var2){var _var3=new fm.liveswitch.Holder(offset);fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,"-",_var3);offset=_var3.getValue();var _var5=new fm.liveswitch.Holder(str2),_var6=new fm.liveswitch.Holder(offset),_var7=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,2,_var5,_var6);if(str2=_var5.getValue(),offset=_var6.getValue(),_var7){var _var8=new fm.liveswitch.Holder(offset);fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,"-",_var8);offset=_var8.getValue();var _var10=new fm.liveswitch.Holder(str3),_var11=new fm.liveswitch.Holder(offset);fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,2,_var10,_var11);str3=_var10.getValue(),offset=_var11.getValue()}}var _var13=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str,year);if(!fm.liveswitch.Global.equals(str,null)&&!_var13)return offsetPlus.setValue(offset),!1;var _var14=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str2,month);if(!fm.liveswitch.Global.equals(str2,null)&&!_var14)return offsetPlus.setValue(offset),!1;var _var15=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str3,day);return fm.liveswitch.Global.equals(str3,null)||_var15?(offsetPlus.setValue(offset),!0):(offsetPlus.setValue(offset),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp.tryParseTime=function(iso8601,offset,offsetPlus,hour,minute,second,millisecond){if(7==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[1]),hour.setValue(0),minute.setValue(0),second.setValue(0),millisecond.setValue(0);var str=null,str2=null,str3=null,s=null,terminalStrings=["Z","+","-"],_var0=new fm.liveswitch.Holder(str),_var1=new fm.liveswitch.Holder(offset),_var2=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,2,terminalStrings,_var0,_var1);if(str=_var0.getValue(),offset=_var1.getValue(),_var2){var _var3=new fm.liveswitch.Holder(offset);fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,":",_var3);offset=_var3.getValue();var _var5=new fm.liveswitch.Holder(str2),_var6=new fm.liveswitch.Holder(offset),_var7=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,2,terminalStrings,_var5,_var6);if(str2=_var5.getValue(),offset=_var6.getValue(),_var7){var _var8=new fm.liveswitch.Holder(offset);fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,":",_var8);offset=_var8.getValue();var _var10=new fm.liveswitch.Holder(str3),_var11=new fm.liveswitch.Holder(offset),_var12=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,2,terminalStrings,_var10,_var11);str3=_var10.getValue(),offset=_var11.getValue();var _var13=new fm.liveswitch.Holder(offset),_var14=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,".",_var13);if(offset=_var13.getValue(),_var12&&_var14){var str5=null,_var15=new fm.liveswitch.Holder(str5),_var16=new fm.liveswitch.Holder(offset),_var17=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,terminalStrings,_var15,_var16);if(str5=_var15.getValue(),offset=_var16.getValue(),_var17)if(fm.liveswitch.StringExtensions.getLength(str5)<3)for(s=str5;fm.liveswitch.StringExtensions.getLength(s)<3;s=fm.liveswitch.StringExtensions.concat(s,"0"));else s=fm.liveswitch.StringExtensions.substring(str5,0,3)}}}var _var18=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str,hour);if(!fm.liveswitch.Global.equals(str,null)&&!_var18)return offsetPlus.setValue(offset),!1;var _var19=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str2,minute);if(!fm.liveswitch.Global.equals(str2,null)&&!_var19)return offsetPlus.setValue(offset),!1;var _var20=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str3,second);if(!fm.liveswitch.Global.equals(str3,null)&&!_var20)return offsetPlus.setValue(offset),!1;var _var21=fm.liveswitch.ParseAssistant.tryParseIntegerValue(s,millisecond);return fm.liveswitch.Global.equals(s,null)||_var21?(offsetPlus.setValue(offset),!0):(offsetPlus.setValue(offset),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp.tryParseTimezone=function(iso8601,offset,offsetPlus,hour,minute){if(5==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[1]);var flag=void 0;hour.setValue(0),minute.setValue(0);var _var0=new fm.liveswitch.Holder(offset),_var1=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,"Z",_var0);if(offset=_var0.getValue(),_var1)return offsetPlus.setValue(offset),!0;var str=null,str2=null,_var2=new fm.liveswitch.Holder(offset),_var3=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,"+",_var2);if(offset=_var2.getValue(),_var3)flag=!1;else{var _var4=new fm.liveswitch.Holder(offset),_var5=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,"-",_var4);if(offset=_var4.getValue(),!_var5)return offsetPlus.setValue(offset),!1;flag=!0}var _var6=new fm.liveswitch.Holder(str),_var7=new fm.liveswitch.Holder(offset),_var8=fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,2,_var6,_var7);if(str=_var6.getValue(),offset=_var7.getValue(),_var8){var _var9=new fm.liveswitch.Holder(offset);fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,":",_var9);offset=_var9.getValue();var _var11=new fm.liveswitch.Holder(str2),_var12=new fm.liveswitch.Holder(offset);fm.liveswitch.Iso8601Timestamp.tryRead(iso8601,offset,2,_var11,_var12);str2=_var11.getValue(),offset=_var12.getValue()}var _var14=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str,hour);if(!fm.liveswitch.Global.equals(str,null)&&!_var14)return offsetPlus.setValue(offset),!1;var _var15=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str2,minute);return fm.liveswitch.Global.equals(str2,null)||_var15?(flag&&(hour.setValue(-hour.getValue()),minute.setValue(-minute.getValue())),offsetPlus.setValue(offset),!0):(offsetPlus.setValue(offset),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp.tryRead=function(){if(6==arguments.length){var input=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]),count=fm.liveswitch.Global.toInt(arguments[2]),terminalStrings=arguments[3],value=arguments[4],offsetPlus=arguments[5];if(fm.liveswitch.Global.equals(count,-1)){if(offset>fm.liveswitch.StringExtensions.getLength(input))return value.setValue(null),offsetPlus.setValue(offset),!1;if(value.setValue(input.substring(offset)),offsetPlus.setValue(offset+fm.liveswitch.StringExtensions.getLength(value.getValue())),!fm.liveswitch.Global.equals(terminalStrings,null)&&!fm.liveswitch.Global.equals(terminalStrings.length,0)){var minimumNeedleIndex=fm.liveswitch.Iso8601Timestamp.getMinimumNeedleIndex(value.getValue(),terminalStrings);if(fm.liveswitch.Global.equals(minimumNeedleIndex,-1))return!0;value.setValue(fm.liveswitch.StringExtensions.substring(input,offset,minimumNeedleIndex)),offsetPlus.setValue(offset+fm.liveswitch.StringExtensions.getLength(value.getValue()))}return!0}return offset+count>fm.liveswitch.StringExtensions.getLength(input)?(value.setValue(null),offsetPlus.setValue(offset),!1):(value.setValue(fm.liveswitch.StringExtensions.substring(input,offset,count)),offsetPlus.setValue(offset+fm.liveswitch.StringExtensions.getLength(value.getValue())),fm.liveswitch.Global.equals(terminalStrings,null)||fm.liveswitch.Global.equals(terminalStrings.length,0)||fm.liveswitch.Global.equals(fm.liveswitch.Iso8601Timestamp.getMinimumNeedleIndex(value.getValue(),terminalStrings),-1))}if(5==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isNumber(arguments[2]))){input=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]),count=fm.liveswitch.Global.toInt(arguments[2]),value=arguments[3],offsetPlus=arguments[4];return fm.liveswitch.Iso8601Timestamp.tryRead(input,offset,count,null,value,offsetPlus)}if(5==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isArray(arguments[2])&&(0==arguments[2].length||fm.liveswitch.Util.isNullOrUndefined(arguments[2][0])||fm.liveswitch.Util.isString(arguments[2][0])))){input=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]),terminalStrings=arguments[2],value=arguments[3],offsetPlus=arguments[4];return fm.liveswitch.Iso8601Timestamp.tryRead(input,offset,-1,terminalStrings,value,offsetPlus)}if(4==arguments.length){input=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]),value=arguments[2],offsetPlus=arguments[3];return offset+fm.liveswitch.StringExtensions.getLength(value)>fm.liveswitch.StringExtensions.getLength(input)?(offsetPlus.setValue(offset),!1):fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.substring(input,offset,fm.liveswitch.StringExtensions.getLength(value)),value)?(offsetPlus.setValue(offset+fm.liveswitch.StringExtensions.getLength(value)),!0):(offsetPlus.setValue(offset),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Iso8601Timestamp}();liveswitch.Iso8601Timestamp=Iso8601Timestamp}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var JsonCheckerModeWrapper=function(){function JsonCheckerModeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_4=__arguments[0];this._value=value_4}return JsonCheckerModeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.JsonCheckerModeWrapper]"},JsonCheckerModeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.JsonCheckerMode.Array?"Array":this._value==fm.liveswitch.JsonCheckerMode.Done?"Done":this._value==fm.liveswitch.JsonCheckerMode.Key?"Key":this._value==fm.liveswitch.JsonCheckerMode.Object?"Object":this._value==fm.liveswitch.JsonCheckerMode.String?"String":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonCheckerModeWrapper}();liveswitch.JsonCheckerModeWrapper=JsonCheckerModeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedCountdownLatch=function(){function ManagedCountdownLatch(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.reset();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var initialCount=__arguments[0];this.reset(initialCount)}}return ManagedCountdownLatch.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedCountdownLatch]"},ManagedCountdownLatch.prototype.decrement=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__counter.decrement(),0)&&this.__waitPromise.resolveAsync(null)},ManagedCountdownLatch.prototype.getCount=function(){if(0==arguments.length)return this.__counter.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedCountdownLatch.prototype.reset=function(){if(0==arguments.length)this.__counter=new fm.liveswitch.AtomicInteger,this.__waitPromise=new fm.liveswitch.Promise;else{if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var initialCount=fm.liveswitch.Global.toInt(arguments[0]);this.__counter=new fm.liveswitch.AtomicInteger(initialCount),this.__waitPromise=new fm.liveswitch.Promise}},ManagedCountdownLatch.prototype.setCount=function(count){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");count=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.Global.equals(this.__counter.add(count),0)&&this.__waitPromise.resolveAsync(null)},ManagedCountdownLatch.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.format("Countdown Latch ({0})",fm.liveswitch.NumberExtensions.toString(this.getCount()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedCountdownLatch.prototype.waitAsync=function(){if(0==arguments.length)return this.__counter.getValue()<=0?fm.liveswitch.PromiseBase.resolveNow(null):this.__waitPromise;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedCountdownLatch}();liveswitch.ManagedCountdownLatch=ManagedCountdownLatch}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var OperatingSystemWrapper=function(){function OperatingSystemWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_5=__arguments[0];this._value=value_5}return OperatingSystemWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.OperatingSystemWrapper]"},OperatingSystemWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.OperatingSystem.Unknown?"Unknown":this._value==fm.liveswitch.OperatingSystem.Windows?"Windows":this._value==fm.liveswitch.OperatingSystem.Android?"Android":this._value==fm.liveswitch.OperatingSystem.MacOS?"MacOS":this._value==fm.liveswitch.OperatingSystem.IOS?"IOS":this._value==fm.liveswitch.OperatingSystem.Linux?"Linux":this._value==fm.liveswitch.OperatingSystem.TvOS?"TvOS":this._value==fm.liveswitch.OperatingSystem.WatchOS?"WatchOS":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OperatingSystemWrapper}();liveswitch.OperatingSystemWrapper=OperatingSystemWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ArchitectureWrapper=function(){function ArchitectureWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_6=__arguments[0];this._value=value_6}return ArchitectureWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.ArchitectureWrapper]"},ArchitectureWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.Architecture.Unknown?"Unknown":this._value==fm.liveswitch.Architecture.X86?"X86":this._value==fm.liveswitch.Architecture.X64?"X64":this._value==fm.liveswitch.Architecture.Armv7?"Armv7":this._value==fm.liveswitch.Architecture.Armv8?"Armv8":this._value==fm.liveswitch.Architecture.Arm64?"Arm64":this._value==fm.liveswitch.Architecture.Mips?"Mips":this._value==fm.liveswitch.Architecture.Mips64?"Mips64":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ArchitectureWrapper}();liveswitch.ArchitectureWrapper=ArchitectureWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Pool=function(){function Pool(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length){var createObject=__arguments[0];(__arguments=new Array(2))[0]=createObject,__arguments[1]=0;var createObject_1=__arguments[0],minSize=__arguments[1];(__arguments=new Array(3))[0]=createObject_1,__arguments[1]=minSize,__arguments[2]=2147483647;var createObject_2=__arguments[0],minSize_1=__arguments[1],maxSize=__arguments[2];if(this.fmliveswitchPoolInit(),this.__destroyLock=new Object,this.__isDestroyed=!1,fm.liveswitch.Global.equals(createObject_2,null))throw new fm.liveswitch.Exception("Cannot initialize pool without a function to create objects.");if(minSize_1<0)throw new fm.liveswitch.Exception("Minimum pool size cannot be less than zero.");if(maxSize<0)throw new fm.liveswitch.Exception("Maximum pool size cannot be less than zero.");if(minSize_1>maxSize)throw new fm.liveswitch.Exception("Minimum pool size cannot be greater than maximum pool size.");this.__createObject=createObject_2,this.setMinSize(minSize_1),this.setMaxSize(maxSize),this.__stack=new fm.liveswitch.ManagedConcurrentStack,this.__createObjectCounter=new fm.liveswitch.AtomicInteger;for(var i=0;i<this.getMinSize();i++)this.__createObjectCounter.increment(),this.__stack.push(this.__createObject())}else if(2==__arguments.length){createObject=__arguments[0],minSize=__arguments[1];(__arguments=new Array(3))[0]=createObject,__arguments[1]=minSize,__arguments[2]=2147483647;var createObject_3=__arguments[0],minSize_2=__arguments[1];maxSize=__arguments[2];if(this.fmliveswitchPoolInit(),this.__destroyLock=new Object,this.__isDestroyed=!1,fm.liveswitch.Global.equals(createObject_3,null))throw new fm.liveswitch.Exception("Cannot initialize pool without a function to create objects.");if(minSize_2<0)throw new fm.liveswitch.Exception("Minimum pool size cannot be less than zero.");if(maxSize<0)throw new fm.liveswitch.Exception("Maximum pool size cannot be less than zero.");if(minSize_2>maxSize)throw new fm.liveswitch.Exception("Minimum pool size cannot be greater than maximum pool size.");this.__createObject=createObject_3,this.setMinSize(minSize_2),this.setMaxSize(maxSize),this.__stack=new fm.liveswitch.ManagedConcurrentStack,this.__createObjectCounter=new fm.liveswitch.AtomicInteger;for(i=0;i<this.getMinSize();i++)this.__createObjectCounter.increment(),this.__stack.push(this.__createObject())}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");createObject=__arguments[0],minSize=__arguments[1],maxSize=__arguments[2];if(this.fmliveswitchPoolInit(),this.__destroyLock=new Object,this.__isDestroyed=!1,fm.liveswitch.Global.equals(createObject,null))throw new fm.liveswitch.Exception("Cannot initialize pool without a function to create objects.");if(minSize<0)throw new fm.liveswitch.Exception("Minimum pool size cannot be less than zero.");if(maxSize<0)throw new fm.liveswitch.Exception("Maximum pool size cannot be less than zero.");if(minSize>maxSize)throw new fm.liveswitch.Exception("Minimum pool size cannot be greater than maximum pool size.");this.__createObject=createObject,this.setMinSize(minSize),this.setMaxSize(maxSize),this.__stack=new fm.liveswitch.ManagedConcurrentStack,this.__createObjectCounter=new fm.liveswitch.AtomicInteger;for(i=0;i<this.getMinSize();i++)this.__createObjectCounter.increment(),this.__stack.push(this.__createObject())}}return Pool.prototype.getTypeString=function(){return"[fm.liveswitch.Pool]"},Pool.prototype.fmliveswitchPoolInit=function(){this.__isDestroyed=!1,this._maxSize=0,this._minSize=0},Pool.prototype.destroy=function(destroyCallback){if(1==arguments.length){this.__isDestroyed=!0;var result=null,_var0=new fm.liveswitch.Holder(result),_var1=this.__stack.tryPop(_var0);for(result=_var0.getValue();_var1;)destroyCallback(result);return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pool.prototype.get=function(){if(0==arguments.length){var result=null,_var0=new fm.liveswitch.Holder(result),_var1=this.__stack.tryPop(_var0);if(result=_var0.getValue(),_var1)return result;if(this.__createObjectCounter.increment()>this.getMaxSize())throw this.__createObjectCounter.decrement(),new fm.liveswitch.Exception("Could not create pooled object. Maximum size reached.");return this.__createObject()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pool.prototype.getAvailable=function(){if(0==arguments.length)return this.__stack.getCount();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pool.prototype.getMaxSize=function(){if(0==arguments.length)return this._maxSize;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pool.prototype.getMinSize=function(){if(0==arguments.length)return this._minSize;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pool.prototype.getSize=function(){if(0==arguments.length)return this.__createObjectCounter.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pool.prototype.put=function(item){if(1==arguments.length)return!fm.liveswitch.Global.equals(item,null)&&!this.__isDestroyed&&(this.__stack.push(item),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pool.prototype.setMaxSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxSize=fm.liveswitch.Global.toInt(value)},Pool.prototype.setMinSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._minSize=fm.liveswitch.Global.toInt(value)},Pool}();liveswitch.Pool=Pool}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ProtocolTypeWrapper=function(){function ProtocolTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_7=__arguments[0];this._value=value_7}return ProtocolTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.ProtocolTypeWrapper]"},ProtocolTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.ProtocolType.Udp?"Udp":this._value==fm.liveswitch.ProtocolType.Tcp?"Tcp":this._value==fm.liveswitch.ProtocolType.Tls?"Tls":this._value==fm.liveswitch.ProtocolType.Unknown?"Unknown":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProtocolTypeWrapper}();liveswitch.ProtocolTypeWrapper=ProtocolTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SourceLanguageWrapper=function(){function SourceLanguageWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_8=__arguments[0];this._value=value_8}return SourceLanguageWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.SourceLanguageWrapper]"},SourceLanguageWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.SourceLanguage.CSharp?"CSharp":this._value==fm.liveswitch.SourceLanguage.Java?"Java":this._value==fm.liveswitch.SourceLanguage.ObjectiveC?"ObjectiveC":this._value==fm.liveswitch.SourceLanguage.TypeScript?"TypeScript":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceLanguageWrapper}();liveswitch.SourceLanguageWrapper=SourceLanguageWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var JsonSerializer=function(){function JsonSerializer(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return JsonSerializer.prototype.getTypeString=function(){return"[fm.liveswitch.JsonSerializer]"},JsonSerializer.charToUnicodeString=function(value){if(1==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]);var ch=fm.liveswitch.JsonSerializer.intToHex(value>>12&15),ch2=fm.liveswitch.JsonSerializer.intToHex(value>>8&15),ch3=fm.liveswitch.JsonSerializer.intToHex(value>>4&15),ch4=fm.liveswitch.JsonSerializer.intToHex(15&value);return fm.liveswitch.StringExtensions.concat(["\\u",String.fromCharCode(ch),String.fromCharCode(ch2),String.fromCharCode(ch3),String.fromCharCode(ch4)])}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeBoolean=function(valueJson){if(1==arguments.length){if(!fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson)){if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var boolResult=!1,_var0=new fm.liveswitch.Holder(boolResult),_var1=fm.liveswitch.ParseAssistant.tryParseBooleanValue(valueJson,_var0);if(boolResult=_var0.getValue(),_var1)return boolResult}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeBooleanArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))return null;if(arrayJson=fm.liveswitch.StringExtensions.trim(arrayJson),fm.liveswitch.Global.equals(arrayJson,"null"))return null;var flagArray=null;if(fm.liveswitch.Global.equals(arrayJson.charCodeAt(0),91))if(arrayJson=fm.liveswitch.StringExtensions.substring(arrayJson,1,fm.liveswitch.StringExtensions.getLength(arrayJson)-2),fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))flagArray=new Array(0);else{var strArray=fm.liveswitch.StringExtensions.split(arrayJson,[44]);flagArray=new Array(strArray.length);for(var i=0;i<strArray.length;i++)flagArray[i]=fm.liveswitch.JsonSerializer.deserializeBoolean(fm.liveswitch.StringExtensions.trim(strArray[i]))}return flagArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeDecimal=function(valueJson){if(1==arguments.length){if(!fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson)){if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var decimalResult=0,_var0=new fm.liveswitch.Holder(decimalResult),_var1=fm.liveswitch.ParseAssistant.tryParseDecimalValue(valueJson,_var0);if(decimalResult=_var0.getValue(),_var1)return decimalResult}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeDecimalArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))return null;if(arrayJson=fm.liveswitch.StringExtensions.trim(arrayJson),fm.liveswitch.Global.equals(arrayJson,"null"))return null;var numArray=null;if(fm.liveswitch.Global.equals(arrayJson.charCodeAt(0),91))if(arrayJson=fm.liveswitch.StringExtensions.substring(arrayJson,1,fm.liveswitch.StringExtensions.getLength(arrayJson)-2),fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))numArray=new Array(0);else{var strArray=fm.liveswitch.StringExtensions.split(arrayJson,[44]);numArray=new Array(strArray.length);for(var i=0;i<strArray.length;i++)numArray[i]=fm.liveswitch.JsonSerializer.deserializeDecimal(fm.liveswitch.StringExtensions.trim(strArray[i]))}return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeDictionary=function(dictionaryJson,createDictionaryCallback,deserializeValueCallback){if(3==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dictionaryJson,createDictionaryCallback,(function(dictionary,key,valueJson){dictionary[key]=deserializeValueCallback(valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeDouble=function(valueJson){if(1==arguments.length){if(!fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson)){if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var doubleResult=0,_var0=new fm.liveswitch.Holder(doubleResult),_var1=fm.liveswitch.ParseAssistant.tryParseDoubleValue(valueJson,_var0);if(doubleResult=_var0.getValue(),_var1)return doubleResult}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeDoubleArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))return null;if(arrayJson=fm.liveswitch.StringExtensions.trim(arrayJson),fm.liveswitch.Global.equals(arrayJson,"null"))return null;var numArray=null;if(fm.liveswitch.Global.equals(arrayJson.charCodeAt(0),91))if(arrayJson=fm.liveswitch.StringExtensions.substring(arrayJson,1,fm.liveswitch.StringExtensions.getLength(arrayJson)-2),fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))numArray=new Array(0);else{var strArray=fm.liveswitch.StringExtensions.split(arrayJson,[44]);numArray=new Array(strArray.length);for(var i=0;i<strArray.length;i++)numArray[i]=fm.liveswitch.JsonSerializer.deserializeDouble(fm.liveswitch.StringExtensions.trim(strArray[i]))}return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeFloat=function(valueJson){if(1==arguments.length){if(!fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson)){if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var floatResult=0,_var0=new fm.liveswitch.Holder(floatResult),_var1=fm.liveswitch.ParseAssistant.tryParseFloatValue(valueJson,_var0);if(floatResult=_var0.getValue(),_var1)return floatResult}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeFloatArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))return null;if(arrayJson=fm.liveswitch.StringExtensions.trim(arrayJson),fm.liveswitch.Global.equals(arrayJson,"null"))return null;var numArray=null;if(fm.liveswitch.Global.equals(arrayJson.charCodeAt(0),91))if(arrayJson=fm.liveswitch.StringExtensions.substring(arrayJson,1,fm.liveswitch.StringExtensions.getLength(arrayJson)-2),fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))numArray=new Array(0);else{var strArray=fm.liveswitch.StringExtensions.split(arrayJson,[44]);numArray=new Array(strArray.length);for(var i=0;i<strArray.length;i++)numArray[i]=fm.liveswitch.JsonSerializer.deserializeFloat(fm.liveswitch.StringExtensions.trim(strArray[i]))}return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeGuid=function(valueJson){if(1==arguments.length){if(!fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson)){if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var empty=fm.liveswitch.Guid.empty,_var0=new fm.liveswitch.Holder(empty),_var1=fm.liveswitch.ParseAssistant.tryParseGuidValue(fm.liveswitch.JsonSerializer.deserializeString(valueJson),_var0);if(empty=_var0.getValue(),_var1)return empty}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeGuidArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))return null;if(arrayJson=fm.liveswitch.StringExtensions.trim(arrayJson),fm.liveswitch.Global.equals(arrayJson,"null"))return null;var guidArray=null;if(fm.liveswitch.Global.equals(arrayJson.charCodeAt(0),91))if(arrayJson=fm.liveswitch.StringExtensions.substring(arrayJson,1,fm.liveswitch.StringExtensions.getLength(arrayJson)-2),fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))guidArray=new Array(0);else{var strArray=fm.liveswitch.StringExtensions.split(arrayJson,[44]);guidArray=new Array(strArray.length);for(var i=0;i<strArray.length;i++)guidArray[i]=fm.liveswitch.JsonSerializer.deserializeGuid(fm.liveswitch.StringExtensions.trim(strArray[i]))}return guidArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeInteger=function(valueJson){if(1==arguments.length){if(!fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson)){if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var intResult=0,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(valueJson,_var0);if(intResult=_var0.getValue(),_var1)return intResult}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeIntegerArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))return null;if(arrayJson=fm.liveswitch.StringExtensions.trim(arrayJson),fm.liveswitch.Global.equals(arrayJson,"null"))return null;var numArray=null;if(fm.liveswitch.Global.equals(arrayJson.charCodeAt(0),91))if(arrayJson=fm.liveswitch.StringExtensions.substring(arrayJson,1,fm.liveswitch.StringExtensions.getLength(arrayJson)-2),fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))numArray=new Array(0);else{var strArray=fm.liveswitch.StringExtensions.split(arrayJson,[44]);numArray=new Array(strArray.length);for(var i=0;i<strArray.length;i++)numArray[i]=fm.liveswitch.JsonSerializer.deserializeInteger(fm.liveswitch.StringExtensions.trim(strArray[i]))}return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeLong=function(valueJson){if(1==arguments.length){if(!fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson)){if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var longResult=0,_var0=new fm.liveswitch.Holder(longResult),_var1=fm.liveswitch.ParseAssistant.tryParseLongValue(valueJson,_var0);if(longResult=_var0.getValue(),_var1)return longResult}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeLongArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))return null;if(arrayJson=fm.liveswitch.StringExtensions.trim(arrayJson),fm.liveswitch.Global.equals(arrayJson,"null"))return null;var numArray=null;if(fm.liveswitch.Global.equals(arrayJson.charCodeAt(0),91))if(arrayJson=fm.liveswitch.StringExtensions.substring(arrayJson,1,fm.liveswitch.StringExtensions.getLength(arrayJson)-2),fm.liveswitch.StringExtensions.isNullOrEmpty(arrayJson))numArray=new Array(0);else{var strArray=fm.liveswitch.StringExtensions.split(arrayJson,[44]);numArray=new Array(strArray.length);for(var i=0;i<strArray.length;i++)numArray[i]=fm.liveswitch.JsonSerializer.deserializeLong(fm.liveswitch.StringExtensions.trim(strArray[i]))}return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeObject=function(json,creator,callback){if(3==arguments.length){if(fm.liveswitch.Global.equals(json,null))return null;if(json=fm.liveswitch.StringExtensions.trim(json),fm.liveswitch.Global.equals(json,"null")||fm.liveswitch.StringExtensions.getLength(json)<2)return null;var local=creator();if(fm.liveswitch.Global.equals(json.charCodeAt(0),123)&&fm.liveswitch.Global.equals(json.charCodeAt(fm.liveswitch.StringExtensions.getLength(json)-1),125)&&fm.liveswitch.StringExtensions.getLength(json)>2){json=fm.liveswitch.StringExtensions.concat(fm.liveswitch.StringExtensions.substring(json,1,fm.liveswitch.StringExtensions.getLength(json)-2),",");for(var num=0,num2=0,flag=!1,num3=-2,none=fm.liveswitch.StringType.None,startIndex=0,num5=0,valueJson=fm.liveswitch.StringExtensions.empty,str2=fm.liveswitch.StringExtensions.empty,i=0;i<fm.liveswitch.StringExtensions.getLength(json);i++){var ch=json.charCodeAt(i),flag2=fm.liveswitch.Global.equals(num3,i-1),flag3=!1;if(!flag){var _var0=ch;do{if(91==_var0){num2++,flag3=!0;break}if(93==_var0){num2--,flag3=!0;break}if(123==_var0){num++,flag3=!0;break}if(125==_var0){num--,flag3=!0;break}}while(0)}if(!flag3&&(flag&&fm.liveswitch.Global.equals(ch,92)&&!flag2&&(num3=i,flag3=!0),!flag3)){if(fm.liveswitch.Global.equals(num,0)&&fm.liveswitch.Global.equals(num2,0)){var _var1=ch;do{if(44==_var1){flag||(str2=fm.liveswitch.StringExtensions.trim(fm.liveswitch.StringExtensions.substring(json,num5,i-num5)),callback(local,fm.liveswitch.JsonSerializer.deserializeString(valueJson),str2),startIndex=i+1),flag3=!0;break}if(58==_var1){flag||(valueJson=fm.liveswitch.StringExtensions.trim(fm.liveswitch.StringExtensions.substring(json,startIndex,i-startIndex)),num5=i+1),flag3=!0;break}}while(0)}if(!flag3&&(fm.liveswitch.Global.equals(ch,39)||fm.liveswitch.Global.equals(ch,34))&&!flag2){var type2=fm.liveswitch.Global.equals(ch,34)?fm.liveswitch.StringType.Double:fm.liveswitch.StringType.Single;flag?fm.liveswitch.Global.equals(none,type2)&&(flag=!1,none=fm.liveswitch.StringType.None):(flag=!0,none=type2),flag3=!0}}}}return local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeObjectArray=function(json,deserializer){if(2==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeRawArray(json);if(fm.liveswitch.Global.equals(list,null))return null;for(var list2=new Array,_i=0,list_3=list;_i<list_3.length;_i++){var str=list_3[_i],item=deserializer(str);fm.liveswitch.ArrayExtensions.add(list2,item)}return list2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeObjectFast=function(json,creator,callback){if(3==arguments.length){var local=fm.liveswitch.JsonSerializer.deserializeObject(json,creator,callback);return fm.liveswitch.Global.equals(local,null)||local.setSerialized(json),local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeRaw=function(dataJson){if(1==arguments.length)return fm.liveswitch.StringExtensions.isNullOrEmpty(dataJson)?null:fm.liveswitch.StringExtensions.trim(dataJson);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeRawArray=function(json){if(1==arguments.length){if(fm.liveswitch.Global.equals(json,null))return null;if(json=fm.liveswitch.StringExtensions.trim(json),fm.liveswitch.Global.equals(json,"null")||fm.liveswitch.StringExtensions.getLength(json)<2)return null;var list=new Array;if(fm.liveswitch.Global.equals(json.charCodeAt(0),91)&&fm.liveswitch.Global.equals(json.charCodeAt(fm.liveswitch.StringExtensions.getLength(json)-1),93)&&fm.liveswitch.StringExtensions.getLength(json)>2)for(var num=0,startIndex=0,flag=!1,num3=-2,none=fm.liveswitch.StringType.None,i=1;i<fm.liveswitch.StringExtensions.getLength(json)-1;i++){var ch=json.charCodeAt(i),flag2=fm.liveswitch.Global.equals(num3,i-1);if(!flag){var _var0=ch;do{if(123==_var0){fm.liveswitch.Global.equals(num,0)&&(startIndex=i),num++;break}if(125==_var0){num--,fm.liveswitch.Global.equals(num,0)&&fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.substring(json,startIndex,i-startIndex+1));break}}while(0)}if(flag&&fm.liveswitch.Global.equals(ch,92)&&!flag2)num3=i;else if((fm.liveswitch.Global.equals(ch,39)||fm.liveswitch.Global.equals(ch,34))&&!flag2){var type2=fm.liveswitch.Global.equals(ch,34)?fm.liveswitch.StringType.Double:fm.liveswitch.StringType.Single;flag?fm.liveswitch.Global.equals(none,type2)&&(flag=!1,none=fm.liveswitch.StringType.None):(flag=!0,none=type2)}}return list}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeString=function(valueJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(valueJson))return null;if(valueJson=fm.liveswitch.StringExtensions.trim(valueJson),fm.liveswitch.Global.equals(valueJson,"null"))return null;var flag=fm.liveswitch.StringExtensions.startsWith(valueJson,'"')||fm.liveswitch.StringExtensions.startsWith(valueJson,"'"),flag2=fm.liveswitch.StringExtensions.endsWith(valueJson,'"')||fm.liveswitch.StringExtensions.endsWith(valueJson,"'");return flag&&flag2?fm.liveswitch.JsonSerializer.unescapeString(fm.liveswitch.JsonSerializer.trimQuotes(valueJson)):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.deserializeStringArray=function(arrayJson){if(1==arguments.length){if(fm.liveswitch.Global.equals(arrayJson,null))return null;for(var str=null,list=new Array,str2="array-start",i=0;i<fm.liveswitch.StringExtensions.getLength(arrayJson);i++){var ch=arrayJson.charCodeAt(i),_var0=str2;do{if("array-start"==_var0){if(fm.liveswitch.Global.equals(ch,91))str2="value-start";else if(!fm.liveswitch.Global.equals(ch,32)&&fm.liveswitch.Global.equals(ch,9)&&!fm.liveswitch.Global.equals(ch,10)&&!fm.liveswitch.Global.equals(ch,13))return null;break}if("value-start"==_var0){if(fm.liveswitch.Global.equals(ch,93))str2="array-end";else if(fm.liveswitch.Global.equals(ch,34))str="",str2="in-string";else if(fm.liveswitch.Global.equals(ch,110))str=null,str2="in-null-n";else if(!(fm.liveswitch.Global.equals(ch,32)||fm.liveswitch.Global.equals(ch,9)||fm.liveswitch.Global.equals(ch,10)||fm.liveswitch.Global.equals(ch,13)))return null;break}if("in-null-n"==_var0){if(!fm.liveswitch.Global.equals(ch,117))return null;str2="in-null-nu";break}if("in-null-nu"==_var0){if(fm.liveswitch.Global.equals(ch,108)){str2="in-null-nul";break}return null}if("in-null-nul"==_var0){if(fm.liveswitch.Global.equals(ch,108)){fm.liveswitch.ArrayExtensions.add(list,null),str2="value-end";break}return null}if("in-string"==_var0){fm.liveswitch.Global.equals(ch,34)?(fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.JsonSerializer.unescapeString(fm.liveswitch.JsonSerializer.trimQuotes(fm.liveswitch.StringExtensions.trim(str)))),str=null,str2="value-end"):fm.liveswitch.Global.equals(ch,92)?(str=fm.liveswitch.StringExtensions.concat(str,"\\"),str2="in-string-escape"):str=fm.liveswitch.StringExtensions.concat(str,String.fromCharCode(ch));break}if("in-string-escape"==_var0){str=fm.liveswitch.StringExtensions.concat(str,String.fromCharCode(ch)),str2="in-string";break}if("value-end"==_var0){if(fm.liveswitch.Global.equals(ch,44))str2="value-start";else if(fm.liveswitch.Global.equals(ch,93))str2="array-end";else if(!(fm.liveswitch.Global.equals(ch,32)||fm.liveswitch.Global.equals(ch,9)||fm.liveswitch.Global.equals(ch,10)||fm.liveswitch.Global.equals(ch,13)))return null;break}if(fm.liveswitch.Global.equals(str2,"array-end")&&!fm.liveswitch.Global.equals(ch,32)&&!fm.liveswitch.Global.equals(ch,9)&&!fm.liveswitch.Global.equals(ch,10)&&!fm.liveswitch.Global.equals(ch,13))return null;break}while(0)}return fm.liveswitch.Global.equals(str2,"array-end")?fm.liveswitch.ArrayExtensions.toArray(list):null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.escapeString=function(text){if(1==arguments.length){for(var builder=new fm.liveswitch.StringBuilder,startIndex=-1,i=0;i<fm.liveswitch.StringExtensions.getLength(text);i++){var ch=text.charCodeAt(i);if(ch>126)fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append(fm.liveswitch.JsonSerializer.charToUnicodeString(ch));else{var _var0=ch;do{if(8==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append("\\b");break}if(12==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append("\\f");break}if(10==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append("\\n");break}if(13==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append("\\r");break}if(9==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append("\\t");break}if(34==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append('\\"');break}if(47==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append("\\/");break}if(92==_var0){fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),builder.append("\\\\");break}fm.liveswitch.Global.equals(startIndex,-1)&&(startIndex=i);break}while(0)}}return fm.liveswitch.Global.equals(startIndex,-1)||builder.append(text,startIndex,fm.liveswitch.StringExtensions.getLength(text)-startIndex),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.intToHex=function(value){if(1==arguments.length)return(value=fm.liveswitch.Global.toInt(arguments[0]))<=9?value+48:value-10+97;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.isValidJson=function(json){if(1==arguments.length)return(new fm.liveswitch.JsonChecker).checkString(json);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeBoolean=function(value){if(1==arguments.length)return null==value?"null":value?"true":"false";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeBooleanArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeBoolean(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeDecimal=function(value){if(1==arguments.length)return null==value?"null":fm.liveswitch.NumberExtensions.toString(value,fm.liveswitch.CultureInfo.getInvariantCulture());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeDecimalArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeDecimal(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeDictionary=function(dictionary,serializeValueCallback){if(2==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dictionary,(function(d,jsonObject){for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(d);_i<_a.length;_i++){var str=_a[_i];jsonObject[str]=serializeValueCallback(d[str])}}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeDouble=function(value){if(1==arguments.length)return null==value?"null":fm.liveswitch.NumberExtensions.toString(value,fm.liveswitch.CultureInfo.getInvariantCulture());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeDoubleArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeDouble(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeFloat=function(value){if(1==arguments.length)return null==value?"null":fm.liveswitch.NumberExtensions.toString(value,fm.liveswitch.CultureInfo.getInvariantCulture());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeFloatArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeFloat(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeGuid=function(value){if(1==arguments.length)return null==value?"null":fm.liveswitch.StringExtensions.concat('"',value.toString(),'"');throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeGuidArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeGuid(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeInteger=function(value){if(1==arguments.length)return null==value?"null":fm.liveswitch.NumberExtensions.toString(value,fm.liveswitch.CultureInfo.getInvariantCulture());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeIntegerArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeInteger(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeLong=function(value){if(1==arguments.length)return null==value?"null":fm.liveswitch.NumberExtensions.toString(value,fm.liveswitch.CultureInfo.getInvariantCulture());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeLongArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeLong(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeObject=function(source,callback){if(2==arguments.length){if(fm.liveswitch.Global.equals(source,null))return"null";var dictionary={};callback(source,dictionary);for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getKeys(dictionary);_i<_a.length;_i++){var str=_a[_i];fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.concat(fm.liveswitch.JsonSerializer.serializeString(str),":",dictionary[str]))}return fm.liveswitch.StringExtensions.concat("{",fm.liveswitch.StringExtensions.join(",",fm.liveswitch.ArrayExtensions.toArray(list)),"}")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeObjectArray=function(objects,serializer){if(2==arguments.length){if(fm.liveswitch.Global.equals(objects,null))return"null";if(fm.liveswitch.Global.equals(objects.length,0))return"[]";for(var strArray=new Array(objects.length),i=0;i<objects.length;i++)strArray[i]=serializer(objects[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeObjectFast=function(source,callback){if(2==arguments.length)return fm.liveswitch.Global.equals(source,null)?"null":(source.getIsSerialized()&&!source.getIsDirty()||source.setSerialized(fm.liveswitch.JsonSerializer.serializeObject(source,callback)),source.getSerialized());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeRaw=function(dataJson){if(1==arguments.length)return dataJson;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeRawArray=function(jsons){if(1==arguments.length)return fm.liveswitch.Global.equals(jsons,null)?"null":fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",jsons),"]");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeString=function(value){if(1==arguments.length)return fm.liveswitch.Global.equals(value,null)?"null":fm.liveswitch.StringExtensions.concat('"',fm.liveswitch.JsonSerializer.escapeString(value),'"');throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.serializeStringArray=function(array){if(1==arguments.length){if(fm.liveswitch.Global.equals(array,null))return"null";for(var strArray=new Array(array.length),i=0;i<array.length;i++)strArray[i]=fm.liveswitch.JsonSerializer.serializeString(array[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.trimQuotes=function(value){if(1==arguments.length){if(fm.liveswitch.StringExtensions.getLength(value)>1){var ch=value.charCodeAt(0),ch2=value.charCodeAt(fm.liveswitch.StringExtensions.getLength(value)-1);fm.liveswitch.Global.equals(ch,ch2)&&(fm.liveswitch.Global.equals(ch,39)||fm.liveswitch.Global.equals(ch,34))&&(value=fm.liveswitch.StringExtensions.substring(value,1,fm.liveswitch.StringExtensions.getLength(value)-2))}return value}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.unescapeString=function(text){if(1==arguments.length){for(var builder=new fm.liveswitch.StringBuilder,startIndex=-1,i=0;i<fm.liveswitch.StringExtensions.getLength(text);i++){var ch=text.charCodeAt(i);if(fm.liveswitch.Global.equals(ch,92)){if(fm.liveswitch.Global.equals(startIndex,-1)||(builder.append(text,startIndex,i-startIndex),startIndex=-1),fm.liveswitch.Global.equals(i,fm.liveswitch.StringExtensions.getLength(text)-1))continue;var ch2=text.charCodeAt(i+1),_var0=ch2;do{if(98==_var0){builder.append("\b");break}if(102==_var0){builder.append("\f");break}if(110==_var0){builder.append("\n");break}if(114==_var0){builder.append("\r");break}if(116==_var0){builder.append("\t");break}if(47==_var0){builder.append("/");break}if(117==_var0){i<fm.liveswitch.StringExtensions.getLength(text)-5?(builder.append(String.fromCharCode(fm.liveswitch.JsonSerializer.unicodeStringToChar(fm.liveswitch.StringExtensions.substring(text,i,6)))),i+=4):builder.append("u");break}if(120==_var0){i<fm.liveswitch.StringExtensions.getLength(text)-3?(builder.append(String.fromCharCode(fm.liveswitch.JsonSerializer.unicodeStringToChar(fm.liveswitch.StringExtensions.substring(text,i,4)))),i+=2):builder.append("x");break}builder.append(String.fromCharCode(ch2));break}while(0);i++}else fm.liveswitch.Global.equals(startIndex,-1)&&(startIndex=i)}return fm.liveswitch.Global.equals(startIndex,-1)||builder.append(text,startIndex,fm.liveswitch.StringExtensions.getLength(text)-startIndex),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer.unicodeStringToChar=function(value){if(1==arguments.length){if(fm.liveswitch.StringExtensions.getLength(value)<2)throw new fm.liveswitch.Exception("Unicode string has invalid length.");return fm.liveswitch.Convert.toInt32(value.substring(2),16)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonSerializer}();liveswitch.JsonSerializer=JsonSerializer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Serializer=function(_super){function Serializer(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(Serializer,_super),Serializer.prototype.getTypeString=function(){return"[fm.liveswitch.Serializer],"+_super.prototype.getTypeString.call(this)},Serializer}(fm.liveswitch.JsonSerializer);liveswitch.Serializer=Serializer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StateMachine=function(){function StateMachine(initialState){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var initialState_1=__arguments[0];this.fmliveswitchStateMachineInit(),this.__pendingPromises={},this.__transitions={},this.__transitionReachabilityMatrix={},this.__states=new Array,this.__transitionsLock=new Object,this.setSystemTimestamp(-1),this.setLastStateTicks(-1),this.setStateValue(this.stateToValue(initialState_1))}return StateMachine.prototype.getTypeString=function(){return"[fm.liveswitch.StateMachine]"},StateMachine.prototype.fmliveswitchStateMachineInit=function(){this.__stateValue=0,this._lastStateTicks=0,this._systemTimestamp=0},StateMachine.prototype.addPendingPromise=function(state,promise,returnValue){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var item=new fm.liveswitch.PendingPromise(promise,returnValue),list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__pendingPromises,state,_var0);list=_var0.getValue(),_var1||(this.__pendingPromises[state]=list=new Array),fm.liveswitch.ArrayExtensions.add(list,item)},StateMachine.prototype.addTransition=function(fromState,toState){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var key=fm.liveswitch.NumberExtensions.toString(this.stateToValue(fromState)),item=fm.liveswitch.NumberExtensions.toString(this.stateToValue(toState)),list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__transitions,key,_var0);list=_var0.getValue(),_var1||(this.__transitions[key]=list=new Array),fm.liveswitch.ArrayExtensions.contains(list,item)||fm.liveswitch.ArrayExtensions.add(list,item),fm.liveswitch.ArrayExtensions.contains(this.__states,key)||fm.liveswitch.ArrayExtensions.add(this.__states,key),fm.liveswitch.ArrayExtensions.contains(this.__states,item)||fm.liveswitch.ArrayExtensions.add(this.__states,item),this.computeTransitionMatrix()},StateMachine.prototype.canTransition=function(toState){if(1==arguments.length){var item=fm.liveswitch.NumberExtensions.toString(this.stateToValue(toState)),list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__transitions,fm.liveswitch.NumberExtensions.toString(this.getStateValue()),_var0);return list=_var0.getValue(),!!_var1&&fm.liveswitch.ArrayExtensions.contains(list,item)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.checkReachable=function(toState){if(1==arguments.length){var str=fm.liveswitch.NumberExtensions.toString(this.getStateValue());return this.__transitionReachabilityMatrix[str][toState]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.computeTransitionMatrix=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.HashExtensions.clear(this.__transitionReachabilityMatrix);for(var _i=0,_a=this.__states;_i<_a.length;_i++){for(var str=_a[_i],discoveredToStates={},_b=0,_c=this.__states;_b<_c.length;_b++){var str2=_c[_b];discoveredToStates[str2]=!1}this.exploreStates(str,discoveredToStates),this.__transitionReachabilityMatrix[str]=discoveredToStates}},StateMachine.prototype.exploreStates=function(fromState,discoveredToStates){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__transitions,fromState,_var0);if(list=_var0.getValue(),_var1)for(var _i=0,list_4=list;_i<list_4.length;_i++){var str=list_4[_i];discoveredToStates[str]||(discoveredToStates[str]=!0,this.exploreStates(str,discoveredToStates))}},StateMachine.prototype.getLastStateMillis=function(){if(0==arguments.length){var lastStateTicks=this.getLastStateTicks();return fm.liveswitch.Global.equals(lastStateTicks,-1)?-1:fm.liveswitch.MathAssistant.floor(lastStateTicks/fm.liveswitch.Constants.getTicksPerMillisecond())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.getLastStateTicks=function(){if(0==arguments.length)return this._lastStateTicks;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.getPromise=function(state,returnValue){if(2==arguments.length){var toState=fm.liveswitch.NumberExtensions.toString(this.stateToValue(state)),promise=new fm.liveswitch.Promise;return fm.liveswitch.Global.equals(this.getStateValue(),this.stateToValue(state))?(promise.resolve(returnValue),promise):this.checkReachable(toState)?(this.addPendingPromise(toState,promise,returnValue),promise):(promise.reject(new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Cannot transition to state {0}.",state.toString()))),promise)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.getState=function(){if(0==arguments.length)return this.valueToState(this.__stateValue);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.getStateValue=function(){if(0==arguments.length)return this.__stateValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.getSystemTimestamp=function(){if(0==arguments.length)return this._systemTimestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.isReachable=function(state){if(1==arguments.length){var toState=fm.liveswitch.NumberExtensions.toString(this.stateToValue(state));return this.checkReachable(toState)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.setLastStateTicks=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._lastStateTicks=fm.liveswitch.Global.toInt(value)},StateMachine.prototype.setStateValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]);var timestamp=fm.liveswitch.Global.toInt(fm.liveswitch.ManagedStopwatch.getTimestamp());fm.liveswitch.Global.equals(this.getSystemTimestamp(),-1)||this.setLastStateTicks(timestamp-this.getSystemTimestamp()),this.setSystemTimestamp(timestamp),this.__stateValue=fm.liveswitch.Global.toInt(value)},StateMachine.prototype.setSystemTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._systemTimestamp=fm.liveswitch.Global.toInt(value)},StateMachine.prototype.transition=function(toState){if(1==arguments.length)return!!this.canTransition(toState)&&(this.setStateValue(this.stateToValue(toState)),this.validatePendingPromises(),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StateMachine.prototype.validatePendingPromises=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(this.__pendingPromises);_i<_a.length;_i++){var str=_a[_i];if(fm.liveswitch.Global.equals(fm.liveswitch.NumberExtensions.toString(this.getStateValue()),str)){for(var _b=0,_c=this.__pendingPromises[str];_b<_c.length;_b++){_c[_b].resolve()}fm.liveswitch.HashExtensions.remove(this.__pendingPromises,str)}else if(!this.checkReachable(str)){for(var _d=0,_e=this.__pendingPromises[str];_d<_e.length;_d++){_e[_d].reject(new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Cannot transition to state {0}.",str.toString())))}fm.liveswitch.HashExtensions.remove(this.__pendingPromises,str)}}},StateMachine}();liveswitch.StateMachine=StateMachine}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StringTypeWrapper=function(){function StringTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_9=__arguments[0];this._value=value_9}return StringTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.StringTypeWrapper]"},StringTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.StringType.None?"None":this._value==fm.liveswitch.StringType.Single?"Single":this._value==fm.liveswitch.StringType.Double?"Double":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StringTypeWrapper}();liveswitch.StringTypeWrapper=StringTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LinkedListNode=function(){function LinkedListNode(item){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var item_1=__arguments[0];this.setValue(item_1)}return LinkedListNode.prototype.getTypeString=function(){return"[fm.liveswitch.LinkedListNode]"},LinkedListNode.prototype.getNext=function(){if(0==arguments.length)return this._next;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LinkedListNode.prototype.getPrevious=function(){if(0==arguments.length)return this._previous;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LinkedListNode.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LinkedListNode.prototype.setNext=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._next=value},LinkedListNode.prototype.setPrevious=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._previous=value},LinkedListNode.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},LinkedListNode}();liveswitch.LinkedListNode=LinkedListNode}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LinkedListEnumerator=function(){function LinkedListEnumerator(root){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var root_1=__arguments[0];this.fmliveswitchLinkedListEnumeratorInit(),this.__root=root_1}return LinkedListEnumerator.prototype.getTypeString=function(){return"[fm.liveswitch.LinkedListEnumerator]"},LinkedListEnumerator.prototype.fmliveswitchLinkedListEnumeratorInit=function(){this.__started=!1},LinkedListEnumerator.prototype.getCurrent=function(){if(0==arguments.length)return this.__currentNode.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LinkedListEnumerator.prototype.getCurrentNode=function(){if(0==arguments.length)return this.__currentNode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LinkedListEnumerator.prototype.moveNext=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__currentNode,null)&&!this.__started?(this.__started=!0,this.__currentNode=this.__root):this.__currentNode=this.__currentNode.getNext(),!fm.liveswitch.Global.equals(this.__currentNode,null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LinkedListEnumerator.prototype.reset=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__started=!1,this.__currentNode=null},LinkedListEnumerator}();liveswitch.LinkedListEnumerator=LinkedListEnumerator}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var InternalConcurrentQueue=function(){function InternalConcurrentQueue(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this._backingData=new Array}return InternalConcurrentQueue.prototype.getTypeString=function(){return"[fm.liveswitch.InternalConcurrentQueue]"},InternalConcurrentQueue.prototype.enqueue=function(item){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this._backingData,item)},InternalConcurrentQueue.prototype.getCount=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.getCount(this._backingData);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentQueue.prototype.getIsEmpty=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getCount(),0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentQueue.prototype.tryDequeue=function(item){if(1==arguments.length)return this.getIsEmpty()?(item.setValue(null),!1):(item.setValue(this._backingData[0]),fm.liveswitch.ArrayExtensions.removeAt(this._backingData,0),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentQueue.prototype.tryPeek=function(item){if(1==arguments.length)return this.getIsEmpty()?(item.setValue(null),!1):(item.setValue(this._backingData[0]),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentQueue}();liveswitch.InternalConcurrentQueue=InternalConcurrentQueue}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var InternalConcurrentStack=function(){function InternalConcurrentStack(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this._backingData=new Array}return InternalConcurrentStack.prototype.getTypeString=function(){return"[fm.liveswitch.InternalConcurrentStack]"},InternalConcurrentStack.prototype.clear=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.clear(this._backingData)},InternalConcurrentStack.prototype.getCount=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.getCount(this._backingData);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentStack.prototype.getIsEmpty=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getCount(),0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentStack.prototype.push=function(item){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this._backingData,item)},InternalConcurrentStack.prototype.tryPeek=function(result){if(1==arguments.length)return this.getIsEmpty()?(result.setValue(null),!1):(result.setValue(this._backingData[fm.liveswitch.ArrayExtensions.getCount(this._backingData)-1]),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentStack.prototype.tryPop=function(result){if(1==arguments.length)return this.getIsEmpty()?(result.setValue(null),!1):(result.setValue(this._backingData[fm.liveswitch.ArrayExtensions.getCount(this._backingData)-1]),fm.liveswitch.ArrayExtensions.removeAt(this._backingData,fm.liveswitch.ArrayExtensions.getCount(this._backingData)-1),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalConcurrentStack}();liveswitch.InternalConcurrentStack=InternalConcurrentStack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedConcurrentDictionary=function(){function ManagedConcurrentDictionary(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=null;var hashCallback=__arguments[0];fm.liveswitch.Global.equals(hashCallback,null)?this.__dictionary=new fm.liveswitch.InternalConcurrentDictionary(this.hash.bind(this)):this.__dictionary=new fm.liveswitch.InternalConcurrentDictionary(hashCallback)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");hashCallback=__arguments[0];fm.liveswitch.Global.equals(hashCallback,null)?this.__dictionary=new fm.liveswitch.InternalConcurrentDictionary(this.hash.bind(this)):this.__dictionary=new fm.liveswitch.InternalConcurrentDictionary(hashCallback)}}return ManagedConcurrentDictionary.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedConcurrentDictionary]"},ManagedConcurrentDictionary.prototype.addOrUpdate=function(){if(2==arguments.length){var key=arguments[0],addValue_1=arguments[1];return this.__dictionary.addOrUpdate(key,addValue_1,(function(k,v){return addValue_1}))}if(3==arguments.length){key=arguments[0];var addValue=arguments[1],updateValueFactory_1=arguments[2];return this.__dictionary.addOrUpdate(key,addValue,(function(k,v){return updateValueFactory_1(k,v)}))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.clear=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__dictionary.clear()},ManagedConcurrentDictionary.prototype.containsKey=function(key){if(1==arguments.length)return this.__dictionary.containsKey(key);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.getCount=function(){if(0==arguments.length)return this.__dictionary.getCount();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.getIsEmpty=function(){if(0==arguments.length)return this.__dictionary.getIsEmpty();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.getKeys=function(){if(0==arguments.length)return this.__dictionary.getKeys();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.getOrAdd=function(key,valueFactory){if(2==arguments.length)return this.__dictionary.getOrAdd(key,(function(k){return valueFactory(k)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.getValues=function(){if(0==arguments.length)return this.__dictionary.getValues();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.hash=function(key){if(1==arguments.length)return key.toString();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.tryAdd=function(key,value){if(2==arguments.length)return this.__dictionary.tryAdd(key,value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.tryGetValue=function(key,value){if(2==arguments.length){var _var0=this.__dictionary.tryGetValue(key,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.tryRemove=function(){if(1==arguments.length){var key=arguments[0],local=null,_var0=new fm.liveswitch.Holder(local),_var1=this.__dictionary.tryRemove(key,_var0);return local=_var0.getValue(),_var1}if(2==arguments.length){key=arguments[0];var value=arguments[1];return _var0=this.__dictionary.tryRemove(key,value)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary.prototype.tryUpdate=function(key,newValue,comparisonValue){if(3==arguments.length)return this.__dictionary.tryUpdate(key,newValue,comparisonValue);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentDictionary}();liveswitch.ManagedConcurrentDictionary=ManagedConcurrentDictionary}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedConcurrentQueue=function(){function ManagedConcurrentQueue(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__queue=new fm.liveswitch.InternalConcurrentQueue}return ManagedConcurrentQueue.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedConcurrentQueue]"},ManagedConcurrentQueue.prototype.enqueue=function(item){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__queue.enqueue(item)},ManagedConcurrentQueue.prototype.getCount=function(){if(0==arguments.length)return this.__queue.getCount();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentQueue.prototype.getIsEmpty=function(){if(0==arguments.length)return this.__queue.getIsEmpty();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentQueue.prototype.tryDequeue=function(item){if(1==arguments.length){var _var0=this.__queue.tryDequeue(item);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentQueue.prototype.tryPeek=function(item){if(1==arguments.length){var _var0=this.__queue.tryPeek(item);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentQueue}();liveswitch.ManagedConcurrentQueue=ManagedConcurrentQueue}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedConcurrentStack=function(){function ManagedConcurrentStack(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__stack=new fm.liveswitch.InternalConcurrentStack}return ManagedConcurrentStack.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedConcurrentStack]"},ManagedConcurrentStack.prototype.clear=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__stack.clear()},ManagedConcurrentStack.prototype.getCount=function(){if(0==arguments.length)return this.__stack.getCount();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentStack.prototype.getIsEmpty=function(){if(0==arguments.length)return this.__stack.getIsEmpty();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentStack.prototype.push=function(item){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__stack.push(item)},ManagedConcurrentStack.prototype.tryPeek=function(result){if(1==arguments.length){var _var0=this.__stack.tryPeek(result);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentStack.prototype.tryPop=function(result){if(1==arguments.length){var _var0=this.__stack.tryPop(result);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConcurrentStack}();liveswitch.ManagedConcurrentStack=ManagedConcurrentStack}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MutablePair=function(){function MutablePair(item1,item2){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var item1_1=__arguments[0],item2_1=__arguments[1];this.setItem1(item1_1),this.setItem2(item2_1)}return MutablePair.prototype.getTypeString=function(){return"[fm.liveswitch.MutablePair]"},MutablePair.prototype.getItem1=function(){if(0==arguments.length)return this._item1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MutablePair.prototype.getItem2=function(){if(0==arguments.length)return this._item2;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MutablePair.prototype.setItem1=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item1=value},MutablePair.prototype.setItem2=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item2=value},MutablePair}();liveswitch.MutablePair=MutablePair}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MutableUnit=function(){function MutableUnit(item){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var item_2=__arguments[0];this.setItem(item_2)}return MutableUnit.prototype.getTypeString=function(){return"[fm.liveswitch.MutableUnit]"},MutableUnit.prototype.getItem=function(){if(0==arguments.length)return this._item;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MutableUnit.prototype.setItem=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item=value},MutableUnit}();liveswitch.MutableUnit=MutableUnit}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Pair=function(){function Pair(item1,item2){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var item1_2=__arguments[0],item2_2=__arguments[1];this.setItem1(item1_2),this.setItem2(item2_2)}return Pair.prototype.getTypeString=function(){return"[fm.liveswitch.Pair]"},Pair.prototype.getHashCode=function(){if(0==arguments.length)return fm.liveswitch.ObjectExtensions.getHashCode(this.getItem1())+fm.liveswitch.ObjectExtensions.getHashCode(this.getItem2());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pair.prototype.getItem1=function(){if(0==arguments.length)return this._item1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pair.prototype.getItem2=function(){if(0==arguments.length)return this._item2;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Pair.prototype.setItem1=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item1=value},Pair.prototype.setItem2=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item2=value},Pair}();liveswitch.Pair=Pair}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LogEventLogProvider=function(_super){function LogEventLogProvider(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.LogLevel.Info;var level=__arguments[0];(_this=_super.call(this)||this).__events=new Array,_this.__eventsLock=new Object,_super.prototype.setLevel.call(_this,level)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");level=__arguments[0];(_this=_super.call(this)||this).__events=new Array,_this.__eventsLock=new Object,_super.prototype.setLevel.call(_this,level)}return _this}return __extends(LogEventLogProvider,_super),LogEventLogProvider.prototype.getTypeString=function(){return"[fm.liveswitch.LogEventLogProvider],"+_super.prototype.getTypeString.call(this)},LogEventLogProvider.prototype.clear=function(){if(0==arguments.length){var eventArray=void 0;return eventArray=fm.liveswitch.ArrayExtensions.toArray(this.__events),this.__events=new Array,eventArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventLogProvider.prototype.doLog=function(logEvent){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__events,logEvent)},LogEventLogProvider.prototype.getEvents=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__events);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventLogProvider}(fm.liveswitch.LogProvider);liveswitch.LogEventLogProvider=LogEventLogProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Triple=function(){function Triple(item1,item2,item3){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var item1_3=__arguments[0],item2_3=__arguments[1],item3_1=__arguments[2];this.setItem1(item1_3),this.setItem2(item2_3),this.setItem3(item3_1)}return Triple.prototype.getTypeString=function(){return"[fm.liveswitch.Triple]"},Triple.prototype.getItem1=function(){if(0==arguments.length)return this._item1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Triple.prototype.getItem2=function(){if(0==arguments.length)return this._item2;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Triple.prototype.getItem3=function(){if(0==arguments.length)return this._item3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Triple.prototype.setItem1=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item1=value},Triple.prototype.setItem2=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item2=value},Triple.prototype.setItem3=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item3=value},Triple}();liveswitch.Triple=Triple}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Unit=function(){function Unit(item){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var item_3=__arguments[0];this.setItem(item_3)}return Unit.prototype.getTypeString=function(){return"[fm.liveswitch.Unit]"},Unit.prototype.getItem=function(){if(0==arguments.length)return this._item;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Unit.prototype.setItem=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._item=value},Unit}();liveswitch.Unit=Unit}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CompareResultWrapper=function(){function CompareResultWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_10=__arguments[0];this._value=value_10}return CompareResultWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CompareResultWrapper]"},CompareResultWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CompareResult.Equal?"Equal":this._value==fm.liveswitch.CompareResult.Negative?"Negative":this._value==fm.liveswitch.CompareResult.Positive?"Positive":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CompareResultWrapper}();liveswitch.CompareResultWrapper=CompareResultWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Constants=function(){function Constants(){fm.liveswitch.Constants.fmliveswitchConstantsInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Constants.prototype.getTypeString=function(){return"[fm.liveswitch.Constants]"},Constants.getHoursPerDay=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___hoursPerDay;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getMillisecondsPerDay=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerDay;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getMillisecondsPerHour=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerHour;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getMillisecondsPerMinute=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerMinute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getMillisecondsPerSecond=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerSecond;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getMinutesPerDay=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___minutesPerDay;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getMinutesPerHour=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___minutesPerHour;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getNanosecondsPerTick=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___nanosecondsPerTick;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getSecondsPerDay=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___secondsPerDay;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getSecondsPerHour=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___secondsPerHour;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getSecondsPerMinute=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___secondsPerMinute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getTicksPerDay=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerDay;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getTicksPerHour=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerHour;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getTicksPerMillisecond=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerMillisecond;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getTicksPerMinute=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerMinute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.getTicksPerSecond=function(){if(fm.liveswitch.Constants.fmliveswitchConstantsInitialize(),0==arguments.length)return fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerSecond;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Constants.fmliveswitchConstantsInitialize=function(){fm.liveswitch.Constants.__fmliveswitchConstantsInitialized||fm.liveswitch.Constants.__fmliveswitchConstantsInitializing||(fm.liveswitch.Constants.__fmliveswitchConstantsInitializing=!0,Constants.fm_liveswitch_Constants___hoursPerDay=0,Constants.fm_liveswitch_Constants___millisecondsPerDay=0,Constants.fm_liveswitch_Constants___millisecondsPerHour=0,Constants.fm_liveswitch_Constants___millisecondsPerMinute=0,Constants.fm_liveswitch_Constants___millisecondsPerSecond=0,Constants.fm_liveswitch_Constants___minutesPerDay=0,Constants.fm_liveswitch_Constants___minutesPerHour=0,Constants.fm_liveswitch_Constants___nanosecondsPerTick=0,Constants.fm_liveswitch_Constants___secondsPerDay=0,Constants.fm_liveswitch_Constants___secondsPerHour=0,Constants.fm_liveswitch_Constants___secondsPerMinute=0,Constants.fm_liveswitch_Constants___ticksPerDay=0,Constants.fm_liveswitch_Constants___ticksPerHour=0,Constants.fm_liveswitch_Constants___ticksPerMillisecond=0,Constants.fm_liveswitch_Constants___ticksPerMinute=0,Constants.fm_liveswitch_Constants___ticksPerSecond=0,fm.liveswitch.Constants.fm_liveswitch_Constants___nanosecondsPerTick=100,fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerMillisecond=1e4,fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerSecond=1e3,fm.liveswitch.Constants.fm_liveswitch_Constants___secondsPerMinute=60,fm.liveswitch.Constants.fm_liveswitch_Constants___minutesPerHour=60,fm.liveswitch.Constants.fm_liveswitch_Constants___hoursPerDay=24,fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerSecond=fm.liveswitch.Constants.getTicksPerMillisecond()*fm.liveswitch.Constants.getMillisecondsPerSecond(),fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerMinute=fm.liveswitch.Constants.getTicksPerSecond()*fm.liveswitch.Constants.getSecondsPerMinute(),fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerHour=fm.liveswitch.Constants.getTicksPerMinute()*fm.liveswitch.Constants.getMinutesPerHour(),fm.liveswitch.Constants.fm_liveswitch_Constants___ticksPerDay=fm.liveswitch.Constants.getTicksPerHour()*fm.liveswitch.Constants.getHoursPerDay(),fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerMinute=fm.liveswitch.Constants.getMillisecondsPerSecond()*fm.liveswitch.Constants.getSecondsPerMinute(),fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerHour=fm.liveswitch.Constants.getMillisecondsPerMinute()*fm.liveswitch.Constants.getMinutesPerHour(),fm.liveswitch.Constants.fm_liveswitch_Constants___millisecondsPerDay=fm.liveswitch.Constants.getMillisecondsPerHour()*fm.liveswitch.Constants.getHoursPerDay(),fm.liveswitch.Constants.fm_liveswitch_Constants___secondsPerHour=fm.liveswitch.Constants.getSecondsPerMinute()*fm.liveswitch.Constants.getMinutesPerHour(),fm.liveswitch.Constants.fm_liveswitch_Constants___secondsPerDay=fm.liveswitch.Constants.getSecondsPerHour()*fm.liveswitch.Constants.getHoursPerDay(),fm.liveswitch.Constants.fm_liveswitch_Constants___minutesPerDay=fm.liveswitch.Constants.getMinutesPerHour()*fm.liveswitch.Constants.getHoursPerDay(),fm.liveswitch.Constants.__fmliveswitchConstantsInitialized=!0,fm.liveswitch.Constants.__fmliveswitchConstantsInitializing=!1)},Constants.__fmliveswitchConstantsInitialized=!1,Constants.__fmliveswitchConstantsInitializing=!1,Constants}();liveswitch.Constants=Constants}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataBufferStream=function(){function DataBufferStream(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var buffer=__arguments[0];this.fmliveswitchDataBufferStreamInit(),this.__buffer=buffer}else if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var dataBufferSize=__arguments[0];(__arguments=new Array(2))[0]=dataBufferSize,__arguments[1]=!1;var dataBufferSize_1=__arguments[0],littleEndian=__arguments[1];(__arguments=new Array(1))[0]=fm.liveswitch.DataBuffer.allocate(dataBufferSize_1,littleEndian);buffer=__arguments[0];this.fmliveswitchDataBufferStreamInit(),this.__buffer=buffer}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");dataBufferSize=__arguments[0],littleEndian=__arguments[1];(__arguments=new Array(1))[0]=fm.liveswitch.DataBuffer.allocate(dataBufferSize,littleEndian);buffer=__arguments[0];this.fmliveswitchDataBufferStreamInit(),this.__buffer=buffer}}return DataBufferStream.prototype.getTypeString=function(){return"[fm.liveswitch.DataBufferStream]"},DataBufferStream.prototype.fmliveswitchDataBufferStreamInit=function(){this.__bitPosition=0,this.__position=0},DataBufferStream.prototype.getAvailable=function(){if(0==arguments.length)return this.getLength()-this.__position;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.getBitPosition=function(){if(0==arguments.length)return this.__bitPosition;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.getBuffer=function(){if(0==arguments.length)return this.__buffer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.getLength=function(){if(0==arguments.length)return this.__buffer.getLength();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.getPosition=function(){if(0==arguments.length)return this.__position;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.nextByte=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__bitPosition=0,this.__position++},DataBufferStream.prototype.peek=function(){if(0==arguments.length)return this.__buffer.read8(this.getPosition());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read=function(length){if(1==arguments.length){length=fm.liveswitch.Global.toInt(arguments[0]);var buffer=this.__buffer.subset(this.__position,length);return this.__position=this.__position+length,buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read1=function(){if(0==arguments.length){var flag=this.__buffer.read1(this.__position,this.__bitPosition);return this.__bitPosition=this.__bitPosition+1,fm.liveswitch.Global.equals(this.__bitPosition,8)&&(this.__position++,this.__bitPosition=0),flag}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read15=function(){if(0==arguments.length){var num=this.__buffer.read15(this.__position,this.__bitPosition);return this.__position++,this.__bitPosition=this.__bitPosition+7,this.__bitPosition>=8&&(this.__position++,this.__bitPosition=this.__bitPosition-8),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read16=function(){if(0==arguments.length){var num=this.__buffer.read16(this.__position);return this.__position=this.__position+2,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read2=function(){if(0==arguments.length){var num=this.__buffer.read2(this.__position,this.__bitPosition);return this.__bitPosition=this.__bitPosition+2,this.__bitPosition>=8&&(this.__position++,this.__bitPosition=this.__bitPosition-8),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read24=function(){if(0==arguments.length){var num=this.__buffer.read24(this.__position);return this.__position=this.__position+3,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read3=function(){if(0==arguments.length){var num=this.__buffer.read3(this.__position,this.__bitPosition);return this.__bitPosition=this.__bitPosition+3,this.__bitPosition>=8&&(this.__position++,this.__bitPosition=this.__bitPosition-8),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read32=function(){if(0==arguments.length){var num=this.__buffer.read32(this.__position);return this.__position=this.__position+4,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read4=function(){if(0==arguments.length){var num=this.__buffer.read4(this.__position,this.__bitPosition);return this.__bitPosition=this.__bitPosition+4,this.__bitPosition>=8&&(this.__position++,this.__bitPosition=this.__bitPosition-8),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read40=function(){if(0==arguments.length){var num=this.__buffer.read40(this.__position);return this.__position=this.__position+5,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read48=function(){if(0==arguments.length){var num=this.__buffer.read48(this.__position);return this.__position=this.__position+6,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read56=function(){if(0==arguments.length){var num=this.__buffer.read56(this.__position);return this.__position=this.__position+7,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read64=function(){if(0==arguments.length){var num=this.__buffer.read64(this.__position);return this.__position=this.__position+8,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read7=function(){if(0==arguments.length){var num=this.__buffer.read7(this.__position,this.__bitPosition);return this.__bitPosition=this.__bitPosition+7,this.__bitPosition>=8&&(this.__position++,this.__bitPosition=this.__bitPosition-8),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.read8=function(){if(0==arguments.length){var num=this.__buffer.read8(this.__position);return this.__position++,num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.readByte=function(){if(0==arguments.length)return this.read8();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.readBytes=function(length){if(1==arguments.length){length=fm.liveswitch.Global.toInt(arguments[0]);var buffer=this.__buffer.subset(this.__position,length).toArray();return this.__position=this.__position+length,buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.setBitPosition=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__bitPosition=fm.liveswitch.Global.toInt(value)},DataBufferStream.prototype.setPosition=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__position=fm.liveswitch.Global.toInt(value)},DataBufferStream.prototype.write=function(buffer){if(1==arguments.length)return this.__buffer.write(buffer,this.__position),this.__position=this.__position+buffer.getLength(),this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.write16=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),this.__buffer.write16(value,this.__position),this.__position=this.__position+2,this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.write32=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),this.__buffer.write32(value,this.__position),this.__position=this.__position+4,this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.write64=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),this.__buffer.write64(value,this.__position),this.__position=this.__position+8,this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.write8=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),this.__buffer.write8(value,this.__position),this.__position++,this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream.prototype.writeBytes=function(){if(1==arguments.length){var data=arguments[0];return this.writeBytes(data,0,data.length)}if(3==arguments.length){data=arguments[0];var index=fm.liveswitch.Global.toInt(arguments[1]),length_22=fm.liveswitch.Global.toInt(arguments[2]);return this.getAvailable()<length_22&&this.getBuffer().resize(this.getBuffer().getLength()-this.getAvailable()+length_22),this.__buffer.writeBytes(data,index,length_22,this.__position),this.__position=this.__position+length_22,this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferStream}();liveswitch.DataBufferStream=DataBufferStream}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataBuffer=function(){function DataBuffer(){fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchDataBufferInit();else{if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var data=__arguments[0],index=__arguments[1],length_23=__arguments[2],littleEndian=__arguments[3];this.fmliveswitchDataBufferInit(),this.setInnerData(data),this.setIndex(index),this.setLength(length_23),this.setLittleEndian(littleEndian)}}return DataBuffer.prototype.getTypeString=function(){return"[fm.liveswitch.DataBuffer]"},DataBuffer.prototype.fmliveswitchDataBufferInit=function(){this._index=0,this._length=0,this._littleEndian=!1},DataBuffer.allocate=function(){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length){var count=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.DataBuffer.allocate(count,!1)}if(2==arguments.length){count=fm.liveswitch.Global.toInt(arguments[0]);var littleEndian=arguments[1];return fm.liveswitch.DataBuffer.wrap(new Uint8Array(count),littleEndian)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.areEqual=function(buffer1,buffer2){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),2==arguments.length){if(!fm.liveswitch.Global.equals(buffer1.getLength(),buffer2.getLength()))return!1;for(var i=0;i<buffer1.getLength();i++)if(!fm.liveswitch.Global.equals(buffer1.read8(i),buffer2.read8(i)))return!1;return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.fromBytes=function(){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length){var bytes=arguments[0];return fm.liveswitch.DataBuffer.wrap(bytes)}if(2==arguments.length){bytes=arguments[0];var littleEndian=arguments[1];return fm.liveswitch.DataBuffer.wrap(bytes,littleEndian)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.fromHexString=function(){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length){var hexString=arguments[0];return fm.liveswitch.DataBuffer.wrap(fm.liveswitch.BitAssistant.getHexBytes(hexString))}if(2==arguments.length){hexString=arguments[0];var littleEndian=arguments[1];return fm.liveswitch.DataBuffer.wrap(fm.liveswitch.BitAssistant.getHexBytes(hexString),littleEndian)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.fromJson=function(dataBufferJson){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dataBufferJson,(function(){return new fm.liveswitch.DataBuffer}),(function(dataBuffer,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"data")?dataBuffer.setInnerData(fm.liveswitch.Base64.decode(valueJson)):fm.liveswitch.Global.equals(str,"index")?dataBuffer.setIndex(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"length")?dataBuffer.setLength(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"littleEndian")&&dataBuffer.setLittleEndian(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.fromJsonArray=function(dataBuffersJson){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(dataBuffersJson,fm.liveswitch.DataBuffer.fromJson.bind(fm.liveswitch.DataBuffer));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.getEmpty=function(){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),0==arguments.length)return fm.liveswitch.DataBuffer.allocate(0,!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.toJson=function(dataBuffer){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dataBuffer,(function(obj,jsonObject){var b=dataBuffer.toArray();jsonObject.data=fm.liveswitch.Base64.encode(b),jsonObject.index=fm.liveswitch.JsonSerializer.serializeInteger(0),jsonObject.length=fm.liveswitch.JsonSerializer.serializeInteger(b.length),jsonObject.littleEndian=fm.liveswitch.JsonSerializer.serializeBoolean(dataBuffer.getLittleEndian())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.toJsonArray=function(dataBuffers){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(dataBuffers,fm.liveswitch.DataBuffer.toJson.bind(fm.liveswitch.DataBuffer));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.wrap=function(){if(fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize(),1==arguments.length){var data=arguments[0];return fm.liveswitch.DataBuffer.wrap(data,0,-1,!1)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isNumber(arguments[1]))){data=arguments[0];var index=fm.liveswitch.Global.toInt(arguments[1]);return fm.liveswitch.DataBuffer.wrap(data,index,-1,!1)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isNumber(arguments[2]))){data=arguments[0],index=fm.liveswitch.Global.toInt(arguments[1]);var length_24=fm.liveswitch.Global.toInt(arguments[2]);return fm.liveswitch.DataBuffer.wrap(data,index,length_24,!1)}if(4==arguments.length){data=arguments[0],index=fm.liveswitch.Global.toInt(arguments[1]);var length_25=fm.liveswitch.Global.toInt(arguments[2]),littleEndian=arguments[3];return fm.liveswitch.Global.equals(data,null)||index<0?null:(length_25<0&&(length_25=data.length-index),new fm.liveswitch.DataBuffer(data,index,length_25,littleEndian))}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isBoolean(arguments[2]))){data=arguments[0],index=fm.liveswitch.Global.toInt(arguments[1]),littleEndian=arguments[2];return fm.liveswitch.DataBuffer.wrap(data,index,-1,littleEndian)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isBoolean(arguments[1]))){data=arguments[0],littleEndian=arguments[1];return fm.liveswitch.DataBuffer.wrap(data,0,-1,littleEndian)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.and=function(value,offset){if(2==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),this.write8(this.read8(offset)&value,offset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.append=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var buffer=arguments[0];if(!fm.liveswitch.Global.equals(buffer,null)&&buffer.getLength()>0){var newLength=this.getLength()+buffer.getLength();if(newLength>this.getLength()){var length_26=this.getLength();this.resize(newLength),this.write(buffer,length_26),length_26+=buffer.getLength()}}return this}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.DataBuffer]")))){var buffers=arguments[0];if(!fm.liveswitch.Global.equals(buffers,null)&&buffers.length>0){for(var length_27=this.getLength(),_i=0,buffers_1=buffers;_i<buffers_1.length;_i++){length_27+=(buffer=buffers_1[_i]).getLength()}if(length_27>this.getLength()){var offset=this.getLength();this.resize(length_27);for(var _a=0,buffers_2=buffers;_a<buffers_2.length;_a++){buffer=buffers_2[_a];this.write(buffer,offset),offset+=buffer.getLength()}}}return this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.canResize=function(newLength,offset){if(2==arguments.length){if(newLength=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),this.getIsPooled()){var num=newLength-this.getLength();if(num<=0)return!0;if(offset>=this.getIndex()){if(this.getIndex()+newLength>=this.getData().length)return!1}else if(offset<0){if(this.getIndex()+newLength>this.getData().length)return!1}else if(this.getIndex()-offset+newLength>=this.getData().length)return!1}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.clone=function(){if(0==arguments.length)return this.clone(this.getLittleEndian());if(1==arguments.length){return this.subset(0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.copy=function(){if(0==arguments.length)return this.copy(!1);if(1==arguments.length){var usePool=arguments[0],buffer=void 0;return(buffer=usePool?fm.liveswitch.DataBuffer.fm_liveswitch_DataBuffer___dataBufferPool.take(this.getLength()):fm.liveswitch.DataBuffer.allocate(this.getLength(),this.getLittleEndian())).write(this),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.free=function(){if(0==arguments.length)return this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.getData=function(){if(0==arguments.length){if(fm.liveswitch.Global.equals(this.getInnerData(),null))throw new fm.liveswitch.Exception("This data buffer has been invalidated.");return this.getInnerData()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.getIndex=function(){if(0==arguments.length)return this._index;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.getInnerData=function(){if(0==arguments.length)return this._innerData;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.getIsPooled=function(){if(0==arguments.length)return!1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.getIsSubset=function(){if(0==arguments.length)return!1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.getLength=function(){if(0==arguments.length)return this._length;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.getLittleEndian=function(){if(0==arguments.length)return this._littleEndian;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.keep=function(){if(0==arguments.length)return this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.or=function(value,offset){if(2==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),this.write8(this.read8(offset)|value,offset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.prepend=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var length_28=(buffer=arguments[0]).getLength();length_28<=this.getIndex()?(this.setIndex(this.getIndex()-length_28),this.setLength(this.getLength()+length_28)):this.resize(this.getLength()+length_28,0);var offset=0;return this.write(buffer,offset),offset+=buffer.getLength(),this}if(1!=arguments.length||!(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.DataBuffer]"))))throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var buffers=arguments[0];if(!fm.liveswitch.Global.equals(buffers,null)&&buffers.length>0){for(var num=0,_i=0,buffers_3=buffers;_i<buffers_3.length;_i++){num+=(buffer=buffers_3[_i]).getLength()}num<=this.getIndex()?(this.setIndex(this.getIndex()-num),this.setLength(this.getLength()+num)):this.resize(this.getLength()+num,0);offset=0;for(var _a=0,buffers_4=buffers;_a<buffers_4.length;_a++){var buffer=buffers_4[_a];this.write(buffer,offset),offset+=buffer.getLength()}}},DataBuffer.prototype.read1=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes1(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read10=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes10(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read10Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read10(offset,bitOffset);return num>511&&(num-=1024),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read11=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes11(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read11Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read11(offset,bitOffset);return num>1023&&(num-=2048),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read12=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes12(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read12Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read12(offset,bitOffset);return num>2047&&(num-=4096),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read13=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes13(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read13Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read13(offset,bitOffset);return num>4095&&(num-=8192),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read14=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes14(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read14Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read14(offset,bitOffset);return num>8191&&(num-=16384),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read15=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes15(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read15Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read15(offset,bitOffset);return num>16383&&(num-=32768),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read16=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes16(this.getData(),this.getIndex()+offset,this.getLittleEndian())}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+2),this.read16(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read16Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]),num=this.read16(offset);return num>32767&&(num-=65536),num}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+2),this.read16Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read17=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes17(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read17Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read17(offset,bitOffset);return num>65535&&(num-=131072),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read18=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes18(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read18Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read18(offset,bitOffset);return num>131071&&(num-=262144),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read19=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes19(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read19Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read19(offset,bitOffset);return num>262143&&(num-=524288),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read2=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes2(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read20=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes20(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read20Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read20(offset,bitOffset);return num>524287&&(num-=1048576),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read21=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes21(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read21Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read21(offset,bitOffset);return num>1048575&&(num-=2097152),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read22=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes22(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read22Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read22(offset,bitOffset);return num>2097151&&(num-=4194304),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read23=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes23(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read23Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read23(offset,bitOffset);return num>4194303&&(num-=8388608),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read24=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes24(this.getData(),this.getIndex()+offset,this.getLittleEndian())}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+3),this.read24(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read24Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]),num=this.read24(offset);return num>8388607&&(num-=16777216),num}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+3),this.read24Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read2Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read2(offset,bitOffset);return num>1&&(num-=4),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read3=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes3(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read32=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes32(this.getData(),this.getIndex()+offset,this.getLittleEndian())}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+4),this.read32(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read32Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]),num=this.read32(offset);return num>2147483647&&(num-=4294967296),num}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+4),this.read32Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read3Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read3(offset,bitOffset);return num>3&&(num-=8),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read4=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes4(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read40=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes40(this.getData(),this.getIndex()+offset,this.getLittleEndian())}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+5),this.read40(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read40Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]),num=this.read40(offset);return num>549755813887&&(num-=1099511627776),num}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+5),this.read40Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read48=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes48(this.getData(),this.getIndex()+offset,this.getLittleEndian())}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+6),this.read48(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read48Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]),num=this.read48(offset);return num>0x7fffffffffff&&(num-=281474976710656),num}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+6),this.read48Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read4Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read4(offset,bitOffset);return num>7&&(num-=16),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read5=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes5(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read56=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes56(this.getData(),this.getIndex()+offset,this.getLittleEndian())}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+7),this.read56(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read56Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]),num=this.read56(offset);return num>0x80000000000000&&(num-=72057594037927940),num}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+7),this.read56Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read5Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read5(offset,bitOffset);return num>15&&(num-=32),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read6=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes6(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read64=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes64(this.getData(),this.getIndex()+offset,this.getLittleEndian())}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+8),this.read64(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read64Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return this.read64(offset)}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+8),this.read64Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read6Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read6(offset,bitOffset);return num>31&&(num-=64),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read7=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes7(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read7Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read7(offset,bitOffset);return num>63&&(num-=128),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read8=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Binary.fromBytes8(this.getData(),this.getIndex()+offset)}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+1),this.read8(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read8Signed=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]),num=this.read8(offset);return num>127&&(num-=256),num}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var offsetPlus=arguments[1];return offsetPlus.setValue(offset+1),this.read8Signed(offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read9=function(offset,bitOffset){if(2==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Binary.fromBytes9(this.getData(),this.getIndex()+offset,bitOffset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.read9Signed=function(offset,bitOffset){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var num=this.read9(offset,bitOffset);return num>255&&(num-=512),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.readUtf8String=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.Encoding.getUtf8().getString(this.getData(),this.getIndex()+offset,this.getLength()-offset)}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var length_29=fm.liveswitch.Global.toInt(arguments[1]);return fm.liveswitch.Encoding.getUtf8().getString(this.getData(),this.getIndex()+offset,length_29)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.resize=function(){if(1==arguments.length){var newLength=fm.liveswitch.Global.toInt(arguments[0]);this.resize(newLength,this.getLength())}else if(2==arguments.length){newLength=fm.liveswitch.Global.toInt(arguments[0]);var offset=fm.liveswitch.Global.toInt(arguments[1]);this.resize(newLength,offset,!1)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");newLength=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var setZero=arguments[2];if(fm.liveswitch.Global.equals(offset,-1)&&(offset=this.getLength()),offset<0)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Offset '{0}' is invalid.",fm.liveswitch.NumberExtensions.toString(offset)));var length_30=newLength-this.getLength();if(length_30<0){if(offset+(length_30=-length_30)>this.getLength())throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Truncating at offset '{0}' for length '{1}' would exceed data buffer length '{2}'.",fm.liveswitch.NumberExtensions.toString(offset),fm.liveswitch.NumberExtensions.toString(length_30),fm.liveswitch.NumberExtensions.toString(this.getLength())));fm.liveswitch.Global.equals(offset,0)?this.setIndex(this.getIndex()+length_30):fm.liveswitch.Global.equals(offset+length_30,this.getLength())||fm.liveswitch.BitAssistant.copy(this.getData(),this.getIndex()+offset+length_30,this.getData(),this.getIndex()+offset,this.getLength()-offset-length_30)}else if(length_30>0){if(offset>this.getLength())throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Offset '{0}' exceeds data buffer length '{1}'.",fm.liveswitch.NumberExtensions.toString(offset),fm.liveswitch.NumberExtensions.toString(this.getLength())));if(fm.liveswitch.Global.equals(offset,0)&&length_30<=this.getIndex())this.setIndex(this.getIndex()-length_30),setZero&&fm.liveswitch.BitAssistant.set(this.getData(),this.getIndex(),length_30,0);else if(fm.liveswitch.Global.equals(offset,this.getLength())&&this.getIndex()+this.getLength()+length_30<this.getData().length)setZero&&fm.liveswitch.BitAssistant.set(this.getData(),this.getIndex()+this.getLength(),length_30,0);else if(newLength>this.getData().length){if(this.getIsPooled())throw new fm.liveswitch.Exception("Cannot expand the underlying byte array of a pooled data buffer.");var destination=new Uint8Array(newLength);fm.liveswitch.BitAssistant.copy(this.getData(),this.getIndex(),destination,0,offset),fm.liveswitch.BitAssistant.copy(this.getData(),this.getIndex()+offset,destination,offset+length_30,this.getLength()-offset),this.setInnerData(destination)}else if(this.getIndex()+newLength>this.getData().length){var destinationIndex=this.getData().length-newLength;fm.liveswitch.BitAssistant.copy(this.getData(),this.getIndex(),this.getData(),destinationIndex,offset),fm.liveswitch.BitAssistant.copy(this.getData(),this.getIndex()+offset,this.getData(),destinationIndex+offset+length_30,this.getLength()-offset),this.setIndex(destinationIndex),setZero&&fm.liveswitch.BitAssistant.set(this.getData(),this.getIndex()+offset,length_30,0)}else fm.liveswitch.BitAssistant.copy(this.getData(),this.getIndex()+offset,this.getData(),this.getIndex()+offset+length_30,this.getLength()-offset),setZero&&fm.liveswitch.BitAssistant.set(this.getData(),this.getIndex()+offset,length_30,0)}this.setLength(newLength)}},DataBuffer.prototype.sequenceEquals=function(buffer){if(1==arguments.length)return fm.liveswitch.BitAssistant.sequencesAreEqual(this.getData(),this.getIndex(),buffer.getData(),buffer.getIndex(),this.getLength());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.sequenceEqualsConstantTime=function(buffer){if(1==arguments.length)return fm.liveswitch.BitAssistant.sequencesAreEqualConstantTime(this.getData(),this.getIndex(),buffer.getData(),buffer.getIndex(),this.getLength());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.set=function(){if(1==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]);this.set(value,0,this.getLength())}else if(2==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]);var offset=fm.liveswitch.Global.toInt(arguments[1]);fm.liveswitch.BitAssistant.set(this.getData(),this.getIndex()+offset,this.getLength()-offset,value)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var length_31=fm.liveswitch.Global.toInt(arguments[2]);fm.liveswitch.BitAssistant.set(this.getData(),this.getIndex()+offset,length_31,value)}},DataBuffer.prototype.setIndex=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._index=fm.liveswitch.Global.toInt(value)},DataBuffer.prototype.setInnerData=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._innerData=value},DataBuffer.prototype.setLength=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._length=fm.liveswitch.Global.toInt(value)},DataBuffer.prototype.setLittleEndian=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._littleEndian=value},DataBuffer.prototype.subset=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return this.subset(offset,this.getLength()-offset)}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var length_32=fm.liveswitch.Global.toInt(arguments[1]);return offset+length_32>this.getLength()||length_32<0?null:this.getIsPooled()?new fm.liveswitch.DataBufferSubset(this,this.getIndex()+offset,length_32):new fm.liveswitch.DataBuffer(this.getData(),this.getIndex()+offset,length_32,this.getLittleEndian())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.toArray=function(){if(0==arguments.length)return this.toBytes();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.toBytes=function(){if(0==arguments.length){var destination=new Uint8Array(this.getLength());return fm.liveswitch.BitAssistant.copy(this.getData(),this.getIndex(),destination,0,this.getLength()),destination}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.toHexString=function(){if(0==arguments.length)return fm.liveswitch.BitAssistant.getHexString(this.getData(),this.getIndex(),this.getLength());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.DataBuffer.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryKeep=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{return this.keep(),!0}catch(obj1){return!1}},DataBuffer.prototype.tryRead1=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes1(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead10=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes10(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead11=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes11(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead12=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes12(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead13=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes13(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead14=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes14(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead15=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes15(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead16=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes16(this.getData(),this.getIndex()+offset,this.getLittleEndian(),value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead17=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes17(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead18=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes18(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead19=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes19(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead2=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes2(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead20=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes20(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead21=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes21(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead22=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes22(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead23=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes23(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead24=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes24(this.getData(),this.getIndex()+offset,this.getLittleEndian(),value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead3=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes3(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead32=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes32(this.getData(),this.getIndex()+offset,this.getLittleEndian(),value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead4=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes4(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead40=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes40(this.getData(),this.getIndex()+offset,this.getLittleEndian(),value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead48=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes48(this.getData(),this.getIndex()+offset,this.getLittleEndian(),value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead5=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes5(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead56=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes56(this.getData(),this.getIndex()+offset,this.getLittleEndian(),value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead6=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes6(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead64=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes64(this.getData(),this.getIndex()+offset,this.getLittleEndian(),value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead7=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes7(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead8=function(offset,value){if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var _var0=fm.liveswitch.Binary.tryFromBytes8(this.getData(),this.getIndex()+offset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.tryRead9=function(offset,bitOffset,value){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]),bitOffset=fm.liveswitch.Global.toInt(arguments[1]);var _var0=fm.liveswitch.Binary.tryFromBytes9(this.getData(),this.getIndex()+offset,bitOffset,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write=function(){if(1==arguments.length){var buffer=arguments[0];this.write(buffer,0)}else if(2==arguments.length){buffer=arguments[0];var offset=fm.liveswitch.Global.toInt(arguments[1]);fm.liveswitch.BitAssistant.copy(buffer.getData(),buffer.getIndex(),this.getData(),this.getIndex()+offset,buffer.getLength())}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");buffer=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];offsetPlus.setValue(offset+buffer.getLength()),this.write(buffer,offset)}},DataBuffer.prototype.write1=function(value,offset,bitOffset){if(3==arguments.length)return offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes1(value,bitOffset,this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write10=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes10(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write11=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes11(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write12=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes12(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write13=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes13(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write14=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes14(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write15=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes15(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write16=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes16(value,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+2),this.write16(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write17=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes17(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write18=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes18(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write19=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes19(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write2=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes2(value,bitOffset,this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write20=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes20(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write21=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes21(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write22=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes22(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write23=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes23(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write24=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes24(value,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+3),this.write24(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write3=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes3(value,bitOffset,this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write32=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes32(value,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+4),this.write32(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write4=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes4(value,bitOffset,this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write40=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes40(value,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+5),this.write40(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write48=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes48(value,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+6),this.write48(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write5=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes5(value,bitOffset,this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write56=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes56(value,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+7),this.write56(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write6=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes6(value,bitOffset,this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write64=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes64(value,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+8),this.write64(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write7=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes7(value,bitOffset,this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write8=function(){if(2==arguments.length){var value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);return!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes8(value,this.getData(),this.getIndex()+offset),null)}if(3==arguments.length){value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]);var offsetPlus=arguments[2];return offsetPlus.setValue(offset+1),this.write8(value,offset)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.write9=function(value,offset,bitOffset){if(3==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),bitOffset=fm.liveswitch.Global.toInt(arguments[2]),!fm.liveswitch.Global.equals(fm.liveswitch.Binary.toBytes9(value,bitOffset,this.getLittleEndian(),this.getData(),this.getIndex()+offset),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.prototype.writeBytes=function(){if(1==arguments.length){var bytes=arguments[0];this.writeBytes(bytes,0,bytes.length,0)}else if(4==arguments.length){bytes=arguments[0];var bytesIndex=fm.liveswitch.Global.toInt(arguments[1]),bytesLength=fm.liveswitch.Global.toInt(arguments[2]);if((offset=fm.liveswitch.Global.toInt(arguments[3]))+bytesLength>this.getLength())throw new fm.liveswitch.Exception("Would write out of the allowed bounds for this data buffer.");fm.liveswitch.BitAssistant.copy(bytes,bytesIndex,this.getData(),this.getIndex()+offset,bytesLength)}else if(5==arguments.length){bytes=arguments[0],bytesIndex=fm.liveswitch.Global.toInt(arguments[1]),bytesLength=fm.liveswitch.Global.toInt(arguments[2]);var offset=fm.liveswitch.Global.toInt(arguments[3]),offsetPlus=arguments[4];offsetPlus.setValue(offset+bytesLength),this.writeBytes(bytes,bytesIndex,bytesLength,offset)}else if(3==arguments.length){bytes=arguments[0],bytesIndex=fm.liveswitch.Global.toInt(arguments[1]),offset=fm.liveswitch.Global.toInt(arguments[2]);this.writeBytes(bytes,bytesIndex,bytes.length-bytesIndex,offset)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");bytes=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]);this.writeBytes(bytes,0,bytes.length,offset)}},DataBuffer.prototype.xor=function(value,offset){if(2==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]),offset=fm.liveswitch.Global.toInt(arguments[1]),this.write8(this.read8(offset)^value,offset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBuffer.fmliveswitchDataBufferInitialize=function(){fm.liveswitch.DataBuffer.__fmliveswitchDataBufferInitialized||fm.liveswitch.DataBuffer.__fmliveswitchDataBufferInitializing||(fm.liveswitch.DataBuffer.__fmliveswitchDataBufferInitializing=!0,fm.liveswitch.DataBuffer.fm_liveswitch_DataBuffer___dataBufferPool=fm.liveswitch.DataBufferPool.getTracer(new fm.liveswitch.Type("[fm.liveswitch.DataBuffer]")),fm.liveswitch.DataBuffer.__fmliveswitchDataBufferInitialized=!0,fm.liveswitch.DataBuffer.__fmliveswitchDataBufferInitializing=!1)},DataBuffer.__fmliveswitchDataBufferInitialized=!1,DataBuffer.__fmliveswitchDataBufferInitializing=!1,DataBuffer}();liveswitch.DataBuffer=DataBuffer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataBufferPooled=function(_super){function DataBufferPooled(pool,data,length,littleEndian,tag){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(5!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var pool_2=__arguments[0],data_1=__arguments[1],length_33=__arguments[2],littleEndian_1=__arguments[3],tag_3=__arguments[4];return(_this=_super.call(this,data_1,0,length_33,littleEndian_1)||this).__pool=pool_2,_this.__counter=new fm.liveswitch.AtomicInteger,_this.__tag=tag_3,_this.keep(),_this}return __extends(DataBufferPooled,_super),DataBufferPooled.prototype.getTypeString=function(){return"[fm.liveswitch.DataBufferPooled],"+_super.prototype.getTypeString.call(this)},DataBufferPooled.prototype.decrementRetain=function(){if(0==arguments.length)return this.__counter.decrement();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPooled.prototype.free=function(){if(0==arguments.length)return this.__pool.returnBuffer(this,this.__tag),this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPooled.prototype.getIsPooled=function(){if(0==arguments.length)return!0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPooled.prototype.getRetainCount=function(){if(0==arguments.length)return this.__counter.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPooled.prototype.invalidate=function(){if(0==arguments.length){var innerData=_super.prototype.getInnerData.call(this);return _super.prototype.setInnerData.call(this,null),innerData}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPooled.prototype.keep=function(){if(0==arguments.length){if(fm.liveswitch.Global.equals(_super.prototype.getInnerData.call(this),null))throw new fm.liveswitch.Exception("DataBuffer already invalidated.");return this.__counter.increment(),this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPooled}(fm.liveswitch.DataBuffer);liveswitch.DataBufferPooled=DataBufferPooled}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataBufferSubset=function(_super){function DataBufferSubset(buffer,index,length){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var buffer_1=__arguments[0],index_1=__arguments[1],length_34=__arguments[2];return(_this=_super.call(this,null,index_1,length_34,buffer_1.getLittleEndian())||this).setParent(buffer_1),_this}return __extends(DataBufferSubset,_super),DataBufferSubset.prototype.getTypeString=function(){return"[fm.liveswitch.DataBufferSubset],"+_super.prototype.getTypeString.call(this)},DataBufferSubset.prototype.append=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){throw new fm.liveswitch.Exception("Cannot append to a DataBuffer subset.")}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.DataBuffer]")))){throw new fm.liveswitch.Exception("Cannot append to a DataBuffer subset.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.free=function(){if(0==arguments.length)return this.getParent().free(),this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.getData=function(){if(0==arguments.length)return this.getParent().getData();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.getIsPooled=function(){if(0==arguments.length)return this.getParent().getIsPooled();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.getIsSubset=function(){if(0==arguments.length)return!0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.getParent=function(){if(0==arguments.length)return this._parent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.keep=function(){if(0==arguments.length)return this.getParent().keep(),this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.prepend=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){throw new fm.liveswitch.Exception("Cannot prepend to a DataBuffer subset.")}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.DataBuffer]")))){throw new fm.liveswitch.Exception("Cannot prepend to a DataBuffer subset.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset.prototype.setParent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._parent=value},DataBufferSubset.prototype.subset=function(){if(1==arguments.length){var offset=fm.liveswitch.Global.toInt(arguments[0]);return this.getParent().subset(offset+_super.prototype.getIndex.call(this),_super.prototype.getLength.call(this)-offset)}if(2==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[0]);var length_35=fm.liveswitch.Global.toInt(arguments[1]);return this.getParent().subset(offset+_super.prototype.getIndex.call(this),length_35)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferSubset}(fm.liveswitch.DataBuffer);liveswitch.DataBufferSubset=DataBufferSubset}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LogEvent=function(){function LogEvent(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchLogEventInit();else{if(7!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var timestamp=__arguments[0],tag=__arguments[1],scope=__arguments[2],level=__arguments[3],message=__arguments[4],exception=__arguments[5],threadId=__arguments[6];this.fmliveswitchLogEventInit(),this.setTimestamp(timestamp),this.setTag(tag),this.setScope(scope),this.setLevel(level),this.setMessage(message),this.setException(exception),this.setThreadId(threadId)}}return LogEvent.prototype.getTypeString=function(){return"[fm.liveswitch.LogEvent]"},LogEvent.prototype.fmliveswitchLogEventInit=function(){this._threadId=0},LogEvent.fromJson=function(logEventJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(logEventJson,(function(){return new fm.liveswitch.LogEvent}),(function(logEvent,key,valueJson){var _var0=key;do{if("timestamp"==_var0){logEvent.setTimestamp(fm.liveswitch.Iso8601Timestamp.iso8601ToDateTime(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("tag"==_var0){logEvent.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("scope"==_var0){logEvent.setScope(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("level"==_var0){logEvent.setLevel(fm.liveswitch.LogEvent.stringToLogLevel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("message"==_var0){logEvent.setMessage(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("exception"==_var0){logEvent.setException(new fm.liveswitch.Exception(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("threadId"==_var0){logEvent.setThreadId(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.logLevelToString=function(logLevel){if(1==arguments.length){var _var0=logLevel;return _var0==fm.liveswitch.LogLevel.Verbose?"verbose":_var0==fm.liveswitch.LogLevel.Debug?"debug":_var0==fm.liveswitch.LogLevel.Info?"info":_var0==fm.liveswitch.LogLevel.Warn?"warn":_var0==fm.liveswitch.LogLevel.Error?"error":_var0==fm.liveswitch.LogLevel.Fatal?"fatal":"none"}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.stringToLogLevel=function(logLevelString){if(1==arguments.length){var _var0=logLevelString;return"verbose"==_var0?fm.liveswitch.LogLevel.Verbose:"debug"==_var0?fm.liveswitch.LogLevel.Debug:"info"==_var0?fm.liveswitch.LogLevel.Info:"warn"==_var0?fm.liveswitch.LogLevel.Warn:"error"==_var0?fm.liveswitch.LogLevel.Error:"fatal"==_var0?fm.liveswitch.LogLevel.Fatal:fm.liveswitch.LogLevel.None}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.toJson=function(logEvent){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(logEvent,(function(le,jsonObj){jsonObj.timestamp=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.Iso8601Timestamp.dateTimeToIso8601(logEvent.getTimestamp())),fm.liveswitch.Global.equals(logEvent.getTag(),null)||(jsonObj.tag=fm.liveswitch.JsonSerializer.serializeString(logEvent.getTag())),fm.liveswitch.Global.equals(logEvent.getScope(),null)||(jsonObj.scope=fm.liveswitch.JsonSerializer.serializeString(logEvent.getScope())),jsonObj.level=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.LogEvent.logLevelToString(logEvent.getLevel())),fm.liveswitch.Global.equals(logEvent.getMessage(),null)||(jsonObj.message=fm.liveswitch.JsonSerializer.serializeString(logEvent.getMessage())),fm.liveswitch.Global.equals(logEvent.getException(),null)||(jsonObj.exception=fm.liveswitch.JsonSerializer.serializeString(logEvent.getException().message)),jsonObj.threadId=fm.liveswitch.JsonSerializer.serializeLong(logEvent.getThreadId())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getLevel=function(){if(0==arguments.length)return this._level;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getLogLevel=function(){if(0==arguments.length)return this.getLevel();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getMessage=function(){if(0==arguments.length)return this._message;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getScope=function(){if(0==arguments.length)return this._scope;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getThreadId=function(){if(0==arguments.length)return this._threadId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.getTimestamp=function(){if(0==arguments.length)return this._timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},LogEvent.prototype.setLevel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._level=value},LogEvent.prototype.setLogLevel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setLevel(value)},LogEvent.prototype.setMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._message=value},LogEvent.prototype.setScope=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._scope=value},LogEvent.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},LogEvent.prototype.setThreadId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._threadId=fm.liveswitch.Global.toInt(value)},LogEvent.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._timestamp=value},LogEvent.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.LogEvent.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent.prototype.toString=function(){if(0==arguments.length){var product=fm.liveswitch.LogProvider.getProduct(),str2=fm.liveswitch.StringExtensions.format("[{0}][{1}][{2}] {3} [{4}][{5}] {6} {7}",[product,"0",fm.liveswitch.NumberExtensions.toString(this.getThreadId()),fm.liveswitch.LogProvider.getLogLevelString(this.getLevel()),fm.liveswitch.Global.equals(this.getTag(),null)?"-":this.getTag(),fm.liveswitch.Global.equals(this.getScope(),null)?"-":this.getScope(),fm.liveswitch.LogProvider.getPrefixTimestamp(this.getTimestamp()),this.getMessage()]);return fm.liveswitch.Global.equals(this.getException(),null)||(str2=fm.liveswitch.StringExtensions.concat(str2,fm.liveswitch.StringExtensions.format("\n{0}",this.getException().toString()))),str2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEvent}();liveswitch.LogEvent=LogEvent}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HashTypeWrapper=function(){function HashTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_11=__arguments[0];this._value=value_11}return HashTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.HashTypeWrapper]"},HashTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.HashType.Md5?"Md5":this._value==fm.liveswitch.HashType.Sha1?"Sha1":this._value==fm.liveswitch.HashType.Sha256?"Sha256":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HashTypeWrapper}();liveswitch.HashTypeWrapper=HashTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MacTypeWrapper=function(){function MacTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_12=__arguments[0];this._value=value_12}return MacTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.MacTypeWrapper]"},MacTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.MacType.HmacMd5?"HmacMd5":this._value==fm.liveswitch.MacType.HmacSha1?"HmacSha1":this._value==fm.liveswitch.MacType.HmacSha256?"HmacSha256":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MacTypeWrapper}();liveswitch.MacTypeWrapper=MacTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var UnixTimestamp=function(){function UnixTimestamp(){fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return UnixTimestamp.prototype.getTypeString=function(){return"[fm.liveswitch.UnixTimestamp]"},UnixTimestamp.dateTimeToUnix=function(dateTime){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return fm.liveswitch.UnixTimestamp.ticksToUnix(dateTime.getTicks());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.dateTimeToUnixMillis=function(dateTime){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return fm.liveswitch.UnixTimestamp.ticksToUnixMillis(dateTime.getTicks());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.getUtcNow=function(){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),0==arguments.length)return fm.liveswitch.UnixTimestamp.dateTimeToUnix(fm.liveswitch.DateTime.getUtcNow());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.getUtcNowMillis=function(){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),0==arguments.length)return fm.liveswitch.UnixTimestamp.dateTimeToUnixMillis(fm.liveswitch.DateTime.getUtcNow());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.ticksToUnix=function(ticks){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return ticks=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.MathAssistant.floor((ticks-fm.liveswitch.UnixTimestamp.fm_liveswitch_UnixTimestamp__baseTicks)/fm.liveswitch.Constants.getTicksPerSecond());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.ticksToUnixMillis=function(ticks){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return ticks=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.MathAssistant.floor((ticks-fm.liveswitch.UnixTimestamp.fm_liveswitch_UnixTimestamp__baseTicks)/fm.liveswitch.Constants.getTicksPerMillisecond());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.unixMillisToDateTime=function(unix){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return unix=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.DateTime(fm.liveswitch.UnixTimestamp.unixMillisToTicks(unix));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.unixMillisToTicks=function(unix){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return unix=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.UnixTimestamp.fm_liveswitch_UnixTimestamp__baseTicks+unix*fm.liveswitch.Constants.getTicksPerMillisecond();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.unixToDateTime=function(unix){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return unix=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.DateTime(fm.liveswitch.UnixTimestamp.unixToTicks(unix));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.unixToTicks=function(unix){if(fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize(),1==arguments.length)return unix=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.UnixTimestamp.fm_liveswitch_UnixTimestamp__baseTicks+unix*fm.liveswitch.Constants.getTicksPerSecond();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnixTimestamp.fmliveswitchUnixTimestampInitialize=function(){if(!fm.liveswitch.UnixTimestamp.__fmliveswitchUnixTimestampInitialized&&!fm.liveswitch.UnixTimestamp.__fmliveswitchUnixTimestampInitializing){fm.liveswitch.UnixTimestamp.__fmliveswitchUnixTimestampInitializing=!0,UnixTimestamp.fm_liveswitch_UnixTimestamp__baseTicks=0;var time=new fm.liveswitch.DateTime(1970,1,1,0,0,0);fm.liveswitch.UnixTimestamp.fm_liveswitch_UnixTimestamp__baseTicks=time.getTicks(),fm.liveswitch.UnixTimestamp.__fmliveswitchUnixTimestampInitialized=!0,fm.liveswitch.UnixTimestamp.__fmliveswitchUnixTimestampInitializing=!1}},UnixTimestamp.__fmliveswitchUnixTimestampInitialized=!1,UnixTimestamp.__fmliveswitchUnixTimestampInitializing=!1,UnixTimestamp}();liveswitch.UnixTimestamp=UnixTimestamp}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DoubleHolder=function(){function DoubleHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchDoubleHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchDoubleHolderInit(),this.setValue(value)}}return DoubleHolder.prototype.getTypeString=function(){return"[fm.liveswitch.DoubleHolder]"},DoubleHolder.prototype.fmliveswitchDoubleHolderInit=function(){this._value=0},DoubleHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DoubleHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},DoubleHolder}();liveswitch.DoubleHolder=DoubleHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Error=function(){function Error(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length);else if(2==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isError(arguments[1]))){var code=__arguments[0],exception=__arguments[1];this.setCode(code),this.setException(exception)}else{if(2!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[1])&&!fm.liveswitch.Util.isString(arguments[1]))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");code=__arguments[0];var message=__arguments[1];this.setCode(code),this.setMessage(message)}}return Error.prototype.getTypeString=function(){return"[fm.liveswitch.Error]"},Error.fromJson=function(errorJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(errorJson,(function(){return new fm.liveswitch.Error}),(function(error,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"code")?error.setCodeValue(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"message")&&error.setMessage(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.toJson=function(error){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(error,(function(obj,jsonObject){jsonObject.code=fm.liveswitch.JsonSerializer.serializeInteger(obj.getCodeValue()),fm.liveswitch.Global.equals(error.getMessage(),null)||(jsonObject.message=fm.liveswitch.JsonSerializer.serializeString(obj.getMessage()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.getCode=function(){if(0==arguments.length)return this._code;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.getCodeValue=function(){if(0==arguments.length)return this.getCode();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.getDescription=function(){if(0==arguments.length){var str=new fm.liveswitch.ErrorCodeWrapper(this.getCode()).toString(),message=this.getMessage();return fm.liveswitch.Global.equals(message,null)||(str=fm.liveswitch.StringExtensions.concat(str," ",message)),str=fm.liveswitch.StringExtensions.trimEnd(str,new Array(0)),fm.liveswitch.StringExtensions.endsWith(str,".")||(str=fm.liveswitch.StringExtensions.concat(str,".")),str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.getErrorCode=function(){if(0==arguments.length)return this.getCode();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.getMessage=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getException(),null)?null:this.getException().message;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.setCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._code=value},Error.prototype.setCodeValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.setCode(value)},Error.prototype.setErrorCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setCode(value)},Error.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},Error.prototype.setMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setException(fm.liveswitch.Global.equals(value,null)?null:new fm.liveswitch.Exception(value))},Error.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.Error.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error.prototype.toString=function(){if(0==arguments.length)return this.getDescription();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Error}();liveswitch.Error=Error}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ErrorCodeWrapper=function(){function ErrorCodeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_13=__arguments[0];this._value=value_13}return ErrorCodeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.ErrorCodeWrapper]"},ErrorCodeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.ErrorCode.SocketSendError?"SocketSendError":this._value==fm.liveswitch.ErrorCode.SocketReceiveError?"SocketReceiveError":this._value==fm.liveswitch.ErrorCode.SocketClosed?"SocketClosed":this._value==fm.liveswitch.ErrorCode.SocketSendBufferFull?"SocketSendBufferFull":this._value==fm.liveswitch.ErrorCode.IPProtocolMismatch?"IPProtocolMismatch":this._value==fm.liveswitch.ErrorCode.PacketTooLarge?"PacketTooLarge":this._value==fm.liveswitch.ErrorCode.NetworkUnreachable?"NetworkUnreachable":this._value==fm.liveswitch.ErrorCode.StunTryAlternate?"StunTryAlternate":this._value==fm.liveswitch.ErrorCode.StunBadRequest?"StunBadRequest":this._value==fm.liveswitch.ErrorCode.StunUnauthorized?"StunUnauthorized":this._value==fm.liveswitch.ErrorCode.StunTurnForbidden?"StunTurnForbidden":this._value==fm.liveswitch.ErrorCode.StunTurnMobilityForbidden?"StunTurnMobilityForbidden":this._value==fm.liveswitch.ErrorCode.StunUnknownAttribute?"StunUnknownAttribute":this._value==fm.liveswitch.ErrorCode.StunStaleCredentials?"StunStaleCredentials":this._value==fm.liveswitch.ErrorCode.StunIntegrityCheckFailure?"StunIntegrityCheckFailure":this._value==fm.liveswitch.ErrorCode.StunMissingUsername?"StunMissingUsername":this._value==fm.liveswitch.ErrorCode.StunTurnAllocationMismatch?"StunTurnAllocationMismatch":this._value==fm.liveswitch.ErrorCode.StunStaleNonce?"StunStaleNonce":this._value==fm.liveswitch.ErrorCode.StunAddressFamilyNotSupported?"StunAddressFamilyNotSupported":this._value==fm.liveswitch.ErrorCode.StunTurnWrongCredentials?"StunTurnWrongCredentials":this._value==fm.liveswitch.ErrorCode.StunTurnUnsupportedTransportProtocol?"StunTurnUnsupportedTransportProtocol":this._value==fm.liveswitch.ErrorCode.StunTurnPeerAddressFamilyMismatch?"StunTurnPeerAddressFamilyMismatch":this._value==fm.liveswitch.ErrorCode.StunTurnConnectionAlreadyExists?"StunTurnConnectionAlreadyExists":this._value==fm.liveswitch.ErrorCode.StunTurnConnectionTimeoutOrFailure?"StunTurnConnectionTimeoutOrFailure":this._value==fm.liveswitch.ErrorCode.StunTurnAllocationQuotaReached?"StunTurnAllocationQuotaReached":this._value==fm.liveswitch.ErrorCode.StunIceRoleConflict?"StunIceRoleConflict":this._value==fm.liveswitch.ErrorCode.StunServerError?"StunServerError":this._value==fm.liveswitch.ErrorCode.StunTurnInsufficientCapacity?"StunTurnInsufficientCapacity":this._value==fm.liveswitch.ErrorCode.StunInvalidResponseType?"StunInvalidResponseType":this._value==fm.liveswitch.ErrorCode.StunInvalidErrorCode?"StunInvalidErrorCode":this._value==fm.liveswitch.ErrorCode.StunInvalidTransactionId?"StunInvalidTransactionId":this._value==fm.liveswitch.ErrorCode.StunUnknownStunErrorCode?"StunUnknownStunErrorCode":this._value==fm.liveswitch.ErrorCode.StunInvalidMessageIntegrity?"StunInvalidMessageIntegrity":this._value==fm.liveswitch.ErrorCode.SocketIPError?"SocketIPError":this._value==fm.liveswitch.ErrorCode.IceLocalRelayedDatagramCandidateError?"IceLocalRelayedDatagramCandidateError":this._value==fm.liveswitch.ErrorCode.IceLocalServerReflexiveCandidateError?"IceLocalServerReflexiveCandidateError":this._value==fm.liveswitch.ErrorCode.SocketManagerInvalidState?"SocketManagerInvalidState":this._value==fm.liveswitch.ErrorCode.IceStartError?"IceStartError":this._value==fm.liveswitch.ErrorCode.IceUnsuitableSocketAssignment?"IceUnsuitableSocketAssignment":this._value==fm.liveswitch.ErrorCode.IceAllPortsInUse?"IceAllPortsInUse":this._value==fm.liveswitch.ErrorCode.IceLocalAddressUnavailable?"IceLocalAddressUnavailable":this._value==fm.liveswitch.ErrorCode.IceGenericGathererError?"IceGenericGathererError":this._value==fm.liveswitch.ErrorCode.IceRefreshTimeout?"IceRefreshTimeout":this._value==fm.liveswitch.ErrorCode.IceRefreshError?"IceRefreshError":this._value==fm.liveswitch.ErrorCode.IceCreatePermissionTimeout?"IceCreatePermissionTimeout":this._value==fm.liveswitch.ErrorCode.IceCreatePermissionError?"IceCreatePermissionError":this._value==fm.liveswitch.ErrorCode.IceConnectivityCheckFailed?"IceConnectivityCheckFailed":this._value==fm.liveswitch.ErrorCode.IceSendError?"IceSendError":this._value==fm.liveswitch.ErrorCode.IcePeerReflexiveError?"IcePeerReflexiveError":this._value==fm.liveswitch.ErrorCode.IncompatibleIceSetup?"IncompatibleIceSetup":this._value==fm.liveswitch.ErrorCode.DtlsInternalError?"DtlsInternalError":this._value==fm.liveswitch.ErrorCode.DtlsKeyExchangeFailed?"DtlsKeyExchangeFailed":this._value==fm.liveswitch.ErrorCode.DtlsNotReady?"DtlsNotReady":this._value==fm.liveswitch.ErrorCode.SctpNoPayloadData?"SctpNoPayloadData":this._value==fm.liveswitch.ErrorCode.SctpUnsupportedStream?"SctpUnsupportedStream":this._value==fm.liveswitch.ErrorCode.SctpInvalidState?"SctpInvalidState":this._value==fm.liveswitch.ErrorCode.SctpInternalError?"SctpInternalError":this._value==fm.liveswitch.ErrorCode.MediaTransportFailed?"MediaTransportFailed":this._value==fm.liveswitch.ErrorCode.ReliableDataChannelOpenError?"ReliableDataChannelOpenError":this._value==fm.liveswitch.ErrorCode.ReliableDataChannelSendError?"ReliableDataChannelSendError":this._value==fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture?"ConnectionInvalidArchitecture":this._value==fm.liveswitch.ErrorCode.ConnectionInternalError?"ConnectionInternalError":this._value==fm.liveswitch.ErrorCode.ConnectionTransportStartError?"ConnectionTransportStartError":this._value==fm.liveswitch.ErrorCode.ConnectionTransportClosed?"ConnectionTransportClosed":this._value==fm.liveswitch.ErrorCode.ConnectionDeadStream?"ConnectionDeadStream":this._value==fm.liveswitch.ErrorCode.ConnectionNotEstablished?"ConnectionNotEstablished":this._value==fm.liveswitch.ErrorCode.ConnectionRemoteFailure?"ConnectionRemoteFailure":this._value==fm.liveswitch.ErrorCode.ConnectionSimulcastNotSupported?"ConnectionSimulcastNotSupported":this._value==fm.liveswitch.ErrorCode.StreamDisabled?"StreamDisabled":this._value==fm.liveswitch.ErrorCode.StreamEncryptionMismatch?"StreamEncryptionMismatch":this._value==fm.liveswitch.ErrorCode.StreamDirectionMismatch?"StreamDirectionMismatch":this._value==fm.liveswitch.ErrorCode.DataStreamDirectionCannotBeChanged?"DataStreamDirectionCannotBeChanged":this._value==fm.liveswitch.ErrorCode.InvalidStreamDirectionChange?"InvalidStreamDirectionChange":this._value==fm.liveswitch.ErrorCode.LocalDescriptionError?"LocalDescriptionError":this._value==fm.liveswitch.ErrorCode.RemoteDescriptionError?"RemoteDescriptionError":this._value==fm.liveswitch.ErrorCode.IceLocalRelayedStreamCandidateError?"IceLocalRelayedStreamCandidateError":this._value==fm.liveswitch.ErrorCode.IceInvalidServerAssignmentError?"IceInvalidServerAssignmentError":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorCodeWrapper}();liveswitch.ErrorCodeWrapper=ErrorCodeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var FloatHolder=function(){function FloatHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchFloatHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchFloatHolderInit(),this.setValue(value)}}return FloatHolder.prototype.getTypeString=function(){return"[fm.liveswitch.FloatHolder]"},FloatHolder.prototype.fmliveswitchFloatHolderInit=function(){this._value=0},FloatHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FloatHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},FloatHolder}();liveswitch.FloatHolder=FloatHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpMethodWrapper=function(){function HttpMethodWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_14=__arguments[0];this._value=value_14}return HttpMethodWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.HttpMethodWrapper]"},HttpMethodWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.HttpMethod.Get?"Get":this._value==fm.liveswitch.HttpMethod.Head?"Head":this._value==fm.liveswitch.HttpMethod.Post?"Post":this._value==fm.liveswitch.HttpMethod.Put?"Put":this._value==fm.liveswitch.HttpMethod.Patch?"Patch":this._value==fm.liveswitch.HttpMethod.Delete?"Delete":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpMethodWrapper}();liveswitch.HttpMethodWrapper=HttpMethodWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpRequestArgs=function(_super){function HttpRequestArgs(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchHttpRequestArgsInit(),_this.setTimeout(15e3),_this.setMethod(fm.liveswitch.HttpMethod.Post),_this.__headers=new fm.liveswitch.NameValueCollection,_this}return __extends(HttpRequestArgs,_super),HttpRequestArgs.prototype.getTypeString=function(){return"[fm.liveswitch.HttpRequestArgs],"+_super.prototype.getTypeString.call(this)},HttpRequestArgs.prototype.fmliveswitchHttpRequestArgsInit=function(){this._maxRetries=0,this._timeout=0},HttpRequestArgs.prototype.getBinaryContent=function(){if(0==arguments.length)return this._binaryContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getHeaders=function(){if(0==arguments.length)return this.__headers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getMaxRetries=function(){if(0==arguments.length)return this._maxRetries;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getMethod=function(){if(0==arguments.length)return this._method;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getOnRequestCreated=function(){if(0==arguments.length)return this._onRequestCreated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getOnResponseReceived=function(){if(0==arguments.length)return this._onResponseReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getTextContent=function(){if(0==arguments.length)return this._textContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getTimeout=function(){if(0==arguments.length)return this._timeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.getUrl=function(){if(0==arguments.length)return this._url;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestArgs.prototype.setBinaryContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._binaryContent=value},HttpRequestArgs.prototype.setHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)?this.__headers=new fm.liveswitch.NameValueCollection:this.__headers=value},HttpRequestArgs.prototype.setMaxRetries=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxRetries=fm.liveswitch.Global.toInt(value)},HttpRequestArgs.prototype.setMethod=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._method=value},HttpRequestArgs.prototype.setOnRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onRequestCreated=value},HttpRequestArgs.prototype.setOnResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onResponseReceived=value},HttpRequestArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},HttpRequestArgs.prototype.setTextContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._textContent=value},HttpRequestArgs.prototype.setTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timeout=fm.liveswitch.Global.toInt(value)},HttpRequestArgs.prototype.setUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._url=value},HttpRequestArgs}(fm.liveswitch.Dynamic);liveswitch.HttpRequestArgs=HttpRequestArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpRequestCreatedArgs=function(){function HttpRequestCreatedArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return HttpRequestCreatedArgs.prototype.getTypeString=function(){return"[fm.liveswitch.HttpRequestCreatedArgs]"},HttpRequestCreatedArgs.prototype.getRequest=function(){if(0==arguments.length)return this._request;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestCreatedArgs.prototype.getRequestArgs=function(){if(0==arguments.length)return this._requestArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestCreatedArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpRequestCreatedArgs.prototype.setRequest=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._request=value},HttpRequestCreatedArgs.prototype.setRequestArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestArgs=value},HttpRequestCreatedArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},HttpRequestCreatedArgs}();liveswitch.HttpRequestCreatedArgs=HttpRequestCreatedArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpResponseArgs=function(){function HttpResponseArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchHttpResponseArgsInit(),this.setHeaders(new fm.liveswitch.NameValueCollection);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var requestArgs=__arguments[0];__arguments=new Array(0),this.fmliveswitchHttpResponseArgsInit(),this.setHeaders(new fm.liveswitch.NameValueCollection),this.setRequestArgs(requestArgs)}}return HttpResponseArgs.prototype.getTypeString=function(){return"[fm.liveswitch.HttpResponseArgs]"},HttpResponseArgs.prototype.fmliveswitchHttpResponseArgsInit=function(){this._retries=0,this._statusCode=0},HttpResponseArgs.prototype.getBinaryContent=function(){if(0==arguments.length)return this._binaryContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseArgs.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseArgs.prototype.getHeaders=function(){if(0==arguments.length)return this._headers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseArgs.prototype.getRequestArgs=function(){if(0==arguments.length)return this._requestArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseArgs.prototype.getRetries=function(){if(0==arguments.length)return this._retries;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseArgs.prototype.getStatusCode=function(){if(0==arguments.length)return this._statusCode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseArgs.prototype.getTextContent=function(){if(0==arguments.length)return this._textContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseArgs.prototype.setBinaryContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._binaryContent=value},HttpResponseArgs.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},HttpResponseArgs.prototype.setHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._headers=value},HttpResponseArgs.prototype.setRequestArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestArgs=value},HttpResponseArgs.prototype.setRetries=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._retries=fm.liveswitch.Global.toInt(value)},HttpResponseArgs.prototype.setStatusCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._statusCode=fm.liveswitch.Global.toInt(value)},HttpResponseArgs.prototype.setTextContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._textContent=value},HttpResponseArgs}();liveswitch.HttpResponseArgs=HttpResponseArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpResponseReceivedArgs=function(){function HttpResponseReceivedArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return HttpResponseReceivedArgs.prototype.getTypeString=function(){return"[fm.liveswitch.HttpResponseReceivedArgs]"},HttpResponseReceivedArgs.prototype.getRequestArgs=function(){if(0==arguments.length)return this._requestArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseReceivedArgs.prototype.getResponse=function(){if(0==arguments.length)return this._response;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseReceivedArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpResponseReceivedArgs.prototype.setRequestArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestArgs=value},HttpResponseReceivedArgs.prototype.setResponse=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._response=value},HttpResponseReceivedArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},HttpResponseReceivedArgs}();liveswitch.HttpResponseReceivedArgs=HttpResponseReceivedArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpSendFinishArgs=function(){function HttpSendFinishArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return HttpSendFinishArgs.prototype.getTypeString=function(){return"[fm.liveswitch.HttpSendFinishArgs]"},HttpSendFinishArgs.prototype.getRequestBinaryContent=function(){if(0==arguments.length)return this._requestBinaryContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendFinishArgs.prototype.getRequestTextContent=function(){if(0==arguments.length)return this._requestTextContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendFinishArgs.prototype.getResponseBinaryContent=function(){if(0==arguments.length)return this._responseBinaryContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendFinishArgs.prototype.getResponseHeaders=function(){if(0==arguments.length)return this._responseHeaders;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendFinishArgs.prototype.getResponseTextContent=function(){if(0==arguments.length)return this._responseTextContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendFinishArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendFinishArgs.prototype.setRequestBinaryContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestBinaryContent=value},HttpSendFinishArgs.prototype.setRequestTextContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestTextContent=value},HttpSendFinishArgs.prototype.setResponseBinaryContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._responseBinaryContent=value},HttpSendFinishArgs.prototype.setResponseHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._responseHeaders=value},HttpSendFinishArgs.prototype.setResponseTextContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._responseTextContent=value},HttpSendFinishArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},HttpSendFinishArgs}();liveswitch.HttpSendFinishArgs=HttpSendFinishArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpSendStartArgs=function(){function HttpSendStartArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return HttpSendStartArgs.prototype.getTypeString=function(){return"[fm.liveswitch.HttpSendStartArgs]"},HttpSendStartArgs.prototype.getRequestBinaryContent=function(){if(0==arguments.length)return this._requestBinaryContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendStartArgs.prototype.getRequestTextContent=function(){if(0==arguments.length)return this._requestTextContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendStartArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpSendStartArgs.prototype.setRequestBinaryContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestBinaryContent=value},HttpSendStartArgs.prototype.setRequestTextContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestTextContent=value},HttpSendStartArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},HttpSendStartArgs}();liveswitch.HttpSendStartArgs=HttpSendStartArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpTransferFactory=function(){function HttpTransferFactory(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return HttpTransferFactory.prototype.getTypeString=function(){return"[fm.liveswitch.HttpTransferFactory]"},HttpTransferFactory.defaultCreateHttpTransfer=function(){if(0==arguments.length)return new fm.liveswitch.HttpWebRequestTransfer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransferFactory.getCreateHttpTransfer=function(){if(0==arguments.length)return fm.liveswitch.HttpTransferFactory.fm_liveswitch_HttpTransferFactory__createHttpTransfer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransferFactory.getHttpTransfer=function(){if(0==arguments.length){fm.liveswitch.Global.equals(fm.liveswitch.HttpTransferFactory.getCreateHttpTransfer(),null)&&fm.liveswitch.HttpTransferFactory.setCreateHttpTransfer(fm.liveswitch.HttpTransferFactory.defaultCreateHttpTransfer.bind(fm.liveswitch.HttpTransferFactory));var transfer=fm.liveswitch.HttpTransferFactory.getCreateHttpTransfer()();return fm.liveswitch.Global.equals(transfer,null)&&(transfer=fm.liveswitch.HttpTransferFactory.defaultCreateHttpTransfer()),transfer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpTransferFactory.setCreateHttpTransfer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.HttpTransferFactory.fm_liveswitch_HttpTransferFactory__createHttpTransfer=value},HttpTransferFactory}();liveswitch.HttpTransferFactory=HttpTransferFactory}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var HttpWebRequestSender=function(_super){function HttpWebRequestSender(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchHttpWebRequestSenderInit(),_this.__disableJsonp=!0,_this.__forceJsonp=!1,_this}return __extends(HttpWebRequestSender,_super),HttpWebRequestSender.prototype.getTypeString=function(){return"[fm.liveswitch.HttpWebRequestSender],"+_super.prototype.getTypeString.call(this)},HttpWebRequestSender.prototype.fmliveswitchHttpWebRequestSenderInit=function(){this.__disableJsonp=!1,this.__forceJsonp=!1,this._disableCors=!1,this._disablePostMessage=!1},HttpWebRequestSender.prototype.getDisableCors=function(){if(0==arguments.length)return this._disableCors;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpWebRequestSender.prototype.getDisableJsonp=function(){if(0==arguments.length)return this.__disableJsonp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpWebRequestSender.prototype.getDisablePostMessage=function(){if(0==arguments.length)return this._disablePostMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpWebRequestSender.prototype.getForceJsonp=function(){if(0==arguments.length)return this.__forceJsonp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpWebRequestSender.prototype.setDisableCors=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableCors=value},HttpWebRequestSender.prototype.setDisableJsonp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__disableJsonp=value,this.__disableJsonp&&(this.__forceJsonp=!1)},HttpWebRequestSender.prototype.setDisablePostMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disablePostMessage=value},HttpWebRequestSender.prototype.setForceJsonp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__forceJsonp=value,this.__forceJsonp&&(this.__disableJsonp=!1)},HttpWebRequestSender}(fm.liveswitch.Dynamic);liveswitch.HttpWebRequestSender=HttpWebRequestSender}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var IntegerHolder=function(){function IntegerHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchIntegerHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchIntegerHolderInit(),this.setValue(value)}}return IntegerHolder.prototype.getTypeString=function(){return"[fm.liveswitch.IntegerHolder]"},IntegerHolder.prototype.fmliveswitchIntegerHolderInit=function(){this._value=0},IntegerHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IntegerHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._value=fm.liveswitch.Global.toInt(value)},IntegerHolder}();liveswitch.IntegerHolder=IntegerHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var JsonChecker=function(){function JsonChecker(){fm.liveswitch.JsonChecker.fmliveswitchJsonCheckerInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=0;var depth=__arguments[0];if(this.fmliveswitchJsonCheckerInit(),depth<0)throw new fm.liveswitch.Exception("Invalid depth.");this.__state=0,this.__depth=depth,this.__stack=new fm.liveswitch.Stack(depth),this.push(fm.liveswitch.JsonCheckerMode.Done)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");depth=__arguments[0];if(this.fmliveswitchJsonCheckerInit(),depth<0)throw new fm.liveswitch.Exception("Invalid depth.");this.__state=0,this.__depth=depth,this.__stack=new fm.liveswitch.Stack(depth),this.push(fm.liveswitch.JsonCheckerMode.Done)}}return JsonChecker.prototype.getTypeString=function(){return"[fm.liveswitch.JsonChecker]"},JsonChecker.prototype.fmliveswitchJsonCheckerInit=function(){this.__depth=0,this.__offset=0,this.__state=0},JsonChecker.prototype.check=function(ch){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num=void 0;(ch=fm.liveswitch.Global.toInt(arguments[0]))<0&&this.onError(),ch>=128?num=30:(num=fm.liveswitch.JsonChecker.fm_liveswitch_JsonChecker__ascii_class[ch])<=-1&&this.onError();var num2=fm.liveswitch.JsonChecker.fm_liveswitch_JsonChecker__state_transition_table[this.__state][num];if(num2>=0)this.__state=num2,this.__offset=this.__offset+1;else{if(fm.liveswitch.Global.equals(num2,-9))this.pop(fm.liveswitch.JsonCheckerMode.Key),this.__state=1;else if(fm.liveswitch.Global.equals(num2,-8))this.pop(fm.liveswitch.JsonCheckerMode.Object),this.__state=1;else if(fm.liveswitch.Global.equals(num2,-7))this.pop(fm.liveswitch.JsonCheckerMode.Array),this.__state=1;else if(fm.liveswitch.Global.equals(num2,-6))this.push(fm.liveswitch.JsonCheckerMode.Key),this.__state=2;else if(fm.liveswitch.Global.equals(num2,-5))this.push(fm.liveswitch.JsonCheckerMode.Array),this.__state=6;else{var mode=void 0;fm.liveswitch.Global.equals(num2,-4)?(mode=this.__stack.peek(),fm.liveswitch.Global.equals(mode,fm.liveswitch.JsonCheckerMode.Key)?this.__state=4:fm.liveswitch.Global.equals(mode,fm.liveswitch.JsonCheckerMode.Array)||fm.liveswitch.Global.equals(mode,fm.liveswitch.JsonCheckerMode.Object)?this.__state=1:fm.liveswitch.Global.equals(mode,fm.liveswitch.JsonCheckerMode.Done)?(this.push(fm.liveswitch.JsonCheckerMode.String),this.__state=7):fm.liveswitch.Global.equals(mode,fm.liveswitch.JsonCheckerMode.String)?(this.pop(fm.liveswitch.JsonCheckerMode.String),this.__state=1):this.onError()):fm.liveswitch.Global.equals(num2,-3)?(mode=this.__stack.peek(),fm.liveswitch.Global.equals(mode,fm.liveswitch.JsonCheckerMode.Object)?(this.pop(fm.liveswitch.JsonCheckerMode.Object),this.push(fm.liveswitch.JsonCheckerMode.Key),this.__state=3):fm.liveswitch.Global.equals(mode,fm.liveswitch.JsonCheckerMode.Array)?this.__state=5:this.onError()):fm.liveswitch.Global.equals(num2,-2)?(this.pop(fm.liveswitch.JsonCheckerMode.Key),this.push(fm.liveswitch.JsonCheckerMode.Object),this.__state=5):this.onError()}this.__offset=this.__offset+1}},JsonChecker.prototype.checkString=function(str){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var doubleResult=0,decimalResult=0,_var0=new fm.liveswitch.Holder(doubleResult),_var1=fm.liveswitch.ParseAssistant.tryParseDoubleValue(str,_var0);doubleResult=_var0.getValue();var _var2=new fm.liveswitch.Holder(decimalResult),_var3=fm.liveswitch.ParseAssistant.tryParseDecimalValue(str,_var2);if(decimalResult=_var2.getValue(),fm.liveswitch.Global.equals(str,"true")||fm.liveswitch.Global.equals(str,"false")||fm.liveswitch.Global.equals(str,"null")||_var1||_var3)return!0;try{for(var i=0;i<fm.liveswitch.StringExtensions.getLength(str);i++)this.check(str.charCodeAt(i));return this.finalCheck(),!0}catch(exception1){return!1}},JsonChecker.prototype.finalCheck=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__state,1)||this.onError(),this.pop(fm.liveswitch.JsonCheckerMode.Done)},JsonChecker.prototype.onError=function(){throw 0==arguments.length?new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Invalid JSON text at character offset {0}.",fm.liveswitch.NumberExtensions.toString(this.__offset,"N0"))):new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},JsonChecker.prototype.pop=function(mode){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.__stack.pop(),mode)||this.onError()},JsonChecker.prototype.push=function(mode){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__depth>0&&this.__stack.getCount()>=this.__depth&&this.onError(),this.__stack.push(mode)},JsonChecker.fmliveswitchJsonCheckerInitialize=function(){fm.liveswitch.JsonChecker.__fmliveswitchJsonCheckerInitialized||fm.liveswitch.JsonChecker.__fmliveswitchJsonCheckerInitializing||(fm.liveswitch.JsonChecker.__fmliveswitchJsonCheckerInitializing=!0,fm.liveswitch.JsonChecker.fm_liveswitch_JsonChecker__ascii_class=[-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,30,8,30,30,30,30,30,30,30,30,11,7,12,13,10,14,15,15,15,15,15,15,15,15,15,6,30,30,30,30,30,30,28,28,28,28,29,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,4,9,5,30,30,30,16,17,18,19,20,21,30,30,30,30,30,22,30,23,30,30,30,24,25,26,27,30,30,30,30,30,2,30,3,30,30],fm.liveswitch.JsonChecker.fm_liveswitch_JsonChecker__state_transition_table=[[0,0,-6,-1,-5,-1,-1,-1,-4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,-1,-8,-1,-7,-1,-3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[2,2,-1,-9,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[3,3,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[4,4,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[5,5,-6,-1,-5,-1,-1,-1,7,-1,-1,-1,13,-1,14,15,-1,-1,-1,-1,-1,23,-1,27,-1,-1,20,-1,-1,-1,-1],[6,6,-6,-1,-5,-7,-1,-1,7,-1,-1,-1,13,-1,14,15,-1,-1,-1,-1,-1,23,-1,27,-1,-1,20,-1,-1,-1,-1],[7,-1,7,7,7,7,7,7,-4,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],[-1,-1,-1,-1,-1,-1,-1,-1,7,7,7,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,7,-1,7,7,-1,7,9,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,10,10,10,10,10,10,10,-1,-1,-1,-1,-1,-1,10,10,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,11,11,11,11,11,11,11,-1,-1,-1,-1,-1,-1,11,11,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,12,12,12,12,12,12,12,-1,-1,-1,-1,-1,-1,12,12,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,7,7,7,7,7,7,7,-1,-1,-1,-1,-1,-1,7,7,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,-1,-8,-1,-7,-1,-3,-1,-1,-1,-1,-1,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,-1,-8,-1,-7,-1,-3,-1,-1,-1,-1,-1,16,15,15,-1,-1,-1,-1,17,-1,-1,-1,-1,-1,-1,-1,-1,17,-1],[1,1,-1,-8,-1,-7,-1,-3,-1,-1,-1,-1,-1,-1,16,16,-1,-1,-1,-1,17,-1,-1,-1,-1,-1,-1,-1,-1,17,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,18,18,-1,19,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,-1,-8,-1,-7,-1,-3,-1,-1,-1,-1,-1,-1,19,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,22,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,26,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,28,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,29,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1]],fm.liveswitch.JsonChecker.__fmliveswitchJsonCheckerInitialized=!0,fm.liveswitch.JsonChecker.__fmliveswitchJsonCheckerInitializing=!1)},JsonChecker.__fmliveswitchJsonCheckerInitialized=!1,JsonChecker.__fmliveswitchJsonCheckerInitializing=!1,JsonChecker}();liveswitch.JsonChecker=JsonChecker}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var JsonProvider=function(){function JsonProvider(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return JsonProvider.prototype.getTypeString=function(){return"[fm.liveswitch.JsonProvider]"},JsonProvider}();liveswitch.JsonProvider=JsonProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LockedRandomizer=function(){function LockedRandomizer(){}return LockedRandomizer.prototype.getTypeString=function(){return"[fm.liveswitch.LockedRandomizer]"},LockedRandomizer.next=function(){if(fm.liveswitch.LockedRandomizer.fmliveswitchLockedRandomizerInitialize(),0==arguments.length)return fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer.next();if(1==arguments.length){var maxValue=fm.liveswitch.Global.toInt(arguments[0]);return fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer.next(maxValue)}if(2==arguments.length){var minValue=fm.liveswitch.Global.toInt(arguments[0]);maxValue=fm.liveswitch.Global.toInt(arguments[1]);return fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer.next(minValue,maxValue)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LockedRandomizer.nextBytes=function(buffer){if(fm.liveswitch.LockedRandomizer.fmliveswitchLockedRandomizerInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer.nextBytes(buffer)},LockedRandomizer.nextDouble=function(){if(fm.liveswitch.LockedRandomizer.fmliveswitchLockedRandomizerInitialize(),0==arguments.length)return fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer.nextDouble();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LockedRandomizer.nextLong=function(){if(fm.liveswitch.LockedRandomizer.fmliveswitchLockedRandomizerInitialize(),0==arguments.length)return 922337203685478e4*fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer.nextDouble();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LockedRandomizer.randomString=function(size){if(fm.liveswitch.LockedRandomizer.fmliveswitchLockedRandomizerInitialize(),1==arguments.length)return size=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer.randomString(size);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LockedRandomizer.fmliveswitchLockedRandomizerInitialize=function(){fm.liveswitch.LockedRandomizer.__fmliveswitchLockedRandomizerInitialized||fm.liveswitch.LockedRandomizer.__fmliveswitchLockedRandomizerInitializing||(fm.liveswitch.LockedRandomizer.__fmliveswitchLockedRandomizerInitializing=!0,fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomizer=new fm.liveswitch.Randomizer,fm.liveswitch.LockedRandomizer.fm_liveswitch_LockedRandomizer__randomLock=new Object,fm.liveswitch.LockedRandomizer.__fmliveswitchLockedRandomizerInitialized=!0,fm.liveswitch.LockedRandomizer.__fmliveswitchLockedRandomizerInitializing=!1)},LockedRandomizer.__fmliveswitchLockedRandomizerInitialized=!1,LockedRandomizer.__fmliveswitchLockedRandomizerInitializing=!1,LockedRandomizer}();liveswitch.LockedRandomizer=LockedRandomizer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Log=function(){function Log(){fm.liveswitch.Log.fmliveswitchLogInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Log.prototype.getTypeString=function(){return"[fm.liveswitch.Log]"},Log.addProvider=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var provider=arguments[0];fm.liveswitch.Log.registerProvider(provider)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");provider=arguments[0];var level=arguments[1];fm.liveswitch.Log.registerProvider(provider,level)}},Log.debug=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var message=arguments[0];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.debug(message)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");message=arguments[0];var ex=arguments[1];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.debug(message,ex)}},Log.error=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var message=arguments[0];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.error(message)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");message=arguments[0];var ex=arguments[1];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.error(message,ex)}},Log.fatal=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var message=arguments[0];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.fatal(message)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");message=arguments[0];var ex=arguments[1];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.fatal(message,ex)}},Log.flush=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.flush()},Log.getIsDebugEnabled=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getDefaultLogLevel()<=fm.liveswitch.LogLevel.Debug;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getIsErrorEnabled=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getDefaultLogLevel()<=fm.liveswitch.LogLevel.Error;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getIsFatalEnabled=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getDefaultLogLevel()<=fm.liveswitch.LogLevel.Fatal;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getIsInfoEnabled=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getDefaultLogLevel()<=fm.liveswitch.LogLevel.Info;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getIsVerboseEnabled=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getDefaultLogLevel()<=fm.liveswitch.LogLevel.Verbose;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getIsWarnEnabled=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getDefaultLogLevel()<=fm.liveswitch.LogLevel.Warn;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getLogger=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var tag=arguments[0];return new fm.liveswitch.AsyncLogger(tag)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){tag=arguments[0];var level=arguments[1];return fm.liveswitch.LogConfiguration.setTagLogLevel(tag,level),fm.liveswitch.Log.getLogger(tag)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Type]"))){var type=arguments[0];return fm.liveswitch.Log.getLogger(type.getFullName())}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Type]"))){type=arguments[0],level=arguments[1];return fm.liveswitch.Log.getLogger(type.getFullName(),level)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getLogLevel=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getDefaultLogLevel();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getProvider=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length){var logProviders=fm.liveswitch.LogConfiguration.getLogProviders();return logProviders.length>0?logProviders[0]:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.getProviders=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.getLogProviders();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.info=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var message=arguments[0];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.info(message)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");message=arguments[0];var ex=arguments[1];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.info(message,ex)}},Log.registerProvider=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var provider=arguments[0];fm.liveswitch.LogConfiguration.addLogProvider(provider),provider.getLevel()<fm.liveswitch.LogConfiguration.getDefaultLogLevel()&&fm.liveswitch.LogConfiguration.setDefaultLogLevel(provider.getLevel())}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var level=arguments[1];(provider=arguments[0]).setLevel(level),fm.liveswitch.Log.registerProvider(provider)}},Log.removeProvider=function(provider){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length)return fm.liveswitch.Log.unregisterProvider(provider);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.removeProviders=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.unregisterProviders()},Log.setLogLevel=function(value){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.LogConfiguration.setDefaultLogLevel(value)},Log.setProvider=function(value){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.LogConfiguration.clearLogProviders(),fm.liveswitch.Log.registerProvider(value)},Log.setTagOverride=function(tag,level){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.LogConfiguration.setTagLogLevel(tag,level)},Log.unregisterProvider=function(provider){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length)return fm.liveswitch.LogConfiguration.removeLogProvider(provider);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Log.unregisterProviders=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.LogConfiguration.clearLogProviders()},Log.verbose=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var message=arguments[0];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.verbose(message)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");message=arguments[0];var ex=arguments[1];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.verbose(message,ex)}},Log.warn=function(){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1==arguments.length){var message=arguments[0];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.warn(message)}else{if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");message=arguments[0];var ex=arguments[1];fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.warn(message,ex)}},Log.writeLine=function(text){if(fm.liveswitch.Log.fmliveswitchLogInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.fm_liveswitch_Log___staticLogger.log(text)},Log.fmliveswitchLogInitialize=function(){fm.liveswitch.Log.__fmliveswitchLogInitialized||fm.liveswitch.Log.__fmliveswitchLogInitializing||(fm.liveswitch.Log.__fmliveswitchLogInitializing=!0,fm.liveswitch.Log.fm_liveswitch_Log___staticLogger=new fm.liveswitch.AsyncLogger("FM"),fm.liveswitch.Log.__fmliveswitchLogInitialized=!0,fm.liveswitch.Log.__fmliveswitchLogInitializing=!1)},Log.__fmliveswitchLogInitialized=!1,Log.__fmliveswitchLogInitializing=!1,Log}();liveswitch.Log=Log}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LogConfiguration=function(){function LogConfiguration(){fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return LogConfiguration.prototype.getTypeString=function(){return"[fm.liveswitch.LogConfiguration]"},LogConfiguration.addLogProvider=function(provider){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var list=fm.liveswitch.ArrayExtensions.newArray(fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___logProviders);fm.liveswitch.ArrayExtensions.add(list,provider),fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___providerCount++,fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___logProviders=fm.liveswitch.ArrayExtensions.toArray(list)},LogConfiguration.clearLogProviders=function(){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___logProviders=new Array(0),fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___providerCount=0},LogConfiguration.getDefaultLogLevel=function(){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration__defaultLogLevel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogConfiguration.getHasProviders=function(){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___providerCount>0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogConfiguration.getLogProviders=function(){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),0==arguments.length)return fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___logProviders;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogConfiguration.getTagLogLevel=function(tag){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),1==arguments.length)return!fm.liveswitch.Global.equals(tag,null)&&fm.liveswitch.HashExtensions.containsKey(fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___tagOverrides,tag)?fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___tagOverrides[tag]:fm.liveswitch.LogConfiguration.getDefaultLogLevel();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogConfiguration.removeLogProvider=function(provider){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),1==arguments.length){var list=fm.liveswitch.ArrayExtensions.newArray(fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___logProviders);return!!fm.liveswitch.ArrayExtensions.remove(list,provider)&&(fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___providerCount--,fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___logProviders=fm.liveswitch.ArrayExtensions.toArray(list),!0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogConfiguration.setDefaultLogLevel=function(value){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration__defaultLogLevel=value},LogConfiguration.setTagLogLevel=function(tag,logLevel){if(fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize(),2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(tag,null)||(fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___tagOverrides[tag]=logLevel)},LogConfiguration.fmliveswitchLogConfigurationInitialize=function(){fm.liveswitch.LogConfiguration.__fmliveswitchLogConfigurationInitialized||fm.liveswitch.LogConfiguration.__fmliveswitchLogConfigurationInitializing||(fm.liveswitch.LogConfiguration.__fmliveswitchLogConfigurationInitializing=!0,LogConfiguration.fm_liveswitch_LogConfiguration___providerCount=0,fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___lock=new Object,fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___tagOverridesLock=new Object,fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___logProviders=new Array(0),fm.liveswitch.LogConfiguration.fm_liveswitch_LogConfiguration___tagOverrides={},fm.liveswitch.LogConfiguration.setDefaultLogLevel(fm.liveswitch.LogLevel.Info),fm.liveswitch.LogConfiguration.__fmliveswitchLogConfigurationInitialized=!0,fm.liveswitch.LogConfiguration.__fmliveswitchLogConfigurationInitializing=!1)},LogConfiguration.__fmliveswitchLogConfigurationInitialized=!1,LogConfiguration.__fmliveswitchLogConfigurationInitializing=!1,LogConfiguration}();liveswitch.LogConfiguration=LogConfiguration}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LogLevelWrapper=function(){function LogLevelWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_15=__arguments[0];this._value=value_15}return LogLevelWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.LogLevelWrapper]"},LogLevelWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.LogLevel.Verbose?"Verbose":this._value==fm.liveswitch.LogLevel.Debug?"Debug":this._value==fm.liveswitch.LogLevel.Info?"Info":this._value==fm.liveswitch.LogLevel.Warn?"Warn":this._value==fm.liveswitch.LogLevel.Error?"Error":this._value==fm.liveswitch.LogLevel.Fatal?"Fatal":this._value==fm.liveswitch.LogLevel.None?"None":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogLevelWrapper}();liveswitch.LogLevelWrapper=LogLevelWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LongHolder=function(){function LongHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchLongHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchLongHolderInit(),this.setValue(value)}}return LongHolder.prototype.getTypeString=function(){return"[fm.liveswitch.LongHolder]"},LongHolder.prototype.fmliveswitchLongHolderInit=function(){this._value=0},LongHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LongHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._value=fm.liveswitch.Global.toInt(value)},LongHolder}();liveswitch.LongHolder=LongHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NullJsonProvider=function(_super){function NullJsonProvider(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(NullJsonProvider,_super),NullJsonProvider.prototype.getTypeString=function(){return"[fm.liveswitch.NullJsonProvider],"+_super.prototype.getTypeString.call(this)},NullJsonProvider.prototype.deserialize=function(valueJson){if(1==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NullJsonProvider.prototype.serialize=function(value){if(1==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NullJsonProvider}(fm.liveswitch.JsonProvider);liveswitch.NullJsonProvider=NullJsonProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NullLogProvider=function(_super){function NullLogProvider(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(NullLogProvider,_super),NullLogProvider.prototype.getTypeString=function(){return"[fm.liveswitch.NullLogProvider],"+_super.prototype.getTypeString.call(this)},NullLogProvider.prototype.doLog=function(logEvent){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NullLogProvider}(fm.liveswitch.LogProvider);liveswitch.NullLogProvider=NullLogProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataBufferPool=function(){function DataBufferPool(){fm.liveswitch.DataBufferPool.fmliveswitchDataBufferPoolInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=new fm.liveswitch.Type("[fm.liveswitch.DataBufferPool]").getFullName();var tag=__arguments[0];this.fmliveswitchDataBufferPoolInit(),this._log=fm.liveswitch.Log.getLogger("DataBufferPool",fm.liveswitch.LogLevel.Info),this.__blockSize=128,this.__traceStatistics=new fm.liveswitch.ManagedConcurrentDictionary,this.__pools=new fm.liveswitch.ManagedConcurrentDictionary,this.setEnableStatistics(!1),this.setStatistics(new fm.liveswitch.PoolStatistics(tag))}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");tag=__arguments[0];this.fmliveswitchDataBufferPoolInit(),this._log=fm.liveswitch.Log.getLogger("DataBufferPool",fm.liveswitch.LogLevel.Info),this.__blockSize=128,this.__traceStatistics=new fm.liveswitch.ManagedConcurrentDictionary,this.__pools=new fm.liveswitch.ManagedConcurrentDictionary,this.setEnableStatistics(!1),this.setStatistics(new fm.liveswitch.PoolStatistics(tag))}}return DataBufferPool.prototype.getTypeString=function(){return"[fm.liveswitch.DataBufferPool]"},DataBufferPool.prototype.fmliveswitchDataBufferPoolInit=function(){this.__blockSize=0,this._disabled=!1,this._enableStatistics=!1},DataBufferPool.getInstance=function(){if(fm.liveswitch.DataBufferPool.fmliveswitchDataBufferPoolInitialize(),0==arguments.length)return fm.liveswitch.Global.equals(fm.liveswitch.DataBufferPool.fm_liveswitch_DataBufferPool___singleton,null)&&(fm.liveswitch.DataBufferPool.fm_liveswitch_DataBufferPool___singleton=new fm.liveswitch.DataBufferPool),fm.liveswitch.DataBufferPool.fm_liveswitch_DataBufferPool___singleton;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.getIsSupported=function(){if(fm.liveswitch.DataBufferPool.fmliveswitchDataBufferPoolInitialize(),0==arguments.length)return!0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.getTracer=function(){if(fm.liveswitch.DataBufferPool.fmliveswitchDataBufferPoolInitialize(),1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var tag=arguments[0];return fm.liveswitch.DataBufferPool.getTracer(tag,fm.liveswitch.DataBufferPool.getInstance())}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){tag=arguments[0];var pool=arguments[1];return new fm.liveswitch.DataBufferPoolTracer(tag,pool)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Type]"))){var type=arguments[0];return fm.liveswitch.DataBufferPool.getTracer(type.getFullName())}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Type]"))){type=arguments[0],pool=arguments[1];return fm.liveswitch.DataBufferPool.getTracer(type.getFullName(),pool)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.createStack=function(tagStatistics){if(1==arguments.length)return this.getEnableStatistics()&&(this.getStatistics().__creates.increment(),fm.liveswitch.Global.equals(tagStatistics,null)||tagStatistics.__creates.increment()),new fm.liveswitch.ManagedConcurrentStack;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.createTraceStatistics=function(tag){if(1==arguments.length)return new fm.liveswitch.PoolStatistics(tag);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.doTraceTake=function(size,littleEndian,clearBytes,tag,tagStatistics){var _this=this;if(5==arguments.length){size=fm.liveswitch.Global.toInt(arguments[0]);var valueFactory=null,key=this.padToBlock(size),orAdd=null,_var0=new fm.liveswitch.Holder(orAdd),_var1=this.__pools.tryGetValue(key,_var0);orAdd=_var0.getValue(),_var1||(fm.liveswitch.Global.equals(valueFactory,null)&&(valueFactory=function(s){return _this.createStack(tagStatistics)}),orAdd=this.__pools.getOrAdd(key,valueFactory)),this.getEnableStatistics()&&(this.getStatistics().__paddingWasted.add(key-size),fm.liveswitch.Global.equals(tagStatistics,null)||tagStatistics.__paddingWasted.add(key-size));var result=null,_var2=new fm.liveswitch.Holder(result),_var3=orAdd.tryPop(_var2);return result=_var2.getValue(),_var3?(clearBytes&&fm.liveswitch.BitAssistant.set(result,0,result.length,0),this.getEnableStatistics()&&(this.getStatistics().__hits.increment(),this.getStatistics().__takenSize.add(result.length),this.getStatistics().__pendingPoolSize.subtract(result.length),fm.liveswitch.Global.equals(tagStatistics,null)||(tagStatistics.__hits.increment(),tagStatistics.__takenSize.add(result.length),tagStatistics.__pendingPoolSize.subtract(result.length))),new fm.liveswitch.DataBufferPooled(this,result,size,littleEndian,tag)):(this.getEnableStatistics()&&(this.getStatistics().__misses.increment(),this.getStatistics().__takenSize.add(key),this.getStatistics().__totalPoolSize.add(key),fm.liveswitch.Global.equals(tagStatistics,null)||(tagStatistics.__misses.increment(),tagStatistics.__takenSize.add(key),tagStatistics.__totalPoolSize.add(key))),new fm.liveswitch.DataBufferPooled(this,new Uint8Array(key),size,littleEndian,tag))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.getBlockSize=function(){if(0==arguments.length)return this.__blockSize;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.getDisabled=function(){if(0==arguments.length)return this._disabled;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.getEnableStatistics=function(){if(0==arguments.length)return this._enableStatistics;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.getOrAddTraceStatistics=function(tag){if(1==arguments.length){var orAdd=null,_var0=new fm.liveswitch.Holder(orAdd),_var1=this.__traceStatistics.tryGetValue(tag,_var0);return orAdd=_var0.getValue(),_var1||(orAdd=this.__traceStatistics.getOrAdd(tag,this.createTraceStatistics.bind(this))),orAdd}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.getStatistics=function(){if(0==arguments.length)return this._statistics;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.getTraceStatistics=function(){if(0==arguments.length){for(var values=this.__traceStatistics.getValues(),statisticsArray=new Array(fm.liveswitch.ArrayExtensions.getCount(values)),num=0,_i=0,values_4=values;_i<values_4.length;_i++){var statistics=values_4[_i];statisticsArray[num++]=statistics}return statisticsArray}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var tag=arguments[0];if(fm.liveswitch.Global.equals(tag,null))return this.getStatistics();statistics=null;var _var0=new fm.liveswitch.Holder(statistics),_var1=this.__traceStatistics.tryGetValue(tag,_var0);return statistics=_var0.getValue(),_var1?statistics:null}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Type]"))){var type=arguments[0];return this.getTraceStatistics(type.getFullName())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.padToBlock=function(size){if(1==arguments.length){var num=(size=fm.liveswitch.Global.toInt(arguments[0]))+this.__blockSize-1;return num-(num&this.__blockSize-1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.returnBuffer=function(buffer,tag){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!this.getDisabled()){var orAddTraceStatistics=null;this.getEnableStatistics()&&!fm.liveswitch.Global.equals(tag,null)&&(orAddTraceStatistics=this.getOrAddTraceStatistics(tag));var num=buffer.decrementRetain();if(fm.liveswitch.Global.equals(num,0)){var item=buffer.invalidate(),stack=null,_var0=new fm.liveswitch.Holder(stack),_var1=this.__pools.tryGetValue(item.length,_var0);if(stack=_var0.getValue(),!_var1)throw new fm.liveswitch.Exception("Cannot return a buffer to the pool that was not taken from the pool.");stack.push(item),this.getEnableStatistics()&&(this.getStatistics().__returnedSize.add(item.length),this.getStatistics().__pendingPoolSize.add(item.length),fm.liveswitch.Global.equals(orAddTraceStatistics,null)||(orAddTraceStatistics.__returnedSize.add(item.length),orAddTraceStatistics.__pendingPoolSize.add(item.length)))}else num<0&&this._log.warn("Cannot return a buffer to the pool with a negative retain count.")}},DataBufferPool.prototype.setBlockSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__blockSize=fm.liveswitch.Global.toInt(value)},DataBufferPool.prototype.setDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disabled=value},DataBufferPool.prototype.setEnableStatistics=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._enableStatistics=value},DataBufferPool.prototype.setStatistics=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._statistics=value},DataBufferPool.prototype.take=function(){if(1==arguments.length){var size=fm.liveswitch.Global.toInt(arguments[0]);return this.traceTake(size,null)}if(2==arguments.length){size=fm.liveswitch.Global.toInt(arguments[0]);var littleEndian=arguments[1];return this.traceTake(size,littleEndian,null)}if(3==arguments.length){size=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1];var clearBytes=arguments[2];return this.traceTake(size,littleEndian,clearBytes,null)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.prototype.traceTake=function(){if(4==arguments.length){var size=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1],clearBytes=arguments[2],tag=arguments[3];if(this.getDisabled())return fm.liveswitch.DataBuffer.allocate(size,littleEndian);var tagStatistics=null;return this.getEnableStatistics()&&!fm.liveswitch.Global.equals(tag,null)&&(tagStatistics=this.getOrAddTraceStatistics(tag)),this.doTraceTake(size,littleEndian,clearBytes,tag,tagStatistics)}if(3==arguments.length){size=fm.liveswitch.Global.toInt(arguments[0]),littleEndian=arguments[1],tag=arguments[2];return this.traceTake(size,littleEndian,!1,tag)}if(2==arguments.length){size=fm.liveswitch.Global.toInt(arguments[0]),tag=arguments[1];return this.traceTake(size,!1,tag)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataBufferPool.fmliveswitchDataBufferPoolInitialize=function(){fm.liveswitch.DataBufferPool.__fmliveswitchDataBufferPoolInitialized||fm.liveswitch.DataBufferPool.__fmliveswitchDataBufferPoolInitializing||(fm.liveswitch.DataBufferPool.__fmliveswitchDataBufferPoolInitializing=!0,fm.liveswitch.DataBufferPool.fm_liveswitch_DataBufferPool___singleton=null,fm.liveswitch.DataBufferPool.fm_liveswitch_DataBufferPool___singletonLock=new Object,fm.liveswitch.DataBufferPool.__fmliveswitchDataBufferPoolInitialized=!0,fm.liveswitch.DataBufferPool.__fmliveswitchDataBufferPoolInitializing=!1)},DataBufferPool.__fmliveswitchDataBufferPoolInitialized=!1,DataBufferPool.__fmliveswitchDataBufferPoolInitializing=!1,DataBufferPool}();liveswitch.DataBufferPool=DataBufferPool}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PoolStatistics=function(){function PoolStatistics(tag){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var tag_4=__arguments[0];this.setTag(tag_4),this.__hits=new fm.liveswitch.AtomicLong,this.__misses=new fm.liveswitch.AtomicLong,this.__creates=new fm.liveswitch.AtomicLong,this.__paddingWasted=new fm.liveswitch.AtomicLong,this.__totalPoolSize=new fm.liveswitch.AtomicLong,this.__pendingPoolSize=new fm.liveswitch.AtomicLong,this.__takenSize=new fm.liveswitch.AtomicLong,this.__returnedSize=new fm.liveswitch.AtomicLong}return PoolStatistics.prototype.getTypeString=function(){return"[fm.liveswitch.PoolStatistics]"},PoolStatistics.prototype.getActivePools=function(){if(0==arguments.length)return this.__creates.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getHitPercentage=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getTotalCalls(),0)?-1:this.__hits.getValue()/this.getTotalCalls()*100;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getMissPercentage=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getTotalCalls(),0)?-1:this.__misses.getValue()/this.getTotalCalls()*100;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getPaddingWasted=function(){if(0==arguments.length)return this.__paddingWasted.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getPendingPoolSize=function(){if(0==arguments.length)return this.__pendingPoolSize.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getReturnPercentage=function(){if(0==arguments.length){var num=this.__returnedSize.getValue(),num2=this.__takenSize.getValue();return fm.liveswitch.Global.equals(num2,0)?-1:num/num2*100}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getTotalCalls=function(){if(0==arguments.length)return this.__hits.getValue()+this.__misses.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getTotalPools=function(){if(0==arguments.length)return this.__creates.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.getTotalPoolSize=function(){if(0==arguments.length)return this.__totalPoolSize.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},PoolStatistics.prototype.toString=function(){if(0==arguments.length){var num=this.__hits.getValue(),num2=this.__misses.getValue(),num3=num+num2,num4=fm.liveswitch.Global.equals(num3,0)?-1:num/num3*100,num5=fm.liveswitch.Global.equals(num3,0)?-1:num2/num3*100,num6=this.__returnedSize.getValue(),num7=this.__takenSize.getValue(),num8=fm.liveswitch.Global.equals(num7,0)?-1:num6/num7*100;return fm.liveswitch.StringExtensions.format("{0}:\n\tHit Rate: {1}%\n\tMiss Rate: {2}%\n\tReturn Rate: {3}%\n\tPools: {4}\n\tAllocated: {5} bytes\n\tReady: {6} bytes",[this.getTag(),fm.liveswitch.NumberExtensions.toString(num4),fm.liveswitch.NumberExtensions.toString(num5),fm.liveswitch.NumberExtensions.toString(num8),fm.liveswitch.NumberExtensions.toString(this.getTotalPools()),fm.liveswitch.NumberExtensions.toString(this.getTotalPoolSize()),fm.liveswitch.NumberExtensions.toString(this.getPendingPoolSize())])}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PoolStatistics}();liveswitch.PoolStatistics=PoolStatistics}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var FutureStateWrapper=function(){function FutureStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_16=__arguments[0];this._value=value_16}return FutureStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.FutureStateWrapper]"},FutureStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.FutureState.Pending?"Pending":this._value==fm.liveswitch.FutureState.Resolved?"Resolved":this._value==fm.liveswitch.FutureState.Rejected?"Rejected":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FutureStateWrapper}();liveswitch.FutureStateWrapper=FutureStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ShortHolder=function(){function ShortHolder(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchShortHolderInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value=__arguments[0];this.fmliveswitchShortHolderInit(),this.setValue(value)}}return ShortHolder.prototype.getTypeString=function(){return"[fm.liveswitch.ShortHolder]"},ShortHolder.prototype.fmliveswitchShortHolderInit=function(){this._value=0},ShortHolder.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ShortHolder.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._value=fm.liveswitch.Global.toInt(value)},ShortHolder}();liveswitch.ShortHolder=ShortHolder}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Sort=function(){function Sort(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Sort.prototype.getTypeString=function(){return"[fm.liveswitch.Sort]"},Sort.doQuickSort=function(array,left,right,comparer){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if((left=fm.liveswitch.Global.toInt(arguments[1]))<(right=fm.liveswitch.Global.toInt(arguments[2]))){var pivotIndex=left+fm.liveswitch.MathAssistant.floor((right-left)/2),num2=fm.liveswitch.Sort.partition(array,left,right,pivotIndex,comparer);fm.liveswitch.Sort.doQuickSort(array,left,num2-1,comparer),fm.liveswitch.Sort.doQuickSort(array,num2+1,right,comparer)}},Sort.partition=function(array,left,right,pivotIndex,comparer){if(5==arguments.length){left=fm.liveswitch.Global.toInt(arguments[1]),right=fm.liveswitch.Global.toInt(arguments[2]);var local=array[pivotIndex=fm.liveswitch.Global.toInt(arguments[3])];fm.liveswitch.Sort.swap(array,pivotIndex,right);for(var num=left,i=left;i<right;i++)fm.liveswitch.Global.equals(comparer(array[i],local),fm.liveswitch.CompareResult.Negative)&&(fm.liveswitch.Sort.swap(array,i,num),num++);return fm.liveswitch.Sort.swap(array,num,right),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Sort.quickSort=function(array,comparer){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var right=fm.liveswitch.ArrayExtensions.getCount(array)-1;fm.liveswitch.Sort.doQuickSort(array,0,right,comparer)},Sort.swap=function(array,pos1,pos2){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");pos1=fm.liveswitch.Global.toInt(arguments[1]),pos2=fm.liveswitch.Global.toInt(arguments[2]);var local=array[pos1];array[pos1]=array[pos2],array[pos2]=local},Sort}();liveswitch.Sort=Sort}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Splitter=function(){function Splitter(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Splitter.prototype.getTypeString=function(){return"[fm.liveswitch.Splitter]"},Splitter.split=function(str,delimiter){if(2==arguments.length){if(fm.liveswitch.Global.equals(str,null))throw new fm.liveswitch.Exception("str cannot be null.");if(fm.liveswitch.Global.equals(delimiter,null))throw new fm.liveswitch.Exception("delimiter cannot be null.");if(fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(delimiter),0))return[str];for(var startIndex=0,num2=0,list=new Array,i=0;i<fm.liveswitch.StringExtensions.getLength(str);i++){var ch=str.charCodeAt(i),ch2=delimiter.charCodeAt(num2);fm.liveswitch.Global.equals(ch,ch2)?fm.liveswitch.Global.equals(num2,fm.liveswitch.StringExtensions.getLength(delimiter)-1)?(fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.substring(str,startIndex,i-num2-startIndex)),startIndex=i+1,num2=0):num2++:num2=0}return fm.liveswitch.ArrayExtensions.add(list,str.substring(startIndex)),fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Splitter}();liveswitch.Splitter=Splitter}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StringAssistant=function(){function StringAssistant(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return StringAssistant.prototype.getTypeString=function(){return"[fm.liveswitch.StringAssistant]"},StringAssistant.isNullOrWhiteSpace=function(s){if(1==arguments.length)return fm.liveswitch.Global.equals(s,null)||fm.liveswitch.StringExtensions.isNullOrEmpty(fm.liveswitch.StringExtensions.trim(s));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StringAssistant.subArray=function(){if(2==arguments.length){var array=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]);return fm.liveswitch.StringAssistant.subArray(array,offset,array.length-offset)}if(3==arguments.length){array=arguments[0],offset=fm.liveswitch.Global.toInt(arguments[1]);for(var count=fm.liveswitch.Global.toInt(arguments[2]),strArray=new Array(count),i=0;i<count;i++)strArray[i]=array[offset+i];return strArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StringAssistant}();liveswitch.StringAssistant=StringAssistant}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TextLogProvider=function(_super){function TextLogProvider(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.LogLevel.Info;var level=__arguments[0];(_this=_super.call(this)||this).__text=new fm.liveswitch.StringBuilder,_this.__textLock=new Object,_super.prototype.setLevel.call(_this,level)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");level=__arguments[0];(_this=_super.call(this)||this).__text=new fm.liveswitch.StringBuilder,_this.__textLock=new Object,_super.prototype.setLevel.call(_this,level)}return _this}return __extends(TextLogProvider,_super),TextLogProvider.prototype.getTypeString=function(){return"[fm.liveswitch.TextLogProvider],"+_super.prototype.getTypeString.call(this)},TextLogProvider.prototype.clear=function(){if(0==arguments.length){var str=void 0;return str=this.__text.toString(),this.__text=new fm.liveswitch.StringBuilder,str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TextLogProvider.prototype.doLog=function(logEvent){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.writeLine(this.generateLogLine(logEvent))},TextLogProvider.prototype.getCallback=function(){if(0==arguments.length)return this.__callback;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TextLogProvider.prototype.getText=function(){if(0==arguments.length)return this.__text.toString();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TextLogProvider.prototype.setCallback=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=this.__text.toString();fm.liveswitch.StringExtensions.isNullOrEmpty(str)||(fm.liveswitch.StringExtensions.endsWith(str,"\n")&&(str=fm.liveswitch.StringExtensions.substring(str,0,fm.liveswitch.StringExtensions.getLength(str)-1)),value(str)),this.__callback=value},TextLogProvider.prototype.writeLine=function(text){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__text.append(fm.liveswitch.StringExtensions.concat(text,"\n")),fm.liveswitch.Global.equals(this.__callback,null)||this.__callback(text)},TextLogProvider}(fm.liveswitch.LogProvider);liveswitch.TextLogProvider=TextLogProvider}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Unhandled=function(){function Unhandled(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Unhandled.prototype.getTypeString=function(){return"[fm.liveswitch.Unhandled]"},Unhandled.logException=function(ex,source){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.concat("An exception in user code (",source,") was unhandled."),ex)},Unhandled}();liveswitch.Unhandled=Unhandled}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var UnhandledExceptionArgs=function(){function UnhandledExceptionArgs(exception){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var exception_1=__arguments[0];this.fmliveswitchUnhandledExceptionArgsInit(),this.__exception=exception_1}return UnhandledExceptionArgs.prototype.getTypeString=function(){return"[fm.liveswitch.UnhandledExceptionArgs]"},UnhandledExceptionArgs.prototype.fmliveswitchUnhandledExceptionArgsInit=function(){this._handled=!1},UnhandledExceptionArgs.prototype.getException=function(){if(0==arguments.length)return this.__exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnhandledExceptionArgs.prototype.getHandled=function(){if(0==arguments.length)return this._handled;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnhandledExceptionArgs.prototype.setHandled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._handled=value},UnhandledExceptionArgs}();liveswitch.UnhandledExceptionArgs=UnhandledExceptionArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Utf8=function(){function Utf8(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Utf8.prototype.getTypeString=function(){return"[fm.liveswitch.Utf8]"},Utf8.decode=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var buffer=arguments[0];return fm.liveswitch.Utf8.decode(buffer.getData(),buffer.getIndex(),buffer.getLength())}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isUint8Array(arguments[0]))){var input=arguments[0];return fm.liveswitch.Utf8.decode(input,0,input.length)}if(3==arguments.length){input=arguments[0];var index=fm.liveswitch.Global.toInt(arguments[1]),length_36=fm.liveswitch.Global.toInt(arguments[2]);return fm.liveswitch.Encoding.getUtf8().getString(input,index,length_36)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utf8.encode=function(input){if(1==arguments.length)return fm.liveswitch.Encoding.getUtf8().getBytes(input);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utf8.getByteCount=function(input){if(1==arguments.length)return fm.liveswitch.Encoding.getUtf8().getByteCount(input);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utf8}();liveswitch.Utf8=Utf8}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketSendState=function(){function WebSocketSendState(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return WebSocketSendState.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketSendState]"},WebSocketSendState.prototype.getRequestBytes=function(){if(0==arguments.length)return this._requestBytes;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketSendState.prototype.getSendArgs=function(){if(0==arguments.length)return this._sendArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketSendState.prototype.setRequestBytes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestBytes=value},WebSocketSendState.prototype.setSendArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sendArgs=value},WebSocketSendState}();liveswitch.WebSocketSendState=WebSocketSendState}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketCloseArgs=function(_super){function WebSocketCloseArgs(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).setStatusCode(fm.liveswitch.WebSocketStatusCode.Normal),_this.setReason(fm.liveswitch.StringExtensions.empty),_this}return __extends(WebSocketCloseArgs,_super),WebSocketCloseArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketCloseArgs],"+_super.prototype.getTypeString.call(this)},WebSocketCloseArgs.prototype.getOnComplete=function(){if(0==arguments.length)return this._onComplete;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketCloseArgs.prototype.getReason=function(){if(0==arguments.length)return this._reason;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketCloseArgs.prototype.getStatusCode=function(){if(0==arguments.length)return this._statusCode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketCloseArgs.prototype.setOnComplete=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onComplete=value},WebSocketCloseArgs.prototype.setReason=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._reason=value},WebSocketCloseArgs.prototype.setStatusCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._statusCode=value},WebSocketCloseArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketCloseArgs=WebSocketCloseArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketCloseCompleteArgs=function(_super){function WebSocketCloseCompleteArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(WebSocketCloseCompleteArgs,_super),WebSocketCloseCompleteArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketCloseCompleteArgs],"+_super.prototype.getTypeString.call(this)},WebSocketCloseCompleteArgs.prototype.getCloseArgs=function(){if(0==arguments.length)return this._closeArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketCloseCompleteArgs.prototype.getReason=function(){if(0==arguments.length)return this._reason;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketCloseCompleteArgs.prototype.getStatusCode=function(){if(0==arguments.length)return this._statusCode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketCloseCompleteArgs.prototype.setCloseArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._closeArgs=value},WebSocketCloseCompleteArgs.prototype.setReason=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._reason=value},WebSocketCloseCompleteArgs.prototype.setStatusCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._statusCode=value},WebSocketCloseCompleteArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketCloseCompleteArgs=WebSocketCloseCompleteArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketOpenArgs=function(_super){function WebSocketOpenArgs(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchWebSocketOpenArgsInit(),_this.setHandshakeTimeout(15e3),_this.setStreamTimeout(4e4),_this}return __extends(WebSocketOpenArgs,_super),WebSocketOpenArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketOpenArgs],"+_super.prototype.getTypeString.call(this)},WebSocketOpenArgs.prototype.fmliveswitchWebSocketOpenArgsInit=function(){this._handshakeTimeout=0,this._streamTimeout=0},WebSocketOpenArgs.prototype.getHandshakeTimeout=function(){if(0==arguments.length)return this._handshakeTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getHeaders=function(){if(0==arguments.length)return this._headers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getOnFailure=function(){if(0==arguments.length)return this._onFailure;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getOnReceive=function(){if(0==arguments.length)return this._onReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getOnRequestCreated=function(){if(0==arguments.length)return this._onRequestCreated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getOnResponseReceived=function(){if(0==arguments.length)return this._onResponseReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getOnStreamFailure=function(){if(0==arguments.length)return this._onStreamFailure;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getOnSuccess=function(){if(0==arguments.length)return this._onSuccess;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.getStreamTimeout=function(){if(0==arguments.length)return this._streamTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenArgs.prototype.setHandshakeTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._handshakeTimeout=fm.liveswitch.Global.toInt(value)},WebSocketOpenArgs.prototype.setHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._headers=value},WebSocketOpenArgs.prototype.setOnFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onFailure=value},WebSocketOpenArgs.prototype.setOnReceive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onReceive=value},WebSocketOpenArgs.prototype.setOnRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onRequestCreated=value},WebSocketOpenArgs.prototype.setOnResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onResponseReceived=value},WebSocketOpenArgs.prototype.setOnStreamFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onStreamFailure=value},WebSocketOpenArgs.prototype.setOnSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onSuccess=value},WebSocketOpenArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},WebSocketOpenArgs.prototype.setStreamTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._streamTimeout=fm.liveswitch.Global.toInt(value)},WebSocketOpenArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketOpenArgs=WebSocketOpenArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketOpenFailureArgs=function(_super){function WebSocketOpenFailureArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(WebSocketOpenFailureArgs,_super),WebSocketOpenFailureArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketOpenFailureArgs],"+_super.prototype.getTypeString.call(this)},WebSocketOpenFailureArgs.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenFailureArgs.prototype.getOpenArgs=function(){if(0==arguments.length)return this._openArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenFailureArgs.prototype.getStatusCode=function(){if(0==arguments.length)return this._statusCode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenFailureArgs.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},WebSocketOpenFailureArgs.prototype.setOpenArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._openArgs=value},WebSocketOpenFailureArgs.prototype.setStatusCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._statusCode=value},WebSocketOpenFailureArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketOpenFailureArgs=WebSocketOpenFailureArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketOpenSuccessArgs=function(_super){function WebSocketOpenSuccessArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(WebSocketOpenSuccessArgs,_super),WebSocketOpenSuccessArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketOpenSuccessArgs],"+_super.prototype.getTypeString.call(this)},WebSocketOpenSuccessArgs.prototype.getOpenArgs=function(){if(0==arguments.length)return this._openArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketOpenSuccessArgs.prototype.setOpenArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._openArgs=value},WebSocketOpenSuccessArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketOpenSuccessArgs=WebSocketOpenSuccessArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketReceiveArgs=function(_super){function WebSocketReceiveArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(WebSocketReceiveArgs,_super),WebSocketReceiveArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketReceiveArgs],"+_super.prototype.getTypeString.call(this)},WebSocketReceiveArgs.prototype.getBinaryMessage=function(){if(0==arguments.length)return this._binaryMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketReceiveArgs.prototype.getIsText=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getTextMessage(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketReceiveArgs.prototype.getOpenArgs=function(){if(0==arguments.length)return this._openArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketReceiveArgs.prototype.getTextMessage=function(){if(0==arguments.length)return this._textMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketReceiveArgs.prototype.setBinaryMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._binaryMessage=value},WebSocketReceiveArgs.prototype.setOpenArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._openArgs=value},WebSocketReceiveArgs.prototype.setTextMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._textMessage=value},WebSocketReceiveArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketReceiveArgs=WebSocketReceiveArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketRequest=function(){function WebSocketRequest(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return WebSocketRequest.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketRequest]"},WebSocketRequest.prototype.getArgs=function(){if(0==arguments.length)return this._args;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketRequest.prototype.getCallback=function(){if(0==arguments.length)return this._callback;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketRequest.prototype.setArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._args=value},WebSocketRequest.prototype.setCallback=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._callback=value},WebSocketRequest}();liveswitch.WebSocketRequest=WebSocketRequest}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketSendArgs=function(_super){function WebSocketSendArgs(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchWebSocketSendArgsInit(),_this.setTimeout(15e3),_this}return __extends(WebSocketSendArgs,_super),WebSocketSendArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketSendArgs],"+_super.prototype.getTypeString.call(this)},WebSocketSendArgs.prototype.fmliveswitchWebSocketSendArgsInit=function(){this._timeout=0},WebSocketSendArgs.prototype.getBinaryMessage=function(){if(0==arguments.length)return this._binaryMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketSendArgs.prototype.getIsText=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getTextMessage(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketSendArgs.prototype.getTextMessage=function(){if(0==arguments.length)return this._textMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketSendArgs.prototype.getTimeout=function(){if(0==arguments.length)return this._timeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketSendArgs.prototype.setBinaryMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._binaryMessage=value},WebSocketSendArgs.prototype.setTextMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._textMessage=value},WebSocketSendArgs.prototype.setTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timeout=fm.liveswitch.Global.toInt(value)},WebSocketSendArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketSendArgs=WebSocketSendArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketStatusCodeWrapper=function(){function WebSocketStatusCodeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_17=__arguments[0];this._value=value_17}return WebSocketStatusCodeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketStatusCodeWrapper]"},WebSocketStatusCodeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.WebSocketStatusCode.Normal?"Normal":this._value==fm.liveswitch.WebSocketStatusCode.GoingAway?"GoingAway":this._value==fm.liveswitch.WebSocketStatusCode.ProtocolError?"ProtocolError":this._value==fm.liveswitch.WebSocketStatusCode.InvalidType?"InvalidType":this._value==fm.liveswitch.WebSocketStatusCode.NoStatus?"NoStatus":this._value==fm.liveswitch.WebSocketStatusCode.Abnormal?"Abnormal":this._value==fm.liveswitch.WebSocketStatusCode.InvalidData?"InvalidData":this._value==fm.liveswitch.WebSocketStatusCode.PolicyViolation?"PolicyViolation":this._value==fm.liveswitch.WebSocketStatusCode.MessageTooLarge?"MessageTooLarge":this._value==fm.liveswitch.WebSocketStatusCode.UnsupportedExtension?"UnsupportedExtension":this._value==fm.liveswitch.WebSocketStatusCode.UnexpectedCondition?"UnexpectedCondition":this._value==fm.liveswitch.WebSocketStatusCode.SecureHandshakeFailure?"SecureHandshakeFailure":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketStatusCodeWrapper}();liveswitch.WebSocketStatusCodeWrapper=WebSocketStatusCodeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketStreamFailureArgs=function(_super){function WebSocketStreamFailureArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(WebSocketStreamFailureArgs,_super),WebSocketStreamFailureArgs.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketStreamFailureArgs],"+_super.prototype.getTypeString.call(this)},WebSocketStreamFailureArgs.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketStreamFailureArgs.prototype.getOpenArgs=function(){if(0==arguments.length)return this._openArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketStreamFailureArgs.prototype.getStatusCode=function(){if(0==arguments.length)return this._statusCode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketStreamFailureArgs.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},WebSocketStreamFailureArgs.prototype.setOpenArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._openArgs=value},WebSocketStreamFailureArgs.prototype.setStatusCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._statusCode=value},WebSocketStreamFailureArgs}(fm.liveswitch.Dynamic);liveswitch.WebSocketStreamFailureArgs=WebSocketStreamFailureArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketTransfer=function(){function WebSocketTransfer(url){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var url_1=__arguments[0];this.fmliveswitchWebSocketTransferInit(),this.setUrl(url_1)}return WebSocketTransfer.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketTransfer]"},WebSocketTransfer.prototype.fmliveswitchWebSocketTransferInit=function(){this._handshakeTimeout=0,this._streamTimeout=0},WebSocketTransfer.prototype.getHandshakeTimeout=function(){if(0==arguments.length)return this._handshakeTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getOnOpenFailure=function(){if(0==arguments.length)return this._onOpenFailure;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getOnOpenSuccess=function(){if(0==arguments.length)return this._onOpenSuccess;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getOnRequestCreated=function(){if(0==arguments.length)return this._onRequestCreated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getOnResponseReceived=function(){if(0==arguments.length)return this._onResponseReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getOnStreamFailure=function(){if(0==arguments.length)return this._onStreamFailure;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getStreamTimeout=function(){if(0==arguments.length)return this._streamTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.getUrl=function(){if(0==arguments.length)return this.__url;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransfer.prototype.setHandshakeTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._handshakeTimeout=fm.liveswitch.Global.toInt(value)},WebSocketTransfer.prototype.setOnOpenFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onOpenFailure=value},WebSocketTransfer.prototype.setOnOpenSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onOpenSuccess=value},WebSocketTransfer.prototype.setOnRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onRequestCreated=value},WebSocketTransfer.prototype.setOnResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onResponseReceived=value},WebSocketTransfer.prototype.setOnStreamFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onStreamFailure=value},WebSocketTransfer.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},WebSocketTransfer.prototype.setStreamTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._streamTimeout=fm.liveswitch.Global.toInt(value)},WebSocketTransfer.prototype.setUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.StringExtensions.replace(value,"https://","wss://"),value=fm.liveswitch.StringExtensions.replace(value,"http://","ws://"),this.__url=value},WebSocketTransfer}();liveswitch.WebSocketTransfer=WebSocketTransfer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketTransferFactory=function(){function WebSocketTransferFactory(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return WebSocketTransferFactory.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketTransferFactory]"},WebSocketTransferFactory.defaultCreateWebSocketTransfer=function(url){if(1==arguments.length)return new fm.liveswitch.WebSocketWebRequestTransfer(url);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransferFactory.getCreateWebSocketTransfer=function(){if(0==arguments.length)return fm.liveswitch.WebSocketTransferFactory.fm_liveswitch_WebSocketTransferFactory__createWebSocketTransfer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransferFactory.getWebSocketTransfer=function(url){if(1==arguments.length){fm.liveswitch.Global.equals(fm.liveswitch.WebSocketTransferFactory.getCreateWebSocketTransfer(),null)&&fm.liveswitch.WebSocketTransferFactory.setCreateWebSocketTransfer(fm.liveswitch.WebSocketTransferFactory.defaultCreateWebSocketTransfer.bind(fm.liveswitch.WebSocketTransferFactory));var transfer=fm.liveswitch.WebSocketTransferFactory.getCreateWebSocketTransfer()(url);return fm.liveswitch.Global.equals(transfer,null)&&(transfer=fm.liveswitch.WebSocketTransferFactory.defaultCreateWebSocketTransfer(url)),transfer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketTransferFactory.setCreateWebSocketTransfer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.WebSocketTransferFactory.fm_liveswitch_WebSocketTransferFactory__createWebSocketTransfer=value},WebSocketTransferFactory}();liveswitch.WebSocketTransferFactory=WebSocketTransferFactory}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebSocketWebRequestTransfer=function(_super){function WebSocketWebRequestTransfer(url){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var url_2=__arguments[0];return _super.call(this,url_2)||this}return __extends(WebSocketWebRequestTransfer,_super),WebSocketWebRequestTransfer.prototype.getTypeString=function(){return"[fm.liveswitch.WebSocketWebRequestTransfer],"+_super.prototype.getTypeString.call(this)},WebSocketWebRequestTransfer.prototype.connectFailure=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(_super.prototype.getOnOpenFailure.call(this),null)||_super.prototype.getOnOpenFailure.call(this)(e)},WebSocketWebRequestTransfer.prototype.connectSuccess=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(_super.prototype.getOnOpenSuccess.call(this),null)||_super.prototype.getOnOpenSuccess.call(this)(e)},WebSocketWebRequestTransfer.prototype.getWebSocket=function(){if(0==arguments.length)return this._webSocket;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketWebRequestTransfer.prototype.open=function(headers){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getWebSocket(),null)||(this.getWebSocket().close(),this.setWebSocket(null)),this.setWebSocket(new fm.liveswitch.WebSocket(_super.prototype.getUrl.call(this)));try{var openArgs=new fm.liveswitch.WebSocketOpenArgs;openArgs.setHandshakeTimeout(_super.prototype.getHandshakeTimeout.call(this)),openArgs.setHeaders(headers),openArgs.setOnSuccess(this.connectSuccess.bind(this)),openArgs.setOnFailure(this.connectFailure.bind(this)),openArgs.setOnStreamFailure(this.streamFailure.bind(this)),openArgs.setOnRequestCreated(_super.prototype.getOnRequestCreated.call(this)),openArgs.setOnResponseReceived(_super.prototype.getOnResponseReceived.call(this)),openArgs.setOnReceive(this.receive.bind(this)),openArgs.setSender(_super.prototype.getSender.call(this)),this.getWebSocket().open(openArgs)}catch(exception){fm.liveswitch.Log.error("Could not open WebSocket.",exception)}},WebSocketWebRequestTransfer.prototype.receive=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var p=new fm.liveswitch.HttpResponseArgs(this._activeRequest.getArgs());p.setTextContent(e.getTextMessage()),p.setBinaryContent(e.getBinaryMessage()),this._activeRequest.getCallback()(p)},WebSocketWebRequestTransfer.prototype.send=function(requestArgs){throw 1==arguments.length?new fm.liveswitch.Exception("Synchronous WebSockets are not supported."):new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketWebRequestTransfer.prototype.sendAsync=function(requestArgs,callback){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{var request2=new fm.liveswitch.WebSocketRequest;request2.setArgs(requestArgs),request2.setCallback(callback);var request=request2,args2=new fm.liveswitch.WebSocketSendArgs;args2.setTimeout(request.getArgs().getTimeout());var sendArgs=args2;sendArgs.setTextMessage(request.getArgs().getTextContent()),sendArgs.setBinaryMessage(request.getArgs().getBinaryContent()),this._activeRequest=request,this.getWebSocket().send(sendArgs)}catch(exception){var p=new fm.liveswitch.HttpResponseArgs(requestArgs);p.setException(exception),p.setStatusCode(0),callback(p)}},WebSocketWebRequestTransfer.prototype.setWebSocket=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocket=value},WebSocketWebRequestTransfer.prototype.shutdown=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setOnOpenFailure.call(this,null),_super.prototype.setOnOpenSuccess.call(this,null),_super.prototype.setOnRequestCreated.call(this,null),_super.prototype.setOnResponseReceived.call(this,null),_super.prototype.setOnStreamFailure.call(this,null),this.getWebSocket().close(),this.setWebSocket(null)},WebSocketWebRequestTransfer.prototype.streamFailure=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(_super.prototype.getOnStreamFailure.call(this),null)||_super.prototype.getOnStreamFailure.call(this)(e)},WebSocketWebRequestTransfer}(fm.liveswitch.WebSocketTransfer);liveswitch.WebSocketWebRequestTransfer=WebSocketWebRequestTransfer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaConfig=function(){function MediaConfig(clockRate){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var clockRate_1=__arguments[0];this.fmliveswitchMediaConfigInit(),this.setClockRate(clockRate_1)}return MediaConfig.prototype.getTypeString=function(){return"[fm.liveswitch.MediaConfig]"},MediaConfig.prototype.fmliveswitchMediaConfigInit=function(){this._clockRate=0},MediaConfig.prototype.getClockRate=function(){if(0==arguments.length)return this._clockRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaConfig.prototype.isEquivalent=function(config){if(1==arguments.length)return!fm.liveswitch.Global.equals(config,null)&&fm.liveswitch.Global.equals(this.getClockRate(),config.getClockRate());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaConfig.prototype.setClockRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._clockRate=fm.liveswitch.Global.toInt(value)},MediaConfig}();liveswitch.MediaConfig=MediaConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AudioConfig=function(_super){function AudioConfig(clockRate,channelCount){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var clockRate_2=__arguments[0],channelCount_1=__arguments[1];return(_this=_super.call(this,clockRate_2)||this).fmliveswitchAudioConfigInit(),_this.setChannelCount(channelCount_1),_this}return __extends(AudioConfig,_super),AudioConfig.prototype.getTypeString=function(){return"[fm.liveswitch.AudioConfig],"+_super.prototype.getTypeString.call(this)},AudioConfig.prototype.fmliveswitchAudioConfigInit=function(){this._channelCount=0},AudioConfig.prototype.getChannelCount=function(){if(0==arguments.length)return this._channelCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioConfig.prototype.isEquivalent=function(config){if(1==arguments.length)return!!_super.prototype.isEquivalent.call(this,config)&&fm.liveswitch.Global.equals(this.getChannelCount(),config.getChannelCount());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioConfig.prototype.setChannelCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._channelCount=fm.liveswitch.Global.toInt(value)},AudioConfig.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.format("Clock Rate: {0}, Channel Count: {1}",fm.liveswitch.NumberExtensions.toString(_super.prototype.getClockRate.call(this)),fm.liveswitch.NumberExtensions.toString(this.getChannelCount()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioConfig}(fm.liveswitch.MediaConfig);liveswitch.AudioConfig=AudioConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var BaseStats=function(){function BaseStats(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return BaseStats.prototype.getTypeString=function(){return"[fm.liveswitch.BaseStats]"},BaseStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"id")?this.setId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"timestamp")&&this.setTimestamp(fm.liveswitch.UnixTimestamp.unixMillisToDateTime(fm.liveswitch.JsonSerializer.deserializeLong(valueJson))))},BaseStats.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseStats.prototype.getTimestamp=function(){if(0==arguments.length)return this._timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getId(),null)||(jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(this.getId())),jsonObject.timestamp=fm.liveswitch.JsonSerializer.serializeLong(fm.liveswitch.UnixTimestamp.dateTimeToUnixMillis(this.getTimestamp()))},BaseStats.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},BaseStats.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._timestamp=value},BaseStats}();liveswitch.BaseStats=BaseStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var BitrateNotification=function(){function BitrateNotification(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchBitrateNotificationInit(),this.setSynchronizationSource(-1),this.setMediaDescriptionId(null),this.setRtpStreamId(null),this.setBitrate(-1)}return BitrateNotification.prototype.getTypeString=function(){return"[fm.liveswitch.BitrateNotification]"},BitrateNotification.prototype.fmliveswitchBitrateNotificationInit=function(){this._bitrate=0,this._synchronizationSource=0},BitrateNotification.fromJson=function(bitrateNotificationJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(bitrateNotificationJson,(function(){return new fm.liveswitch.BitrateNotification}),(function(bn,key,valueJson){bn.deserializeProperty(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.fromJsonArray=function(bitrateNotificationsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(bitrateNotificationsJson,fm.liveswitch.BitrateNotification.fromJson.bind(fm.liveswitch.BitrateNotification));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.toJson=function(bitrateNotification){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(bitrateNotification,(function(bn,dict){bn.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.toJsonArray=function(bitrateNotifications){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(bitrateNotifications,fm.liveswitch.BitrateNotification.toJson.bind(fm.liveswitch.BitrateNotification));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.prototype.deserializeProperty=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"synchronizationSource")?this.setSynchronizationSource(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"mediaDescriptionId")?this.setMediaDescriptionId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"rtpStreamId")?this.setRtpStreamId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"bitrate")&&this.setBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))},BitrateNotification.prototype.getBitrate=function(){if(0==arguments.length)return this._bitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.prototype.getMediaDescriptionId=function(){if(0==arguments.length)return this._mediaDescriptionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.prototype.getRtpStreamId=function(){if(0==arguments.length)return this._rtpStreamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this._synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getSynchronizationSource(),-1)||(jsonObject.synchronizationSource=fm.liveswitch.JsonSerializer.serializeLong(this.getSynchronizationSource())),fm.liveswitch.Global.equals(this.getMediaDescriptionId(),null)||(jsonObject.mediaDescriptionId=fm.liveswitch.JsonSerializer.serializeString(this.getMediaDescriptionId())),fm.liveswitch.Global.equals(this.getRtpStreamId(),null)||(jsonObject.rtpStreamId=fm.liveswitch.JsonSerializer.serializeString(this.getRtpStreamId())),fm.liveswitch.Global.equals(this.getBitrate(),-1)||(jsonObject.bitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getBitrate()))},BitrateNotification.prototype.setBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bitrate=fm.liveswitch.Global.toInt(value)},BitrateNotification.prototype.setMediaDescriptionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaDescriptionId=value},BitrateNotification.prototype.setRtpStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtpStreamId=value},BitrateNotification.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._synchronizationSource=fm.liveswitch.Global.toInt(value)},BitrateNotification.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.BitrateNotification.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateNotification}();liveswitch.BitrateNotification=BitrateNotification}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var BitrateRequest=function(){function BitrateRequest(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchBitrateRequestInit(),this.setSynchronizationSource(-1),this.setMediaDescriptionId(null),this.setRtpStreamId(null),this.setBitrate(-1),this.setSenderSynchronizationSource(-1)}return BitrateRequest.prototype.getTypeString=function(){return"[fm.liveswitch.BitrateRequest]"},BitrateRequest.prototype.fmliveswitchBitrateRequestInit=function(){this._bitrate=0,this._senderSynchronizationSource=0,this._synchronizationSource=0},BitrateRequest.fromJson=function(bitrateRequestJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(bitrateRequestJson,(function(){return new fm.liveswitch.BitrateRequest}),(function(br,key,valueJson){br.deserializeProperty(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.fromJsonArray=function(bitrateRequestsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(bitrateRequestsJson,fm.liveswitch.BitrateRequest.fromJson.bind(fm.liveswitch.BitrateRequest));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.toJson=function(bitrateRequest){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(bitrateRequest,(function(br,dict){br.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.toJsonArray=function(bitrateRequests){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(bitrateRequests,fm.liveswitch.BitrateRequest.toJson.bind(fm.liveswitch.BitrateRequest));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.prototype.deserializeProperty=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"synchronizationSource")?this.setSynchronizationSource(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"mediaDescriptionId")?this.setMediaDescriptionId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"rtpStreamId")?this.setRtpStreamId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"bitrate")?this.setBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"senderSynchronizationSource")&&this.setSenderSynchronizationSource(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},BitrateRequest.prototype.getBitrate=function(){if(0==arguments.length)return this._bitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.prototype.getMediaDescriptionId=function(){if(0==arguments.length)return this._mediaDescriptionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.prototype.getRtpStreamId=function(){if(0==arguments.length)return this._rtpStreamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.prototype.getSenderSynchronizationSource=function(){if(0==arguments.length)return this._senderSynchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this._synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getSynchronizationSource(),-1)||(jsonObject.synchronizationSource=fm.liveswitch.JsonSerializer.serializeLong(this.getSynchronizationSource())),fm.liveswitch.Global.equals(this.getMediaDescriptionId(),null)||(jsonObject.mediaDescriptionId=fm.liveswitch.JsonSerializer.serializeString(this.getMediaDescriptionId())),fm.liveswitch.Global.equals(this.getRtpStreamId(),null)||(jsonObject.rtpStreamId=fm.liveswitch.JsonSerializer.serializeString(this.getRtpStreamId())),fm.liveswitch.Global.equals(this.getBitrate(),-1)||(jsonObject.bitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getBitrate())),fm.liveswitch.Global.equals(this.getSenderSynchronizationSource(),-1)||(jsonObject.senderSynchronizationSource=fm.liveswitch.JsonSerializer.serializeLong(this.getSenderSynchronizationSource()))},BitrateRequest.prototype.setBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bitrate=fm.liveswitch.Global.toInt(value)},BitrateRequest.prototype.setMediaDescriptionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaDescriptionId=value},BitrateRequest.prototype.setRtpStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtpStreamId=value},BitrateRequest.prototype.setSenderSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._senderSynchronizationSource=fm.liveswitch.Global.toInt(value)},BitrateRequest.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._synchronizationSource=fm.liveswitch.Global.toInt(value)},BitrateRequest.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.BitrateRequest.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BitrateRequest}();liveswitch.BitrateRequest=BitrateRequest}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Info=function(){function Info(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Info.prototype.getTypeString=function(){return"[fm.liveswitch.Info]"},Info.processArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!newValues[i].isEquivalent(oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processBoolean=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processBooleanArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processDouble=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processFloat=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processFloatArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processInteger=function(newValue,oldValue){if(2==arguments.length)return newValue=fm.liveswitch.Global.toInt(arguments[0]),oldValue=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processIntegerArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processLong=function(newValue,oldValue){if(2==arguments.length)return newValue=fm.liveswitch.Global.toInt(arguments[0]),oldValue=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processLongArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processObject=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:fm.liveswitch.Global.equals(newValue,null)||fm.liveswitch.Global.equals(oldValue,null)||!newValue.isEquivalent(oldValue)?newValue:null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processShort=function(newValue,oldValue){if(2==arguments.length)return newValue=fm.liveswitch.Global.toInt(arguments[0]),oldValue=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processShortArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.processString=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;!fm.liveswitch.Global.equals(str,null)&&fm.liveswitch.Global.equals(str,"id")&&this.setId(fm.liveswitch.JsonSerializer.deserializeString(valueJson))},Info.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Info.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getId(),null)||(jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(this.getId()))},Info.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},Info}();liveswitch.Info=Info}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidateInfo=function(_super){function CandidateInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchCandidateInfoInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchCandidateInfoInit(),_super.prototype.setId.call(_this,stats.getId());var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setIPAddress(flag?stats.getIPAddress():fm.liveswitch.Info.processString(stats.getIPAddress(),lastStats.getIPAddress())),_this.setPort(flag?stats.getPort():fm.liveswitch.Info.processInteger(stats.getPort(),lastStats.getPort())),_this.setPriority(flag?stats.getPriority():fm.liveswitch.Info.processLong(stats.getPriority(),lastStats.getPriority())),_this.setProtocol(!flag&&fm.liveswitch.Global.equals(stats.getProtocol(),lastStats.getProtocol())?null:fm.liveswitch.CandidateUtility.protocolTypeToString(stats.getProtocol())),_this.setRelatedIPAddress(flag?stats.getRelatedIPAddress():fm.liveswitch.Info.processString(stats.getRelatedIPAddress(),lastStats.getRelatedIPAddress())),_this.setRelatedPort(flag?stats.getRelatedPort():fm.liveswitch.Info.processInteger(stats.getRelatedPort(),lastStats.getRelatedPort())),_this.setRelayProtocol(!flag&&fm.liveswitch.Global.equals(stats.getRelayProtocol(),lastStats.getRelayProtocol())?null:fm.liveswitch.CandidateUtility.protocolTypeToString(stats.getRelayProtocol())),_this.setType(!flag&&fm.liveswitch.Global.equals(stats.getType(),lastStats.getType())?null:fm.liveswitch.CandidateUtility.typeToString(stats.getType()))}return _this}return __extends(CandidateInfo,_super),CandidateInfo.prototype.getTypeString=function(){return"[fm.liveswitch.CandidateInfo],"+_super.prototype.getTypeString.call(this)},CandidateInfo.prototype.fmliveswitchCandidateInfoInit=function(){this._port=0,this._priority=0,this._relatedPort=0},CandidateInfo.fromJson=function(candidateReportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(candidateReportJson,(function(){return new fm.liveswitch.CandidateInfo}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.fromJsonArray=function(candidateReportsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(candidateReportsJson,fm.liveswitch.CandidateInfo.fromJson.bind(fm.liveswitch.CandidateInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.toJson=function(candidateReport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(candidateReport,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.toJsonArray=function(candidateReports){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(candidateReports,fm.liveswitch.CandidateInfo.toJson.bind(fm.liveswitch.CandidateInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("ipAddress"==_var0){this.setIPAddress(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("port"==_var0){this.setPort(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("relatedIPAddress"==_var0){this.setRelatedIPAddress(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("relatedPort"==_var0){this.setRelatedPort(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("protocol"==_var0){this.setProtocol(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("relayProtocol"==_var0){this.setRelayProtocol(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("type"==_var0){this.setType(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("priority"==_var0){this.setPriority(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},CandidateInfo.prototype.getIPAddress=function(){if(0==arguments.length)return this._ipAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.getPort=function(){if(0==arguments.length)return this._port;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.getPriority=function(){if(0==arguments.length)return this._priority;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.getProtocol=function(){if(0==arguments.length)return this._protocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.getRelatedIPAddress=function(){if(0==arguments.length)return this._relatedIPAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.getRelatedPort=function(){if(0==arguments.length)return this._relatedPort;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.getRelayProtocol=function(){if(0==arguments.length)return this._relayProtocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getIPAddress(),null)||(jsonObject.ipAddress=fm.liveswitch.JsonSerializer.serializeString(this.getIPAddress())),null!=this.getPort()&&(jsonObject.port=fm.liveswitch.JsonSerializer.serializeInteger(this.getPort())),fm.liveswitch.Global.equals(this.getRelatedIPAddress(),null)||(jsonObject.relatedIPAddress=fm.liveswitch.JsonSerializer.serializeString(this.getRelatedIPAddress())),null!=this.getRelatedPort()&&(jsonObject.relatedPort=fm.liveswitch.JsonSerializer.serializeInteger(this.getRelatedPort())),fm.liveswitch.Global.equals(this.getProtocol(),null)||(jsonObject.protocol=fm.liveswitch.JsonSerializer.serializeString(this.getProtocol())),fm.liveswitch.Global.equals(this.getRelayProtocol(),null)||(jsonObject.relayProtocol=fm.liveswitch.JsonSerializer.serializeString(this.getRelayProtocol())),fm.liveswitch.Global.equals(this.getType(),null)||(jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(this.getType())),null!=this.getPriority()&&(jsonObject.priority=fm.liveswitch.JsonSerializer.serializeLong(this.getPriority()))},CandidateInfo.prototype.setIPAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ipAddress=value},CandidateInfo.prototype.setPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._port=value},CandidateInfo.prototype.setPriority=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._priority=value},CandidateInfo.prototype.setProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._protocol=value},CandidateInfo.prototype.setRelatedIPAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._relatedIPAddress=value},CandidateInfo.prototype.setRelatedPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._relatedPort=value},CandidateInfo.prototype.setRelayProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._relayProtocol=value},CandidateInfo.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},CandidateInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CandidateInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateInfo}(fm.liveswitch.Info);liveswitch.CandidateInfo=CandidateInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidatePairInfo=function(_super){function CandidatePairInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchCandidatePairInfoInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchCandidatePairInfoInit(),_super.prototype.setId.call(_this,stats.getId());var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setLocalCandidateId(stats.getLocalCandidateId()),_this.setRemoteCandidateId(stats.getRemoteCandidateId()),_this.setState(!flag&&fm.liveswitch.Global.equals(stats.getState(),lastStats.getState())?null:fm.liveswitch.CandidateUtility.candidatePairStateToString(stats.getState())),_this.setPriority(flag?stats.getPriority():fm.liveswitch.Info.processLong(stats.getPriority(),lastStats.getPriority())),_this.setNominated(flag?stats.getNominated():fm.liveswitch.Info.processBoolean(stats.getNominated(),lastStats.getNominated())),_this.setReport(new fm.liveswitch.CandidatePairReport(stats,lastStats))}return _this}return __extends(CandidatePairInfo,_super),CandidatePairInfo.prototype.getTypeString=function(){return"[fm.liveswitch.CandidatePairInfo],"+_super.prototype.getTypeString.call(this)},CandidatePairInfo.prototype.fmliveswitchCandidatePairInfoInit=function(){this._nominated=!1,this._priority=0},CandidatePairInfo.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.CandidatePairInfo}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.fromJsonArray=function(arrayJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(arrayJson,fm.liveswitch.CandidatePairInfo.fromJson.bind(fm.liveswitch.CandidatePairInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.toJsonArray=function(array){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(array,fm.liveswitch.CandidatePairInfo.toJson.bind(fm.liveswitch.CandidatePairInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"localCandidateId")?this.setLocalCandidateId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"remoteCandidateId")?this.setRemoteCandidateId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"state")?this.setState(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"priority")?this.setPriority(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"nominated")?this.setNominated(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"report")&&this.setReport(fm.liveswitch.CandidatePairReport.fromJson(valueJson)))},CandidatePairInfo.prototype.getLocalCandidateId=function(){if(0==arguments.length)return this._localCandidateId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.prototype.getNominated=function(){if(0==arguments.length)return this._nominated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.prototype.getPriority=function(){if(0==arguments.length)return this._priority;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.prototype.getRemoteCandidateId=function(){if(0==arguments.length)return this._remoteCandidateId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getLocalCandidateId(),null)||(jsonObject.localCandidateId=fm.liveswitch.JsonSerializer.serializeString(this.getLocalCandidateId())),fm.liveswitch.Global.equals(this.getRemoteCandidateId(),null)||(jsonObject.remoteCandidateId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteCandidateId())),fm.liveswitch.Global.equals(this.getState(),null)||(jsonObject.state=fm.liveswitch.JsonSerializer.serializeString(this.getState())),null!=this.getPriority()&&(jsonObject.priority=fm.liveswitch.JsonSerializer.serializeLong(this.getPriority())),null!=this.getNominated()&&(jsonObject.nominated=fm.liveswitch.JsonSerializer.serializeBoolean(this.getNominated())),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=fm.liveswitch.CandidatePairReport.toJson(this.getReport()))},CandidatePairInfo.prototype.setLocalCandidateId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localCandidateId=value},CandidatePairInfo.prototype.setNominated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._nominated=value},CandidatePairInfo.prototype.setPriority=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._priority=value},CandidatePairInfo.prototype.setRemoteCandidateId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCandidateId=value},CandidatePairInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},CandidatePairInfo.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},CandidatePairInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CandidatePairInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairInfo}(fm.liveswitch.Info);liveswitch.CandidatePairInfo=CandidatePairInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidatePairStateWrapper=function(){function CandidatePairStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_18=__arguments[0];this._value=value_18}return CandidatePairStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CandidatePairStateWrapper]"},CandidatePairStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CandidatePairState.New?"New":this._value==fm.liveswitch.CandidatePairState.Waiting?"Waiting":this._value==fm.liveswitch.CandidatePairState.InProgress?"InProgress":this._value==fm.liveswitch.CandidatePairState.Succeeded?"Succeeded":this._value==fm.liveswitch.CandidatePairState.Failed?"Failed":this._value==fm.liveswitch.CandidatePairState.Closed?"Closed":this._value==fm.liveswitch.CandidatePairState.ConnectivityLost?"ConnectivityLost":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStateWrapper}();liveswitch.CandidatePairStateWrapper=CandidatePairStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidatePairStats=function(_super){function CandidatePairStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchCandidatePairStatsInit(),_this.setState(fm.liveswitch.CandidatePairState.New),_this}return __extends(CandidatePairStats,_super),CandidatePairStats.prototype.getTypeString=function(){return"[fm.liveswitch.CandidatePairStats],"+_super.prototype.getTypeString.call(this)},CandidatePairStats.prototype.fmliveswitchCandidatePairStatsInit=function(){this._bytesReceived=0,this._bytesSent=0,this._consentRequestsReceived=0,this._consentRequestsSent=0,this._consentResponsesReceived=0,this._consentResponsesSent=0,this._currentRoundTripTime=0,this._nominated=!1,this._priority=0,this._requestsReceived=0,this._requestsSent=0,this._responsesReceived=0,this._responsesSent=0,this._totalRoundTripTime=0},CandidatePairStats.fromJson=function(candidatePairJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(candidatePairJson,(function(){return new fm.liveswitch.CandidatePairStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.fromJsonArray=function(candidatePairsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(candidatePairsJson,fm.liveswitch.CandidatePairStats.fromJson.bind(fm.liveswitch.CandidatePairStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.toJson=function(candidatePair){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(candidatePair,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.toJsonArray=function(candidatePairs){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(candidatePairs,fm.liveswitch.CandidatePairStats.toJson.bind(fm.liveswitch.CandidatePairStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("transportId"==_var0){this.setTransportId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("localCandidateId"==_var0){this.setLocalCandidateId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteCandidateId"==_var0){this.setRemoteCandidateId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("state"==_var0){this.setState(fm.liveswitch.CandidateUtility.candidatePairStateFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("priority"==_var0){this.setPriority(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("nominated"==_var0){this.setNominated(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("bytesSent"==_var0){this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("bytesReceived"==_var0){this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("requestsSent"==_var0){this.setRequestsSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("requestsReceived"==_var0){this.setRequestsReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("responsesSent"==_var0){this.setResponsesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("responsesReceived"==_var0){this.setResponsesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentRequestsSent"==_var0){this.setConsentRequestsSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentRequestsReceived"==_var0){this.setConsentRequestsReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentResponsesSent"==_var0){this.setConsentResponsesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentResponsesReceived"==_var0){this.setConsentResponsesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("totalRoundTripTime"==_var0){this.setTotalRoundTripTime(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("currentRoundTripTime"==_var0){this.setCurrentRoundTripTime(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}}while(0)},CandidatePairStats.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getConsentRequestsReceived=function(){if(0==arguments.length)return this._consentRequestsReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getConsentRequestsSent=function(){if(0==arguments.length)return this._consentRequestsSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getConsentResponsesReceived=function(){if(0==arguments.length)return this._consentResponsesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getConsentResponsesSent=function(){if(0==arguments.length)return this._consentResponsesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getCurrentRoundTripTime=function(){if(0==arguments.length)return this._currentRoundTripTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getLocalCandidateId=function(){if(0==arguments.length)return this._localCandidateId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getNominated=function(){if(0==arguments.length)return this._nominated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getPriority=function(){if(0==arguments.length)return this._priority;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getRemoteCandidateId=function(){if(0==arguments.length)return this._remoteCandidateId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getRequestsReceived=function(){if(0==arguments.length)return this._requestsReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getRequestsSent=function(){if(0==arguments.length)return this._requestsSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getResponsesReceived=function(){if(0==arguments.length)return this._responsesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getResponsesSent=function(){if(0==arguments.length)return this._responsesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getTotalRoundTripTime=function(){if(0==arguments.length)return this._totalRoundTripTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.getTransportId=function(){if(0==arguments.length)return this._transportId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return!fm.liveswitch.Global.equals(instance,null)&&(fm.liveswitch.Global.equals(instance.getTransportId(),this.getTransportId())&&fm.liveswitch.Global.equals(instance.getLocalCandidateId(),this.getLocalCandidateId())&&fm.liveswitch.Global.equals(instance.getRemoteCandidateId(),this.getRemoteCandidateId())&&fm.liveswitch.Global.equals(instance.getState(),this.getState())&&fm.liveswitch.Global.equals(instance.getPriority(),this.getPriority())&&fm.liveswitch.Global.equals(instance.getNominated(),this.getNominated())&&fm.liveswitch.Global.equals(instance.getBytesSent(),this.getBytesSent())&&fm.liveswitch.Global.equals(instance.getBytesReceived(),this.getBytesReceived())&&fm.liveswitch.Global.equals(instance.getRequestsSent(),this.getRequestsSent())&&fm.liveswitch.Global.equals(instance.getRequestsReceived(),this.getRequestsReceived())&&fm.liveswitch.Global.equals(instance.getResponsesSent(),this.getResponsesSent())&&fm.liveswitch.Global.equals(instance.getResponsesReceived(),this.getResponsesReceived())&&fm.liveswitch.Global.equals(instance.getConsentRequestsSent(),this.getConsentRequestsSent())&&fm.liveswitch.Global.equals(instance.getConsentRequestsReceived(),this.getConsentRequestsReceived())&&fm.liveswitch.Global.equals(instance.getConsentResponsesSent(),this.getConsentResponsesSent())&&fm.liveswitch.Global.equals(instance.getConsentResponsesReceived(),this.getConsentResponsesReceived())&&fm.liveswitch.Global.equals(instance.getTotalRoundTripTime(),this.getTotalRoundTripTime())&&fm.liveswitch.Global.equals(instance.getCurrentRoundTripTime(),this.getCurrentRoundTripTime()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getTransportId(),null)||(jsonObject.transportId=fm.liveswitch.JsonSerializer.serializeString(this.getTransportId())),fm.liveswitch.Global.equals(this.getLocalCandidateId(),null)||(jsonObject.localCandidateId=fm.liveswitch.JsonSerializer.serializeString(this.getLocalCandidateId())),fm.liveswitch.Global.equals(this.getRemoteCandidateId(),null)||(jsonObject.remoteCandidateId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteCandidateId())),jsonObject.state=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.CandidateUtility.candidatePairStateToString(this.getState())),jsonObject.priority=fm.liveswitch.JsonSerializer.serializeLong(this.getPriority()),jsonObject.nominated=fm.liveswitch.JsonSerializer.serializeBoolean(this.getNominated()),jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent()),jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived()),jsonObject.requestsSent=fm.liveswitch.JsonSerializer.serializeLong(this.getRequestsSent()),jsonObject.requestsReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getRequestsReceived()),jsonObject.responsesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getResponsesSent()),jsonObject.responsesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getResponsesReceived()),jsonObject.consentRequestsSent=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentRequestsSent()),jsonObject.consentRequestsReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentRequestsReceived()),jsonObject.consentResponsesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentResponsesSent()),jsonObject.consentResponsesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentResponsesReceived()),jsonObject.totalRoundTripTime=fm.liveswitch.JsonSerializer.serializeInteger(this.getTotalRoundTripTime()),jsonObject.currentRoundTripTime=fm.liveswitch.JsonSerializer.serializeInteger(this.getCurrentRoundTripTime())},CandidatePairStats.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesReceived=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesSent=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setConsentRequestsReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._consentRequestsReceived=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setConsentRequestsSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._consentRequestsSent=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setConsentResponsesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._consentResponsesReceived=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setConsentResponsesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._consentResponsesSent=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setCurrentRoundTripTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._currentRoundTripTime=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setLocalCandidateId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localCandidateId=value},CandidatePairStats.prototype.setNominated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._nominated=value},CandidatePairStats.prototype.setPriority=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._priority=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setRemoteCandidateId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCandidateId=value},CandidatePairStats.prototype.setRequestsReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._requestsReceived=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setRequestsSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._requestsSent=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setResponsesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._responsesReceived=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setResponsesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._responsesSent=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},CandidatePairStats.prototype.setTotalRoundTripTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._totalRoundTripTime=fm.liveswitch.Global.toInt(value)},CandidatePairStats.prototype.setTransportId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._transportId=value},CandidatePairStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CandidatePairStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairStats}(fm.liveswitch.BaseStats);liveswitch.CandidatePairStats=CandidatePairStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidateStats=function(_super){function CandidateStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchCandidateStatsInit(),_this.setPort(-1),_this.setRelatedPort(-1),_this.setProtocol(fm.liveswitch.ProtocolType.Unknown),_this.setRelayProtocol(fm.liveswitch.ProtocolType.Unknown),_this.setType(fm.liveswitch.CandidateType.Unknown),_this}return __extends(CandidateStats,_super),CandidateStats.prototype.getTypeString=function(){return"[fm.liveswitch.CandidateStats],"+_super.prototype.getTypeString.call(this)},CandidateStats.prototype.fmliveswitchCandidateStatsInit=function(){this._port=0,this._priority=0,this._relatedPort=0},CandidateStats.fromJson=function(candidateJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(candidateJson,(function(){return new fm.liveswitch.CandidateStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.fromJsonArray=function(candidatesJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(candidatesJson,fm.liveswitch.CandidateStats.fromJson.bind(fm.liveswitch.CandidateStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.toJson=function(candidate){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(candidate,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.toJsonArray=function(candidates){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(candidates,fm.liveswitch.CandidateStats.toJson.bind(fm.liveswitch.CandidateStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("ipAddress"==_var0){this.setIPAddress(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("port"==_var0){this.setPort(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("relayProtocol"==_var0){this.setRelayProtocol(fm.liveswitch.CandidateUtility.protocolTypeFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("relatedIPAddress"==_var0){this.setRelatedIPAddress(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("relatedPort"==_var0){this.setRelatedPort(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("protocol"==_var0){this.setProtocol(fm.liveswitch.CandidateUtility.protocolTypeFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("type"==_var0){this.setType(fm.liveswitch.CandidateUtility.typeFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("priority"==_var0){this.setPriority(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},CandidateStats.prototype.getIPAddress=function(){if(0==arguments.length)return this._ipAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getIsHost=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.CandidateType.Host);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getIsReflexive=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.CandidateType.ServerReflexive)||fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.CandidateType.PeerReflexive);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getIsRelayed=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.CandidateType.Relayed);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getPort=function(){if(0==arguments.length)return this._port;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getPriority=function(){if(0==arguments.length)return this._priority;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getProtocol=function(){if(0==arguments.length)return this._protocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getRelatedIPAddress=function(){if(0==arguments.length)return this._relatedIPAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getRelatedPort=function(){if(0==arguments.length)return this._relatedPort;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getRelayProtocol=function(){if(0==arguments.length)return this._relayProtocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getTurnProtocol=function(){if(0==arguments.length)return this.getRelayProtocol();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return!fm.liveswitch.Global.equals(instance,null)&&(fm.liveswitch.Global.equals(instance.getIPAddress(),this.getIPAddress())&&fm.liveswitch.Global.equals(instance.getPort(),this.getPort())&&fm.liveswitch.Global.equals(instance.getRelayProtocol(),this.getRelayProtocol())&&fm.liveswitch.Global.equals(instance.getRelatedIPAddress(),this.getRelatedIPAddress())&&fm.liveswitch.Global.equals(instance.getRelatedPort(),this.getRelatedPort())&&fm.liveswitch.Global.equals(instance.getProtocol(),this.getProtocol())&&fm.liveswitch.Global.equals(instance.getType(),this.getType())&&fm.liveswitch.Global.equals(instance.getPriority(),this.getPriority()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getIPAddress(),null)||(jsonObject.ipAddress=fm.liveswitch.JsonSerializer.serializeString(this.getIPAddress())),fm.liveswitch.Global.equals(this.getPort(),0)||(jsonObject.port=fm.liveswitch.JsonSerializer.serializeInteger(this.getPort())),fm.liveswitch.Global.equals(this.getRelatedIPAddress(),null)||(jsonObject.relatedIPAddress=fm.liveswitch.JsonSerializer.serializeString(this.getRelatedIPAddress())),fm.liveswitch.Global.equals(this.getRelatedPort(),0)||(jsonObject.relatedPort=fm.liveswitch.JsonSerializer.serializeInteger(this.getRelatedPort())),jsonObject.protocol=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.CandidateUtility.protocolTypeToString(this.getProtocol())),jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.CandidateUtility.typeToString(this.getType())),fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.CandidateType.Relayed)&&(jsonObject.relayProtocol=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.CandidateUtility.protocolTypeToString(this.getRelayProtocol()))),jsonObject.priority=fm.liveswitch.JsonSerializer.serializeLong(this.getPriority())},CandidateStats.prototype.setIPAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ipAddress=value},CandidateStats.prototype.setPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._port=fm.liveswitch.Global.toInt(value)},CandidateStats.prototype.setPriority=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._priority=fm.liveswitch.Global.toInt(value)},CandidateStats.prototype.setProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._protocol=value},CandidateStats.prototype.setRelatedIPAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._relatedIPAddress=value},CandidateStats.prototype.setRelatedPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._relatedPort=fm.liveswitch.Global.toInt(value)},CandidateStats.prototype.setRelayProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._relayProtocol=value},CandidateStats.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},CandidateStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CandidateStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateStats}(fm.liveswitch.BaseStats);liveswitch.CandidateStats=CandidateStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidateTypeWrapper=function(){function CandidateTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_19=__arguments[0];this._value=value_19}return CandidateTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CandidateTypeWrapper]"},CandidateTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CandidateType.Host?"Host":this._value==fm.liveswitch.CandidateType.ServerReflexive?"ServerReflexive":this._value==fm.liveswitch.CandidateType.Relayed?"Relayed":this._value==fm.liveswitch.CandidateType.PeerReflexive?"PeerReflexive":this._value==fm.liveswitch.CandidateType.Unknown?"Unknown":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateTypeWrapper}();liveswitch.CandidateTypeWrapper=CandidateTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidateUtility=function(){function CandidateUtility(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return CandidateUtility.prototype.getTypeString=function(){return"[fm.liveswitch.CandidateUtility]"},CandidateUtility.candidatePairStateFromString=function(stateString){if(1==arguments.length){var _var0=stateString;return"new"==_var0?fm.liveswitch.CandidatePairState.New:"waiting"==_var0?fm.liveswitch.CandidatePairState.Waiting:"inProgress"==_var0?fm.liveswitch.CandidatePairState.InProgress:"succeeded"==_var0?fm.liveswitch.CandidatePairState.Succeeded:"failed"==_var0?fm.liveswitch.CandidatePairState.Failed:"closed"==_var0?fm.liveswitch.CandidatePairState.Closed:"connectivityLost"==_var0?fm.liveswitch.CandidatePairState.ConnectivityLost:fm.liveswitch.CandidatePairState.New}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateUtility.candidatePairStateToString=function(state){if(1==arguments.length){var _var0=state;return _var0==fm.liveswitch.CandidatePairState.New?"new":_var0==fm.liveswitch.CandidatePairState.Waiting?"waiting":_var0==fm.liveswitch.CandidatePairState.InProgress?"inProgress":_var0==fm.liveswitch.CandidatePairState.Succeeded?"succeeded":_var0==fm.liveswitch.CandidatePairState.Failed?"failed":_var0==fm.liveswitch.CandidatePairState.Closed?"closed":_var0==fm.liveswitch.CandidatePairState.ConnectivityLost?"connectivityLost":null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateUtility.protocolTypeFromString=function(protocolTypeString){if(1==arguments.length){var _var0=protocolTypeString;return"udp"==_var0?fm.liveswitch.ProtocolType.Udp:"tcp"==_var0?fm.liveswitch.ProtocolType.Tcp:"tls"==_var0?fm.liveswitch.ProtocolType.Tls:fm.liveswitch.ProtocolType.Unknown}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateUtility.protocolTypeToString=function(protocolType){if(1==arguments.length){var _var0=protocolType;return _var0==fm.liveswitch.ProtocolType.Udp?"udp":_var0==fm.liveswitch.ProtocolType.Tcp?"tcp":_var0==fm.liveswitch.ProtocolType.Tls?"tls":"unknown"}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateUtility.typeFromString=function(typeString){if(1==arguments.length){var _var0=typeString;return"host"==_var0?fm.liveswitch.CandidateType.Host:"srflx"==_var0?fm.liveswitch.CandidateType.ServerReflexive:"relay"==_var0?fm.liveswitch.CandidateType.Relayed:"prflx"==_var0?fm.liveswitch.CandidateType.PeerReflexive:fm.liveswitch.CandidateType.Unknown}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateUtility.typeToString=function(type){if(1==arguments.length){var _var0=type;return _var0==fm.liveswitch.CandidateType.Host?"host":_var0==fm.liveswitch.CandidateType.ServerReflexive?"srflx":_var0==fm.liveswitch.CandidateType.Relayed?"relay":_var0==fm.liveswitch.CandidateType.PeerReflexive?"prflx":"unknown"}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateUtility}();liveswitch.CandidateUtility=CandidateUtility}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CertificateInfo=function(_super){function CertificateInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];_this=_super.call(this)||this;var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setFingerprint(flag?stats.getFingerprint():fm.liveswitch.Info.processString(stats.getFingerprint(),lastStats.getFingerprint())),_this.setFingerprintAlgorithm(flag?stats.getFingerprintAlgorithm():fm.liveswitch.Info.processString(stats.getFingerprintAlgorithm(),lastStats.getFingerprintAlgorithm())),_this.setBase64(flag?stats.getCertificateBase64():fm.liveswitch.Info.processString(stats.getCertificateBase64(),lastStats.getCertificateBase64()))}return _this}return __extends(CertificateInfo,_super),CertificateInfo.prototype.getTypeString=function(){return"[fm.liveswitch.CertificateInfo],"+_super.prototype.getTypeString.call(this)},CertificateInfo.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.CertificateInfo}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo.fromJsonArray=function(arrayJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(arrayJson,fm.liveswitch.CertificateInfo.fromJson.bind(fm.liveswitch.CertificateInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo.toJsonArray=function(array){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(array,fm.liveswitch.CertificateInfo.toJson.bind(fm.liveswitch.CertificateInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"fingerprint")?this.setFingerprint(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"remoteCandidateId")?this.setFingerprintAlgorithm(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"base64")&&this.setBase64(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))},CertificateInfo.prototype.getBase64=function(){if(0==arguments.length)return this._base64;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo.prototype.getFingerprint=function(){if(0==arguments.length)return this._fingerprint;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo.prototype.getFingerprintAlgorithm=function(){if(0==arguments.length)return this._fingerprintAlgorithm;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getFingerprint(),null)||(jsonObject.fingerprint=fm.liveswitch.JsonSerializer.serializeString(this.getFingerprint())),fm.liveswitch.Global.equals(this.getFingerprintAlgorithm(),null)||(jsonObject.fingerprintAlgorithm=fm.liveswitch.JsonSerializer.serializeString(this.getFingerprintAlgorithm())),fm.liveswitch.Global.equals(this.getBase64(),null)||(jsonObject.base64=fm.liveswitch.JsonSerializer.serializeString(this.getBase64()))},CertificateInfo.prototype.setBase64=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._base64=value},CertificateInfo.prototype.setFingerprint=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._fingerprint=value},CertificateInfo.prototype.setFingerprintAlgorithm=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._fingerprintAlgorithm=value},CertificateInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CertificateInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateInfo}(fm.liveswitch.Info);liveswitch.CertificateInfo=CertificateInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CertificateStats=function(_super){function CertificateStats(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(CertificateStats,_super),CertificateStats.prototype.getTypeString=function(){return"[fm.liveswitch.CertificateStats],"+_super.prototype.getTypeString.call(this)},CertificateStats.fromJson=function(certificateJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(certificateJson,(function(){return new fm.liveswitch.CertificateStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.fromJsonArray=function(certificatesJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(certificatesJson,fm.liveswitch.CertificateStats.fromJson.bind(fm.liveswitch.CertificateStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.toJson=function(certificate){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(certificate,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.toJsonArray=function(certificates){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(certificates,fm.liveswitch.CertificateStats.toJson.bind(fm.liveswitch.CertificateStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"fingerprint")?this.setFingerprint(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"fingerprintAlgorithm")?this.setFingerprintAlgorithm(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"certificateBase64")&&this.setCertificateBase64(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))},CertificateStats.prototype.getCertificateBase64=function(){if(0==arguments.length)return this._certificateBase64;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.prototype.getFingerprint=function(){if(0==arguments.length)return this._fingerprint;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.prototype.getFingerprintAlgorithm=function(){if(0==arguments.length)return this._fingerprintAlgorithm;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return!fm.liveswitch.Global.equals(instance,null)&&(fm.liveswitch.Global.equals(instance.getFingerprint(),this.getFingerprint())&&fm.liveswitch.Global.equals(instance.getFingerprintAlgorithm(),this.getFingerprintAlgorithm())&&fm.liveswitch.Global.equals(instance.getCertificateBase64(),this.getCertificateBase64()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getFingerprint(),null)||(jsonObject.fingerprint=fm.liveswitch.JsonSerializer.serializeString(this.getFingerprint())),fm.liveswitch.Global.equals(this.getFingerprintAlgorithm(),null)||(jsonObject.fingerprintAlgorithm=fm.liveswitch.JsonSerializer.serializeString(this.getFingerprintAlgorithm())),fm.liveswitch.Global.equals(this.getCertificateBase64(),null)||(jsonObject.certificateBase64=fm.liveswitch.JsonSerializer.serializeString(this.getCertificateBase64()))},CertificateStats.prototype.setCertificateBase64=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._certificateBase64=value},CertificateStats.prototype.setFingerprint=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._fingerprint=value},CertificateStats.prototype.setFingerprintAlgorithm=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._fingerprintAlgorithm=value},CertificateStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CertificateStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CertificateStats}(fm.liveswitch.BaseStats);liveswitch.CertificateStats=CertificateStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CodecInfo=function(_super){function CodecInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchCodecInfoInit(),_this}return __extends(CodecInfo,_super),CodecInfo.prototype.getTypeString=function(){return"[fm.liveswitch.CodecInfo],"+_super.prototype.getTypeString.call(this)},CodecInfo.prototype.fmliveswitchCodecInfoInit=function(){this._channelCount=0,this._clockRate=0,this._payloadType=0},CodecInfo.fromJson=function(codecInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(codecInfoJson,(function(){return new fm.liveswitch.CodecInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.fromJsonArray=function(codecInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(codecInfosJson,fm.liveswitch.CodecInfo.fromJson.bind(fm.liveswitch.CodecInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.toJson=function(codecInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(codecInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.toJsonArray=function(codecInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(codecInfos,fm.liveswitch.CodecInfo.toJson.bind(fm.liveswitch.CodecInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"name")?this.setName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"clockRate")?this.setClockRate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"channelCount")?this.setChannelCount(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"parameters")?this.setParameters(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"payloadType")&&this.setPayloadType(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))},CodecInfo.prototype.getChannelCount=function(){if(0==arguments.length)return this._channelCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.prototype.getClockRate=function(){if(0==arguments.length)return this._clockRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.prototype.getParameters=function(){if(0==arguments.length)return this._parameters;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.prototype.getPayloadType=function(){if(0==arguments.length)return this._payloadType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getName())||(jsonObject.name=fm.liveswitch.JsonSerializer.serializeString(this.getName())),null!=this.getClockRate()&&(jsonObject.clockRate=fm.liveswitch.JsonSerializer.serializeInteger(this.getClockRate())),null!=this.getChannelCount()&&(jsonObject.channelCount=fm.liveswitch.JsonSerializer.serializeInteger(this.getChannelCount())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getParameters())||(jsonObject.parameters=fm.liveswitch.JsonSerializer.serializeString(this.getParameters())),null!=this.getPayloadType()&&(jsonObject.payloadType=fm.liveswitch.JsonSerializer.serializeInteger(this.getPayloadType()))},CodecInfo.prototype.setChannelCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channelCount=value},CodecInfo.prototype.setClockRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clockRate=value},CodecInfo.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},CodecInfo.prototype.setParameters=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._parameters=value},CodecInfo.prototype.setPayloadType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._payloadType=value},CodecInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CodecInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecInfo}(fm.liveswitch.Info);liveswitch.CodecInfo=CodecInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CodecStats=function(_super){function CodecStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchCodecStatsInit(),_this}return __extends(CodecStats,_super),CodecStats.prototype.getTypeString=function(){return"[fm.liveswitch.CodecStats],"+_super.prototype.getTypeString.call(this)},CodecStats.prototype.fmliveswitchCodecStatsInit=function(){this._channelCount=0,this._clockRate=0,this._payloadType=0},CodecStats.fromJson=function(codecJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(codecJson,(function(){return new fm.liveswitch.CodecStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.toJson=function(codec){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(codec,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str2=key;if(!fm.liveswitch.Global.equals(str2,null))if(fm.liveswitch.Global.equals(str2,"codecType")){var str=fm.liveswitch.JsonSerializer.deserializeString(valueJson);this.setCodecType(fm.liveswitch.Global.equals(str,"encode")?fm.liveswitch.CodecType.Encode:fm.liveswitch.CodecType.Decode)}else fm.liveswitch.Global.equals(str2,"payloadType")?this.setPayloadType(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str2,"name")?this.setName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str2,"clockRate")?this.setClockRate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str2,"channelCount")?this.setChannelCount(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str2,"parameters")&&this.setParameters(fm.liveswitch.JsonSerializer.deserializeString(valueJson))},CodecStats.prototype.getChannelCount=function(){if(0==arguments.length)return this._channelCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.getClockRate=function(){if(0==arguments.length)return this._clockRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.getCodecType=function(){if(0==arguments.length)return this._codecType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.getParameters=function(){if(0==arguments.length)return this._parameters;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.getPayloadType=function(){if(0==arguments.length)return this._payloadType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return!fm.liveswitch.Global.equals(instance,null)&&(fm.liveswitch.Global.equals(instance.getCodecType(),this.getCodecType())&&fm.liveswitch.Global.equals(instance.getPayloadType(),this.getPayloadType())&&fm.liveswitch.Global.equals(instance.getName(),this.getName())&&fm.liveswitch.Global.equals(instance.getClockRate(),this.getClockRate())&&fm.liveswitch.Global.equals(instance.getChannelCount(),this.getChannelCount())&&fm.liveswitch.Global.equals(instance.getParameters(),this.getParameters()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.codecType=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.Global.equals(this.getCodecType(),fm.liveswitch.CodecType.Encode)?"encode":"decode"),jsonObject.payloadType=fm.liveswitch.JsonSerializer.serializeInteger(this.getPayloadType()),fm.liveswitch.Global.equals(this.getName(),null)||(jsonObject.name=fm.liveswitch.JsonSerializer.serializeString(this.getName())),jsonObject.clockRate=fm.liveswitch.JsonSerializer.serializeInteger(this.getClockRate()),fm.liveswitch.Global.equals(this.getChannelCount(),0)||(jsonObject.channelCount=fm.liveswitch.JsonSerializer.serializeInteger(this.getChannelCount())),fm.liveswitch.Global.equals(this.getParameters(),null)||(jsonObject.parameters=fm.liveswitch.JsonSerializer.serializeString(this.getParameters()))},CodecStats.prototype.setChannelCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._channelCount=fm.liveswitch.Global.toInt(value)},CodecStats.prototype.setClockRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._clockRate=fm.liveswitch.Global.toInt(value)},CodecStats.prototype.setCodecType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._codecType=value},CodecStats.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},CodecStats.prototype.setParameters=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._parameters=value},CodecStats.prototype.setPayloadType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._payloadType=fm.liveswitch.Global.toInt(value)},CodecStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CodecStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecStats}(fm.liveswitch.BaseStats);liveswitch.CodecStats=CodecStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CodecTypeWrapper=function(){function CodecTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_20=__arguments[0];this._value=value_20}return CodecTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CodecTypeWrapper]"},CodecTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CodecType.Encode?"Encode":this._value==fm.liveswitch.CodecType.Decode?"Decode":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CodecTypeWrapper}();liveswitch.CodecTypeWrapper=CodecTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionStateWrapper=function(){function ConnectionStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_21=__arguments[0];this._value=value_21}return ConnectionStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionStateWrapper]"},ConnectionStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.ConnectionState.New?"New":this._value==fm.liveswitch.ConnectionState.Initializing?"Initializing":this._value==fm.liveswitch.ConnectionState.Connecting?"Connecting":this._value==fm.liveswitch.ConnectionState.Connected?"Connected":this._value==fm.liveswitch.ConnectionState.Failing?"Failing":this._value==fm.liveswitch.ConnectionState.Failed?"Failed":this._value==fm.liveswitch.ConnectionState.Closing?"Closing":this._value==fm.liveswitch.ConnectionState.Closed?"Closed":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStateWrapper}();liveswitch.ConnectionStateWrapper=ConnectionStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionStats=function(_super){function ConnectionStats(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ConnectionStats,_super),ConnectionStats.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionStats],"+_super.prototype.getTypeString.call(this)},ConnectionStats.fromJson=function(connectionJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(connectionJson,(function(){return new fm.liveswitch.ConnectionStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.toJson=function(connection){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(connection,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"externalId")?this.setExternalId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"state")?this.setState(this.stateFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson))):fm.liveswitch.Global.equals(str,"mediaStreams")?this.setMediaStreams(fm.liveswitch.MediaStreamStats.fromJsonArray(valueJson)):fm.liveswitch.Global.equals(str,"dataStream")&&this.setDataStream(fm.liveswitch.DataStreamStats.fromJson(valueJson)))},ConnectionStats.prototype.getAudioStream=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getAudioStreams());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getAudioStreams=function(){if(0==arguments.length){var list=new Array,mediaStreams=this.getMediaStreams();if(!fm.liveswitch.Global.equals(mediaStreams,null))for(var _i=0,mediaStreams_4=mediaStreams;_i<mediaStreams_4.length;_i++){var stats=mediaStreams_4[_i];fm.liveswitch.Global.equals(stats.getType(),fm.liveswitch.StreamType.Audio)&&fm.liveswitch.ArrayExtensions.add(list,stats)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getDataStream=function(){if(0==arguments.length)return this._dataStream;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getExternalId=function(){if(0==arguments.length)return this._externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getIsHost=function(){if(0==arguments.length){var streams=this.getStreams();if(!fm.liveswitch.Global.equals(streams,null))for(var _i=0,streams_8=streams;_i<streams_8.length;_i++){var stats=streams_8[_i];if(stats.getIsHost())return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getIsReflexive=function(){if(0==arguments.length){var streams=this.getStreams();if(!fm.liveswitch.Global.equals(streams,null))for(var _i=0,streams_9=streams;_i<streams_9.length;_i++){var stats=streams_9[_i];if(stats.getIsReflexive())return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getIsRelayed=function(){if(0==arguments.length){var streams=this.getStreams();if(!fm.liveswitch.Global.equals(streams,null))for(var _i=0,streams_10=streams;_i<streams_10.length;_i++){var stats=streams_10[_i];if(stats.getIsRelayed())return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getMediaStream=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getMediaStreams());if(1==arguments.length){for(var mediaStreamId=arguments[0],_i=0,_a=this.getMediaStreams();_i<_a.length;_i++){var stats=_a[_i];if(fm.liveswitch.Global.equals(stats.getId(),mediaStreamId))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getMediaStreams=function(){if(0==arguments.length)return this._mediaStreams;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getStreams=function(){if(0==arguments.length){var list=new Array,mediaStreams=this.getMediaStreams();if(!fm.liveswitch.Global.equals(mediaStreams,null))for(var _i=0,mediaStreams_5=mediaStreams;_i<mediaStreams_5.length;_i++){var stats=mediaStreams_5[_i];fm.liveswitch.ArrayExtensions.add(list,stats)}var dataStream=this.getDataStream();return fm.liveswitch.Global.equals(dataStream,null)||fm.liveswitch.ArrayExtensions.add(list,dataStream),fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getVideoStream=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getVideoStreams());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.getVideoStreams=function(){if(0==arguments.length){var list=new Array,mediaStreams=this.getMediaStreams();if(!fm.liveswitch.Global.equals(mediaStreams,null))for(var _i=0,mediaStreams_6=mediaStreams;_i<mediaStreams_6.length;_i++){var stats=mediaStreams_6[_i];fm.liveswitch.Global.equals(stats.getType(),fm.liveswitch.StreamType.Video)&&fm.liveswitch.ArrayExtensions.add(list,stats)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getExternalId(),null)||(jsonObject.externalId=fm.liveswitch.JsonSerializer.serializeString(this.getExternalId())),jsonObject.state=fm.liveswitch.JsonSerializer.serializeString(this.stateToString(this.getState())),fm.liveswitch.Global.equals(this.getMediaStreams(),null)||(jsonObject.mediaStreams=fm.liveswitch.MediaStreamStats.toJsonArray(this.getMediaStreams())),fm.liveswitch.Global.equals(this.getDataStream(),null)||(jsonObject.dataStream=fm.liveswitch.DataStreamStats.toJson(this.getDataStream()))},ConnectionStats.prototype.setDataStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataStream=value},ConnectionStats.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._externalId=value},ConnectionStats.prototype.setMediaStreams=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaStreams=value},ConnectionStats.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},ConnectionStats.prototype.stateFromString=function(stateString){if(1==arguments.length){var _var0=stateString;return"new"==_var0?fm.liveswitch.ConnectionState.New:"initializing"==_var0?fm.liveswitch.ConnectionState.Initializing:"connecting"==_var0?fm.liveswitch.ConnectionState.Connecting:"connected"==_var0?fm.liveswitch.ConnectionState.Connected:"failing"==_var0?fm.liveswitch.ConnectionState.Failing:"failed"==_var0?fm.liveswitch.ConnectionState.Failed:"closing"==_var0?fm.liveswitch.ConnectionState.Closing:"closed"==_var0?fm.liveswitch.ConnectionState.Closed:fm.liveswitch.ConnectionState.New}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.stateToString=function(state){if(1==arguments.length){var _var0=state;return _var0==fm.liveswitch.ConnectionState.New?"new":_var0==fm.liveswitch.ConnectionState.Initializing?"initializing":_var0==fm.liveswitch.ConnectionState.Connecting?"connecting":_var0==fm.liveswitch.ConnectionState.Connected?"connected":_var0==fm.liveswitch.ConnectionState.Failing?"failing":_var0==fm.liveswitch.ConnectionState.Failed?"failed":_var0==fm.liveswitch.ConnectionState.Closing?"closing":_var0==fm.liveswitch.ConnectionState.Closed?"closed":null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ConnectionStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStats}(fm.liveswitch.BaseStats);liveswitch.ConnectionStats=ConnectionStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannelInfo=function(_super){function DataChannelInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchDataChannelInfoInit(),_this}return __extends(DataChannelInfo,_super),DataChannelInfo.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannelInfo],"+_super.prototype.getTypeString.call(this)},DataChannelInfo.prototype.fmliveswitchDataChannelInfoInit=function(){this._ordered=!1},DataChannelInfo.fromJson=function(dataChannelInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dataChannelInfoJson,(function(){return new fm.liveswitch.DataChannelInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.fromJsonArray=function(dataChannelInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(dataChannelInfosJson,fm.liveswitch.DataChannelInfo.fromJson.bind(fm.liveswitch.DataChannelInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.toJson=function(dataChannelInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dataChannelInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.toJsonArray=function(dataChannelInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(dataChannelInfos,fm.liveswitch.DataChannelInfo.toJson.bind(fm.liveswitch.DataChannelInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"label")?this.setLabel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"ordered")?this.setOrdered(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"subprotocol")?this.setSubprotocol(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"state")?this.setState(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"report")&&this.setReport(fm.liveswitch.DataChannelReport.fromJson(valueJson)))},DataChannelInfo.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.prototype.getOrdered=function(){if(0==arguments.length)return this._ordered;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.prototype.getSubprotocol=function(){if(0==arguments.length)return this._subprotocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo.prototype.populateReports=function(stats,lastStats,eventType){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setReport(new fm.liveswitch.DataChannelReport(stats,lastStats,eventType))},DataChannelInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getLabel(),null)||(jsonObject.label=fm.liveswitch.JsonSerializer.serializeString(this.getLabel())),this.getOrdered()&&(jsonObject.ordered=fm.liveswitch.JsonSerializer.serializeBoolean(this.getOrdered())),fm.liveswitch.Global.equals(this.getSubprotocol(),null)||(jsonObject.subprotocol=fm.liveswitch.JsonSerializer.serializeString(this.getSubprotocol())),fm.liveswitch.Global.equals(this.getState(),null)||(jsonObject.state=fm.liveswitch.JsonSerializer.serializeString(this.getState())),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=fm.liveswitch.DataChannelReport.toJson(this.getReport()))},DataChannelInfo.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},DataChannelInfo.prototype.setOrdered=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ordered=value},DataChannelInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},DataChannelInfo.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},DataChannelInfo.prototype.setSubprotocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._subprotocol=value},DataChannelInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.DataChannelInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelInfo}(fm.liveswitch.Info);liveswitch.DataChannelInfo=DataChannelInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannelStateWrapper=function(){function DataChannelStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_22=__arguments[0];this._value=value_22}return DataChannelStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannelStateWrapper]"},DataChannelStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.DataChannelState.New?"New":this._value==fm.liveswitch.DataChannelState.Connecting?"Connecting":this._value==fm.liveswitch.DataChannelState.Connected?"Connected":this._value==fm.liveswitch.DataChannelState.Closing?"Closing":this._value==fm.liveswitch.DataChannelState.Closed?"Closed":this._value==fm.liveswitch.DataChannelState.Failed?"Failed":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStateWrapper}();liveswitch.DataChannelStateWrapper=DataChannelStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannelStats=function(_super){function DataChannelStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchDataChannelStatsInit(),_this.setState(fm.liveswitch.DataChannelState.New),_this}return __extends(DataChannelStats,_super),DataChannelStats.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannelStats],"+_super.prototype.getTypeString.call(this)},DataChannelStats.prototype.fmliveswitchDataChannelStatsInit=function(){this._bytesReceived=0,this._bytesSent=0,this._messagesReceived=0,this._messagesSent=0,this._ordered=!1},DataChannelStats.fromJson=function(dataChannelJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dataChannelJson,(function(){return new fm.liveswitch.DataChannelStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.fromJsonArray=function(dataChannelsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(dataChannelsJson,fm.liveswitch.DataChannelStats.fromJson.bind(fm.liveswitch.DataChannelStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.toJson=function(dataChannel){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dataChannel,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.toJsonArray=function(dataChannels){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(dataChannels,fm.liveswitch.DataChannelStats.toJson.bind(fm.liveswitch.DataChannelStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("label"==_var0){this.setLabel(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("ordered"==_var0){this.setOrdered(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("protocol"==_var0){this.setProtocol(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("state"==_var0){this.setState(this.stateFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson)));break}if("messagesSent"==_var0){this.setMessagesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("bytesSent"==_var0){this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("messagesReceived"==_var0){this.setMessagesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("bytesReceived"==_var0){this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},DataChannelStats.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.getMessagesReceived=function(){if(0==arguments.length)return this._messagesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.getMessagesSent=function(){if(0==arguments.length)return this._messagesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.getOrdered=function(){if(0==arguments.length)return this._ordered;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.getProtocol=function(){if(0==arguments.length)return this._protocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getLabel(),null)||(jsonObject.label=fm.liveswitch.JsonSerializer.serializeString(this.getLabel())),jsonObject.ordered=fm.liveswitch.JsonSerializer.serializeBoolean(this.getOrdered()),fm.liveswitch.Global.equals(this.getProtocol(),null)||(jsonObject.protocol=fm.liveswitch.JsonSerializer.serializeString(this.getProtocol())),jsonObject.state=fm.liveswitch.JsonSerializer.serializeString(this.stateToString(this.getState())),jsonObject.messagesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesSent()),jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent()),jsonObject.messagesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesReceived()),jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived())},DataChannelStats.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesReceived=fm.liveswitch.Global.toInt(value)},DataChannelStats.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesSent=fm.liveswitch.Global.toInt(value)},DataChannelStats.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},DataChannelStats.prototype.setMessagesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._messagesReceived=fm.liveswitch.Global.toInt(value)},DataChannelStats.prototype.setMessagesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._messagesSent=fm.liveswitch.Global.toInt(value)},DataChannelStats.prototype.setOrdered=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ordered=value},DataChannelStats.prototype.setProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._protocol=value},DataChannelStats.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},DataChannelStats.prototype.stateFromString=function(stateString){if(1==arguments.length){var _var0=stateString;return"new"==_var0?fm.liveswitch.DataChannelState.New:"connecting"==_var0?fm.liveswitch.DataChannelState.Connecting:"connected"==_var0?fm.liveswitch.DataChannelState.Connected:"failed"==_var0?fm.liveswitch.DataChannelState.Failed:"closing"==_var0?fm.liveswitch.DataChannelState.Closing:"closed"==_var0?fm.liveswitch.DataChannelState.Closed:fm.liveswitch.DataChannelState.New}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.stateToString=function(state){if(1==arguments.length){var _var0=state;return _var0==fm.liveswitch.DataChannelState.New?"new":_var0==fm.liveswitch.DataChannelState.Connecting?"connecting":_var0==fm.liveswitch.DataChannelState.Connected?"connected":_var0==fm.liveswitch.DataChannelState.Closing?"closing":_var0==fm.liveswitch.DataChannelState.Closed?"closed":_var0==fm.liveswitch.DataChannelState.Failed?"failed":null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.DataChannelStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStats}(fm.liveswitch.BaseStats);liveswitch.DataChannelStats=DataChannelStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamInfo=function(_super){function StreamInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(StreamInfo,_super),StreamInfo.prototype.getTypeString=function(){return"[fm.liveswitch.StreamInfo],"+_super.prototype.getTypeString.call(this)},StreamInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"tag")?this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"transportId")&&this.setTransportId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))},StreamInfo.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamInfo.prototype.getTransportId=function(){if(0==arguments.length)return this._transportId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getTag(),null)||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.Global.equals(this.getTransportId(),null)||(jsonObject.transportId=fm.liveswitch.JsonSerializer.serializeString(this.getTransportId()))},StreamInfo.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},StreamInfo.prototype.setTransportId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._transportId=value},StreamInfo}(fm.liveswitch.Info);liveswitch.StreamInfo=StreamInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataStreamInfo=function(_super){function DataStreamInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(DataStreamInfo,_super),DataStreamInfo.prototype.getTypeString=function(){return"[fm.liveswitch.DataStreamInfo],"+_super.prototype.getTypeString.call(this)},DataStreamInfo.fromJson=function(dataStreamInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dataStreamInfoJson,(function(){return new fm.liveswitch.DataStreamInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamInfo.fromJsonArray=function(dataStreamInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(dataStreamInfosJson,fm.liveswitch.DataStreamInfo.fromJson.bind(fm.liveswitch.DataStreamInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamInfo.toJson=function(dataStreamInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dataStreamInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamInfo.toJsonArray=function(dataStreamInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(dataStreamInfos,fm.liveswitch.DataStreamInfo.toJson.bind(fm.liveswitch.DataStreamInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"channels")?this.setChannels(fm.liveswitch.DataChannelInfo.fromJsonArray(valueJson)):fm.liveswitch.Global.equals(str,"report")&&this.setReport(fm.liveswitch.DataStreamReport.fromJson(valueJson)))},DataStreamInfo.prototype.getChannels=function(){if(0==arguments.length)return this._channels;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamInfo.prototype.populateInfos=function(stats,lastStats,eventType){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var flag=fm.liveswitch.Global.equals(lastStats,null);this.setReport(new fm.liveswitch.DataStreamReport(stats,lastStats,eventType));var transport=stats.getTransport();if(fm.liveswitch.Global.equals(transport,null)||_super.prototype.setTransportId.call(this,transport.getId()),!fm.liveswitch.Global.equals(this.getChannels(),null)){var channels=stats.getChannels();if(!fm.liveswitch.Global.equals(channels,null))for(var statsArray2=flag?null:lastStats.getChannels(),i=0;i<fm.liveswitch.MathAssistant.min(channels.length,this.getChannels().length);i++){var stats3=!fm.liveswitch.Global.equals(statsArray2,null)&&statsArray2.length>i?statsArray2[i]:null;!fm.liveswitch.Global.equals(stats3,null)&&fm.liveswitch.Global.equals(channels[i].getState(),stats3.getState())?this.getChannels()[i].setState(null):this.getChannels()[i].setState(fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.DataChannelStateWrapper(channels[i].getState()).toString())),this.getChannels()[i].populateReports(channels[i],flag?null:stats3,eventType)}}},DataStreamInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getChannels(),null)||(jsonObject.channels=fm.liveswitch.DataChannelInfo.toJsonArray(this.getChannels())),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=this.getReport().toJson())},DataStreamInfo.prototype.setChannels=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channels=value},DataStreamInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},DataStreamInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.DataStreamInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamInfo}(fm.liveswitch.StreamInfo);liveswitch.DataStreamInfo=DataStreamInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamStats=function(_super){function StreamStats(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(StreamStats,_super),StreamStats.prototype.getTypeString=function(){return"[fm.liveswitch.StreamStats],"+_super.prototype.getTypeString.call(this)},StreamStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"type")?this.setType(this.typeFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson))):fm.liveswitch.Global.equals(str,"transport")&&this.setTransport(fm.liveswitch.TransportStats.fromJson(valueJson)))},StreamStats.prototype.getIsHost=function(){if(0==arguments.length){var transport=this.getTransport();return!fm.liveswitch.Global.equals(transport,null)&&transport.getIsHost()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStats.prototype.getIsReflexive=function(){if(0==arguments.length){var transport=this.getTransport();return!fm.liveswitch.Global.equals(transport,null)&&transport.getIsReflexive()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStats.prototype.getIsRelayed=function(){if(0==arguments.length){var transport=this.getTransport();return!fm.liveswitch.Global.equals(transport,null)&&transport.getIsRelayed()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStats.prototype.getTransport=function(){if(0==arguments.length)return this._transport;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStats.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(this.typeToString(this.getType())),fm.liveswitch.Global.equals(this.getTransport(),null)||(jsonObject.transport=fm.liveswitch.TransportStats.toJson(this.getTransport()))},StreamStats.prototype.setTransport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._transport=value},StreamStats.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},StreamStats.prototype.typeFromString=function(typeString){if(1==arguments.length){var _var0=typeString;return"audio"==_var0?fm.liveswitch.StreamType.Audio:"video"==_var0?fm.liveswitch.StreamType.Video:"application"==_var0?fm.liveswitch.StreamType.Application:"message"==_var0?fm.liveswitch.StreamType.Message:fm.liveswitch.StreamType.Text}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStats.prototype.typeToString=function(type){if(1==arguments.length){var _var0=type;return _var0==fm.liveswitch.StreamType.Audio?"audio":_var0==fm.liveswitch.StreamType.Video?"video":_var0==fm.liveswitch.StreamType.Application?"application":_var0==fm.liveswitch.StreamType.Message?"message":_var0==fm.liveswitch.StreamType.Text?"text":null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStats}(fm.liveswitch.BaseStats);liveswitch.StreamStats=StreamStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataStreamStats=function(_super){function DataStreamStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchDataStreamStatsInit(),_this}return __extends(DataStreamStats,_super),DataStreamStats.prototype.getTypeString=function(){return"[fm.liveswitch.DataStreamStats],"+_super.prototype.getTypeString.call(this)},DataStreamStats.prototype.fmliveswitchDataStreamStatsInit=function(){this._bytesReceived=0,this._bytesSent=0,this._messagesReceived=0,this._messagesSent=0},DataStreamStats.fromJson=function(dataStreamJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dataStreamJson,(function(){return new fm.liveswitch.DataStreamStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.fromJsonArray=function(dataStreamsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(dataStreamsJson,fm.liveswitch.DataStreamStats.fromJson.bind(fm.liveswitch.DataStreamStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.toJson=function(dataStream){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dataStream,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.toJsonArray=function(dataStreams){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(dataStreams,fm.liveswitch.DataStreamStats.toJson.bind(fm.liveswitch.DataStreamStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"messagesSent")?this.setMessagesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesSent")?this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"messagesReceived")?this.setMessagesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesReceived")?this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"channels")&&this.setChannels(fm.liveswitch.DataChannelStats.fromJsonArray(valueJson)))},DataStreamStats.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.getChannel=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getChannels());if(1==arguments.length){for(var channelId=arguments[0],_i=0,_a=this.getChannels();_i<_a.length;_i++){var stats=_a[_i];if(fm.liveswitch.Global.equals(stats.getId(),channelId))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.getChannels=function(){if(0==arguments.length)return this._channels;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.getDataChannel=function(){if(0==arguments.length)return this.getChannel();if(1==arguments.length){var dataChannelId=arguments[0];return this.getChannel(dataChannelId)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.getDataChannels=function(){if(0==arguments.length)return this.getChannels();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.getMessagesReceived=function(){if(0==arguments.length)return this._messagesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.getMessagesSent=function(){if(0==arguments.length)return this._messagesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.messagesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesSent()),jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent()),jsonObject.messagesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesReceived()),jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived()),fm.liveswitch.Global.equals(this.getChannels(),null)||(jsonObject.channels=fm.liveswitch.DataChannelStats.toJsonArray(this.getChannels()))},DataStreamStats.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesReceived=fm.liveswitch.Global.toInt(value)},DataStreamStats.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesSent=fm.liveswitch.Global.toInt(value)},DataStreamStats.prototype.setChannels=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channels=value},DataStreamStats.prototype.setMessagesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._messagesReceived=fm.liveswitch.Global.toInt(value)},DataStreamStats.prototype.setMessagesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._messagesSent=fm.liveswitch.Global.toInt(value)},DataStreamStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.DataStreamStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamStats}(fm.liveswitch.StreamStats);liveswitch.DataStreamStats=DataStreamStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EncodingConfig=function(){function EncodingConfig(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchEncodingConfigInit(),this.setRtpStreamId(null),this.setSynchronizationSource(-1),this.setDeactivated(!1),this.setBitrate(-1);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var encoding=__arguments[0];this.fmliveswitchEncodingConfigInit(),this.setRtpStreamId(encoding.getRtpStreamId()),this.setSynchronizationSource(encoding.getSynchronizationSource()),this.setDeactivated(encoding.getDeactivated()),this.setBitrate(encoding.getBitrate())}}return EncodingConfig.prototype.getTypeString=function(){return"[fm.liveswitch.EncodingConfig]"},EncodingConfig.prototype.fmliveswitchEncodingConfigInit=function(){this._bitrate=0,this._deactivated=!1,this._synchronizationSource=0},EncodingConfig.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"rtpStreamId")?this.setRtpStreamId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"synchronizationSource")?this.setSynchronizationSource(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"deactivated")?this.setDeactivated(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"bitrate")&&this.setBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))},EncodingConfig.prototype.getBitrate=function(){if(0==arguments.length)return this._bitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingConfig.prototype.getDeactivated=function(){if(0==arguments.length)return this._deactivated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingConfig.prototype.getRtpStreamId=function(){if(0==arguments.length)return this._rtpStreamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingConfig.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this._synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingConfig.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getRtpStreamId(),null)||(jsonObject.rtpStreamId=fm.liveswitch.JsonSerializer.serializeString(this.getRtpStreamId())),fm.liveswitch.Global.equals(this.getSynchronizationSource(),-1)||(jsonObject.synchronizationSource=fm.liveswitch.JsonSerializer.serializeLong(this.getSynchronizationSource())),this.getDeactivated()&&(jsonObject.deactivated=fm.liveswitch.JsonSerializer.serializeBoolean(this.getDeactivated())),fm.liveswitch.Global.equals(this.getBitrate(),-1)||(jsonObject.bitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getBitrate()))},EncodingConfig.prototype.setBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bitrate=fm.liveswitch.Global.toInt(value)},EncodingConfig.prototype.setDeactivated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deactivated=value},EncodingConfig.prototype.setRtpStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtpStreamId=value},EncodingConfig.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._synchronizationSource=fm.liveswitch.Global.toInt(value)},EncodingConfig}();liveswitch.EncodingConfig=EncodingConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AudioEncodingConfig=function(_super){function AudioEncodingConfig(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var encoding=__arguments[0];_this=_super.call(this,encoding)||this}return _this}return __extends(AudioEncodingConfig,_super),AudioEncodingConfig.prototype.getTypeString=function(){return"[fm.liveswitch.AudioEncodingConfig],"+_super.prototype.getTypeString.call(this)},AudioEncodingConfig.fromJson=function(encodingConfigJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(encodingConfigJson,(function(){return new fm.liveswitch.AudioEncodingConfig}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioEncodingConfig.fromJsonArray=function(encodingConfigsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(encodingConfigsJson,fm.liveswitch.AudioEncodingConfig.fromJson.bind(fm.liveswitch.AudioEncodingConfig));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioEncodingConfig.toJson=function(encodingConfig){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(encodingConfig,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioEncodingConfig.toJsonArray=function(encodingConfigs){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(encodingConfigs,fm.liveswitch.AudioEncodingConfig.toJson.bind(fm.liveswitch.AudioEncodingConfig));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioEncodingConfig.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.AudioEncodingConfig.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioEncodingConfig.prototype.toString=function(){if(0==arguments.length){var flag=!1,list=new Array,rtpStreamId=_super.prototype.getRtpStreamId.call(this);fm.liveswitch.Global.equals(rtpStreamId,null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("RTP Stream ID: {0}",rtpStreamId));var synchronizationSource=_super.prototype.getSynchronizationSource.call(this);fm.liveswitch.Global.equals(synchronizationSource,-1)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Synchronization Source: {0}",fm.liveswitch.NumberExtensions.toString(synchronizationSource)));var deactivated=_super.prototype.getDeactivated.call(this);deactivated&&fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Deactivated: {0}",fm.liveswitch.BooleanExtensions.toString(deactivated)));var bitrate=_super.prototype.getBitrate.call(this);fm.liveswitch.Global.equals(bitrate,-1)||(flag=!0,fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Bitrate: {0}",fm.liveswitch.NumberExtensions.toString(bitrate))));var str2=fm.liveswitch.StringExtensions.join(", ",fm.liveswitch.ArrayExtensions.toArray(list));return flag||(str2=fm.liveswitch.StringExtensions.trim(fm.liveswitch.StringExtensions.format("{0} [Unrestricted]",str2))),str2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioEncodingConfig}(fm.liveswitch.EncodingConfig);liveswitch.AudioEncodingConfig=AudioEncodingConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Attribute=function(){function Attribute(){fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Attribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Attribute]"},Attribute.createAttribute=function(name,value){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),2==arguments.length){for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes);_i<_a.length;_i++){var str=_a[_i],registration=fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes[str];if(fm.liveswitch.Global.equals(registration.getName(),name))return registration.getCreationDelegate()(new fm.liveswitch.sdp.AttributeCreationArgs(value))}return new fm.liveswitch.sdp.UnknownAttribute(name,value)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPBundleOnlyAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.BundleOnlyAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPCandidateAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.CandidateAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPCategoryAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.CategoryAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPCharacterSetAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.CharacterSetAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPConferenceTypeAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ConferenceTypeAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPCryptoAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.CryptoAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPExtMapAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtp.ExtMapAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPFingerprintAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.FingerprintAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPFormatParametersAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.FormatParametersAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPFrameRateAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.FrameRateAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPGroupAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.GroupAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPIceLiteAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.LiteAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPIceMismatchAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.MismatchAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPIceOptionsAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.OptionsAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPIcePasswordAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.PasswordAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPIceUfragAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.UfragAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPInactiveAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.InactiveAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPKeywordsAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.KeywordsAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPLanguageAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.LanguageAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPMaxPacketTimeAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.MaxPacketTimeAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPMediaStreamIdAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.MediaStreamIdAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPMediaStreamIdSemanticAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.MediaStreamIdSemanticAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPMutedAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.MutedAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPOrientationAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.OrientationAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPPacketTimeAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.PacketTimeAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPQualityAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.QualityAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPReceiveOnlyAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ReceiveOnlyAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPRemoteCandidatesAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ice.RemoteCandidatesAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPRidAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtp.RidAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPRtcpAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtcp.Attribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPRtcpFeedbackAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtcp.FeedbackAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPRtcpMuxAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtcp.MuxAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPRtpMapAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtp.MapAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSctpMapAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.sctp.MapAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSctpMaxMessageSizeAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.sctp.MaxMessageSizeAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSctpPortAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.sctp.PortAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSdpLanguageAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.SdpLanguageAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSendOnlyAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.SendOnlyAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSendReceiveAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.SendReceiveAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSetupAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.SetupAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSimulcastAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtp.SimulcastAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSSRCAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtp.SsrcAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPSSRCGroupAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.rtp.SsrcGroupAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.createSDPToolAttribute=function(e){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.sdp.ToolAttribute.fromAttributeValue(e.getValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.getTypeName=function(type){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length){var registration=null,_var0=new fm.liveswitch.Holder(registration),_var1=fm.liveswitch.HashExtensions.tryGetValue(fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes,type.getFullName(),_var0);if(registration=_var0.getValue(),_var1)return registration.getName();var baseType=type.getBaseType();return fm.liveswitch.Global.equals(baseType,null)?null:fm.liveswitch.sdp.Attribute.getTypeName(baseType)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.isMediaLevel=function(type){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length){if(fm.liveswitch.Global.equals(type.getFullName(),fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__unknownAttributeTypeName))return!0;var registration=null,_var0=new fm.liveswitch.Holder(registration),_var1=fm.liveswitch.HashExtensions.tryGetValue(fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes,type.getFullName(),_var0);return registration=_var0.getValue(),!!_var1&&registration.getMediaLevel()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.isSessionLevel=function(type){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length){if(fm.liveswitch.Global.equals(type.getFullName(),fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__unknownAttributeTypeName))return!0;var registration=null,_var0=new fm.liveswitch.Holder(registration),_var1=fm.liveswitch.HashExtensions.tryGetValue(fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes,type.getFullName(),_var0);return registration=_var0.getValue(),!!_var1&&registration.getSessionLevel()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.parse=function(s){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length){var str=void 0,str2=void 0;s=s.substring(2);var index=fm.liveswitch.StringExtensions.indexOf(s,":");return fm.liveswitch.Global.equals(index,-1)?(str=s,str2=null):(str=fm.liveswitch.StringExtensions.substring(s,0,index),str2=s.substring(index+1)),fm.liveswitch.sdp.Attribute.createAttribute(str,str2)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.registerAttribute=function(type,name,sessionLevel,mediaLevel,creationDelegate){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes[type.getFullName()]=new fm.liveswitch.sdp.AttributeRegistration(name,sessionLevel,mediaLevel,creationDelegate)},Attribute.unregisterAttribute=function(type){if(fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize(),1==arguments.length)return fm.liveswitch.HashExtensions.remove(fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes,type.getFullName());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.getAttributeType=function(){if(0==arguments.length)return this._attributeType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.getMultiplexingCategory=function(){if(0==arguments.length)return this._multiplexingCategory;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.setAttributeType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._attributeType=value},Attribute.prototype.setMultiplexingCategory=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._multiplexingCategory=value},Attribute.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append("a=");var type=new fm.liveswitch.Type(this.getTypeString());fm.liveswitch.Global.equals(type.getFullName(),fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__unknownAttributeTypeName)?builder.append(this.getName()):builder.append(fm.liveswitch.sdp.Attribute.getTypeName(type));var attributeValue=this.getAttributeValue();return fm.liveswitch.Global.equals(attributeValue,null)||(builder.append(":"),builder.append(attributeValue)),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.fmliveswitchsdpAttributeInitialize=function(){fm.liveswitch.sdp.Attribute.__fmliveswitchsdpAttributeInitialized||fm.liveswitch.sdp.Attribute.__fmliveswitchsdpAttributeInitializing||(fm.liveswitch.sdp.Attribute.__fmliveswitchsdpAttributeInitializing=!0,fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributes={},fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__registeredAttributesLock=new Object,fm.liveswitch.sdp.Attribute.fm_liveswitch_sdp_Attribute__unknownAttributeTypeName=new fm.liveswitch.Type("[fm.liveswitch.sdp.UnknownAttribute]").getFullName(),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.GroupAttribute]"),"group",!0,!1,fm.liveswitch.sdp.Attribute.createSDPGroupAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.CategoryAttribute]"),"cat",!0,!1,fm.liveswitch.sdp.Attribute.createSDPCategoryAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.CharacterSetAttribute]"),"charset",!0,!1,fm.liveswitch.sdp.Attribute.createSDPCharacterSetAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ConferenceTypeAttribute]"),"type",!0,!1,fm.liveswitch.sdp.Attribute.createSDPConferenceTypeAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.CryptoAttribute]"),"crypto",!0,!0,fm.liveswitch.sdp.Attribute.createSDPCryptoAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.FormatParametersAttribute]"),"fmtp",!1,!0,fm.liveswitch.sdp.Attribute.createSDPFormatParametersAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.FrameRateAttribute]"),"framerate",!1,!0,fm.liveswitch.sdp.Attribute.createSDPFrameRateAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.InactiveAttribute]"),"inactive",!0,!0,fm.liveswitch.sdp.Attribute.createSDPInactiveAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.KeywordsAttribute]"),"keywds",!0,!1,fm.liveswitch.sdp.Attribute.createSDPKeywordsAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.LanguageAttribute]"),"lang",!0,!0,fm.liveswitch.sdp.Attribute.createSDPLanguageAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.MaxPacketTimeAttribute]"),"maxptime",!1,!0,fm.liveswitch.sdp.Attribute.createSDPMaxPacketTimeAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.OrientationAttribute]"),"orient",!1,!0,fm.liveswitch.sdp.Attribute.createSDPOrientationAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.PacketTimeAttribute]"),"ptime",!1,!0,fm.liveswitch.sdp.Attribute.createSDPPacketTimeAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.QualityAttribute]"),"quality",!1,!0,fm.liveswitch.sdp.Attribute.createSDPQualityAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ReceiveOnlyAttribute]"),"recvonly",!0,!0,fm.liveswitch.sdp.Attribute.createSDPReceiveOnlyAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.SdpLanguageAttribute]"),"sdplang",!0,!0,fm.liveswitch.sdp.Attribute.createSDPSdpLanguageAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.SendOnlyAttribute]"),"sendonly",!0,!0,fm.liveswitch.sdp.Attribute.createSDPSendOnlyAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.SendReceiveAttribute]"),"sendrecv",!0,!0,fm.liveswitch.sdp.Attribute.createSDPSendReceiveAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.SetupAttribute]"),"setup",!0,!0,fm.liveswitch.sdp.Attribute.createSDPSetupAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ToolAttribute]"),"tool",!0,!1,fm.liveswitch.sdp.Attribute.createSDPToolAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.MediaStreamIdSemanticAttribute]"),"msid-semantic",!0,!0,fm.liveswitch.sdp.Attribute.createSDPMediaStreamIdSemanticAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.MediaStreamIdAttribute]"),"mid",!0,!0,fm.liveswitch.sdp.Attribute.createSDPMediaStreamIdAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.BundleOnlyAttribute]"),"bundle-only",!1,!0,fm.liveswitch.sdp.Attribute.createSDPBundleOnlyAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.MutedAttribute]"),"muted",!1,!0,fm.liveswitch.sdp.Attribute.createSDPMutedAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.CandidateAttribute]"),"candidate",!1,!0,fm.liveswitch.sdp.Attribute.createSDPCandidateAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.FingerprintAttribute]"),"fingerprint",!0,!0,fm.liveswitch.sdp.Attribute.createSDPFingerprintAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.LiteAttribute]"),"ice-lite",!0,!1,fm.liveswitch.sdp.Attribute.createSDPIceLiteAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.MismatchAttribute]"),"ice-mismatch",!0,!1,fm.liveswitch.sdp.Attribute.createSDPIceMismatchAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.OptionsAttribute]"),"ice-options",!0,!0,fm.liveswitch.sdp.Attribute.createSDPIceOptionsAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.PasswordAttribute]"),"ice-pwd",!0,!0,fm.liveswitch.sdp.Attribute.createSDPIcePasswordAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.UfragAttribute]"),"ice-ufrag",!0,!0,fm.liveswitch.sdp.Attribute.createSDPIceUfragAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.ice.RemoteCandidatesAttribute]"),"remote-candidates",!1,!0,fm.liveswitch.sdp.Attribute.createSDPRemoteCandidatesAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtp.MapAttribute]"),"rtpmap",!1,!0,fm.liveswitch.sdp.Attribute.createSDPRtpMapAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtp.SsrcAttribute]"),"ssrc",!1,!0,fm.liveswitch.sdp.Attribute.createSDPSSRCAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtp.SsrcGroupAttribute]"),"ssrc-group",!1,!0,fm.liveswitch.sdp.Attribute.createSDPSSRCGroupAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtp.ExtMapAttribute]"),"extmap",!0,!0,fm.liveswitch.sdp.Attribute.createSDPExtMapAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtp.RidAttribute]"),"rid",!1,!0,fm.liveswitch.sdp.Attribute.createSDPRidAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtp.SimulcastAttribute]"),"simulcast",!1,!0,fm.liveswitch.sdp.Attribute.createSDPSimulcastAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtcp.Attribute]"),"rtcp",!1,!0,fm.liveswitch.sdp.Attribute.createSDPRtcpAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtcp.FeedbackAttribute]"),"rtcp-fb",!1,!0,fm.liveswitch.sdp.Attribute.createSDPRtcpFeedbackAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.rtcp.MuxAttribute]"),"rtcp-mux",!1,!0,fm.liveswitch.sdp.Attribute.createSDPRtcpMuxAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.sctp.PortAttribute]"),"sctp-port",!1,!0,fm.liveswitch.sdp.Attribute.createSDPSctpPortAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.sctp.MapAttribute]"),"sctpmap",!1,!0,fm.liveswitch.sdp.Attribute.createSDPSctpMapAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.registerAttribute(new fm.liveswitch.Type("[fm.liveswitch.sdp.sctp.MaxMessageSizeAttribute]"),"max-message-size",!1,!0,fm.liveswitch.sdp.Attribute.createSDPSctpMaxMessageSizeAttribute.bind(fm.liveswitch.sdp.Attribute)),fm.liveswitch.sdp.Attribute.__fmliveswitchsdpAttributeInitialized=!0,fm.liveswitch.sdp.Attribute.__fmliveswitchsdpAttributeInitializing=!1)},Attribute.__fmliveswitchsdpAttributeInitialized=!1,Attribute.__fmliveswitchsdpAttributeInitializing=!1,Attribute}();sdp.Attribute=Attribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var MutedAttribute=function(_super){function MutedAttribute(value){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_23=__arguments[0];return(_this=_super.call(this)||this).fmliveswitchsdpMutedAttributeInit(),_this.__value=value_23,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.MutedAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(MutedAttribute,_super),MutedAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.MutedAttribute],"+_super.prototype.getTypeString.call(this)},MutedAttribute.prototype.fmliveswitchsdpMutedAttributeInit=function(){this.__value=!1},MutedAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.MutedAttribute(fm.liveswitch.Global.equals(value,"true"));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MutedAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.valueToString();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MutedAttribute.prototype.valueToString=function(){if(0==arguments.length)return this.__value?"true":"false";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MutedAttribute}(fm.liveswitch.sdp.Attribute);sdp.MutedAttribute=MutedAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamDescription=function(){function StreamDescription(description){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var description_1=__arguments[0];this.setMediaDescription(description_1)}return StreamDescription.prototype.getTypeString=function(){return"[fm.liveswitch.StreamDescription]"},StreamDescription.prototype.getMediaDescription=function(){if(0==arguments.length)return this._mediaDescription;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDescription.prototype.getMediaDescriptionIdentifier=function(){if(0==arguments.length){var mediaDescription=this.getMediaDescription();if(!fm.liveswitch.Global.equals(mediaDescription,null)){var mediaStreamIdentifierAttribute=mediaDescription.getMediaStreamIdentifierAttribute();if(!fm.liveswitch.Global.equals(mediaStreamIdentifierAttribute,null))return mediaStreamIdentifierAttribute.getIdentificationTag()}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDescription.prototype.getStreamType=function(){if(0==arguments.length){var mediaDescription=this.getMediaDescription();if(!fm.liveswitch.Global.equals(mediaDescription,null)){if(mediaDescription.getIsApplication())return fm.liveswitch.StreamType.Application;if(mediaDescription.getIsAudio())return fm.liveswitch.StreamType.Audio;if(mediaDescription.getIsVideo())return fm.liveswitch.StreamType.Video;if(mediaDescription.getIsMessage())return fm.liveswitch.StreamType.Message;if(mediaDescription.getIsText())return fm.liveswitch.StreamType.Text}throw new fm.liveswitch.Exception("Could not identify the stream type from the media description.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDescription.prototype.setMediaDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaDescription=value},StreamDescription}();liveswitch.StreamDescription=StreamDescription}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoEncodingConfig=function(_super){function VideoEncodingConfig(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchVideoEncodingConfigInit(),_this.setFrameRate(-1),_this.setScale(-1);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var encoding=__arguments[0];(_this=_super.call(this,encoding)||this).fmliveswitchVideoEncodingConfigInit(),_this.setFrameRate(encoding.getFrameRate()),_this.setScale(encoding.getScale())}return _this}return __extends(VideoEncodingConfig,_super),VideoEncodingConfig.prototype.getTypeString=function(){return"[fm.liveswitch.VideoEncodingConfig],"+_super.prototype.getTypeString.call(this)},VideoEncodingConfig.prototype.fmliveswitchVideoEncodingConfigInit=function(){this._frameRate=0,this._scale=0},VideoEncodingConfig.fromJson=function(encodingConfigJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(encodingConfigJson,(function(){return new fm.liveswitch.VideoEncodingConfig}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig.fromJsonArray=function(encodingConfigsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(encodingConfigsJson,fm.liveswitch.VideoEncodingConfig.fromJson.bind(fm.liveswitch.VideoEncodingConfig));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig.toJson=function(encodingConfig){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(encodingConfig,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig.toJsonArray=function(encodingConfigs){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(encodingConfigs,fm.liveswitch.VideoEncodingConfig.toJson.bind(fm.liveswitch.VideoEncodingConfig));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"frameRate")?this.setFrameRate(fm.liveswitch.JsonSerializer.deserializeDouble(valueJson)):fm.liveswitch.Global.equals(str,"scale")&&this.setScale(fm.liveswitch.JsonSerializer.deserializeDouble(valueJson)))},VideoEncodingConfig.prototype.getFrameRate=function(){if(0==arguments.length)return this._frameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig.prototype.getScale=function(){if(0==arguments.length)return this._scale;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getFrameRate(),-1)||(jsonObject.frameRate=fm.liveswitch.JsonSerializer.serializeDouble(this.getFrameRate())),fm.liveswitch.Global.equals(this.getScale(),-1)||(jsonObject.scale=fm.liveswitch.JsonSerializer.serializeDouble(this.getScale()))},VideoEncodingConfig.prototype.setFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frameRate=value},VideoEncodingConfig.prototype.setScale=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._scale=value},VideoEncodingConfig.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.VideoEncodingConfig.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig.prototype.toString=function(){if(0==arguments.length){var flag=!1,list=new Array,rtpStreamId=_super.prototype.getRtpStreamId.call(this);fm.liveswitch.Global.equals(rtpStreamId,null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("RTP Stream ID: {0}",rtpStreamId));var synchronizationSource=_super.prototype.getSynchronizationSource.call(this);fm.liveswitch.Global.equals(synchronizationSource,-1)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Synchronization Source: {0}",fm.liveswitch.NumberExtensions.toString(synchronizationSource)));var deactivated=_super.prototype.getDeactivated.call(this);deactivated&&fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Deactivated: {0}",fm.liveswitch.BooleanExtensions.toString(deactivated)));var bitrate=_super.prototype.getBitrate.call(this);fm.liveswitch.Global.equals(bitrate,-1)||(flag=!0,fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Bitrate: {0}",fm.liveswitch.NumberExtensions.toString(bitrate))));var frameRate=this.getFrameRate();fm.liveswitch.Global.equals(frameRate,-1)||(flag=!0,fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Frame Rate: {0}",fm.liveswitch.NumberExtensions.toString(frameRate))));var scale=this.getScale();fm.liveswitch.Global.equals(scale,-1)||(flag=!0,fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Scale: {0}",fm.liveswitch.NumberExtensions.toString(scale))));var str2=fm.liveswitch.StringExtensions.join(", ",fm.liveswitch.ArrayExtensions.toArray(list));return flag||(str2=fm.liveswitch.StringExtensions.trim(fm.liveswitch.StringExtensions.format("{0} [Unrestricted]",str2))),str2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoEncodingConfig}(fm.liveswitch.EncodingConfig);liveswitch.VideoEncodingConfig=VideoEncodingConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EncryptionModeWrapper=function(){function EncryptionModeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_24=__arguments[0];this._value=value_24}return EncryptionModeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.EncryptionModeWrapper]"},EncryptionModeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.EncryptionMode.Null?"Null":this._value==fm.liveswitch.EncryptionMode.Aes128Strong?"Aes128Strong":this._value==fm.liveswitch.EncryptionMode.Aes128Weak?"Aes128Weak":this._value==fm.liveswitch.EncryptionMode.NullStrong?"NullStrong":this._value==fm.liveswitch.EncryptionMode.NullWeak?"NullWeak":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncryptionModeWrapper}();liveswitch.EncryptionModeWrapper=EncryptionModeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var FormatInfo=function(){function FormatInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchFormatInfoInit();else if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioFormat]"))){var audioFormat=__arguments[0];(__arguments=new Array(3))[0]=audioFormat.getName(),__arguments[1]=audioFormat.getClockRate(),__arguments[2]=audioFormat.getChannelCount();var name_9=__arguments[0],clockRate=__arguments[1],channelCount=__arguments[2];this.fmliveswitchFormatInfoInit(),this.setName(name_9),this.setClockRate(clockRate),this.setChannelCount(channelCount)}else if(2==__arguments.length){var codecName=__arguments[0];clockRate=__arguments[1];(__arguments=new Array(3))[0]=codecName,__arguments[1]=clockRate,__arguments[2]=0;var name_10=__arguments[0],clockRate_3=__arguments[1];channelCount=__arguments[2];this.fmliveswitchFormatInfoInit(),this.setName(name_10),this.setClockRate(clockRate_3),this.setChannelCount(channelCount)}else if(3==__arguments.length){var name_11=__arguments[0];clockRate=__arguments[1],channelCount=__arguments[2];this.fmliveswitchFormatInfoInit(),this.setName(name_11),this.setClockRate(clockRate),this.setChannelCount(channelCount)}else{if(1!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[0])&&!fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoFormat]"))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var videoFormat=__arguments[0];(__arguments=new Array(2))[0]=videoFormat.getName(),__arguments[1]=videoFormat.getClockRate();codecName=__arguments[0],clockRate=__arguments[1];(__arguments=new Array(3))[0]=codecName,__arguments[1]=clockRate,__arguments[2]=0;var name_12=__arguments[0],clockRate_4=__arguments[1];channelCount=__arguments[2];this.fmliveswitchFormatInfoInit(),this.setName(name_12),this.setClockRate(clockRate_4),this.setChannelCount(channelCount)}}return FormatInfo.prototype.getTypeString=function(){return"[fm.liveswitch.FormatInfo]"},FormatInfo.prototype.fmliveswitchFormatInfoInit=function(){this._channelCount=0,this._clockRate=0},FormatInfo.fromJson=function(formatInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(formatInfoJson,(function(){return new fm.liveswitch.FormatInfo}),(function(info,key,value){var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"name")?info.setName(fm.liveswitch.JsonSerializer.deserializeString(value)):fm.liveswitch.Global.equals(str,"clockRate")?info.setClockRate(fm.liveswitch.JsonSerializer.deserializeInteger(value)):fm.liveswitch.Global.equals(str,"channelCount")&&info.setChannelCount(fm.liveswitch.JsonSerializer.deserializeInteger(value)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.fromJsonArray=function(formatInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(formatInfosJson,fm.liveswitch.FormatInfo.fromJson.bind(fm.liveswitch.FormatInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.fromSdpMediaDescription=function(sdpMediaDescription){if(1==arguments.length){if(fm.liveswitch.Global.equals(sdpMediaDescription,null))return null;for(var list=new Array,_i=0,_a=sdpMediaDescription.getRtpMapAttributes();_i<_a.length;_i++){var attribute=_a[_i],intResult=1;if(!fm.liveswitch.StringExtensions.isNullOrEmpty(attribute.getFormatParameters())){var _var0=new fm.liveswitch.Holder(intResult);fm.liveswitch.ParseAssistant.tryParseIntegerValue(attribute.getFormatParameters(),_var0);intResult=_var0.getValue()}fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.FormatInfo(attribute.getFormatName(),attribute.getClockRate(),intResult))}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.toJson=function(formatInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(formatInfo,(function(info,dict){dict.name=fm.liveswitch.JsonSerializer.serializeString(info.getName()),dict.clockRate=fm.liveswitch.JsonSerializer.serializeInteger(info.getClockRate()),info.getChannelCount()>0&&(dict.channelCount=fm.liveswitch.JsonSerializer.serializeInteger(info.getChannelCount()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.toJsonArray=function(formatInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(formatInfos,fm.liveswitch.FormatInfo.toJson.bind(fm.liveswitch.FormatInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.prototype.getChannelCount=function(){if(0==arguments.length)return this._channelCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.prototype.getClockRate=function(){if(0==arguments.length)return this._clockRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.prototype.getCodecName=function(){if(0==arguments.length)return this.getName();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.prototype.isEquivalent=function(){if(1==arguments.length){var instance=arguments[0];return!fm.liveswitch.Global.equals(instance,null)&&this.isEquivalent(instance.getName(),instance.getClockRate(),instance.getChannelCount())}if(3==arguments.length){var name_13=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]),channelCount=fm.liveswitch.Global.toInt(arguments[2]);return fm.liveswitch.Global.equals(name_13,this.getName())&&fm.liveswitch.Global.equals(clockRate,this.getClockRate())&&fm.liveswitch.Global.equals(channelCount,this.getChannelCount())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.prototype.setChannelCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._channelCount=fm.liveswitch.Global.toInt(value)},FormatInfo.prototype.setClockRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._clockRate=fm.liveswitch.Global.toInt(value)},FormatInfo.prototype.setCodecName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setName(value)},FormatInfo.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},FormatInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.FormatInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo.prototype.toString=function(){if(0==arguments.length)return this.getChannelCount()>1?fm.liveswitch.StringExtensions.format("{0}/{1}/{2}",this.getName(),fm.liveswitch.NumberExtensions.toString(this.getClockRate()),fm.liveswitch.NumberExtensions.toString(this.getChannelCount())):fm.liveswitch.StringExtensions.format("{0}/{1}",this.getName(),fm.liveswitch.NumberExtensions.toString(this.getClockRate()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatInfo}();liveswitch.FormatInfo=FormatInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutFrame=function(){function LayoutFrame(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchLayoutFrameInit();else{if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var x=__arguments[0],y=__arguments[1],width=__arguments[2],height=__arguments[3];this.fmliveswitchLayoutFrameInit(),this.setX(x),this.setY(y),this.setWidth(width),this.setHeight(height)}}return LayoutFrame.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutFrame]"},LayoutFrame.prototype.fmliveswitchLayoutFrameInit=function(){this._height=0,this._orientation=0,this._width=0,this._x=0,this._y=0},LayoutFrame.fromJson=function(layoutFrameJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(layoutFrameJson,(function(){return new fm.liveswitch.LayoutFrame}),(function(rectangle,key,valueJson){var _var0=key;do{if("x"==_var0){rectangle.setX(fm.liveswitch.ParseAssistant.parseIntegerValue(valueJson));break}if("y"==_var0){rectangle.setY(fm.liveswitch.ParseAssistant.parseIntegerValue(valueJson));break}if("w"==_var0||"width"==_var0){rectangle.setWidth(fm.liveswitch.ParseAssistant.parseIntegerValue(valueJson));break}if("h"==_var0||"height"==_var0){rectangle.setHeight(fm.liveswitch.ParseAssistant.parseIntegerValue(valueJson));break}if("orientation"==_var0){rectangle.setOrientation(fm.liveswitch.ParseAssistant.parseIntegerValue(valueJson));break}if("uid"==_var0){rectangle.setUserId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("did"==_var0){rectangle.setDeviceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("cid"==_var0){rectangle.setClientId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.getScaledFrame=function(scale,outerWidth,outerHeight,innerWidth,innerHeight){if(5==arguments.length){outerWidth=fm.liveswitch.Global.toInt(arguments[1]),outerHeight=fm.liveswitch.Global.toInt(arguments[2]),innerWidth=fm.liveswitch.Global.toInt(arguments[3]),innerHeight=fm.liveswitch.Global.toInt(arguments[4]);var x=0,y=0,width=outerWidth,height=outerHeight;if(fm.liveswitch.Global.equals(outerWidth,0)||fm.liveswitch.Global.equals(outerHeight,0)||fm.liveswitch.Global.equals(innerWidth,0)||fm.liveswitch.Global.equals(innerHeight,0))(fm.liveswitch.Global.equals(outerWidth,0)||fm.liveswitch.Global.equals(innerWidth,0))&&(width=0,x=fm.liveswitch.MathAssistant.floor(outerWidth/2)),(fm.liveswitch.Global.equals(outerHeight,0)||fm.liveswitch.Global.equals(innerHeight,0))&&(height=0,y=fm.liveswitch.MathAssistant.floor(outerHeight/2));else{var num5=void 0,num6=void 0;fm.liveswitch.Global.equals(scale,fm.liveswitch.LayoutScale.Contain)?(num5=outerWidth/outerHeight)>(num6=innerWidth/innerHeight)?(width=outerHeight*num6,x=fm.liveswitch.MathAssistant.floor((outerWidth-width)/2)):num5<num6&&(height=outerWidth/num6,y=fm.liveswitch.MathAssistant.floor((outerHeight-height)/2)):fm.liveswitch.Global.equals(scale,fm.liveswitch.LayoutScale.Cover)&&((num5=outerWidth/outerHeight)<(num6=innerWidth/innerHeight)?(width=outerHeight*num6,x=fm.liveswitch.MathAssistant.floor((outerWidth-width)/2)):num5>num6&&(height=outerWidth/num6,y=fm.liveswitch.MathAssistant.floor((outerHeight-height)/2)))}return new fm.liveswitch.LayoutFrame(x,y,width,height)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.toJson=function(layoutFrame){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(layoutFrame,(function(r,jsonObject){jsonObject.x=fm.liveswitch.NumberExtensions.toString(r.getX()),jsonObject.y=fm.liveswitch.NumberExtensions.toString(r.getY()),jsonObject.width=fm.liveswitch.NumberExtensions.toString(r.getWidth()),jsonObject.height=fm.liveswitch.NumberExtensions.toString(r.getHeight()),jsonObject.orientation=fm.liveswitch.NumberExtensions.toString(r.getOrientation()),fm.liveswitch.Global.equals(r.getUserId(),null)||(jsonObject.uid=fm.liveswitch.JsonSerializer.serializeString(r.getUserId())),fm.liveswitch.Global.equals(r.getDeviceId(),null)||(jsonObject.did=fm.liveswitch.JsonSerializer.serializeString(r.getDeviceId())),fm.liveswitch.Global.equals(r.getClientId(),null)||(jsonObject.cid=fm.liveswitch.JsonSerializer.serializeString(r.getClientId()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getHeight=function(){if(0==arguments.length)return this._height;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getOrientation=function(){if(0==arguments.length)return this._orientation;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getViewId=function(){if(0==arguments.length)return this._viewId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getWidth=function(){if(0==arguments.length)return this._width;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getX=function(){if(0==arguments.length)return this._x;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.getY=function(){if(0==arguments.length)return this._y;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.isEquivalent=function(layoutFrame){if(1==arguments.length)return fm.liveswitch.Global.equals(layoutFrame.getX(),this.getX())&&fm.liveswitch.Global.equals(layoutFrame.getY(),this.getY())&&fm.liveswitch.Global.equals(layoutFrame.getWidth(),this.getWidth())&&fm.liveswitch.Global.equals(layoutFrame.getHeight(),this.getHeight());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},LayoutFrame.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},LayoutFrame.prototype.setHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._height=fm.liveswitch.Global.toInt(value)},LayoutFrame.prototype.setOrientation=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._orientation=fm.liveswitch.Global.toInt(value)},LayoutFrame.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},LayoutFrame.prototype.setViewId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._viewId=value},LayoutFrame.prototype.setWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._width=fm.liveswitch.Global.toInt(value)},LayoutFrame.prototype.setX=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._x=fm.liveswitch.Global.toInt(value)},LayoutFrame.prototype.setY=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._y=fm.liveswitch.Global.toInt(value)},LayoutFrame.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.LayoutFrame.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutFrame}();liveswitch.LayoutFrame=LayoutFrame}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutScaleWrapper=function(){function LayoutScaleWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_25=__arguments[0];this._value=value_25}return LayoutScaleWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutScaleWrapper]"},LayoutScaleWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.LayoutScale.Contain?"Contain":this._value==fm.liveswitch.LayoutScale.Cover?"Cover":this._value==fm.liveswitch.LayoutScale.Stretch?"Stretch":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutScaleWrapper}();liveswitch.LayoutScaleWrapper=LayoutScaleWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaComponentInfo=function(_super){function MediaComponentInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaComponentInfoInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchMediaComponentInfoInit(),_super.prototype.setId.call(_this,stats.getId());var stats2=fm.liveswitch.Global.equals(lastStats,null)?stats.getTrack():fm.liveswitch.Info.processObject(stats.getTrack(),lastStats.getTrack());if(!fm.liveswitch.Global.equals(stats2,null)){var stats3=fm.liveswitch.Global.equals(lastStats,null)?null:lastStats.getTrack();_this.setSynchronizationSource(fm.liveswitch.Global.equals(stats3,null)?stats2.getSynchronizationSource():fm.liveswitch.Info.processLong(stats2.getSynchronizationSource(),stats3.getSynchronizationSource())),_this.setTrack(new fm.liveswitch.MediaTrackInfo(stats2,stats3))}var stats4=fm.liveswitch.Global.equals(lastStats,null)?stats.getCodec():fm.liveswitch.Info.processObject(stats.getCodec(),lastStats.getCodec());if(!fm.liveswitch.Global.equals(stats4,null)){var stats5=fm.liveswitch.Global.equals(lastStats,null)?null:lastStats.getCodec(),info=new fm.liveswitch.CodecInfo;info.setId(stats4.getId()),info.setChannelCount(fm.liveswitch.Global.equals(stats5,null)?stats4.getChannelCount():fm.liveswitch.Info.processInteger(stats4.getChannelCount(),stats5.getChannelCount())),info.setClockRate(fm.liveswitch.Global.equals(stats5,null)?stats4.getClockRate():fm.liveswitch.Info.processInteger(stats4.getClockRate(),stats5.getClockRate())),info.setName(fm.liveswitch.Global.equals(stats5,null)?stats4.getName():fm.liveswitch.Info.processString(stats4.getName(),stats5.getName())),info.setParameters(fm.liveswitch.Global.equals(stats5,null)?stats4.getParameters():fm.liveswitch.Info.processString(stats4.getParameters(),stats5.getParameters())),info.setPayloadType(fm.liveswitch.Global.equals(stats5,null)?stats4.getPayloadType():fm.liveswitch.Info.processInteger(stats4.getPayloadType(),stats5.getPayloadType())),_this.setCodec(info)}}return _this}return __extends(MediaComponentInfo,_super),MediaComponentInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaComponentInfo],"+_super.prototype.getTypeString.call(this)},MediaComponentInfo.prototype.fmliveswitchMediaComponentInfoInit=function(){this._synchronizationSource=0},MediaComponentInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"track")?this.setTrack(fm.liveswitch.MediaTrackInfo.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"codec")?this.setCodec(fm.liveswitch.CodecInfo.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"synchronizationSource")&&this.setSynchronizationSource(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},MediaComponentInfo.prototype.getCodec=function(){if(0==arguments.length)return this._codec;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentInfo.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this._synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentInfo.prototype.getTrack=function(){if(0==arguments.length)return this._track;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getTrack(),null)||(jsonObject.track=fm.liveswitch.MediaTrackInfo.toJson(this.getTrack())),fm.liveswitch.Global.equals(this.getCodec(),null)||(jsonObject.codec=fm.liveswitch.CodecInfo.toJson(this.getCodec())),null!=this.getSynchronizationSource()&&(jsonObject.synchronizationSource=fm.liveswitch.JsonSerializer.serializeLong(this.getSynchronizationSource()))},MediaComponentInfo.prototype.setCodec=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._codec=value},MediaComponentInfo.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._synchronizationSource=value},MediaComponentInfo.prototype.setTrack=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._track=value},MediaComponentInfo}(fm.liveswitch.Info);liveswitch.MediaComponentInfo=MediaComponentInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaComponentStats=function(_super){function MediaComponentStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaComponentStatsInit(),_this}return __extends(MediaComponentStats,_super),MediaComponentStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaComponentStats],"+_super.prototype.getTypeString.call(this)},MediaComponentStats.prototype.fmliveswitchMediaComponentStatsInit=function(){this._firCount=0,this._lrrCount=0,this._nackCount=0,this._pliCount=0,this._sliCount=0,this._synchronizationSource=0},MediaComponentStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("ssrc"==_var0){this.setSynchronizationSource(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("rid"==_var0){this.setRtpStreamId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("rrid"==_var0){this.setRepairedRtpStreamId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("track"==_var0){this.setTrack(fm.liveswitch.MediaTrackStats.fromJson(valueJson));break}if("codec"==_var0){this.setCodec(fm.liveswitch.CodecStats.fromJson(valueJson));break}if("nackCount"==_var0){this.setNackCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("pliCount"==_var0){this.setPliCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("firCount"==_var0){this.setFirCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("lrrCount"==_var0){this.setLrrCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("sliCount"==_var0){this.setSliCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},MediaComponentStats.prototype.getCodec=function(){if(0==arguments.length)return this._codec;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getFirCount=function(){if(0==arguments.length)return this._firCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getLrrCount=function(){if(0==arguments.length)return this._lrrCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getNackCount=function(){if(0==arguments.length)return this._nackCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getPliCount=function(){if(0==arguments.length)return this._pliCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getRepairedRtpStreamId=function(){if(0==arguments.length)return this._repairedRtpStreamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getRtpStreamId=function(){if(0==arguments.length)return this._rtpStreamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getSliCount=function(){if(0==arguments.length)return this._sliCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this._synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.getTrack=function(){if(0==arguments.length)return this._track;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.ssrc=fm.liveswitch.JsonSerializer.serializeLong(this.getSynchronizationSource()),jsonObject.rid=fm.liveswitch.JsonSerializer.serializeString(this.getRtpStreamId()),jsonObject.rrid=fm.liveswitch.JsonSerializer.serializeString(this.getRepairedRtpStreamId()),fm.liveswitch.Global.equals(this.getTrack(),null)||(jsonObject.track=fm.liveswitch.MediaTrackStats.toJson(this.getTrack())),fm.liveswitch.Global.equals(this.getCodec(),null)||(jsonObject.codec=fm.liveswitch.CodecStats.toJson(this.getCodec())),jsonObject.nackCount=fm.liveswitch.JsonSerializer.serializeLong(this.getNackCount()),jsonObject.pliCount=fm.liveswitch.JsonSerializer.serializeLong(this.getPliCount()),jsonObject.firCount=fm.liveswitch.JsonSerializer.serializeLong(this.getFirCount()),jsonObject.lrrCount=fm.liveswitch.JsonSerializer.serializeLong(this.getLrrCount()),jsonObject.sliCount=fm.liveswitch.JsonSerializer.serializeLong(this.getSliCount())},MediaComponentStats.prototype.setCodec=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._codec=value},MediaComponentStats.prototype.setFirCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._firCount=fm.liveswitch.Global.toInt(value)},MediaComponentStats.prototype.setLrrCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._lrrCount=fm.liveswitch.Global.toInt(value)},MediaComponentStats.prototype.setNackCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._nackCount=fm.liveswitch.Global.toInt(value)},MediaComponentStats.prototype.setPliCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._pliCount=fm.liveswitch.Global.toInt(value)},MediaComponentStats.prototype.setRepairedRtpStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._repairedRtpStreamId=value},MediaComponentStats.prototype.setRtpStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtpStreamId=value},MediaComponentStats.prototype.setSliCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sliCount=fm.liveswitch.Global.toInt(value)},MediaComponentStats.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._synchronizationSource=fm.liveswitch.Global.toInt(value)},MediaComponentStats.prototype.setTrack=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._track=value},MediaComponentStats}(fm.liveswitch.BaseStats);liveswitch.MediaComponentStats=MediaComponentStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaReceiverInfo=function(_super){function MediaReceiverInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];_this=_super.call(this,stats,lastStats)||this;var sink=stats.getSink();fm.liveswitch.Global.equals(sink,null)||_this.setSink(new fm.liveswitch.MediaSinkInfo(sink,fm.liveswitch.Global.equals(lastStats,null)?null:lastStats.getSink())),_this.setReport(new fm.liveswitch.MediaReceiverReport(stats,lastStats))}return _this}return __extends(MediaReceiverInfo,_super),MediaReceiverInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaReceiverInfo],"+_super.prototype.getTypeString.call(this)},MediaReceiverInfo.fromJson=function(mediaReceiverJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaReceiverJson,(function(){return new fm.liveswitch.MediaReceiverInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverInfo.fromJsonArray=function(mediaReceiversJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaReceiversJson,fm.liveswitch.MediaReceiverInfo.fromJson.bind(fm.liveswitch.MediaReceiverInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverInfo.toJson=function(mediaReceiver){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaReceiver,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverInfo.toJsonArray=function(mediaReceivers){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaReceivers,fm.liveswitch.MediaReceiverInfo.toJson.bind(fm.liveswitch.MediaReceiverInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"sink")?this.setSink(fm.liveswitch.MediaSinkInfo.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"report")&&this.setReport(fm.liveswitch.MediaReceiverReport.fromJson(valueJson)))},MediaReceiverInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverInfo.prototype.getSink=function(){if(0==arguments.length)return this._sink;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getSink(),null)||(jsonObject.sink=fm.liveswitch.MediaSinkInfo.toJson(this.getSink())),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=fm.liveswitch.MediaReceiverReport.toJson(this.getReport()))},MediaReceiverInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},MediaReceiverInfo.prototype.setSink=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sink=value},MediaReceiverInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaReceiverInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverInfo}(fm.liveswitch.MediaComponentInfo);liveswitch.MediaReceiverInfo=MediaReceiverInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaReceiverStats=function(_super){function MediaReceiverStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaReceiverStatsInit(),_this}return __extends(MediaReceiverStats,_super),MediaReceiverStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaReceiverStats],"+_super.prototype.getTypeString.call(this)},MediaReceiverStats.prototype.fmliveswitchMediaReceiverStatsInit=function(){this._bytesReceived=0,this._jitter=0,this._packetsDiscarded=0,this._packetsDuplicated=0,this._packetsLost=0,this._packetsReceived=0,this._packetsRepaired=0},MediaReceiverStats.fromJson=function(mediaReceiverJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaReceiverJson,(function(){return new fm.liveswitch.MediaReceiverStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.fromJsonArray=function(mediaReceiversJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaReceiversJson,fm.liveswitch.MediaReceiverStats.fromJson.bind(fm.liveswitch.MediaReceiverStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.toJson=function(mediaReceiver){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaReceiver,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.toJsonArray=function(mediaReceivers){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaReceivers,fm.liveswitch.MediaReceiverStats.toJson.bind(fm.liveswitch.MediaReceiverStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("packetsReceived"==_var0){this.setPacketsReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("bytesReceived"==_var0){this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsLost"==_var0){this.setPacketsLost(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("jitter"==_var0){this.setJitter(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("packetsDiscarded"==_var0){this.setPacketsDiscarded(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsDuplicated"==_var0){this.setPacketsDuplicated(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsRepaired"==_var0){this.setPacketsRepaired(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("sink"==_var0){this.setSink(fm.liveswitch.MediaSinkStats.fromJson(valueJson));break}}while(0)},MediaReceiverStats.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.getJitter=function(){if(0==arguments.length)return this._jitter;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.getPacketsDiscarded=function(){if(0==arguments.length)return this._packetsDiscarded;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.getPacketsDuplicated=function(){if(0==arguments.length)return this._packetsDuplicated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.getPacketsLost=function(){if(0==arguments.length)return this._packetsLost;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.getPacketsReceived=function(){if(0==arguments.length)return this._packetsReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.getPacketsRepaired=function(){if(0==arguments.length)return this._packetsRepaired;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.getSink=function(){if(0==arguments.length)return this._sink;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return fm.liveswitch.Global.equals(instance.getSynchronizationSource(),_super.prototype.getSynchronizationSource.call(this))&&(fm.liveswitch.Global.equals(instance.getTrack(),_super.prototype.getTrack.call(this))||!fm.liveswitch.Global.equals(_super.prototype.getTrack.call(this),null)&&_super.prototype.getTrack.call(this).isEquivalent(instance.getTrack()))&&(fm.liveswitch.Global.equals(instance.getCodec(),_super.prototype.getCodec.call(this))||!fm.liveswitch.Global.equals(_super.prototype.getCodec.call(this),null)&&_super.prototype.getCodec.call(this).isEquivalent(instance.getCodec()))&&fm.liveswitch.Global.equals(instance.getNackCount(),_super.prototype.getNackCount.call(this))&&fm.liveswitch.Global.equals(instance.getPliCount(),_super.prototype.getPliCount.call(this))&&fm.liveswitch.Global.equals(instance.getFirCount(),_super.prototype.getFirCount.call(this))&&fm.liveswitch.Global.equals(instance.getLrrCount(),_super.prototype.getLrrCount.call(this))&&fm.liveswitch.Global.equals(instance.getSliCount(),_super.prototype.getSliCount.call(this))&&fm.liveswitch.Global.equals(instance.getPacketsReceived(),this.getPacketsReceived())&&fm.liveswitch.Global.equals(instance.getBytesReceived(),this.getBytesReceived())&&fm.liveswitch.Global.equals(instance.getPacketsLost(),this.getPacketsLost())&&fm.liveswitch.Global.equals(instance.getJitter(),this.getJitter())&&fm.liveswitch.Global.equals(instance.getPacketsDiscarded(),this.getPacketsDiscarded())&&fm.liveswitch.Global.equals(instance.getPacketsDuplicated(),this.getPacketsDuplicated())&&fm.liveswitch.Global.equals(instance.getPacketsRepaired(),this.getPacketsRepaired())&&(fm.liveswitch.Global.equals(instance.getSink(),this.getSink())||!fm.liveswitch.Global.equals(this.getSink(),null)&&this.getSink().isEquivalent(instance.getSink()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.packetsReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsReceived()),jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived()),jsonObject.packetsLost=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsLost()),jsonObject.jitter=fm.liveswitch.JsonSerializer.serializeInteger(this.getJitter()),jsonObject.packetsDiscarded=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsDiscarded()),jsonObject.packetsDuplicated=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsDuplicated()),jsonObject.packetsRepaired=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsRepaired()),fm.liveswitch.Global.equals(this.getSink(),null)||(jsonObject.sink=fm.liveswitch.MediaSinkStats.toJson(this.getSink()))},MediaReceiverStats.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesReceived=fm.liveswitch.Global.toInt(value)},MediaReceiverStats.prototype.setJitter=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._jitter=fm.liveswitch.Global.toInt(value)},MediaReceiverStats.prototype.setPacketsDiscarded=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._packetsDiscarded=fm.liveswitch.Global.toInt(value)},MediaReceiverStats.prototype.setPacketsDuplicated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._packetsDuplicated=fm.liveswitch.Global.toInt(value)},MediaReceiverStats.prototype.setPacketsLost=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._packetsLost=fm.liveswitch.Global.toInt(value)},MediaReceiverStats.prototype.setPacketsReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._packetsReceived=fm.liveswitch.Global.toInt(value)},MediaReceiverStats.prototype.setPacketsRepaired=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._packetsRepaired=fm.liveswitch.Global.toInt(value)},MediaReceiverStats.prototype.setSink=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sink=value},MediaReceiverStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaReceiverStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverStats}(fm.liveswitch.MediaComponentStats);liveswitch.MediaReceiverStats=MediaReceiverStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSenderInfo=function(_super){function MediaSenderInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];_this=_super.call(this,stats,lastStats)||this;var source=stats.getSource();fm.liveswitch.Global.equals(source,null)||_this.setSource(new fm.liveswitch.MediaSourceInfo(source,fm.liveswitch.Global.equals(lastStats,null)?null:lastStats.getSource())),_this.setReport(new fm.liveswitch.MediaSenderReport(stats,lastStats))}return _this}return __extends(MediaSenderInfo,_super),MediaSenderInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSenderInfo],"+_super.prototype.getTypeString.call(this)},MediaSenderInfo.fromJson=function(mediaSenderJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaSenderJson,(function(){return new fm.liveswitch.MediaSenderInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderInfo.fromJsonArray=function(mediaSendersJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaSendersJson,fm.liveswitch.MediaSenderInfo.fromJson.bind(fm.liveswitch.MediaSenderInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderInfo.toJson=function(mediaSender){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaSender,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderInfo.toJsonArray=function(mediaSenders){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaSenders,fm.liveswitch.MediaSenderInfo.toJson.bind(fm.liveswitch.MediaSenderInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"source")?this.setSource(fm.liveswitch.MediaSourceInfo.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"report")&&this.setReport(fm.liveswitch.MediaSenderReport.fromJson(valueJson)))},MediaSenderInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderInfo.prototype.getSource=function(){if(0==arguments.length)return this._source;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getSource(),null)||(jsonObject.source=fm.liveswitch.MediaSourceInfo.toJson(this.getSource())),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=fm.liveswitch.MediaSenderReport.toJson(this.getReport()))},MediaSenderInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},MediaSenderInfo.prototype.setSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._source=value},MediaSenderInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaSenderInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderInfo}(fm.liveswitch.MediaComponentInfo);liveswitch.MediaSenderInfo=MediaSenderInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSenderStats=function(_super){function MediaSenderStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaSenderStatsInit(),_this}return __extends(MediaSenderStats,_super),MediaSenderStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSenderStats],"+_super.prototype.getTypeString.call(this)},MediaSenderStats.prototype.fmliveswitchMediaSenderStatsInit=function(){this._bytesSent=0,this._packetsSent=0,this._roundTripTime=0},MediaSenderStats.fromJson=function(mediaSenderJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaSenderJson,(function(){return new fm.liveswitch.MediaSenderStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.fromJsonArray=function(mediaSendersJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaSendersJson,fm.liveswitch.MediaSenderStats.fromJson.bind(fm.liveswitch.MediaSenderStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.toJson=function(mediaSender){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaSender,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.toJsonArray=function(mediaSenders){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaSenders,fm.liveswitch.MediaSenderStats.toJson.bind(fm.liveswitch.MediaSenderStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"packetsSent")?this.setPacketsSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesSent")?this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"rtt")?this.setRoundTripTime(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"source")&&this.setSource(fm.liveswitch.MediaSourceStats.fromJson(valueJson)))},MediaSenderStats.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.prototype.getPacketsSent=function(){if(0==arguments.length)return this._packetsSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.prototype.getRoundTripTime=function(){if(0==arguments.length)return this._roundTripTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.prototype.getSource=function(){if(0==arguments.length)return this._source;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return fm.liveswitch.Global.equals(instance.getSynchronizationSource(),_super.prototype.getSynchronizationSource.call(this))&&(fm.liveswitch.Global.equals(instance.getTrack(),_super.prototype.getTrack.call(this))||!fm.liveswitch.Global.equals(_super.prototype.getTrack.call(this),null)&&_super.prototype.getTrack.call(this).isEquivalent(instance.getTrack()))&&(fm.liveswitch.Global.equals(instance.getCodec(),_super.prototype.getCodec.call(this))||!fm.liveswitch.Global.equals(_super.prototype.getCodec.call(this),null)&&_super.prototype.getCodec.call(this).isEquivalent(instance.getCodec()))&&fm.liveswitch.Global.equals(instance.getNackCount(),_super.prototype.getNackCount.call(this))&&fm.liveswitch.Global.equals(instance.getPliCount(),_super.prototype.getPliCount.call(this))&&fm.liveswitch.Global.equals(instance.getFirCount(),_super.prototype.getFirCount.call(this))&&fm.liveswitch.Global.equals(instance.getLrrCount(),_super.prototype.getLrrCount.call(this))&&fm.liveswitch.Global.equals(instance.getSliCount(),_super.prototype.getSliCount.call(this))&&fm.liveswitch.Global.equals(instance.getPacketsSent(),this.getPacketsSent())&&fm.liveswitch.Global.equals(instance.getBytesSent(),this.getBytesSent())&&fm.liveswitch.Global.equals(instance.getRoundTripTime(),this.getRoundTripTime())&&(fm.liveswitch.Global.equals(instance.getSource(),this.getSource())||!fm.liveswitch.Global.equals(this.getSource(),null)&&this.getSource().isEquivalent(instance.getSource()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.packetsSent=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsSent()),jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent()),jsonObject.rtt=fm.liveswitch.JsonSerializer.serializeInteger(this.getRoundTripTime()),fm.liveswitch.Global.equals(this.getSource(),null)||(jsonObject.source=fm.liveswitch.MediaSourceStats.toJson(this.getSource()))},MediaSenderStats.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesSent=fm.liveswitch.Global.toInt(value)},MediaSenderStats.prototype.setPacketsSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._packetsSent=fm.liveswitch.Global.toInt(value)},MediaSenderStats.prototype.setRoundTripTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._roundTripTime=fm.liveswitch.Global.toInt(value)},MediaSenderStats.prototype.setSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._source=value},MediaSenderStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaSenderStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderStats}(fm.liveswitch.MediaComponentStats);liveswitch.MediaSenderStats=MediaSenderStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSinkInfo=function(_super){function MediaSinkInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];_this=_super.call(this)||this,_super.prototype.setId.call(_this,stats.getId());var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setTag(flag?stats.getTag():fm.liveswitch.Info.processString(stats.getTag(),lastStats.getTag())),_this.setLabel(flag?stats.getLabel():fm.liveswitch.Info.processString(stats.getLabel(),lastStats.getLabel())),_this.setOutputId(flag?stats.getOutputId():fm.liveswitch.Info.processString(stats.getOutputId(),lastStats.getOutputId())),_this.setOutputName(flag?stats.getOutputName():fm.liveswitch.Info.processString(stats.getOutputName(),lastStats.getOutputName())),fm.liveswitch.Global.equals(stats.getInputFormat(),null)||!flag&&stats.getInputFormat().isEquivalent(lastStats.getInputFormat())||_this.setInputFormat(new fm.liveswitch.FormatInfo(stats.getInputFormat().getName(),stats.getInputFormat().getClockRate(),stats.getInputFormat().getChannelCount()))}return _this}return __extends(MediaSinkInfo,_super),MediaSinkInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSinkInfo],"+_super.prototype.getTypeString.call(this)},MediaSinkInfo.fromJson=function(mediaSinkInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaSinkInfoJson,(function(){return new fm.liveswitch.MediaSinkInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.fromJsonArray=function(mediaSinkInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaSinkInfosJson,fm.liveswitch.MediaSinkInfo.fromJson.bind(fm.liveswitch.MediaSinkInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.toJson=function(mediaSinkInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaSinkInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.toJsonArray=function(mediaSinkInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaSinkInfos,fm.liveswitch.MediaSinkInfo.toJson.bind(fm.liveswitch.MediaSinkInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"tag")?this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"label")?this.setLabel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"outputId")?this.setOutputId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"outputName")?this.setOutputName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"inputFormat")&&this.setInputFormat(fm.liveswitch.FormatInfo.fromJson(valueJson)))},MediaSinkInfo.prototype.getInputFormat=function(){if(0==arguments.length)return this._inputFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.prototype.getOutputId=function(){if(0==arguments.length)return this._outputId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.prototype.getOutputName=function(){if(0==arguments.length)return this._outputName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getTag())||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getLabel())||(jsonObject.label=fm.liveswitch.JsonSerializer.serializeString(this.getLabel())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getOutputId())||(jsonObject.outputId=fm.liveswitch.JsonSerializer.serializeString(this.getOutputId())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getOutputName())||(jsonObject.outputName=fm.liveswitch.JsonSerializer.serializeString(this.getOutputName())),fm.liveswitch.Global.equals(this.getInputFormat(),null)||(jsonObject.inputFormat=fm.liveswitch.FormatInfo.toJson(this.getInputFormat()))},MediaSinkInfo.prototype.setInputFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._inputFormat=value},MediaSinkInfo.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},MediaSinkInfo.prototype.setOutputId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputId=value},MediaSinkInfo.prototype.setOutputName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputName=value},MediaSinkInfo.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},MediaSinkInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaSinkInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkInfo}(fm.liveswitch.Info);liveswitch.MediaSinkInfo=MediaSinkInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSinkStats=function(_super){function MediaSinkStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaSinkStatsInit(),_this}return __extends(MediaSinkStats,_super),MediaSinkStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSinkStats],"+_super.prototype.getTypeString.call(this)},MediaSinkStats.prototype.fmliveswitchMediaSinkStatsInit=function(){this._muted=!1},MediaSinkStats.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.MediaSinkStats}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.fromJsonArray=function(arrayJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(arrayJson,fm.liveswitch.MediaSinkStats.fromJson.bind(fm.liveswitch.MediaSinkStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.toJsonArray=function(array){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(array,fm.liveswitch.MediaSinkStats.toJson.bind(fm.liveswitch.MediaSinkStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"tag")?this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"label")?this.setLabel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"muted")?this.setMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"outputId")?this.setOutputId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"outputName")?this.setOutputName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"inputFormat")&&this.setInputFormat(fm.liveswitch.FormatInfo.fromJson(valueJson)))},MediaSinkStats.prototype.getInputFormat=function(){if(0==arguments.length)return this._inputFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.getMuted=function(){if(0==arguments.length)return this._muted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.getOutputId=function(){if(0==arguments.length)return this._outputId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.getOutputName=function(){if(0==arguments.length)return this._outputName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return!fm.liveswitch.Global.equals(instance,null)&&(!(fm.liveswitch.Global.equals(instance.getInputFormat(),null)&&!fm.liveswitch.Global.equals(this.getInputFormat(),null))&&(fm.liveswitch.Global.equals(instance.getTag(),this.getTag())&&fm.liveswitch.Global.equals(instance.getLabel(),this.getLabel())&&fm.liveswitch.Global.equals(instance.getMuted(),this.getMuted())&&fm.liveswitch.Global.equals(instance.getOutputId(),this.getOutputId())&&fm.liveswitch.Global.equals(instance.getOutputName(),this.getOutputName())&&instance.getInputFormat().isEquivalent(this.getInputFormat())));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getTag(),null)||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.Global.equals(this.getLabel(),null)||(jsonObject.label=fm.liveswitch.JsonSerializer.serializeString(this.getLabel())),jsonObject.muted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getMuted()),fm.liveswitch.Global.equals(this.getOutputId(),null)||(jsonObject.outputId=fm.liveswitch.JsonSerializer.serializeString(this.getOutputId())),fm.liveswitch.Global.equals(this.getOutputName(),null)||(jsonObject.outputName=fm.liveswitch.JsonSerializer.serializeString(this.getOutputName())),fm.liveswitch.Global.equals(this.getInputFormat(),null)||(jsonObject.inputFormat=fm.liveswitch.FormatInfo.toJson(this.getInputFormat()))},MediaSinkStats.prototype.setInputFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._inputFormat=value},MediaSinkStats.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},MediaSinkStats.prototype.setMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._muted=value},MediaSinkStats.prototype.setOutputId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputId=value},MediaSinkStats.prototype.setOutputName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputName=value},MediaSinkStats.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},MediaSinkStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaSinkStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkStats}(fm.liveswitch.BaseStats);liveswitch.MediaSinkStats=MediaSinkStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSourceStats=function(_super){function MediaSourceStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaSourceStatsInit(),_this}return __extends(MediaSourceStats,_super),MediaSourceStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSourceStats],"+_super.prototype.getTypeString.call(this)},MediaSourceStats.prototype.fmliveswitchMediaSourceStatsInit=function(){this._muted=!1},MediaSourceStats.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.MediaSourceStats}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"tag")?this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"label")?this.setLabel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"muted")?this.setMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"inputId")?this.setInputId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"inputName")?this.setInputName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"outputFormat")&&this.setOutputFormat(fm.liveswitch.FormatInfo.fromJson(valueJson)))},MediaSourceStats.prototype.getInputId=function(){if(0==arguments.length)return this._inputId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.getInputName=function(){if(0==arguments.length)return this._inputName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.getMuted=function(){if(0==arguments.length)return this._muted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.getOutputFormat=function(){if(0==arguments.length)return this._outputFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return!fm.liveswitch.Global.equals(instance,null)&&(!(fm.liveswitch.Global.equals(instance.getOutputFormat(),null)&&!fm.liveswitch.Global.equals(this.getOutputFormat(),null))&&(fm.liveswitch.Global.equals(instance.getTag(),this.getTag())&&fm.liveswitch.Global.equals(instance.getLabel(),this.getLabel())&&fm.liveswitch.Global.equals(instance.getMuted(),this.getMuted())&&fm.liveswitch.Global.equals(instance.getInputId(),this.getInputId())&&fm.liveswitch.Global.equals(instance.getInputName(),this.getInputName())&&instance.getOutputFormat().isEquivalent(this.getOutputFormat())));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getTag(),null)||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.Global.equals(this.getLabel(),null)||(jsonObject.label=fm.liveswitch.JsonSerializer.serializeString(this.getLabel())),jsonObject.muted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getMuted()),fm.liveswitch.Global.equals(this.getInputId(),null)||(jsonObject.inputId=fm.liveswitch.JsonSerializer.serializeString(this.getInputId())),fm.liveswitch.Global.equals(this.getInputName(),null)||(jsonObject.inputName=fm.liveswitch.JsonSerializer.serializeString(this.getInputName())),fm.liveswitch.Global.equals(this.getOutputFormat(),null)||(jsonObject.outputFormat=fm.liveswitch.FormatInfo.toJson(this.getOutputFormat()))},MediaSourceStats.prototype.setInputId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._inputId=value},MediaSourceStats.prototype.setInputName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._inputName=value},MediaSourceStats.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},MediaSourceStats.prototype.setMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._muted=value},MediaSourceStats.prototype.setOutputFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputFormat=value},MediaSourceStats.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},MediaSourceStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaSourceStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceStats}(fm.liveswitch.BaseStats);liveswitch.MediaSourceStats=MediaSourceStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaStats=function(_super){function MediaStats(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(MediaStats,_super),MediaStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaStats],"+_super.prototype.getTypeString.call(this)},MediaStats.fromJson=function(mediaJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaJson,(function(){return new fm.liveswitch.MediaStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStats.toJson=function(media){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(media,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;!fm.liveswitch.Global.equals(str,null)&&fm.liveswitch.Global.equals(str,"tracks")&&this.setTracks(fm.liveswitch.MediaTrackStats.fromJsonArray(valueJson))},MediaStats.prototype.getTrack=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getTracks());if(1==arguments.length){for(var trackId=arguments[0],_i=0,_a=this.getTracks();_i<_a.length;_i++){var stats=_a[_i];if(fm.liveswitch.Global.equals(stats.getId(),trackId))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStats.prototype.getTracks=function(){if(0==arguments.length)return this._tracks;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getTracks(),null)||(jsonObject.tracks=fm.liveswitch.MediaTrackStats.toJsonArray(this.getTracks()))},MediaStats.prototype.setTracks=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tracks=value},MediaStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStats}(fm.liveswitch.BaseStats);liveswitch.MediaStats=MediaStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EncodingInfo=function(_super){function EncodingInfo(){var _this=this;fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchEncodingInfoInit(),_this.__synchronizationSource=-1,_this.__bitrate=-1,_this.__frameRate=-1,_this.__scale=-1,_this}return __extends(EncodingInfo,_super),EncodingInfo.prototype.getTypeString=function(){return"[fm.liveswitch.EncodingInfo],"+_super.prototype.getTypeString.call(this)},EncodingInfo.prototype.fmliveswitchEncodingInfoInit=function(){this.__bitrate=0,this.__frameRate=0,this.__scale=0,this.__synchronizationSource=0,this._deactivated=!1},EncodingInfo.findEncoding=function(encodings,synchronizationSource,rtpStreamId){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),3==arguments.length){if((synchronizationSource=fm.liveswitch.Global.toInt(arguments[1]))>=0)for(var _i=0,encodings_1=encodings;_i<encodings_1.length;_i++){var info=encodings_1[_i];if(fm.liveswitch.Global.equals(info.getSynchronizationSource(),synchronizationSource))return info}if(!fm.liveswitch.Global.equals(rtpStreamId,null))for(var _a=0,encodings_2=encodings;_a<encodings_2.length;_a++){info=encodings_2[_a];if(fm.liveswitch.Global.equals(info.getRtpStreamId(),rtpStreamId))return info}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.fromJson=function(encodingInfoJson){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(encodingInfoJson,(function(){return new fm.liveswitch.EncodingInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.fromJsonArray=function(encodingInfosJson){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(encodingInfosJson,fm.liveswitch.EncodingInfo.fromJson.bind(fm.liveswitch.EncodingInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.fromSdpRidAttribute=function(ridAttribute){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),1==arguments.length){if(fm.liveswitch.Global.equals(ridAttribute,null))return null;if(fm.liveswitch.Global.equals(ridAttribute.getId(),null))throw new fm.liveswitch.Exception("RTP stream ID cannot be null.");var info2=new fm.liveswitch.EncodingInfo;info2.setRtpStreamId(ridAttribute.getId());var info=info2;return info.setSdpRidRestrictions(ridAttribute.getRestrictions()),info}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.isEquivalent=function(){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length){var encoding1=arguments[0],encoding2=arguments[1];return fm.liveswitch.EncodingInfo.isEquivalent(encoding1,encoding2,!1)}if(3==arguments.length){encoding1=arguments[0],encoding2=arguments[1];var restrictionsOnly=arguments[2];return!!fm.liveswitch.Global.equals(encoding1,encoding2)||!fm.liveswitch.Global.equals(encoding1,null)&&!fm.liveswitch.Global.equals(encoding2,null)&&fm.liveswitch.EncodingInfo.isEquivalentNoCheck(encoding1,encoding2,restrictionsOnly)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.isEquivalentNoCheck=function(encoding1,encoding2,restrictionsOnly){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),3==arguments.length)return(restrictionsOnly||fm.liveswitch.Global.equals(encoding1.getRtpStreamId(),encoding2.getRtpStreamId()))&&(restrictionsOnly||fm.liveswitch.Global.equals(encoding1.getSynchronizationSource(),encoding2.getSynchronizationSource()))&&(restrictionsOnly||fm.liveswitch.Global.equals(encoding1.getDeactivated(),encoding2.getDeactivated()))&&fm.liveswitch.Global.equals(encoding1.getBitrate(),encoding2.getBitrate())&&fm.liveswitch.Global.equals(encoding1.getFrameRate(),encoding2.getFrameRate())&&fm.liveswitch.Size.isEquivalent(encoding1.getSize(),encoding2.getSize())&&fm.liveswitch.Global.equals(encoding1.getScale(),encoding2.getScale());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.max=function(encoding1,encoding2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length){var info2=new fm.liveswitch.EncodingInfo;info2.setBitrate(fm.liveswitch.EncodingInfo.maxInteger(encoding1.getBitrate(),encoding2.getBitrate())),info2.setFrameRate(fm.liveswitch.EncodingInfo.maxDouble(encoding1.getFrameRate(),encoding2.getFrameRate()));var info=info2,scaledSize=encoding1.getScaledSize(),size2=encoding2.getScaledSize();return fm.liveswitch.Global.equals(fm.liveswitch.EncodingInfo.maxSize(scaledSize,size2),scaledSize)?(info.setSize(encoding1.getSize()),info.setScale(encoding1.getScale()),info):(info.setSize(encoding2.getSize()),info.setScale(encoding2.getScale()),info)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.maxDouble=function(value1,value2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length)return fm.liveswitch.Global.equals(value1,-1)?value2:fm.liveswitch.Global.equals(value2,-1)?value1:fm.liveswitch.MathAssistant.max(value1,value2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.maxInteger=function(value1,value2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length)return value1=fm.liveswitch.Global.toInt(arguments[0]),value2=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(value1,-1)?value2:fm.liveswitch.Global.equals(value2,-1)?value1:fm.liveswitch.MathAssistant.max(value1,value2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.maxSize=function(value1,value2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length)return fm.liveswitch.Global.equals(value1,null)||!fm.liveswitch.Global.equals(value2,null)&&value2.getWidth()*value2.getHeight()>value1.getWidth()*value1.getHeight()?value2:value1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.merge=function(encodings){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),1==arguments.length){for(var list=new Array,_i=0,encodings_3=encodings;_i<encodings_3.length;_i++){var info=encodings_3[_i],info2=fm.liveswitch.EncodingInfo.findEncoding(list,info.getSynchronizationSource(),info.getRtpStreamId());if(fm.liveswitch.Global.equals(info2,null)){var info3=new fm.liveswitch.EncodingInfo;info3.setSynchronizationSource(info.getSynchronizationSource()),info3.setRtpStreamId(info.getRtpStreamId()),info3.setDeactivated(info.getDeactivated()),fm.liveswitch.ArrayExtensions.add(list,info3.extend(info))}else info2.extend(info)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.min=function(encoding1,encoding2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length){var info2=new fm.liveswitch.EncodingInfo;info2.setBitrate(fm.liveswitch.EncodingInfo.minInteger(encoding1.getBitrate(),encoding2.getBitrate())),info2.setFrameRate(fm.liveswitch.EncodingInfo.minDouble(encoding1.getFrameRate(),encoding2.getFrameRate()));var info=info2,scaledSize=encoding1.getScaledSize(),size2=encoding2.getScaledSize();return fm.liveswitch.Global.equals(fm.liveswitch.EncodingInfo.minSize(scaledSize,size2),scaledSize)?(info.setSize(encoding1.getSize()),info.setScale(encoding1.getScale()),info):(info.setSize(encoding2.getSize()),info.setScale(encoding2.getScale()),info)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.minDouble=function(value1,value2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length)return fm.liveswitch.Global.equals(value1,-1)?value2:fm.liveswitch.Global.equals(value2,-1)?value1:fm.liveswitch.MathAssistant.min(value1,value2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.minInteger=function(value1,value2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length)return value1=fm.liveswitch.Global.toInt(arguments[0]),value2=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(value1,-1)?value2:fm.liveswitch.Global.equals(value2,-1)?value1:fm.liveswitch.MathAssistant.min(value1,value2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.minSize=function(value1,value2){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length)return fm.liveswitch.Global.equals(value1,null)||!fm.liveswitch.Global.equals(value2,null)&&value2.getWidth()*value2.getHeight()<value1.getWidth()*value1.getHeight()?value2:value1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.toJson=function(encodingInfo){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(encodingInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.toJsonArray=function(encodingInfos){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(encodingInfos,fm.liveswitch.EncodingInfo.toJson.bind(fm.liveswitch.EncodingInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.toSdpRidAttribute=function(){if(fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize(),2==arguments.length){var encoding=arguments[0],direction=arguments[1];return fm.liveswitch.EncodingInfo.toSdpRidAttribute(encoding,direction,!0)}if(3==arguments.length){encoding=arguments[0],direction=arguments[1];var includeRestrictions=arguments[2];if(fm.liveswitch.Global.equals(encoding,null))return null;if(fm.liveswitch.Global.equals(encoding.getRtpStreamId(),null))throw new fm.liveswitch.Exception("RTP stream ID cannot be null.");return new fm.liveswitch.sdp.rtp.RidAttribute(encoding.getRtpStreamId(),direction,includeRestrictions?encoding.getSdpRidRestrictions():null)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("rtpStreamId"==_var0){this.setRtpStreamId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("synchronizationSource"==_var0){this.setSynchronizationSource(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("deactivated"==_var0){this.setDeactivated(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("bitrate"==_var0){this.setBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("frameRate"==_var0){this.setFrameRate(fm.liveswitch.JsonSerializer.deserializeDouble(valueJson));break}if("size"==_var0){this.setSize(fm.liveswitch.Size.fromJson(valueJson));break}if("scale"==_var0){this.setScale(fm.liveswitch.JsonSerializer.deserializeDouble(valueJson));break}}while(0)},EncodingInfo.prototype.extend=function(encoding){if(1==arguments.length)return fm.liveswitch.Global.equals(this.getDeactivated(),encoding.getDeactivated())||this.setDeactivated(!1),(fm.liveswitch.Global.equals(this.getBitrate(),-1)||encoding.getBitrate()>this.getBitrate())&&this.setBitrate(encoding.getBitrate()),(fm.liveswitch.Global.equals(this.getFrameRate(),-1)||encoding.getFrameRate()>this.getFrameRate())&&this.setFrameRate(encoding.getFrameRate()),(fm.liveswitch.Global.equals(this.getWidth(),-1)&&fm.liveswitch.Global.equals(this.getHeight(),-1)||encoding.getWidth()>this.getWidth()&&encoding.getHeight()>this.getHeight())&&this.setSize(encoding.getSize()),(fm.liveswitch.Global.equals(this.getScale(),-1)||encoding.getScale()>this.getScale())&&this.setScale(encoding.getScale()),this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getBitrate=function(){if(0==arguments.length)return this.__bitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getDeactivated=function(){if(0==arguments.length)return this._deactivated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getFrameRate=function(){if(0==arguments.length)return this.__frameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getHeight=function(){if(0==arguments.length){var size=this.getSize();return fm.liveswitch.Global.equals(size,null)?-1:size.getHeight()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getIsEmpty=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getRtpStreamId(),null)&&fm.liveswitch.Global.equals(this.getSynchronizationSource(),-1)&&!this.getDeactivated()&&fm.liveswitch.Global.equals(this.getBitrate(),-1)&&fm.liveswitch.Global.equals(this.getFrameRate(),-1)&&fm.liveswitch.Global.equals(this.getSize(),null)&&fm.liveswitch.Global.equals(this.getScale(),-1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getRidRestrictionValue=function(ridRestrictions,ridRestrictionKey){if(2==arguments.length){for(var _i=0,ridRestrictions_1=ridRestrictions;_i<ridRestrictions_1.length;_i++){var restriction=ridRestrictions_1[_i];if(fm.liveswitch.Global.equals(restriction.getKey(),ridRestrictionKey))return restriction.getValue()}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getRtpStreamId=function(){if(0==arguments.length)return this._rtpStreamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getScale=function(){if(0==arguments.length)return this.__scale;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getScaledHeight=function(){if(0==arguments.length){var scaledSize=this.getScaledSize();return fm.liveswitch.Global.equals(scaledSize,null)?-1:scaledSize.getHeight()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getScaledSize=function(){if(0==arguments.length){var size=this.getSize();if(fm.liveswitch.Global.equals(size,null))return null;var scale=this.getScale();return scale>0?new fm.liveswitch.Size(size.getWidth()*scale,size.getHeight()*scale):size}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getScaledWidth=function(){if(0==arguments.length){var scaledSize=this.getScaledSize();return fm.liveswitch.Global.equals(scaledSize,null)?-1:scaledSize.getWidth()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getSdpRidRestrictions=function(){if(0==arguments.length){var list=new Array,bitrate=this.getBitrate();if(bitrate>0){var num6=1e3*bitrate;fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.sdp.rtp.RidRestriction(fm.liveswitch.sdp.rtp.RidRestriction.getMaxBitrateKey(),fm.liveswitch.NumberExtensions.toString(num6)))}var frameRate=this.getFrameRate();frameRate>0&&fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.sdp.rtp.RidRestriction(fm.liveswitch.sdp.rtp.RidRestriction.getMaxFramesPerSecondKey(),fm.liveswitch.NumberExtensions.toString(frameRate)));var scale=this.getScale(),width=this.getWidth();width>0&&(scale>0&&(width=fm.liveswitch.MathAssistant.round(width*scale)),fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.sdp.rtp.RidRestriction(fm.liveswitch.sdp.rtp.RidRestriction.getMaxWidthKey(),fm.liveswitch.NumberExtensions.toString(width))));var height=this.getHeight();return height>0&&(scale>0&&(height=fm.liveswitch.MathAssistant.round(height*scale)),fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.sdp.rtp.RidRestriction(fm.liveswitch.sdp.rtp.RidRestriction.getMaxHeightKey(),fm.liveswitch.NumberExtensions.toString(height)))),fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getSdpSimulcastStream=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getSdpSimulcastStreamId(),null)?null:new fm.liveswitch.sdp.rtp.SimulcastStream(this.getSdpSimulcastStreamId());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getSdpSimulcastStreamId=function(){if(0==arguments.length){var rtpStreamId=this.getRtpStreamId();return fm.liveswitch.Global.equals(rtpStreamId,null)?null:new fm.liveswitch.sdp.rtp.SimulcastStreamId(rtpStreamId,this.getDeactivated())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getSdpSsrcRestrictionAttributes=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=this.getSdpRidRestrictions();_i<_a.length;_i++){var restriction=_a[_i];fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.sdp.rtp.SsrcAttribute(this.getSynchronizationSource(),restriction.getKey(),restriction.getValue()))}return this.getDeactivated()&&fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.sdp.rtp.SsrcAttribute(this.getSynchronizationSource(),fm.liveswitch.EncodingInfo.fm_liveswitch_EncodingInfo___pausedKey,"1")),fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getSize=function(){if(0==arguments.length)return this._size;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getSsrcRestrictionAttributeValue=function(ssrcRestrictionAttributes,ridRestrictionKey){if(2==arguments.length){for(var _i=0,ssrcRestrictionAttributes_1=ssrcRestrictionAttributes;_i<ssrcRestrictionAttributes_1.length;_i++){var attribute=ssrcRestrictionAttributes_1[_i];if(fm.liveswitch.Global.equals(attribute.getSynchronizationSource(),this.getSynchronizationSource())&&fm.liveswitch.Global.equals(attribute.getName(),ridRestrictionKey))return attribute.getValue()}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this.__synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.getWidth=function(){if(0==arguments.length){var size=this.getSize();return fm.liveswitch.Global.equals(size,null)?-1:size.getWidth()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.isEquivalent=function(){if(1==arguments.length){var encoding=arguments[0];return this.isEquivalent(encoding,!1)}if(2==arguments.length){encoding=arguments[0];var restrictionsOnly=arguments[1];return fm.liveswitch.EncodingInfo.isEquivalent(this,encoding,restrictionsOnly)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.parseBitrate=function(ridRestrictionMaxBitrateValue){if(1==arguments.length){var intResult=0,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(ridRestrictionMaxBitrateValue,_var0);return intResult=_var0.getValue(),fm.liveswitch.Global.equals(ridRestrictionMaxBitrateValue,null)||!_var1?-1:fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.floor(intResult/1e3))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.parseDeactivated=function(ridRestrictionPausedValue){if(1==arguments.length){var intResult=0,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(ridRestrictionPausedValue,_var0);return intResult=_var0.getValue(),!(fm.liveswitch.Global.equals(ridRestrictionPausedValue,null)||!_var1)&&fm.liveswitch.Global.equals(intResult,1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.parseFrameRate=function(ridRestrictionMaxFramesPerSecondValue){if(1==arguments.length){var doubleResult=0,_var0=new fm.liveswitch.Holder(doubleResult),_var1=fm.liveswitch.ParseAssistant.tryParseDoubleValue(ridRestrictionMaxFramesPerSecondValue,_var0);return doubleResult=_var0.getValue(),fm.liveswitch.Global.equals(ridRestrictionMaxFramesPerSecondValue,null)||!_var1?-1:fm.liveswitch.MathAssistant.max(0,doubleResult)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.parseSize=function(ridRestrictionMaxWidthValue,ridRestrictionMaxHeightValue){if(2==arguments.length){var intResult=0,num2=0,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(ridRestrictionMaxWidthValue,_var0);intResult=_var0.getValue();var _var2=new fm.liveswitch.Holder(num2),_var3=fm.liveswitch.ParseAssistant.tryParseIntegerValue(ridRestrictionMaxHeightValue,_var2);return num2=_var2.getValue(),fm.liveswitch.Global.equals(ridRestrictionMaxWidthValue,null)||fm.liveswitch.Global.equals(ridRestrictionMaxHeightValue,null)||!_var1||!_var3?null:new fm.liveswitch.Size(fm.liveswitch.MathAssistant.max(0,intResult),fm.liveswitch.MathAssistant.max(0,num2))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getRtpStreamId(),null)||(jsonObject.rtpStreamId=fm.liveswitch.JsonSerializer.serializeString(this.getRtpStreamId())),fm.liveswitch.Global.equals(this.getSynchronizationSource(),-1)||(jsonObject.synchronizationSource=fm.liveswitch.JsonSerializer.serializeLong(this.getSynchronizationSource())),this.getDeactivated()&&(jsonObject.deactivated=fm.liveswitch.JsonSerializer.serializeBoolean(this.getDeactivated())),fm.liveswitch.Global.equals(this.getBitrate(),-1)||(jsonObject.bitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getBitrate())),fm.liveswitch.Global.equals(this.getFrameRate(),-1)||(jsonObject.frameRate=fm.liveswitch.JsonSerializer.serializeDouble(this.getFrameRate())),fm.liveswitch.Global.equals(this.getSize(),null)||(jsonObject.size=fm.liveswitch.Size.toJson(this.getSize())),fm.liveswitch.Global.equals(this.getScale(),-1)||(jsonObject.scale=fm.liveswitch.JsonSerializer.serializeDouble(this.getScale()))},EncodingInfo.prototype.setBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__bitrate=fm.liveswitch.Global.toInt(value)},EncodingInfo.prototype.setDeactivated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deactivated=value},EncodingInfo.prototype.setFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__frameRate=value},EncodingInfo.prototype.setRtpStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtpStreamId=value},EncodingInfo.prototype.setScale=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__scale=value},EncodingInfo.prototype.setSdpRidRestrictions=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)||(this.setBitrate(this.parseBitrate(this.getRidRestrictionValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxBitrateKey()))),this.setFrameRate(this.parseFrameRate(this.getRidRestrictionValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxFramesPerSecondKey()))),this.setSize(this.parseSize(this.getRidRestrictionValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxWidthKey()),this.getRidRestrictionValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxHeightKey()))))},EncodingInfo.prototype.setSdpSimulcastStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)?(this.setRtpStreamId(null),this.setDeactivated(!1)):(this.setRtpStreamId(value.getId()),this.setDeactivated(value.getPaused()))},EncodingInfo.prototype.setSdpSsrcRestrictionAttributes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)||(this.setDeactivated(this.parseDeactivated(this.getSsrcRestrictionAttributeValue(value,fm.liveswitch.EncodingInfo.fm_liveswitch_EncodingInfo___pausedKey))),this.setBitrate(this.parseBitrate(this.getSsrcRestrictionAttributeValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxBitrateKey()))),this.setFrameRate(this.parseFrameRate(this.getSsrcRestrictionAttributeValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxFramesPerSecondKey()))),this.setSize(this.parseSize(this.getSsrcRestrictionAttributeValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxWidthKey()),this.getSsrcRestrictionAttributeValue(value,fm.liveswitch.sdp.rtp.RidRestriction.getMaxHeightKey()))))},EncodingInfo.prototype.setSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._size=value},EncodingInfo.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__synchronizationSource=fm.liveswitch.Global.toInt(value)},EncodingInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.EncodingInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.toSdpRidAttribute=function(){if(1==arguments.length){var direction=arguments[0];return this.toSdpRidAttribute(direction,!0)}if(2==arguments.length){direction=arguments[0];var includeRestrictions=arguments[1];return fm.liveswitch.EncodingInfo.toSdpRidAttribute(this,direction,includeRestrictions)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.prototype.toString=function(){if(0==arguments.length){var flag=!1,list=new Array,rtpStreamId=this.getRtpStreamId();fm.liveswitch.Global.equals(rtpStreamId,null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("RTP Stream ID: {0}",rtpStreamId));var synchronizationSource=this.getSynchronizationSource();fm.liveswitch.Global.equals(synchronizationSource,-1)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Synchronization Source: {0}",fm.liveswitch.NumberExtensions.toString(synchronizationSource)));var deactivated=this.getDeactivated();deactivated&&fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Deactivated: {0}",fm.liveswitch.BooleanExtensions.toString(deactivated)));var bitrate=this.getBitrate();fm.liveswitch.Global.equals(bitrate,-1)||(flag=!0,fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Bitrate: {0}",fm.liveswitch.NumberExtensions.toString(bitrate))));var frameRate=this.getFrameRate();fm.liveswitch.Global.equals(frameRate,-1)||(flag=!0,fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Frame Rate: {0}",fm.liveswitch.NumberExtensions.toString(frameRate))));var size=this.getSize();fm.liveswitch.Global.equals(size,null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Size: {0}",size.toString()));var scale=this.getScale();if(!fm.liveswitch.Global.equals(scale,-1)&&(flag=!0,fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Scale: {0}",fm.liveswitch.NumberExtensions.toString(scale))),!fm.liveswitch.Global.equals(scale,1))){var scaledSize=this.getScaledSize();fm.liveswitch.Global.equals(scaledSize,null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Scaled Size: {0}",scaledSize.toString()))}var str2=fm.liveswitch.StringExtensions.join(", ",fm.liveswitch.ArrayExtensions.toArray(list));return flag||(str2=fm.liveswitch.StringExtensions.trim(fm.liveswitch.StringExtensions.format("{0} [Unrestricted]",str2))),str2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncodingInfo.fmliveswitchEncodingInfoInitialize=function(){fm.liveswitch.EncodingInfo.__fmliveswitchEncodingInfoInitialized||fm.liveswitch.EncodingInfo.__fmliveswitchEncodingInfoInitializing||(fm.liveswitch.EncodingInfo.__fmliveswitchEncodingInfoInitializing=!0,fm.liveswitch.EncodingInfo.fm_liveswitch_EncodingInfo___pausedKey="paused",fm.liveswitch.EncodingInfo.__fmliveswitchEncodingInfoInitialized=!0,fm.liveswitch.EncodingInfo.__fmliveswitchEncodingInfoInitializing=!1)},EncodingInfo.__fmliveswitchEncodingInfoInitialized=!1,EncodingInfo.__fmliveswitchEncodingInfoInitializing=!1,EncodingInfo}(fm.liveswitch.Info);liveswitch.EncodingInfo=EncodingInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaStreamInfo=function(_super){function MediaStreamInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaStreamInfoInit(),_this.__localBandwidth=-1,_this.__remoteBandwidth=-1,_this}return __extends(MediaStreamInfo,_super),MediaStreamInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaStreamInfo],"+_super.prototype.getTypeString.call(this)},MediaStreamInfo.prototype.fmliveswitchMediaStreamInfoInit=function(){this.__localBandwidth=0,this.__remoteBandwidth=0,this._maxFrameHeight=0,this._maxFrameWidth=0,this._receiveDisabled=!1,this._sendDisabled=!1,this._sendMuted=!1},MediaStreamInfo.fromJson=function(mediaStreamInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaStreamInfoJson,(function(){return new fm.liveswitch.MediaStreamInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.fromJsonArray=function(mediaStreamInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaStreamInfosJson,fm.liveswitch.MediaStreamInfo.fromJson.bind(fm.liveswitch.MediaStreamInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.toJson=function(mediaStreamInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaStreamInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.toJsonArray=function(mediaStreamInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaStreamInfos,fm.liveswitch.MediaStreamInfo.toJson.bind(fm.liveswitch.MediaStreamInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("sendMuted"==_var0){this.setSendMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("sendDisabled"==_var0){this.setSendDisabled(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("receiveDisabled"==_var0){this.setReceiveDisabled(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("sendFormats"==_var0){this.setSendFormats(fm.liveswitch.FormatInfo.fromJsonArray(valueJson));break}if("receiveFormats"==_var0){this.setReceiveFormats(fm.liveswitch.FormatInfo.fromJsonArray(valueJson));break}if("sendEncodings"==_var0){this.setSendEncodings(fm.liveswitch.EncodingInfo.fromJsonArray(valueJson));break}if("receiveEncodings"==_var0){this.setReceiveEncodings(fm.liveswitch.EncodingInfo.fromJsonArray(valueJson));break}if("localBandwidth"==_var0){this.setLocalBandwidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("remoteBandwidth"==_var0){this.setRemoteBandwidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("maxFrameWidth"==_var0){this.setMaxFrameWidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("maxFrameHeight"==_var0){this.setMaxFrameHeight(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("senders"==_var0){this.setSenders(fm.liveswitch.MediaSenderInfo.fromJsonArray(valueJson));break}if("receivers"==_var0){this.setReceivers(fm.liveswitch.MediaReceiverInfo.fromJsonArray(valueJson));break}if("controlTransportId"==_var0){this.setControlTransportId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}}while(0)},MediaStreamInfo.prototype.findMatchingReceiver=function(receivers,idValue){if(2==arguments.length){if(!fm.liveswitch.Global.equals(receivers,null))for(var _i=0,receivers_1=receivers;_i<receivers_1.length;_i++){var stats=receivers_1[_i];if(fm.liveswitch.Global.equals(stats.getId(),idValue))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.findMatchingSender=function(senders,idValue){if(2==arguments.length){if(!fm.liveswitch.Global.equals(senders,null))for(var _i=0,senders_3=senders;_i<senders_3.length;_i++){var stats=senders_3[_i];if(fm.liveswitch.Global.equals(stats.getId(),idValue))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getControlTransportId=function(){if(0==arguments.length)return this._controlTransportId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getDirection=function(){if(0==arguments.length){var directionString="inactive";return fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.setSendDisabled(directionString,this.getSendDisabled()),this.getReceiveDisabled())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getLocalBandwidth=function(){if(0==arguments.length)return this.__localBandwidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getMaxFrameHeight=function(){if(0==arguments.length)return this._maxFrameHeight;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getMaxFrameWidth=function(){if(0==arguments.length)return this._maxFrameWidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getReceiveDisabled=function(){if(0==arguments.length)return this._receiveDisabled;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getReceiveEncodings=function(){if(0==arguments.length)return this._receiveEncodings;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getReceiveFormats=function(){if(0==arguments.length)return this._receiveFormats;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getReceiver=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getReceivers());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getReceivers=function(){if(0==arguments.length)return this._receivers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getRemoteBandwidth=function(){if(0==arguments.length)return this.__remoteBandwidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getSendDisabled=function(){if(0==arguments.length)return this._sendDisabled;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getSendEncodings=function(){if(0==arguments.length)return this._sendEncodings;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getSender=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getSenders());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getSenders=function(){if(0==arguments.length)return this._senders;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getSendFormats=function(){if(0==arguments.length)return this._sendFormats;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.getSendMuted=function(){if(0==arguments.length)return this._sendMuted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo.prototype.populateInfos=function(stats,lastStats){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num=void 0,flag=fm.liveswitch.Global.equals(lastStats,null),transport=stats.getTransport();if(!fm.liveswitch.Global.equals(transport,null)){_super.prototype.setTransportId.call(this,transport.getId());var rtcpTransport=transport.getRtcpTransport();fm.liveswitch.Global.equals(rtcpTransport,null)||fm.liveswitch.Global.equals(rtcpTransport,transport)?this.setControlTransportId(_super.prototype.getTransportId.call(this)):this.setControlTransportId(rtcpTransport.getId())}var statsArray=flag?stats.getSenders():fm.liveswitch.Info.processArray(stats.getSenders(),lastStats.getSenders());if(!fm.liveswitch.Global.equals(statsArray,null))for(this.setSenders(new Array(statsArray.length)),num=0;num<statsArray.length;num++){var stats4=stats.getSenders()[num],stats5=flag?null:this.findMatchingSender(lastStats.getSenders(),stats4.getId());this.getSenders()[num]=new fm.liveswitch.MediaSenderInfo(stats4,stats5)}var statsArray2=flag?stats.getReceivers():fm.liveswitch.Info.processArray(stats.getReceivers(),lastStats.getReceivers());if(!fm.liveswitch.Global.equals(statsArray2,null))for(this.setReceivers(new Array(statsArray2.length)),num=0;num<statsArray2.length;num++){var stats6=stats.getReceivers()[num],stats7=flag?null:this.findMatchingReceiver(lastStats.getReceivers(),stats6.getId());this.getReceivers()[num]=new fm.liveswitch.MediaReceiverInfo(stats6,stats7)}},MediaStreamInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),this.getSendMuted()&&(jsonObject.sendMuted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getSendMuted())),this.getSendDisabled()&&(jsonObject.sendDisabled=fm.liveswitch.JsonSerializer.serializeBoolean(this.getSendDisabled())),this.getReceiveDisabled()&&(jsonObject.receiveDisabled=fm.liveswitch.JsonSerializer.serializeBoolean(this.getReceiveDisabled())),fm.liveswitch.Global.equals(this.getSendFormats(),null)||(jsonObject.sendFormats=fm.liveswitch.FormatInfo.toJsonArray(this.getSendFormats())),fm.liveswitch.Global.equals(this.getReceiveFormats(),null)||(jsonObject.receiveFormats=fm.liveswitch.FormatInfo.toJsonArray(this.getReceiveFormats())),fm.liveswitch.Global.equals(this.getSendEncodings(),null)||(jsonObject.sendEncodings=fm.liveswitch.EncodingInfo.toJsonArray(this.getSendEncodings())),fm.liveswitch.Global.equals(this.getReceiveEncodings(),null)||(jsonObject.receiveEncodings=fm.liveswitch.EncodingInfo.toJsonArray(this.getReceiveEncodings())),fm.liveswitch.Global.equals(this.getLocalBandwidth(),-1)||(jsonObject.localBandwidth=fm.liveswitch.JsonSerializer.serializeInteger(this.getLocalBandwidth())),fm.liveswitch.Global.equals(this.getRemoteBandwidth(),-1)||(jsonObject.remoteBandwidth=fm.liveswitch.JsonSerializer.serializeInteger(this.getRemoteBandwidth())),fm.liveswitch.Global.equals(this.getMaxFrameWidth(),0)||(jsonObject.maxFrameWidth=fm.liveswitch.JsonSerializer.serializeInteger(this.getMaxFrameWidth())),fm.liveswitch.Global.equals(this.getMaxFrameHeight(),0)||(jsonObject.maxFrameHeight=fm.liveswitch.JsonSerializer.serializeInteger(this.getMaxFrameHeight())),fm.liveswitch.Global.equals(this.getSenders(),null)||(jsonObject.senders=fm.liveswitch.MediaSenderInfo.toJsonArray(this.getSenders())),fm.liveswitch.Global.equals(this.getReceivers(),null)||(jsonObject.receivers=fm.liveswitch.MediaReceiverInfo.toJsonArray(this.getReceivers())),fm.liveswitch.Global.equals(this.getControlTransportId(),null)||(jsonObject.controlTransportId=fm.liveswitch.JsonSerializer.serializeString(this.getControlTransportId()))},MediaStreamInfo.prototype.setControlTransportId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._controlTransportId=value},MediaStreamInfo.prototype.setDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setSendDisabled(fm.liveswitch.StreamDirectionHelper.isSendDisabled(value)),this.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(value))},MediaStreamInfo.prototype.setLocalBandwidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__localBandwidth=fm.liveswitch.Global.toInt(value)},MediaStreamInfo.prototype.setMaxFrameHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxFrameHeight=fm.liveswitch.Global.toInt(value)},MediaStreamInfo.prototype.setMaxFrameWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxFrameWidth=fm.liveswitch.Global.toInt(value)},MediaStreamInfo.prototype.setReceiveDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._receiveDisabled=value},MediaStreamInfo.prototype.setReceiveEncodings=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._receiveEncodings=value},MediaStreamInfo.prototype.setReceiveFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._receiveFormats=value},MediaStreamInfo.prototype.setReceivers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._receivers=value},MediaStreamInfo.prototype.setRemoteBandwidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__remoteBandwidth=fm.liveswitch.Global.toInt(value)},MediaStreamInfo.prototype.setSendDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sendDisabled=value},MediaStreamInfo.prototype.setSendEncodings=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sendEncodings=value},MediaStreamInfo.prototype.setSenders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._senders=value},MediaStreamInfo.prototype.setSendFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sendFormats=value},MediaStreamInfo.prototype.setSendMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sendMuted=value},MediaStreamInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaStreamInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamInfo}(fm.liveswitch.StreamInfo);liveswitch.MediaStreamInfo=MediaStreamInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaStreamStats=function(_super){function MediaStreamStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaStreamStatsInit(),_this}return __extends(MediaStreamStats,_super),MediaStreamStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaStreamStats],"+_super.prototype.getTypeString.call(this)},MediaStreamStats.prototype.fmliveswitchMediaStreamStatsInit=function(){this._maxReceiveBitrate=0,this._maxSendBitrate=0},MediaStreamStats.fromJson=function(mediaStreamJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaStreamJson,(function(){return new fm.liveswitch.MediaStreamStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.fromJsonArray=function(mediaStreamsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaStreamsJson,fm.liveswitch.MediaStreamStats.fromJson.bind(fm.liveswitch.MediaStreamStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.toJson=function(mediaStream){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaStream,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.toJsonArray=function(mediaStreams){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaStreams,fm.liveswitch.MediaStreamStats.toJson.bind(fm.liveswitch.MediaStreamStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"direction")?this.setDirection(fm.liveswitch.StreamDirectionHelper.directionFromString(fm.liveswitch.JsonSerializer.deserializeString(valueJson))):fm.liveswitch.Global.equals(str,"maxSendBitrate")?this.setMaxSendBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"maxReceiveBitrate")?this.setMaxReceiveBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"senders")?this.setSenders(fm.liveswitch.MediaSenderStats.fromJsonArray(valueJson)):fm.liveswitch.Global.equals(str,"receivers")&&this.setReceivers(fm.liveswitch.MediaReceiverStats.fromJsonArray(valueJson)))},MediaStreamStats.prototype.getDirection=function(){if(0==arguments.length)return this._direction;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.getMaxReceiveBitrate=function(){if(0==arguments.length)return this._maxReceiveBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.getMaxSendBitrate=function(){if(0==arguments.length)return this._maxSendBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.getReceiver=function(){if(0==arguments.length){var receivers=this.getReceivers();return fm.liveswitch.Global.equals(receivers,null)||fm.liveswitch.Global.equals(receivers.length,0)?null:receivers[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.getReceivers=function(){if(0==arguments.length)return this._receivers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.getSender=function(){if(0==arguments.length){var senders=this.getSenders();return fm.liveswitch.Global.equals(senders,null)||fm.liveswitch.Global.equals(senders.length,0)?null:senders[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.getSenders=function(){if(0==arguments.length)return this._senders;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.direction=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.StreamDirectionHelper.directionToString(this.getDirection())),jsonObject.maxSendBitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getMaxSendBitrate()),jsonObject.maxReceiveBitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getMaxReceiveBitrate()),fm.liveswitch.Global.equals(this.getSenders(),null)||(jsonObject.senders=fm.liveswitch.MediaSenderStats.toJsonArray(this.getSenders())),fm.liveswitch.Global.equals(this.getReceivers(),null)||(jsonObject.receivers=fm.liveswitch.MediaReceiverStats.toJsonArray(this.getReceivers()))},MediaStreamStats.prototype.setDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._direction=value},MediaStreamStats.prototype.setMaxReceiveBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxReceiveBitrate=fm.liveswitch.Global.toInt(value)},MediaStreamStats.prototype.setMaxSendBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxSendBitrate=fm.liveswitch.Global.toInt(value)},MediaStreamStats.prototype.setReceivers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._receivers=value},MediaStreamStats.prototype.setSenders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._senders=value},MediaStreamStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaStreamStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamStats}(fm.liveswitch.StreamStats);liveswitch.MediaStreamStats=MediaStreamStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaTrackInfo=function(_super){function MediaTrackInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaTrackInfoInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchMediaTrackInfoInit(),_super.prototype.setId.call(_this,stats.getId()),_this.setDetached(fm.liveswitch.Global.equals(lastStats,null)?stats.getDetached():fm.liveswitch.Info.processBoolean(stats.getDetached(),lastStats.getDetached())),_this.setMuted(fm.liveswitch.Global.equals(lastStats,null)?stats.getMuted():fm.liveswitch.Info.processBoolean(stats.getMuted(),lastStats.getMuted())),_this.setStopped(fm.liveswitch.Global.equals(lastStats,null)?stats.getStopped():fm.liveswitch.Info.processBoolean(stats.getStopped(),lastStats.getStopped())),_this.setReport(new fm.liveswitch.MediaTrackReport(stats,lastStats))}return _this}return __extends(MediaTrackInfo,_super),MediaTrackInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaTrackInfo],"+_super.prototype.getTypeString.call(this)},MediaTrackInfo.prototype.fmliveswitchMediaTrackInfoInit=function(){this._detached=!1,this._muted=!1,this._stopped=!1},MediaTrackInfo.fromJson=function(mediaTrackInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaTrackInfoJson,(function(){return new fm.liveswitch.MediaTrackInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.fromJsonArray=function(mediaTrackInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaTrackInfosJson,fm.liveswitch.MediaTrackInfo.fromJson.bind(fm.liveswitch.MediaTrackInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.toJson=function(mediaTrackInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaTrackInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.toJsonArray=function(mediaTrackInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaTrackInfos,fm.liveswitch.MediaTrackInfo.toJson.bind(fm.liveswitch.MediaTrackInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"stopped")?this.setMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"detached")?this.setDetached(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"muted")?this.setMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"report")&&this.setReport(fm.liveswitch.MediaTrackReport.fromJson(valueJson)))},MediaTrackInfo.prototype.getDetached=function(){if(0==arguments.length)return this._detached;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.prototype.getMuted=function(){if(0==arguments.length)return this._muted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.prototype.getStopped=function(){if(0==arguments.length)return this._stopped;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getStopped()&&(jsonObject.stopped=fm.liveswitch.JsonSerializer.serializeBoolean(this.getStopped())),null!=this.getDetached()&&(jsonObject.detached=fm.liveswitch.JsonSerializer.serializeBoolean(this.getDetached())),null!=this.getMuted()&&(jsonObject.muted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getMuted())),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=this.getReport().toJson())},MediaTrackInfo.prototype.setDetached=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._detached=value},MediaTrackInfo.prototype.setMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._muted=value},MediaTrackInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},MediaTrackInfo.prototype.setStopped=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._stopped=value},MediaTrackInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaTrackInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackInfo}(fm.liveswitch.Info);liveswitch.MediaTrackInfo=MediaTrackInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaTrackStats=function(_super){function MediaTrackStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMediaTrackStatsInit(),_this}return __extends(MediaTrackStats,_super),MediaTrackStats.prototype.getTypeString=function(){return"[fm.liveswitch.MediaTrackStats],"+_super.prototype.getTypeString.call(this)},MediaTrackStats.prototype.fmliveswitchMediaTrackStatsInit=function(){this._bitrate=0,this._detached=!1,this._frameHeight=0,this._frameRate=0,this._framesCorrupted=0,this._framesDecoded=0,this._framesDropped=0,this._framesEncoded=0,this._framesReceived=0,this._framesSent=0,this._frameWidth=0,this._maxBitrate=0,this._minBitrate=0,this._muted=!1,this._stopped=!1},MediaTrackStats.fromJson=function(mediaTrackJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaTrackJson,(function(){return new fm.liveswitch.MediaTrackStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.fromJsonArray=function(mediaTracksJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaTracksJson,fm.liveswitch.MediaTrackStats.fromJson.bind(fm.liveswitch.MediaTrackStats));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.toJson=function(mediaTrack){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaTrack,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.toJsonArray=function(mediaTracks){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaTracks,fm.liveswitch.MediaTrackStats.toJson.bind(fm.liveswitch.MediaTrackStats));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("stopped"==_var0){this.setStopped(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("detached"==_var0){this.setDetached(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("muted"==_var0){this.setMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("ssrcs"==_var0){this.setSynchronizationSources(fm.liveswitch.JsonSerializer.deserializeLongArray(valueJson));break}if("minBitrate"==_var0){this.setMinBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("maxBitrate"==_var0){this.setMaxBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("bitrate"==_var0){this.setBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("frameWidth"==_var0){this.setFrameWidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("frameHeight"==_var0){this.setFrameHeight(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("frameRate"==_var0){this.setFrameRate(fm.liveswitch.JsonSerializer.deserializeDouble(valueJson));break}if("framesSent"==_var0){this.setFramesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesReceived"==_var0){this.setFramesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesDecoded"==_var0){this.setFramesDecoded(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesDropped"==_var0){this.setFramesDropped(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesCorrupted"==_var0){this.setFramesCorrupted(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesEncoded"==_var0){this.setFramesEncoded(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},MediaTrackStats.prototype.getBitrate=function(){if(0==arguments.length)return this._bitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getDetached=function(){if(0==arguments.length)return this._detached;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFrameHeight=function(){if(0==arguments.length)return this._frameHeight;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFrameRate=function(){if(0==arguments.length)return this._frameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFramesCorrupted=function(){if(0==arguments.length)return this._framesCorrupted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFramesDecoded=function(){if(0==arguments.length)return this._framesDecoded;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFramesDropped=function(){if(0==arguments.length)return this._framesDropped;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFramesEncoded=function(){if(0==arguments.length)return this._framesEncoded;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFramesReceived=function(){if(0==arguments.length)return this._framesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFramesSent=function(){if(0==arguments.length)return this._framesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getFrameWidth=function(){if(0==arguments.length)return this._frameWidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getMaxBitrate=function(){if(0==arguments.length)return this._maxBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getMinBitrate=function(){if(0==arguments.length)return this._minBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getMuted=function(){if(0==arguments.length)return this._muted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getRepairedRtpStreamId=function(){if(0==arguments.length){var repairedRtpStreamIds=this.getRepairedRtpStreamIds();return fm.liveswitch.Global.equals(repairedRtpStreamIds,null)||fm.liveswitch.Global.equals(repairedRtpStreamIds.length,0)?null:repairedRtpStreamIds[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getRepairedRtpStreamIds=function(){if(0==arguments.length)return this._repairedRtpStreamIds;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getRtpStreamId=function(){if(0==arguments.length){var rtpStreamIds=this.getRtpStreamIds();return fm.liveswitch.Global.equals(rtpStreamIds,null)||fm.liveswitch.Global.equals(rtpStreamIds.length,0)?null:rtpStreamIds[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getRtpStreamIds=function(){if(0==arguments.length)return this._rtpStreamIds;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getStopped=function(){if(0==arguments.length)return this._stopped;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getSynchronizationSource=function(){if(0==arguments.length){var synchronizationSources=this.getSynchronizationSources();return fm.liveswitch.Global.equals(synchronizationSources,null)||fm.liveswitch.Global.equals(synchronizationSources.length,0)?0:synchronizationSources[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.getSynchronizationSources=function(){if(0==arguments.length)return this._synchronizationSources;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.isEquivalent=function(instance){if(1==arguments.length)return!fm.liveswitch.Global.equals(instance,null)&&(fm.liveswitch.Global.equals(instance.getStopped(),this.getStopped())&&fm.liveswitch.Global.equals(instance.getDetached(),this.getDetached())&&fm.liveswitch.Global.equals(instance.getMuted(),this.getMuted())&&fm.liveswitch.Global.equals(instance.getSynchronizationSources(),this.getSynchronizationSources())&&fm.liveswitch.Global.equals(instance.getMinBitrate(),this.getMinBitrate())&&fm.liveswitch.Global.equals(instance.getMaxBitrate(),this.getMaxBitrate())&&fm.liveswitch.Global.equals(instance.getBitrate(),this.getBitrate())&&fm.liveswitch.Global.equals(instance.getFrameWidth(),this.getFrameWidth())&&fm.liveswitch.Global.equals(instance.getFrameHeight(),this.getFrameHeight())&&fm.liveswitch.Global.equals(instance.getFrameRate(),this.getFrameRate())&&fm.liveswitch.Global.equals(instance.getFramesSent(),this.getFramesSent())&&fm.liveswitch.Global.equals(instance.getFramesReceived(),this.getFramesReceived())&&fm.liveswitch.Global.equals(instance.getFramesDecoded(),this.getFramesDecoded())&&fm.liveswitch.Global.equals(instance.getFramesDropped(),this.getFramesDropped())&&fm.liveswitch.Global.equals(instance.getFramesCorrupted(),this.getFramesCorrupted())&&fm.liveswitch.Global.equals(instance.getFramesEncoded(),this.getFramesEncoded()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.stopped=fm.liveswitch.JsonSerializer.serializeBoolean(this.getStopped()),jsonObject.detached=fm.liveswitch.JsonSerializer.serializeBoolean(this.getDetached()),jsonObject.muted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getMuted()),jsonObject.ssrcs=fm.liveswitch.JsonSerializer.serializeLongArray(this.getSynchronizationSources()),jsonObject.minBitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getMinBitrate()),jsonObject.maxBitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getMaxBitrate()),jsonObject.bitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getBitrate()),jsonObject.frameWidth=fm.liveswitch.JsonSerializer.serializeInteger(this.getFrameWidth()),jsonObject.frameHeight=fm.liveswitch.JsonSerializer.serializeInteger(this.getFrameHeight()),jsonObject.frameRate=fm.liveswitch.JsonSerializer.serializeDouble(this.getFrameRate()),jsonObject.framesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesSent()),jsonObject.framesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesReceived()),jsonObject.framesDecoded=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesDecoded()),jsonObject.framesDropped=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesDropped()),jsonObject.framesCorrupted=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesCorrupted()),jsonObject.framesEncoded=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesEncoded())},MediaTrackStats.prototype.setBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bitrate=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setDetached=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._detached=value},MediaTrackStats.prototype.setFrameHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._frameHeight=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frameRate=value},MediaTrackStats.prototype.setFramesCorrupted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._framesCorrupted=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setFramesDecoded=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._framesDecoded=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setFramesDropped=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._framesDropped=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setFramesEncoded=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._framesEncoded=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setFramesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._framesReceived=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setFramesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._framesSent=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setFrameWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._frameWidth=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setMaxBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxBitrate=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setMinBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._minBitrate=fm.liveswitch.Global.toInt(value)},MediaTrackStats.prototype.setMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._muted=value},MediaTrackStats.prototype.setRepairedRtpStreamIds=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._repairedRtpStreamIds=value},MediaTrackStats.prototype.setRtpStreamIds=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtpStreamIds=value},MediaTrackStats.prototype.setStopped=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._stopped=value},MediaTrackStats.prototype.setSynchronizationSources=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._synchronizationSources=value},MediaTrackStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaTrackStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackStats}(fm.liveswitch.BaseStats);liveswitch.MediaTrackStats=MediaTrackStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSourceInfo=function(_super){function MediaSourceInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaSourceInfoInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchMediaSourceInfoInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_super.prototype.setId.call(_this,stats.getId()),_this.setTag(flag?stats.getTag():fm.liveswitch.Info.processString(stats.getTag(),flag?null:lastStats.getTag())),_this.setLabel(flag?stats.getLabel():fm.liveswitch.Info.processString(stats.getLabel(),flag?null:lastStats.getLabel())),_this.setMuted(flag?stats.getMuted():fm.liveswitch.Info.processBoolean(stats.getMuted(),lastStats.getMuted())),_this.setInputId(flag?stats.getInputId():fm.liveswitch.Info.processString(stats.getInputId(),lastStats.getInputId())),_this.setInputName(flag?stats.getInputName():fm.liveswitch.Info.processString(stats.getInputName(),lastStats.getInputName())),fm.liveswitch.Global.equals(stats.getOutputFormat(),null)||!flag&&stats.getOutputFormat().isEquivalent(lastStats.getOutputFormat())||_this.setOutputFormat(new fm.liveswitch.FormatInfo(stats.getOutputFormat().getName(),stats.getOutputFormat().getClockRate(),stats.getOutputFormat().getChannelCount()))}return _this}return __extends(MediaSourceInfo,_super),MediaSourceInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSourceInfo],"+_super.prototype.getTypeString.call(this)},MediaSourceInfo.prototype.fmliveswitchMediaSourceInfoInit=function(){this._muted=!1},MediaSourceInfo.fromJson=function(mediaSourceInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaSourceInfoJson,(function(){return new fm.liveswitch.MediaSourceInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.fromJsonArray=function(mediaSourceInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaSourceInfosJson,fm.liveswitch.MediaSourceInfo.fromJson.bind(fm.liveswitch.MediaSourceInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.toJson=function(mediaSourceInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaSourceInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.toJsonArray=function(mediaSourceInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaSourceInfos,fm.liveswitch.MediaSourceInfo.toJson.bind(fm.liveswitch.MediaSourceInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"tag")?this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"label")?this.setLabel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"muted")?this.setMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"inputId")?this.setInputId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"inputName")?this.setInputName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"outputFormat")&&this.setOutputFormat(fm.liveswitch.FormatInfo.fromJson(valueJson)))},MediaSourceInfo.prototype.getInputId=function(){if(0==arguments.length)return this._inputId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.prototype.getInputName=function(){if(0==arguments.length)return this._inputName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.prototype.getLabel=function(){if(0==arguments.length)return this._label;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.prototype.getMuted=function(){if(0==arguments.length)return this._muted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.prototype.getOutputFormat=function(){if(0==arguments.length)return this._outputFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getTag())||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getLabel())||(jsonObject.label=fm.liveswitch.JsonSerializer.serializeString(this.getLabel())),null!=this.getMuted()&&(jsonObject.muted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getMuted())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getInputId())||(jsonObject.inputId=fm.liveswitch.JsonSerializer.serializeString(this.getInputId())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getInputName())||(jsonObject.inputName=fm.liveswitch.JsonSerializer.serializeString(this.getInputName())),fm.liveswitch.Global.equals(this.getOutputFormat(),null)||(jsonObject.outputFormat=fm.liveswitch.FormatInfo.toJson(this.getOutputFormat()))},MediaSourceInfo.prototype.setInputId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._inputId=value},MediaSourceInfo.prototype.setInputName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._inputName=value},MediaSourceInfo.prototype.setLabel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._label=value},MediaSourceInfo.prototype.setMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._muted=value},MediaSourceInfo.prototype.setOutputFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputFormat=value},MediaSourceInfo.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},MediaSourceInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaSourceInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceInfo}(fm.liveswitch.Info);liveswitch.MediaSourceInfo=MediaSourceInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Point=function(){function Point(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchPointInit(),this.setX(0),this.setY(0);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var x=__arguments[0],y=__arguments[1];this.fmliveswitchPointInit(),this.setX(x),this.setY(y)}}return Point.prototype.getTypeString=function(){return"[fm.liveswitch.Point]"},Point.prototype.fmliveswitchPointInit=function(){this.__x=0,this.__y=0},Point.fromJson=function(pointJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(pointJson,(function(){return new fm.liveswitch.Point}),(function(point,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"x")?point.setX(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"y")&&point.setY(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.getEmpty=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(fm.liveswitch.Point.fm_liveswitch_Point___empty,null)&&(fm.liveswitch.Point.fm_liveswitch_Point___empty=new fm.liveswitch.Point),fm.liveswitch.Point.fm_liveswitch_Point___empty;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.isEquivalent=function(point1,point2){if(2==arguments.length)return!!fm.liveswitch.Global.equals(point1,point2)||!fm.liveswitch.Global.equals(point1,null)&&!fm.liveswitch.Global.equals(point2,null)&&fm.liveswitch.Point.isEquivalentNoCheck(point1,point2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.isEquivalentNoCheck=function(point1,point2){if(2==arguments.length)return fm.liveswitch.Global.equals(point1.getX(),point2.getX())&&fm.liveswitch.Global.equals(point1.getY(),point2.getY());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.toJson=function(point){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(point,(function(obj,jsonObj){fm.liveswitch.Global.equals(point.getX(),-1)||(jsonObj.x=fm.liveswitch.JsonSerializer.serializeInteger(point.getX())),fm.liveswitch.Global.equals(point.getY(),-1)||(jsonObj.y=fm.liveswitch.JsonSerializer.serializeInteger(point.getY()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.prototype.getX=function(){if(0==arguments.length)return this.__x;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.prototype.getY=function(){if(0==arguments.length)return this.__y;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.prototype.isEquivalent=function(point){if(1==arguments.length)return fm.liveswitch.Point.isEquivalent(this,point);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.prototype.setX=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__x=fm.liveswitch.Global.toInt(value)},Point.prototype.setY=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__y=fm.liveswitch.Global.toInt(value)},Point.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.Point.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.format("{0},{1}",fm.liveswitch.NumberExtensions.toString(this.getX()),fm.liveswitch.NumberExtensions.toString(this.getY()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Point}();liveswitch.Point=Point}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Rectangle=function(){function Rectangle(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.setOrigin(fm.liveswitch.Point.getEmpty()),this.setSize(fm.liveswitch.Size.getEmpty());else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var origin_3=__arguments[0],size=__arguments[1];this.setOrigin(origin_3),this.setSize(size)}}return Rectangle.prototype.getTypeString=function(){return"[fm.liveswitch.Rectangle]"},Rectangle.fromJson=function(rectangleJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(rectangleJson,(function(){return new fm.liveswitch.Rectangle}),(function(rectangle,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"origin")?rectangle.setOrigin(fm.liveswitch.Point.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"size")&&rectangle.setSize(fm.liveswitch.Size.fromJson(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.getEmpty=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(fm.liveswitch.Rectangle.fm_liveswitch_Rectangle___empty,null)&&(fm.liveswitch.Rectangle.fm_liveswitch_Rectangle___empty=new fm.liveswitch.Rectangle),fm.liveswitch.Rectangle.fm_liveswitch_Rectangle___empty;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.isEquivalent=function(rectangle1,rectangle2){if(2==arguments.length)return!!fm.liveswitch.Global.equals(rectangle1,rectangle2)||!fm.liveswitch.Global.equals(rectangle1,null)&&!fm.liveswitch.Global.equals(rectangle2,null)&&fm.liveswitch.Rectangle.isEquivalentNoCheck(rectangle1,rectangle2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.isEquivalentNoCheck=function(rectangle1,rectangle2){if(2==arguments.length)return fm.liveswitch.Point.isEquivalent(rectangle1.getOrigin(),rectangle2.getOrigin())&&fm.liveswitch.Size.isEquivalent(rectangle1.getSize(),rectangle2.getSize());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.toJson=function(rectangle){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(rectangle,(function(obj,jsonObj){fm.liveswitch.Global.equals(rectangle.getOrigin(),null)||(jsonObj.origin=fm.liveswitch.Point.toJson(rectangle.getOrigin())),fm.liveswitch.Global.equals(rectangle.getSize(),null)||(jsonObj.size=fm.liveswitch.Size.toJson(rectangle.getSize()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.getHeight=function(){if(0==arguments.length)return this.getSize().getHeight();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.getOrigin=function(){if(0==arguments.length)return this.__origin;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.getSize=function(){if(0==arguments.length)return this.__size;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.getWidth=function(){if(0==arguments.length)return this.getSize().getWidth();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.getX=function(){if(0==arguments.length)return this.getOrigin().getX();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.getY=function(){if(0==arguments.length)return this.getOrigin().getY();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.isEquivalent=function(rectangle){if(1==arguments.length)return fm.liveswitch.Rectangle.isEquivalent(this,rectangle);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.setOrigin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Origin cannot be null.");this.__origin=value},Rectangle.prototype.setSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Size cannot be null.");this.__size=value},Rectangle.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.Rectangle.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle.prototype.toString=function(){if(0==arguments.length){var origin_4=this.getOrigin(),size=this.getSize();return fm.liveswitch.StringExtensions.format("{0}/{1}",origin_4.toString(),size.toString())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Rectangle}();liveswitch.Rectangle=Rectangle}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var AddressType=function(){function AddressType(){}return AddressType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.AddressType]"},AddressType.getAddressTypeForAddress=function(ipAddress){if(1==arguments.length){var _var0=fm.liveswitch.LocalNetwork.getAddressType(ipAddress);if(_var0==fm.liveswitch.AddressType.IPv4)return fm.liveswitch.sdp.AddressType.getIP4();if(_var0==fm.liveswitch.AddressType.IPv6)return fm.liveswitch.sdp.AddressType.getIP6();throw new fm.liveswitch.Exception("Only IPv4 and IPv6 addresses are supported by SDP.")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AddressType.getIP4=function(){if(0==arguments.length)return"IP4";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AddressType.getIP6=function(){if(0==arguments.length)return"IP6";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AddressType}();sdp.AddressType=AddressType}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var AttributeCategoryWrapper=function(){function AttributeCategoryWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_26=__arguments[0];this._value=value_26}return AttributeCategoryWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.AttributeCategoryWrapper]"},AttributeCategoryWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.sdp.AttributeCategory.Normal?"Normal":this._value==fm.liveswitch.sdp.AttributeCategory.Caution?"Caution":this._value==fm.liveswitch.sdp.AttributeCategory.Identical?"Identical":this._value==fm.liveswitch.sdp.AttributeCategory.Sum?"Sum":this._value==fm.liveswitch.sdp.AttributeCategory.Transport?"Transport":this._value==fm.liveswitch.sdp.AttributeCategory.Inherit?"Inherit":this._value==fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT?"IdenticalPerPT":this._value==fm.liveswitch.sdp.AttributeCategory.Special?"Special":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeCategoryWrapper}();sdp.AttributeCategoryWrapper=AttributeCategoryWrapper}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var AttributeCollection=function(){function AttributeCollection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__attributes={}}return AttributeCollection.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.AttributeCollection]"},AttributeCollection.prototype.addAttribute=function(attribute){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var key=new fm.liveswitch.sdp.AttributeTypeWrapper(attribute.getAttributeType()).toString(),list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__attributes,key,_var0);list=_var0.getValue(),_var1?fm.liveswitch.ArrayExtensions.add(list,attribute):(list=new Array,fm.liveswitch.ArrayExtensions.add(list,attribute),fm.liveswitch.HashExtensions.add(this.__attributes,key,list))},AttributeCollection.prototype.remove=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.sdp.Attribute]"))){var attribute=arguments[0],flag=!1,list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__attributes,new fm.liveswitch.sdp.AttributeTypeWrapper(attribute.getAttributeType()).toString(),_var0);if(list=_var0.getValue(),_var1){if(fm.liveswitch.Global.equals(list,null))return flag;flag=fm.liveswitch.ArrayExtensions.remove(list,attribute),fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(list),0)&&fm.liveswitch.HashExtensions.remove(this.__attributes,new fm.liveswitch.sdp.AttributeTypeWrapper(attribute.getAttributeType()).toString())}return flag}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var attributeType=arguments[0];return fm.liveswitch.HashExtensions.remove(this.__attributes,new fm.liveswitch.sdp.AttributeTypeWrapper(attributeType).toString())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeCollection.prototype.replaceAttribute=function(attribute){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var attributeType=attribute.getAttributeType();fm.liveswitch.HashExtensions.remove(this.__attributes,new fm.liveswitch.sdp.AttributeTypeWrapper(attributeType).toString());var list=new Array;fm.liveswitch.ArrayExtensions.add(list,attribute),fm.liveswitch.HashExtensions.add(this.__attributes,new fm.liveswitch.sdp.AttributeTypeWrapper(attributeType).toString(),list)},AttributeCollection.prototype.toArray=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getValues(this.__attributes);_i<_a.length;_i++){var list2=_a[_i];fm.liveswitch.ArrayExtensions.addRange(list,list2)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeCollection.prototype.tryGetAttribute=function(type,attribute){if(2==arguments.length){var attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.tryGetAttributes(type,_var0);return attributes=_var0.getValue(),_var1?attributes.length>0?(attribute.setValue(attributes[0]),!0):(attribute.setValue(null),!1):(attribute.setValue(null),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeCollection.prototype.tryGetAttributes=function(type,attributes){if(2==arguments.length){var list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__attributes,new fm.liveswitch.sdp.AttributeTypeWrapper(type).toString(),_var0);if(list=_var0.getValue(),_var1){var count=fm.liveswitch.ArrayExtensions.getCount(list);attributes.setValue(new Array(count));for(var i=0;i<count;i++)attributes.getValue()[i]=list[i];return!0}return attributes.setValue(new Array(0)),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeCollection}();sdp.AttributeCollection=AttributeCollection}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var AttributeCreationArgs=function(){function AttributeCreationArgs(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_27=__arguments[0];fm.liveswitch.Global.equals(value_27,null)||(value_27=fm.liveswitch.StringExtensions.trim(value_27)),this.setValue(value_27)}return AttributeCreationArgs.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.AttributeCreationArgs]"},AttributeCreationArgs.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeCreationArgs.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},AttributeCreationArgs}();sdp.AttributeCreationArgs=AttributeCreationArgs}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var AttributeRegistration=function(){function AttributeRegistration(name,sessionLevel,mediaLevel,creationDelegate){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var name_14=__arguments[0],sessionLevel_1=__arguments[1],mediaLevel_1=__arguments[2],creationDelegate_1=__arguments[3];this.fmliveswitchsdpAttributeRegistrationInit(),this.setName(name_14),this.setSessionLevel(sessionLevel_1),this.setMediaLevel(mediaLevel_1),this.setCreationDelegate(creationDelegate_1)}return AttributeRegistration.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.AttributeRegistration]"},AttributeRegistration.prototype.fmliveswitchsdpAttributeRegistrationInit=function(){this._mediaLevel=!1,this._sessionLevel=!1},AttributeRegistration.prototype.getCreationDelegate=function(){if(0==arguments.length)return this._creationDelegate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeRegistration.prototype.getMediaLevel=function(){if(0==arguments.length)return this._mediaLevel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeRegistration.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeRegistration.prototype.getSessionLevel=function(){if(0==arguments.length)return this._sessionLevel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeRegistration.prototype.setCreationDelegate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._creationDelegate=value},AttributeRegistration.prototype.setMediaLevel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaLevel=value},AttributeRegistration.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},AttributeRegistration.prototype.setSessionLevel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sessionLevel=value},AttributeRegistration}();sdp.AttributeRegistration=AttributeRegistration}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var AttributeTypeWrapper=function(){function AttributeTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_28=__arguments[0];this._value=value_28}return AttributeTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.AttributeTypeWrapper]"},AttributeTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.sdp.AttributeType.UnknownAttribute?"UnknownAttribute":this._value==fm.liveswitch.sdp.AttributeType.DirectionAttribute?"DirectionAttribute":this._value==fm.liveswitch.sdp.AttributeType.CategoryAttribute?"CategoryAttribute":this._value==fm.liveswitch.sdp.AttributeType.CharacterSetAttribute?"CharacterSetAttribute":this._value==fm.liveswitch.sdp.AttributeType.ConferenceTypeAttribute?"ConferenceTypeAttribute":this._value==fm.liveswitch.sdp.AttributeType.CryptoAttribute?"CryptoAttribute":this._value==fm.liveswitch.sdp.AttributeType.FormatParametersAttribute?"FormatParametersAttribute":this._value==fm.liveswitch.sdp.AttributeType.FrameRateAttribute?"FrameRateAttribute":this._value==fm.liveswitch.sdp.AttributeType.KeywordsAttribute?"KeywordsAttribute":this._value==fm.liveswitch.sdp.AttributeType.LanguageAttribute?"LanguageAttribute":this._value==fm.liveswitch.sdp.AttributeType.MaxPacketTimeAttribute?"MaxPacketTimeAttribute":this._value==fm.liveswitch.sdp.AttributeType.OrientationAttribute?"OrientationAttribute":this._value==fm.liveswitch.sdp.AttributeType.PacketTimeAttribute?"PacketTimeAttribute":this._value==fm.liveswitch.sdp.AttributeType.QualityAttribute?"QualityAttribute":this._value==fm.liveswitch.sdp.AttributeType.SdpLanguageAttribute?"SdpLanguageAttribute":this._value==fm.liveswitch.sdp.AttributeType.SetupAttribute?"SetupAttribute":this._value==fm.liveswitch.sdp.AttributeType.ToolAttribute?"ToolAttribute":this._value==fm.liveswitch.sdp.AttributeType.MediaStreamIdSemanticAttribute?"MediaStreamIdSemanticAttribute":this._value==fm.liveswitch.sdp.AttributeType.MediaStreamIdAttribute?"MediaStreamIdAttribute":this._value==fm.liveswitch.sdp.AttributeType.BundleOnlyAttribute?"BundleOnlyAttribute":this._value==fm.liveswitch.sdp.AttributeType.IceCandidateAttribute?"IceCandidateAttribute":this._value==fm.liveswitch.sdp.AttributeType.IceFingerprintAttribute?"IceFingerprintAttribute":this._value==fm.liveswitch.sdp.AttributeType.IceLiteAttribute?"IceLiteAttribute":this._value==fm.liveswitch.sdp.AttributeType.IceMismatchAttribute?"IceMismatchAttribute":this._value==fm.liveswitch.sdp.AttributeType.IceOptionsAttribute?"IceOptionsAttribute":this._value==fm.liveswitch.sdp.AttributeType.IcePasswordAttribute?"IcePasswordAttribute":this._value==fm.liveswitch.sdp.AttributeType.IceUfragAttribute?"IceUfragAttribute":this._value==fm.liveswitch.sdp.AttributeType.IceRemoteCandidatesAttribute?"IceRemoteCandidatesAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtpMapAttribute?"RtpMapAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtpSsrcAttribute?"RtpSsrcAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtpExtMapAttribute?"RtpExtMapAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtcpAttribute?"RtcpAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute?"RtcpFeedbackAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtcpMuxAttribute?"RtcpMuxAttribute":this._value==fm.liveswitch.sdp.AttributeType.SctpPortAttribute?"SctpPortAttribute":this._value==fm.liveswitch.sdp.AttributeType.SctpMapAttribute?"SctpMapAttribute":this._value==fm.liveswitch.sdp.AttributeType.SctpMaxMessageSizeAttribute?"SctpMaxMessageSizeAttribute":this._value==fm.liveswitch.sdp.AttributeType.GroupAttribute?"GroupAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtpRidAttribute?"RtpRidAttribute":this._value==fm.liveswitch.sdp.AttributeType.SimulcastAttribute?"SimulcastAttribute":this._value==fm.liveswitch.sdp.AttributeType.RtpSsrcGroupAttribute?"RtpSsrcGroupAttribute":this._value==fm.liveswitch.sdp.AttributeType.MutedAttribute?"MutedAttribute":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AttributeTypeWrapper}();sdp.AttributeTypeWrapper=AttributeTypeWrapper}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Bandwidth=function(){function Bandwidth(bandwidthType,value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var bandwidthType_1=__arguments[0],value_29=__arguments[1];this.fmliveswitchsdpBandwidthInit(),this.setBandwidthType(bandwidthType_1),this.setValue(value_29)}return Bandwidth.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Bandwidth]"},Bandwidth.prototype.fmliveswitchsdpBandwidthInit=function(){this._value=0},Bandwidth.parse=function(s){if(1==arguments.length){s=s.substring(2);var strArray=fm.liveswitch.StringExtensions.split(s,[58]),bandwidthType=strArray[0];return new fm.liveswitch.sdp.Bandwidth(bandwidthType,fm.liveswitch.ParseAssistant.parseLongValue(strArray[1]))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Bandwidth.prototype.getBandwidthType=function(){if(0==arguments.length)return this._bandwidthType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Bandwidth.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Bandwidth.prototype.setBandwidthType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bandwidthType=value},Bandwidth.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._value=fm.liveswitch.Global.toInt(value)},Bandwidth.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append("b="),builder.append(this.getBandwidthType()),builder.append(":"),builder.append(fm.liveswitch.NumberExtensions.toString(this.getValue())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Bandwidth}();sdp.Bandwidth=Bandwidth}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var BandwidthType=function(){function BandwidthType(){}return BandwidthType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.BandwidthType]"},BandwidthType.getApplicationSpecific=function(){if(0==arguments.length)return"AS";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BandwidthType.getConferenceTotal=function(){if(0==arguments.length)return"CT";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BandwidthType.getRtcpReceivers=function(){if(0==arguments.length)return"RR";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BandwidthType.getRtcpSenders=function(){if(0==arguments.length)return"RS";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BandwidthType.getTransportIndependentApplicationSpecificMaximum=function(){if(0==arguments.length)return"TIAS";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BandwidthType}();sdp.BandwidthType=BandwidthType}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var EncryptionKey=function(){function EncryptionKey(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return EncryptionKey.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.EncryptionKey]"},EncryptionKey.parse=function(s){if(1==arguments.length){var str=void 0,str2=void 0;s=s.substring(2);var index=fm.liveswitch.StringExtensions.indexOf(s,":");fm.liveswitch.Global.equals(index,-1)?(str=s,str2=null):(str=fm.liveswitch.StringExtensions.substring(s,0,index),str2=s.substring(index+1));var _var0=str;if("clear"==_var0)return new fm.liveswitch.sdp.ClearEncryptionKey(str2);if("base64"==_var0)return new fm.liveswitch.sdp.Base64EncryptionKey(str2);if("uri"==_var0)try{return new fm.liveswitch.sdp.UriEncryptionKey(new fm.liveswitch.Uri(str2))}catch(exception1){return null}else if("prompt"==_var0)return new fm.liveswitch.sdp.PromptEncryptionKey;return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncryptionKey.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.concat("k=",this.getMethodAndValue());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncryptionKey}();sdp.EncryptionKey=EncryptionKey}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Base64EncryptionKey=function(_super){function Base64EncryptionKey(encodedEncryptionKey){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var encodedEncryptionKey_1=__arguments[0];if(_this=_super.call(this)||this,fm.liveswitch.Global.equals(encodedEncryptionKey_1,null))throw new fm.liveswitch.Exception("encodedEncryptionKey cannot be null.");return _this.setEncodedEncryptionKey(encodedEncryptionKey_1),_this}return __extends(Base64EncryptionKey,_super),Base64EncryptionKey.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Base64EncryptionKey],"+_super.prototype.getTypeString.call(this)},Base64EncryptionKey.prototype.getEncodedEncryptionKey=function(){if(0==arguments.length)return this._encodedEncryptionKey;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Base64EncryptionKey.prototype.getMethodAndValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append("base64:"),builder.append(this.getEncodedEncryptionKey()),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Base64EncryptionKey.prototype.setEncodedEncryptionKey=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._encodedEncryptionKey=value},Base64EncryptionKey}(fm.liveswitch.sdp.EncryptionKey);sdp.Base64EncryptionKey=Base64EncryptionKey}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var BundleOnlyAttribute=function(_super){function BundleOnlyAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.BundleOnlyAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(BundleOnlyAttribute,_super),BundleOnlyAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.BundleOnlyAttribute],"+_super.prototype.getTypeString.call(this)},BundleOnlyAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.BundleOnlyAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundleOnlyAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundleOnlyAttribute}(fm.liveswitch.sdp.Attribute);sdp.BundleOnlyAttribute=BundleOnlyAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var CategoryAttribute=function(_super){function CategoryAttribute(category){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var category_1=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.CategoryAttribute),fm.liveswitch.Global.equals(category_1,null))throw new fm.liveswitch.Exception("category cannot be null.");return _super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this.setCategory(category_1),_this}return __extends(CategoryAttribute,_super),CategoryAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.CategoryAttribute],"+_super.prototype.getTypeString.call(this)},CategoryAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.CategoryAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CategoryAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getCategory();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CategoryAttribute.prototype.getCategory=function(){if(0==arguments.length)return this._category;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CategoryAttribute.prototype.setCategory=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._category=value},CategoryAttribute}(fm.liveswitch.sdp.Attribute);sdp.CategoryAttribute=CategoryAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var CharacterSetAttribute=function(_super){function CharacterSetAttribute(characterSet){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var characterSet_1=__arguments[0];if(_this=_super.call(this)||this,fm.liveswitch.Global.equals(characterSet_1,null))throw new fm.liveswitch.Exception("characterSet cannot be null.");return _super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.CharacterSetAttribute),_this.setCharacterSet(characterSet_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(CharacterSetAttribute,_super),CharacterSetAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.CharacterSetAttribute],"+_super.prototype.getTypeString.call(this)},CharacterSetAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.CharacterSetAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CharacterSetAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getCharacterSet();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CharacterSetAttribute.prototype.getCharacterSet=function(){if(0==arguments.length)return this._characterSet;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CharacterSetAttribute.prototype.setCharacterSet=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._characterSet=value},CharacterSetAttribute}(fm.liveswitch.sdp.Attribute);sdp.CharacterSetAttribute=CharacterSetAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var ClearEncryptionKey=function(_super){function ClearEncryptionKey(encryptionKey){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var encryptionKey_1=__arguments[0];if(_this=_super.call(this)||this,fm.liveswitch.Global.equals(encryptionKey_1,null))throw new fm.liveswitch.Exception("encryptionKey cannot be null.");return _this.setEncryptionKey(encryptionKey_1),_this}return __extends(ClearEncryptionKey,_super),ClearEncryptionKey.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ClearEncryptionKey],"+_super.prototype.getTypeString.call(this)},ClearEncryptionKey.prototype.getEncryptionKey=function(){if(0==arguments.length)return this._encryptionKey;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClearEncryptionKey.prototype.getMethodAndValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append("clear:"),builder.append(this.getEncryptionKey()),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClearEncryptionKey.prototype.setEncryptionKey=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._encryptionKey=value},ClearEncryptionKey}(fm.liveswitch.sdp.EncryptionKey);sdp.ClearEncryptionKey=ClearEncryptionKey}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var ConferenceType=function(){function ConferenceType(){}return ConferenceType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ConferenceType]"},ConferenceType.getBroadcast=function(){if(0==arguments.length)return"broadcast";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceType.getH332=function(){if(0==arguments.length)return"H332";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceType.getMeeting=function(){if(0==arguments.length)return"meeting";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceType.getModerated=function(){if(0==arguments.length)return"moderated";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceType.getTest=function(){if(0==arguments.length)return"test";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceType}();sdp.ConferenceType=ConferenceType}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var ConferenceTypeAttribute=function(_super){function ConferenceTypeAttribute(conferenceType){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var conferenceType_1=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.ConferenceTypeAttribute),fm.liveswitch.Global.equals(conferenceType_1,null))throw new fm.liveswitch.Exception("conferenceType cannot be null.");return _this.setConferenceType(conferenceType_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(ConferenceTypeAttribute,_super),ConferenceTypeAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ConferenceTypeAttribute],"+_super.prototype.getTypeString.call(this)},ConferenceTypeAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.ConferenceTypeAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceTypeAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getConferenceType();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceTypeAttribute.prototype.getConferenceType=function(){if(0==arguments.length)return this._conferenceType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConferenceTypeAttribute.prototype.setConferenceType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._conferenceType=value},ConferenceTypeAttribute}(fm.liveswitch.sdp.Attribute);sdp.ConferenceTypeAttribute=ConferenceTypeAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var ConnectionData=function(){function ConnectionData(connectionAddress){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var connectionAddress_1=__arguments[0];if(fm.liveswitch.Global.equals(connectionAddress_1,null))throw new fm.liveswitch.Exception("connectionAddress cannot be null.");this.update(connectionAddress_1)}return ConnectionData.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ConnectionData]"},ConnectionData.parse=function(s){if(1==arguments.length){s=s.substring(2);var strArray=fm.liveswitch.StringExtensions.split(s,[32]),connectionAddress=strArray[2],data=new fm.liveswitch.sdp.ConnectionData(connectionAddress);return data.setNetworkType(strArray[0]),data.setAddressType(strArray[1]),data}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionData.prototype.getAddressType=function(){if(0==arguments.length)return this._addressType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionData.prototype.getConnectionAddress=function(){if(0==arguments.length)return this._connectionAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionData.prototype.getNetworkType=function(){if(0==arguments.length)return this._networkType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionData.prototype.setAddressType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._addressType=value},ConnectionData.prototype.setConnectionAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionAddress=value},ConnectionData.prototype.setNetworkType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._networkType=value},ConnectionData.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append("c="),builder.append(this.getNetworkType()),builder.append(" "),builder.append(this.getAddressType()),builder.append(" "),builder.append(this.getConnectionAddress()),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionData.prototype.update=function(connectionAddress){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setNetworkType(fm.liveswitch.sdp.NetworkType.getInternet()),this.setAddressType(fm.liveswitch.sdp.AddressType.getAddressTypeForAddress(connectionAddress)),this.setConnectionAddress(connectionAddress)},ConnectionData}();sdp.ConnectionData=ConnectionData}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var CryptoAttribute=function(_super){function CryptoAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpCryptoAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.CryptoAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var tag=__arguments[0],cryptoSuite=__arguments[1];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpCryptoAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.CryptoAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),_this.setTag(tag),_this.setCryptoSuite(cryptoSuite),_this.setKeyParams({}),_this.setSessionParams(new Array)}return _this}return __extends(CryptoAttribute,_super),CryptoAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.CryptoAttribute],"+_super.prototype.getTypeString.call(this)},CryptoAttribute.prototype.fmliveswitchsdpCryptoAttributeInit=function(){this._tag=0},CryptoAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),num2=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,index));value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," ");var str=fm.liveswitch.StringExtensions.substring(value,0,index);value=value.substring(index+1);var dictionary={},list=new Array;if(index=fm.liveswitch.StringExtensions.indexOf(value," "),fm.liveswitch.Global.equals(index,-1))for(var _i=0,strArray_1=fm.liveswitch.StringExtensions.split(value,[59]);_i<strArray_1.length;_i++){var str2=strArray_1[_i],length_37=fm.liveswitch.StringExtensions.indexOf(str2,":");if(!fm.liveswitch.Global.equals(length_37,-1)){var str3=fm.liveswitch.StringExtensions.substring(str2,0,length_37),str4=str2.substring(length_37+1);dictionary[str3]=str4}}else{for(var _a=0,strArray_2=fm.liveswitch.StringExtensions.split(fm.liveswitch.StringExtensions.substring(value,0,index),[59]);_a<strArray_2.length;_a++){str2=strArray_2[_a];var strArray2=fm.liveswitch.StringExtensions.split(str2,[58]);fm.liveswitch.Global.equals(strArray2.length,2)&&(dictionary[strArray2[0]]=strArray2[1])}value=value.substring(index+1);for(var strArray3=fm.liveswitch.StringExtensions.split(value,[32]),_b=0,strArray3_1=strArray3;_b<strArray3_1.length;_b++){var str5=strArray3_1[_b];fm.liveswitch.ArrayExtensions.add(list,str5)}}var attribute=new fm.liveswitch.sdp.CryptoAttribute;return attribute.setTag(num2),attribute.setCryptoSuite(str),attribute.setKeyParams(dictionary),attribute.setSessionParams(list),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(fm.liveswitch.NumberExtensions.toString(this.getTag())),builder.append(" "),builder.append(this.getCryptoSuite());for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(this.getKeyParams());_i<_a.length;_i++){var str=_a[_i];builder.append(" "),builder.append(str),builder.append(":"),builder.append(this.getKeyParams()[str])}for(var _b=0,_c=this.getSessionParams();_b<_c.length;_b++){var str2=_c[_b];builder.append(" "),builder.append(str2)}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.getCryptoSuite=function(){if(0==arguments.length)return this._cryptoSuite;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.getKey=function(){if(0==arguments.length){if(!fm.liveswitch.Global.equals(this.getCryptoSuite(),fm.liveswitch.sdp.CryptoSuite.getAesCM128HmacSha180())&&!fm.liveswitch.Global.equals(this.getCryptoSuite(),fm.liveswitch.sdp.CryptoSuite.getAesCm128HmacSha132()))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Unrecognized crypto-suite: {0}.",this.getCryptoSuite()));var s=this.getKeyParams()[fm.liveswitch.sdp.CryptoKeyMethod.getInline()],index=fm.liveswitch.StringExtensions.indexOf(s,"|");fm.liveswitch.Global.equals(index,-1)||(s=fm.liveswitch.StringExtensions.substring(s,0,index));var array=fm.liveswitch.Base64.decode(s);if(!fm.liveswitch.Global.equals(array.length,30))throw new fm.liveswitch.Exception("Unexpected key/salt length.");return fm.liveswitch.DataBuffer.wrap(fm.liveswitch.BitAssistant.subArray(array,0,16))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.getKeyParams=function(){if(0==arguments.length)return this._keyParams;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.getSalt=function(){if(0==arguments.length){if(!fm.liveswitch.Global.equals(this.getCryptoSuite(),fm.liveswitch.sdp.CryptoSuite.getAesCM128HmacSha180())&&!fm.liveswitch.Global.equals(this.getCryptoSuite(),fm.liveswitch.sdp.CryptoSuite.getAesCm128HmacSha132()))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Unrecognized crypto-suite: {0}.",this.getCryptoSuite()));var s=this.getKeyParams()[fm.liveswitch.sdp.CryptoKeyMethod.getInline()],index=fm.liveswitch.StringExtensions.indexOf(s,"|");fm.liveswitch.Global.equals(index,-1)||(s=fm.liveswitch.StringExtensions.substring(s,0,index));var array=fm.liveswitch.Base64.decode(s);if(!fm.liveswitch.Global.equals(array.length,30))throw new fm.liveswitch.Exception("Unexpected key/salt length.");return fm.liveswitch.DataBuffer.wrap(fm.liveswitch.BitAssistant.subArray(array,16,14))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.getSessionParams=function(){if(0==arguments.length)return this._sessionParams;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.setCryptoSuite=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._cryptoSuite=value},CryptoAttribute.prototype.setKeyParams=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._keyParams=value},CryptoAttribute.prototype.setKeySalt=function(key,salt){if(2==arguments.length){var num=void 0,b=new Uint8Array(key.length+salt.length);for(num=0;num<key.length;num++)b[num]=key[num];for(num=0;num<salt.length;num++)b[key.length+num]=salt[num];return this.getKeyParams()[fm.liveswitch.sdp.CryptoKeyMethod.getInline()]=fm.liveswitch.Base64.encode(b),this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoAttribute.prototype.setSessionParams=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sessionParams=value},CryptoAttribute.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._tag=fm.liveswitch.Global.toInt(value)},CryptoAttribute}(fm.liveswitch.sdp.Attribute);sdp.CryptoAttribute=CryptoAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var CryptoKeyMethod=function(){function CryptoKeyMethod(){}return CryptoKeyMethod.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.CryptoKeyMethod]"},CryptoKeyMethod.getInline=function(){if(0==arguments.length)return"inline";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoKeyMethod}();sdp.CryptoKeyMethod=CryptoKeyMethod}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var CryptoSessionParam=function(){function CryptoSessionParam(){}return CryptoSessionParam.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.CryptoSessionParam]"},CryptoSessionParam.getUnauthenticatedSRTP=function(){if(0==arguments.length)return"UNAUTHENTICATED_SRTP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSessionParam.getUnencryptedSRTCP=function(){if(0==arguments.length)return"UNENCRYPTED_SRTCP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSessionParam.getUnencryptedSRTP=function(){if(0==arguments.length)return"UNENCRYPTED_SRTP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSessionParam}();sdp.CryptoSessionParam=CryptoSessionParam}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var CryptoSuite=function(){function CryptoSuite(){}return CryptoSuite.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.CryptoSuite]"},CryptoSuite.getAesCm128HmacSha132=function(){if(0==arguments.length)return"AES_CM_128_HMAC_SHA1_32";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSuite.getAesCM128HmacSha180=function(){if(0==arguments.length)return"AES_CM_128_HMAC_SHA1_80";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSuite.getCryptoSuite=function(encryptionMode){if(1==arguments.length)return fm.liveswitch.Global.equals(encryptionMode,fm.liveswitch.EncryptionMode.Aes128Strong)?fm.liveswitch.sdp.CryptoSuite.getAesCM128HmacSha180():fm.liveswitch.Global.equals(encryptionMode,fm.liveswitch.EncryptionMode.Aes128Weak)?fm.liveswitch.sdp.CryptoSuite.getAesCm128HmacSha132():fm.liveswitch.Global.equals(encryptionMode,fm.liveswitch.EncryptionMode.NullStrong)?fm.liveswitch.sdp.CryptoSuite.getNullHmacSha180():fm.liveswitch.Global.equals(encryptionMode,fm.liveswitch.EncryptionMode.NullWeak)?fm.liveswitch.sdp.CryptoSuite.getNullHmacSha132():null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSuite.getEncryptionMode=function(cryptoSuite){if(1==arguments.length)return fm.liveswitch.Global.equals(cryptoSuite,fm.liveswitch.sdp.CryptoSuite.getAesCM128HmacSha180())?fm.liveswitch.EncryptionMode.Aes128Strong:fm.liveswitch.Global.equals(cryptoSuite,fm.liveswitch.sdp.CryptoSuite.getAesCm128HmacSha132())?fm.liveswitch.EncryptionMode.Aes128Weak:fm.liveswitch.Global.equals(cryptoSuite,fm.liveswitch.sdp.CryptoSuite.getNullHmacSha180())?fm.liveswitch.EncryptionMode.NullStrong:fm.liveswitch.Global.equals(cryptoSuite,fm.liveswitch.sdp.CryptoSuite.getNullHmacSha132())?fm.liveswitch.EncryptionMode.NullWeak:fm.liveswitch.EncryptionMode.Null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSuite.getNullHmacSha132=function(){if(0==arguments.length)return"NULL_HMAC_SHA1_32";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSuite.getNullHmacSha180=function(){if(0==arguments.length)return"NULL_HMAC_SHA1_80";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CryptoSuite}();sdp.CryptoSuite=CryptoSuite}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var DirectionAttribute=function(_super){function DirectionAttribute(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(DirectionAttribute,_super),DirectionAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.DirectionAttribute],"+_super.prototype.getTypeString.call(this)},DirectionAttribute.generateDirectionAttribute=function(direction){if(1==arguments.length){if(fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.Inactive)||fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.Unset))return fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.Unset)&&fm.liveswitch.Log.debug("Attempted to create Sdp Direction attribute with unset direction. Creating Inactive direction attribute instead."),new fm.liveswitch.sdp.InactiveAttribute;if(fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.SendOnly))return new fm.liveswitch.sdp.SendOnlyAttribute;if(fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.ReceiveOnly))return new fm.liveswitch.sdp.ReceiveOnlyAttribute;if(!fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.SendReceive))throw new fm.liveswitch.Exception("Unexpected Sdp.StreamDirection");return new fm.liveswitch.sdp.SendReceiveAttribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DirectionAttribute}(fm.liveswitch.sdp.Attribute);sdp.DirectionAttribute=DirectionAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var FormatParametersAttribute=function(_super){function FormatParametersAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpFormatParametersAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.FormatParametersAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT);else if(1==__arguments.length){var format=__arguments[0];(__arguments=new Array(2))[0]=format,__arguments[1]=null;var format_1=__arguments[0],formatSpecificParameters=__arguments[1];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpFormatParametersAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.FormatParametersAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),_this.setFormat(format_1),_this.setFormatSpecificParameters(formatSpecificParameters)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");format=__arguments[0],formatSpecificParameters=__arguments[1];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpFormatParametersAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.FormatParametersAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),_this.setFormat(format),_this.setFormatSpecificParameters(formatSpecificParameters)}return _this}return __extends(FormatParametersAttribute,_super),FormatParametersAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.FormatParametersAttribute],"+_super.prototype.getTypeString.call(this)},FormatParametersAttribute.prototype.fmliveswitchsdpFormatParametersAttributeInit=function(){this._format=0},FormatParametersAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),num2=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,index)),str=value.substring(index+1),attribute=new fm.liveswitch.sdp.FormatParametersAttribute;return attribute.setFormat(num2),attribute.setFormatSpecificParameters(str),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute.prototype.deserializeFormatSpecificParameters=function(){if(0==arguments.length){var dictionary={},formatSpecificParameters=this.getFormatSpecificParameters();if(!fm.liveswitch.Global.equals(formatSpecificParameters,null))for(var strArray=fm.liveswitch.StringExtensions.split(formatSpecificParameters,[59]),_i=0,strArray_3=strArray;_i<strArray_3.length;_i++){var str2=strArray_3[_i],str3=fm.liveswitch.StringExtensions.trim(str2),index=fm.liveswitch.StringExtensions.indexOf(str3,"=");fm.liveswitch.Global.equals(index,-1)?dictionary[str3]=null:dictionary[fm.liveswitch.StringExtensions.substring(str3,0,index)]=str3.substring(index+1)}return dictionary}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getFormat())),builder.append(" "),builder.append(this.getFormatSpecificParameters()),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute.prototype.getFormat=function(){if(0==arguments.length)return this._format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute.prototype.getFormatSpecificParameter=function(key){if(1==arguments.length)return this.deserializeFormatSpecificParameters()[key];throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute.prototype.getFormatSpecificParameters=function(){if(0==arguments.length)return this._formatSpecificParameters;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute.prototype.serializeFormatSpecificParameters=function(map){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getKeys(map);_i<_a.length;_i++){var str=_a[_i];fm.liveswitch.Global.equals(map[str],null)?fm.liveswitch.ArrayExtensions.add(list,str):fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.join("=",[str,map[str]]))}this.setFormatSpecificParameters(fm.liveswitch.StringExtensions.join(";",fm.liveswitch.ArrayExtensions.toArray(list)))},FormatParametersAttribute.prototype.setFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._format=fm.liveswitch.Global.toInt(value)},FormatParametersAttribute.prototype.setFormatSpecificParameter=function(key,value){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var map=this.deserializeFormatSpecificParameters();map[key]=value,this.serializeFormatSpecificParameters(map)},FormatParametersAttribute.prototype.setFormatSpecificParameters=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._formatSpecificParameters=value},FormatParametersAttribute.prototype.tryGetFormatSpecificParameter=function(key,value){if(2==arguments.length){var dictionary=this.deserializeFormatSpecificParameters();value.setValue(null);var _var0=fm.liveswitch.HashExtensions.tryGetValue(dictionary,key,value);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute.prototype.unsetFormatSpecificParameter=function(key){if(1==arguments.length){var map=this.deserializeFormatSpecificParameters();return!!fm.liveswitch.HashExtensions.remove(map,key)&&(this.serializeFormatSpecificParameters(map),!0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FormatParametersAttribute}(fm.liveswitch.sdp.Attribute);sdp.FormatParametersAttribute=FormatParametersAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var FrameRateAttribute=function(_super){function FrameRateAttribute(frameRate){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var frameRate_2=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.FrameRateAttribute),fm.liveswitch.Global.equals(frameRate_2,null))throw new fm.liveswitch.Exception("frameRate cannot be null.");return _this.setFrameRate(frameRate_2),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),_this}return __extends(FrameRateAttribute,_super),FrameRateAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.FrameRateAttribute],"+_super.prototype.getTypeString.call(this)},FrameRateAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.FrameRateAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FrameRateAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getFrameRate();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FrameRateAttribute.prototype.getFrameRate=function(){if(0==arguments.length)return this._frameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FrameRateAttribute.prototype.setFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frameRate=value},FrameRateAttribute}(fm.liveswitch.sdp.Attribute);sdp.FrameRateAttribute=FrameRateAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var BundleGroup=function(){function BundleGroup(groupType){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var groupType_1=__arguments[0];this.fmliveswitchsdpBundleGroupInit(),this.__mediaDescriptions=new Array,this.__mids=new Array,this.setGroupType(groupType_1)}return BundleGroup.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.BundleGroup]"},BundleGroup.prototype.fmliveswitchsdpBundleGroupInit=function(){this._bundleOnly=!1},BundleGroup.prototype.addMediaDescription=function(mediaDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__mediaDescriptions,mediaDescription),fm.liveswitch.Global.equals(this.getTaggedMSection(),null)&&this.setTaggedMSection(mediaDescription);var mediaStreamIdentifierAttribute=mediaDescription.getMediaStreamIdentifierAttribute();if(fm.liveswitch.Global.equals(mediaStreamIdentifierAttribute,null))throw new fm.liveswitch.Exception("SDP Media Stream Identifier Attribute missing for media description in bundle group.");fm.liveswitch.ArrayExtensions.add(this.__mids,mediaStreamIdentifierAttribute.getIdentificationTag()),mediaDescription.getBundleOnly()&&this.setBundleOnly(!0)},BundleGroup.prototype.getBundleOnly=function(){if(0==arguments.length)return this._bundleOnly;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundleGroup.prototype.getGroupType=function(){if(0==arguments.length)return this._groupType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundleGroup.prototype.getMediaDescriptions=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__mediaDescriptions);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundleGroup.prototype.getMids=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__mids);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundleGroup.prototype.getTaggedMSection=function(){if(0==arguments.length)return this._taggedMSection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundleGroup.prototype.setBundleOnly=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bundleOnly=value},BundleGroup.prototype.setGroupType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._groupType=value},BundleGroup.prototype.setTaggedMSection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._taggedMSection=value},BundleGroup}();sdp.BundleGroup=BundleGroup}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var GroupAttribute=function(_super){function GroupAttribute(type,ids){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type_5=__arguments[0],ids_2=__arguments[1];return(_this=_super.call(this)||this).setSemantics(type_5),_this.setIds(ids_2),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.GroupAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(GroupAttribute,_super),GroupAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.GroupAttribute],"+_super.prototype.getTypeString.call(this)},GroupAttribute.fromAttributeValue=function(value){if(1==arguments.length){var strArray=fm.liveswitch.StringExtensions.split(value,[32]),str=strArray[0],unknown=fm.liveswitch.sdp.GroupSemanticsType.Unknown,ids=new Array(strArray.length-1);unknown=fm.liveswitch.Global.equals(str,"BUNDLE")?fm.liveswitch.sdp.GroupSemanticsType.Bundling:fm.liveswitch.Global.equals(str,"FID")?fm.liveswitch.sdp.GroupSemanticsType.FlowIdentification:fm.liveswitch.Global.equals(str,"LS")?fm.liveswitch.sdp.GroupSemanticsType.LipSynchronization:fm.liveswitch.sdp.GroupSemanticsType.Unknown;for(var i=1;i<strArray.length;i++)ids[i-1]=strArray[i];return new fm.liveswitch.sdp.GroupAttribute(unknown,ids)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},GroupAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var str="";str=fm.liveswitch.Global.equals(this.getSemantics(),fm.liveswitch.sdp.GroupSemanticsType.Bundling)?"BUNDLE":fm.liveswitch.Global.equals(this.getSemantics(),fm.liveswitch.sdp.GroupSemanticsType.FlowIdentification)?"FID":fm.liveswitch.Global.equals(this.getSemantics(),fm.liveswitch.sdp.GroupSemanticsType.LipSynchronization)?"LS":"";for(var _i=0,_a=this.getIds();_i<_a.length;_i++){var str2=_a[_i];str=fm.liveswitch.StringExtensions.concat(str," ",str2)}return str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},GroupAttribute.prototype.getIds=function(){if(0==arguments.length)return this._ids;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},GroupAttribute.prototype.getSemantics=function(){if(0==arguments.length)return this._semantics;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},GroupAttribute.prototype.setIds=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ids=value},GroupAttribute.prototype.setSemantics=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._semantics=value},GroupAttribute}(fm.liveswitch.sdp.Attribute);sdp.GroupAttribute=GroupAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var GroupSemanticsTypeWrapper=function(){function GroupSemanticsTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_30=__arguments[0];this._value=value_30}return GroupSemanticsTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.GroupSemanticsTypeWrapper]"},GroupSemanticsTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.sdp.GroupSemanticsType.LipSynchronization?"LipSynchronization":this._value==fm.liveswitch.sdp.GroupSemanticsType.FlowIdentification?"FlowIdentification":this._value==fm.liveswitch.sdp.GroupSemanticsType.Bundling?"Bundling":this._value==fm.liveswitch.sdp.GroupSemanticsType.Unknown?"Unknown":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},GroupSemanticsTypeWrapper}();sdp.GroupSemanticsTypeWrapper=GroupSemanticsTypeWrapper}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var CandidateAttribute=function(_super){function CandidateAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpiceCandidateAttributeInit(),_this.__foundation=fm.liveswitch.StringExtensions.empty,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceCandidateAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport);else if(6==__arguments.length){var foundation=__arguments[0],priority=__arguments[1],connectionAddress=__arguments[2],port=__arguments[3],candidateType=__arguments[4],componentId=__arguments[5];(__arguments=new Array(9))[0]=foundation,__arguments[1]=priority,__arguments[2]=connectionAddress,__arguments[3]=port,__arguments[4]=candidateType,__arguments[5]=null,__arguments[6]=0,__arguments[7]="udp",__arguments[8]=componentId;var foundation_1=__arguments[0],priority_1=__arguments[1],connectionAddress_2=__arguments[2],port_1=__arguments[3],candidateType_1=__arguments[4],relatedAddress=__arguments[5],relatedPort=__arguments[6],protocol=__arguments[7],componentId_1=__arguments[8];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpiceCandidateAttributeInit(),_this.__foundation=fm.liveswitch.StringExtensions.empty,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceCandidateAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),_this.setFoundation(foundation_1),_this.setProtocol(protocol),_this.setPriority(priority_1),_this.setConnectionAddress(connectionAddress_2),_this.setPort(port_1),_this.setCandidateType(candidateType_1),_this.setRelatedAddress(relatedAddress),_this.setRelatedPort(relatedPort),_this.setComponentId(componentId_1),_this.setExtensions({})}else{if(9!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");foundation=__arguments[0],priority=__arguments[1],connectionAddress=__arguments[2],port=__arguments[3],candidateType=__arguments[4],relatedAddress=__arguments[5],relatedPort=__arguments[6],protocol=__arguments[7],componentId=__arguments[8];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpiceCandidateAttributeInit(),_this.__foundation=fm.liveswitch.StringExtensions.empty,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceCandidateAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),_this.setFoundation(foundation),_this.setProtocol(protocol),_this.setPriority(priority),_this.setConnectionAddress(connectionAddress),_this.setPort(port),_this.setCandidateType(candidateType),_this.setRelatedAddress(relatedAddress),_this.setRelatedPort(relatedPort),_this.setComponentId(componentId),_this.setExtensions({})}return _this}return __extends(CandidateAttribute,_super),CandidateAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.CandidateAttribute],"+_super.prototype.getTypeString.call(this)},CandidateAttribute.prototype.fmliveswitchsdpiceCandidateAttributeInit=function(){this._componentId=0,this._port=0,this._priority=0,this._relatedPort=0},CandidateAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),str=fm.liveswitch.StringExtensions.substring(value,0,index);value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," ");var num2=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,index));value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," ");var str2=fm.liveswitch.StringExtensions.toLower(fm.liveswitch.StringExtensions.substring(value,0,index));value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," ");var num3=fm.liveswitch.ParseAssistant.parseLongValue(fm.liveswitch.StringExtensions.substring(value,0,index));value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," ");var str3=fm.liveswitch.StringExtensions.substring(value,0,index);value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," ");var num4=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,index));value=value.substring(index+1);var dictionary={},strArray=fm.liveswitch.StringExtensions.split(value,[32]),length_38=strArray.length,str4=null,str5=null,num6=0;fm.liveswitch.Global.equals(length_38%2,1)&&length_38--;for(var i=0;i<length_38;i+=2){var str6=strArray[i],s=strArray[i+1];fm.liveswitch.Global.equals(str6,"typ")?str4=s:fm.liveswitch.Global.equals(str6,"raddr")?str5=s:fm.liveswitch.Global.equals(str6,"rport")?num6=fm.liveswitch.ParseAssistant.parseIntegerValue(s):dictionary[str6]=s}var attribute=new fm.liveswitch.sdp.ice.CandidateAttribute;return attribute.setFoundation(str),attribute.setComponentId(num2),attribute.setProtocol(str2),attribute.setPriority(num3),attribute.setConnectionAddress(str3),attribute.setPort(num4),attribute.setExtensions(dictionary),attribute.setCandidateType(str4),attribute.setRelatedAddress(str5),attribute.setRelatedPort(num6),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(this.getFoundation()),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getComponentId())),builder.append(" "),builder.append(this.getProtocol()),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getPriority())),builder.append(" "),builder.append(this.getConnectionAddress()),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getPort())),builder.append(" "),builder.append("typ"),builder.append(" "),builder.append(this.getCandidateType()),fm.liveswitch.Global.equals(this.getCandidateType(),fm.liveswitch.sdp.ice.CandidateType.getHost())||fm.liveswitch.Global.equals(this.getRelatedAddress(),null)||(builder.append(" "),builder.append("raddr"),builder.append(" "),builder.append(this.getRelatedAddress()),builder.append(" "),builder.append("rport"),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getRelatedPort())));for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(this.getExtensions());_i<_a.length;_i++){var str=_a[_i];builder.append(" "),builder.append(str),builder.append(" "),builder.append(this.getExtensions()[str])}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getCandidateType=function(){if(0==arguments.length)return this.__candidateType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getComponentId=function(){if(0==arguments.length)return this._componentId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getConnectionAddress=function(){if(0==arguments.length)return this.__connectionAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getExtensions=function(){if(0==arguments.length)return this._extensions;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getFoundation=function(){if(0==arguments.length)return this.__foundation;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getPort=function(){if(0==arguments.length)return this._port;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getPriority=function(){if(0==arguments.length)return this._priority;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getProtocol=function(){if(0==arguments.length)return this._protocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getRelatedAddress=function(){if(0==arguments.length)return this._relatedAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.getRelatedPort=function(){if(0==arguments.length)return this._relatedPort;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateAttribute.prototype.setCandidateType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Candidate type cannot be null.");this.__candidateType=value},CandidateAttribute.prototype.setComponentId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._componentId=fm.liveswitch.Global.toInt(value)},CandidateAttribute.prototype.setConnectionAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Connection address cannot be null.");this.__connectionAddress=value},CandidateAttribute.prototype.setExtensions=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._extensions=value},CandidateAttribute.prototype.setFoundation=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Foundation cannot be null.");this.__foundation=value},CandidateAttribute.prototype.setPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._port=fm.liveswitch.Global.toInt(value)},CandidateAttribute.prototype.setPriority=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._priority=fm.liveswitch.Global.toInt(value)},CandidateAttribute.prototype.setProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._protocol=value},CandidateAttribute.prototype.setRelatedAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._relatedAddress=value},CandidateAttribute.prototype.setRelatedPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._relatedPort=fm.liveswitch.Global.toInt(value)},CandidateAttribute}(fm.liveswitch.sdp.Attribute);ice.CandidateAttribute=CandidateAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var CandidateType=function(){function CandidateType(){}return CandidateType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.CandidateType]"},CandidateType.getHost=function(){if(0==arguments.length)return"host";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateType.getPeerReflexive=function(){if(0==arguments.length)return"prflx";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateType.getRelayed=function(){if(0==arguments.length)return"relay";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateType.getServerReflexive=function(){if(0==arguments.length)return"srflx";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidateType}();ice.CandidateType=CandidateType}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var FingerprintAttribute=function(_super){function FingerprintAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceFingerprintAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var hashFunction=__arguments[0],fingerprint=__arguments[1];if(__arguments=new Array(0),_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceFingerprintAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),_this.setHashFunction(hashFunction),fm.liveswitch.StringExtensions.indexOf(fingerprint,":")<0){for(var list=new Array,i=0;i<fm.liveswitch.StringExtensions.getLength(fingerprint);i+=2)fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.substring(fingerprint,i,2));fingerprint=fm.liveswitch.StringExtensions.join(":",fm.liveswitch.ArrayExtensions.toArray(list))}_this.setFingerprint(fm.liveswitch.StringExtensions.toUpper(fingerprint))}return _this}return __extends(FingerprintAttribute,_super),FingerprintAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.FingerprintAttribute],"+_super.prototype.getTypeString.call(this)},FingerprintAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),str=fm.liveswitch.StringExtensions.substring(value,0,index),str2=value=value.substring(index+1),attribute=new fm.liveswitch.sdp.ice.FingerprintAttribute;return attribute.setHashFunction(str),attribute.setFingerprint(str2),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FingerprintAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(this.getHashFunction()),builder.append(" "),builder.append(this.getFingerprint()),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FingerprintAttribute.prototype.getFingerprint=function(){if(0==arguments.length)return this._fingerprint;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FingerprintAttribute.prototype.getHashFunction=function(){if(0==arguments.length)return this._hashFunction;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FingerprintAttribute.prototype.setFingerprint=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._fingerprint=value},FingerprintAttribute.prototype.setHashFunction=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._hashFunction=value},FingerprintAttribute}(fm.liveswitch.sdp.Attribute);ice.FingerprintAttribute=FingerprintAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var LiteAttribute=function(_super){function LiteAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceLiteAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(LiteAttribute,_super),LiteAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.LiteAttribute],"+_super.prototype.getTypeString.call(this)},LiteAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.ice.LiteAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LiteAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LiteAttribute}(fm.liveswitch.sdp.Attribute);ice.LiteAttribute=LiteAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var MismatchAttribute=function(_super){function MismatchAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceMismatchAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(MismatchAttribute,_super),MismatchAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.MismatchAttribute],"+_super.prototype.getTypeString.call(this)},MismatchAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.ice.MismatchAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MismatchAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MismatchAttribute}(fm.liveswitch.sdp.Attribute);ice.MismatchAttribute=MismatchAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var OptionsAttribute=function(_super){function OptionsAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).__tags=new Array,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceOptionsAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var tags=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this).__tags=new Array,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceOptionsAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),fm.liveswitch.Global.equals(tags,null)&&(tags=new Array),_this.setTags(tags)}return _this}return __extends(OptionsAttribute,_super),OptionsAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.OptionsAttribute],"+_super.prototype.getTypeString.call(this)},OptionsAttribute.fromAttributeValue=function(value){if(1==arguments.length){for(var strArray=fm.liveswitch.StringExtensions.split(value,[32]),list=new Array,_i=0,strArray_4=strArray;_i<strArray_4.length;_i++){var str=strArray_4[_i],item=fm.liveswitch.sdp.ice.OptionTag.parse(str);fm.liveswitch.Global.equals(item,null)||fm.liveswitch.ArrayExtensions.add(list,item)}var attribute=new fm.liveswitch.sdp.ice.OptionsAttribute;return attribute.setTags(list),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionsAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){if(fm.liveswitch.Global.equals(this.getTags(),null))return"";for(var count=fm.liveswitch.ArrayExtensions.getCount(this.getTags()),strArray=new Array(count),i=0;i<count;i++)strArray[i]=this.getTags()[i].toString();return fm.liveswitch.StringExtensions.join(" ",strArray)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionsAttribute.prototype.getTags=function(){if(0==arguments.length)return this.__tags;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionsAttribute.prototype.getTrickleOptionSet=function(){if(0==arguments.length){for(var _i=0,_a=this.getTags();_i<_a.length;_i++){var tag=_a[_i];if(fm.liveswitch.Global.equals(tag.getType(),fm.liveswitch.sdp.ice.OptionTagType.Trickle))return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionsAttribute.prototype.setTags=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__tags=value},OptionsAttribute.prototype.setTrickleOptionSet=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(value){for(var _i=0,_a=this.getTags();_i<_a.length;_i++){var tag=_a[_i];if(fm.liveswitch.Global.equals(tag.getType(),fm.liveswitch.sdp.ice.OptionTagType.Trickle))return}fm.liveswitch.ArrayExtensions.add(this.getTags(),new fm.liveswitch.sdp.ice.TrickleIceOptionTag)}else{for(var item=null,_b=0,_c=this.getTags();_b<_c.length;_b++){tag=_c[_b];fm.liveswitch.Global.equals(tag.getType(),fm.liveswitch.sdp.ice.OptionTagType.Trickle)&&(item=tag)}fm.liveswitch.ArrayExtensions.remove(this.getTags(),item)}},OptionsAttribute}(fm.liveswitch.sdp.Attribute);ice.OptionsAttribute=OptionsAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var OptionTag=function(){function OptionTag(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return OptionTag.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.OptionTag]"},OptionTag.getTrickle=function(){if(0==arguments.length)return"trickle";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionTag.parse=function(tagString){if(1==arguments.length)return fm.liveswitch.Global.equals(tagString,fm.liveswitch.sdp.ice.OptionTag.getTrickle())?new fm.liveswitch.sdp.ice.TrickleIceOptionTag:new fm.liveswitch.sdp.ice.UnknownIceOptionTag(tagString);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionTag.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionTag.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},OptionTag}();ice.OptionTag=OptionTag}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var OptionTagTypeWrapper=function(){function OptionTagTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_31=__arguments[0];this._value=value_31}return OptionTagTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.OptionTagTypeWrapper]"},OptionTagTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.sdp.ice.OptionTagType.Unknown?"Unknown":this._value==fm.liveswitch.sdp.ice.OptionTagType.Trickle?"Trickle":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OptionTagTypeWrapper}();ice.OptionTagTypeWrapper=OptionTagTypeWrapper}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var PasswordAttribute=function(_super){function PasswordAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.sdp.ice.PasswordAttribute.generatePassword();var password=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IcePasswordAttribute),fm.liveswitch.StringExtensions.getLength(password)<22||fm.liveswitch.StringExtensions.getLength(password)>256)throw new fm.liveswitch.Exception("password must be at least 22 characters long up to 256 characters.");_this.setPassword(password),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");password=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IcePasswordAttribute),fm.liveswitch.StringExtensions.getLength(password)<22||fm.liveswitch.StringExtensions.getLength(password)>256)throw new fm.liveswitch.Exception("password must be at least 22 characters long up to 256 characters.");_this.setPassword(password),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport)}return _this}return __extends(PasswordAttribute,_super),PasswordAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.PasswordAttribute],"+_super.prototype.getTypeString.call(this)},PasswordAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.ice.PasswordAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PasswordAttribute.generatePassword=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-","");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PasswordAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getPassword();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PasswordAttribute.prototype.getPassword=function(){if(0==arguments.length)return this._password;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PasswordAttribute.prototype.setPassword=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._password=value},PasswordAttribute}(fm.liveswitch.sdp.Attribute);ice.PasswordAttribute=PasswordAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var RemoteCandidate=function(){function RemoteCandidate(componentId,connectionAddress,port){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var componentId_2=__arguments[0],connectionAddress_3=__arguments[1],port_2=__arguments[2];if(this.fmliveswitchsdpiceRemoteCandidateInit(),fm.liveswitch.Global.equals(connectionAddress_3,null))throw new fm.liveswitch.Exception("connectionAddress cannot be null.");this.setComponentId(componentId_2),this.setConnectionAddress(connectionAddress_3),this.setPort(port_2)}return RemoteCandidate.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.RemoteCandidate]"},RemoteCandidate.prototype.fmliveswitchsdpiceRemoteCandidateInit=function(){this._componentId=0,this._port=0},RemoteCandidate.parse=function(s){if(1==arguments.length){var strArray=fm.liveswitch.StringExtensions.split(s,[32]),componentId=fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[0]),connectionAddress=strArray[1];return new fm.liveswitch.sdp.ice.RemoteCandidate(componentId,connectionAddress,fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[2]))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidate.prototype.getComponentId=function(){if(0==arguments.length)return this._componentId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidate.prototype.getConnectionAddress=function(){if(0==arguments.length)return this._connectionAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidate.prototype.getPort=function(){if(0==arguments.length)return this._port;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidate.prototype.setComponentId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._componentId=fm.liveswitch.Global.toInt(value)},RemoteCandidate.prototype.setConnectionAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionAddress=value},RemoteCandidate.prototype.setPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._port=fm.liveswitch.Global.toInt(value)},RemoteCandidate.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getComponentId())),builder.append(" "),builder.append(this.getConnectionAddress()),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getPort())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidate}();ice.RemoteCandidate=RemoteCandidate}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var RemoteCandidatesAttribute=function(_super){function RemoteCandidatesAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceRemoteCandidatesAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var candidates=__arguments[0];if(__arguments=new Array(0),_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceRemoteCandidatesAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),fm.liveswitch.Global.equals(candidates,null))throw new fm.liveswitch.Exception("candidates cannot be null.");_this.setCandidates(candidates)}return _this}return __extends(RemoteCandidatesAttribute,_super),RemoteCandidatesAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.RemoteCandidatesAttribute],"+_super.prototype.getTypeString.call(this)},RemoteCandidatesAttribute.fromAttributeValue=function(value){if(1==arguments.length){for(var array=fm.liveswitch.StringExtensions.split(value,[32]),list=new Array,i=0;i<array.length;i+=3)fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.sdp.ice.RemoteCandidate.parse(fm.liveswitch.StringExtensions.join(" ",fm.liveswitch.StringAssistant.subArray(array,i,3))));var attribute=new fm.liveswitch.sdp.ice.RemoteCandidatesAttribute;return attribute.setCandidates(fm.liveswitch.ArrayExtensions.toArray(list)),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidatesAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){for(var strArray=new Array(this.getCandidates().length),i=0;i<this.getCandidates().length;i++)strArray[i]=this.getCandidates()[i].toString();return fm.liveswitch.StringExtensions.join(" ",strArray)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidatesAttribute.prototype.getCandidates=function(){if(0==arguments.length)return this._candidates;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidatesAttribute.prototype.setCandidates=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._candidates=value},RemoteCandidatesAttribute}(fm.liveswitch.sdp.Attribute);ice.RemoteCandidatesAttribute=RemoteCandidatesAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var TransportProtocol=function(){function TransportProtocol(){}return TransportProtocol.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.TransportProtocol]"},TransportProtocol.getTcp=function(){if(0==arguments.length)return"tcp";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportProtocol.getUdp=function(){if(0==arguments.length)return"udp";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportProtocol}();ice.TransportProtocol=TransportProtocol}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var TrickleIceOptionTag=function(_super){function TrickleIceOptionTag(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setType.call(_this,fm.liveswitch.sdp.ice.OptionTagType.Trickle),_this}return __extends(TrickleIceOptionTag,_super),TrickleIceOptionTag.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.TrickleIceOptionTag],"+_super.prototype.getTypeString.call(this)},TrickleIceOptionTag.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.sdp.ice.OptionTag.getTrickle();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TrickleIceOptionTag}(fm.liveswitch.sdp.ice.OptionTag);ice.TrickleIceOptionTag=TrickleIceOptionTag}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var UfragAttribute=function(_super){function UfragAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.sdp.ice.UfragAttribute.generateUfrag();var ufrag=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceUfragAttribute),fm.liveswitch.StringExtensions.getLength(ufrag)<4||fm.liveswitch.StringExtensions.getLength(ufrag)>256)throw new fm.liveswitch.Exception("ufrag must be at least 4 characters long up to 256 characters.");_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),_this.setUfrag(ufrag)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");ufrag=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.IceUfragAttribute),fm.liveswitch.StringExtensions.getLength(ufrag)<4||fm.liveswitch.StringExtensions.getLength(ufrag)>256)throw new fm.liveswitch.Exception("ufrag must be at least 4 characters long up to 256 characters.");_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),_this.setUfrag(ufrag)}return _this}return __extends(UfragAttribute,_super),UfragAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.UfragAttribute],"+_super.prototype.getTypeString.call(this)},UfragAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.ice.UfragAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UfragAttribute.generateUfrag=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.substring(fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""),0,8);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UfragAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getUfrag();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UfragAttribute.prototype.getUfrag=function(){if(0==arguments.length)return this._ufrag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UfragAttribute.prototype.setUfrag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ufrag=value},UfragAttribute}(fm.liveswitch.sdp.Attribute);ice.UfragAttribute=UfragAttribute}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(ice){var UnknownIceOptionTag=function(_super){function UnknownIceOptionTag(tagString){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var tagString_1=__arguments[0];return _this=_super.call(this)||this,_super.prototype.setType.call(_this,fm.liveswitch.sdp.ice.OptionTagType.Unknown),_this.setTagString(tagString_1),_this}return __extends(UnknownIceOptionTag,_super),UnknownIceOptionTag.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ice.UnknownIceOptionTag],"+_super.prototype.getTypeString.call(this)},UnknownIceOptionTag.prototype.getTagString=function(){if(0==arguments.length)return this._tagString;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownIceOptionTag.prototype.setTagString=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tagString=value},UnknownIceOptionTag.prototype.toString=function(){if(0==arguments.length)return this.getTagString();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownIceOptionTag}(fm.liveswitch.sdp.ice.OptionTag);ice.UnknownIceOptionTag=UnknownIceOptionTag}(sdp.ice||(sdp.ice={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var InactiveAttribute=function(_super){function InactiveAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.DirectionAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(InactiveAttribute,_super),InactiveAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.InactiveAttribute],"+_super.prototype.getTypeString.call(this)},InactiveAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.InactiveAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InactiveAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InactiveAttribute.prototype.getStreamDirection=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.Inactive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InactiveAttribute}(fm.liveswitch.sdp.DirectionAttribute);sdp.InactiveAttribute=InactiveAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var KeywordsAttribute=function(_super){function KeywordsAttribute(keywords){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var keywords_1=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.KeywordsAttribute),fm.liveswitch.Global.equals(keywords_1,null))throw new fm.liveswitch.Exception("keywords cannot be null.");return _this.setKeywords(keywords_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(KeywordsAttribute,_super),KeywordsAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.KeywordsAttribute],"+_super.prototype.getTypeString.call(this)},KeywordsAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.KeywordsAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},KeywordsAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getKeywords();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},KeywordsAttribute.prototype.getKeywords=function(){if(0==arguments.length)return this._keywords;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},KeywordsAttribute.prototype.setKeywords=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._keywords=value},KeywordsAttribute}(fm.liveswitch.sdp.Attribute);sdp.KeywordsAttribute=KeywordsAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var LanguageAttribute=function(_super){function LanguageAttribute(languageTag){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var languageTag_1=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.LanguageAttribute),fm.liveswitch.Global.equals(languageTag_1,null))throw new fm.liveswitch.Exception("languageTag cannot be null.");return _this.setLanguageTag(languageTag_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(LanguageAttribute,_super),LanguageAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.LanguageAttribute],"+_super.prototype.getTypeString.call(this)},LanguageAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.LanguageAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LanguageAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getLanguageTag();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LanguageAttribute.prototype.getLanguageTag=function(){if(0==arguments.length)return this._languageTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LanguageAttribute.prototype.setLanguageTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._languageTag=value},LanguageAttribute}(fm.liveswitch.sdp.Attribute);sdp.LanguageAttribute=LanguageAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var MaxPacketTimeAttribute=function(_super){function MaxPacketTimeAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpMaxPacketTimeAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.MaxPacketTimeAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var maxPacketTime=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpMaxPacketTimeAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.MaxPacketTimeAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),_this.setMaxPacketTime(maxPacketTime)}return _this}return __extends(MaxPacketTimeAttribute,_super),MaxPacketTimeAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.MaxPacketTimeAttribute],"+_super.prototype.getTypeString.call(this)},MaxPacketTimeAttribute.prototype.fmliveswitchsdpMaxPacketTimeAttributeInit=function(){this._maxPacketTime=0},MaxPacketTimeAttribute.fromAttributeValue=function(value){if(1==arguments.length){var attribute=new fm.liveswitch.sdp.MaxPacketTimeAttribute;return attribute.setMaxPacketTime(fm.liveswitch.ParseAssistant.parseIntegerValue(value)),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MaxPacketTimeAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return fm.liveswitch.NumberExtensions.toString(this.getMaxPacketTime());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MaxPacketTimeAttribute.prototype.getMaxPacketTime=function(){if(0==arguments.length)return this._maxPacketTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MaxPacketTimeAttribute.prototype.setMaxPacketTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxPacketTime=fm.liveswitch.Global.toInt(value)},MaxPacketTimeAttribute}(fm.liveswitch.sdp.Attribute);sdp.MaxPacketTimeAttribute=MaxPacketTimeAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Media=function(){function Media(){fm.liveswitch.sdp.Media.fmliveswitchsdpMediaInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchsdpMediaInit();else if(3==__arguments.length){var mediaType=__arguments[0],transportPort=__arguments[1],transportProtocol=__arguments[2];(__arguments=new Array(4))[0]=mediaType,__arguments[1]=transportPort,__arguments[2]=transportProtocol,__arguments[3]=null;var mediaType_1=__arguments[0],transportPort_1=__arguments[1],transportProtocol_1=__arguments[2],formatDescription=__arguments[3];if(this.fmliveswitchsdpMediaInit(),fm.liveswitch.Global.equals(mediaType_1,null))throw new fm.liveswitch.Exception("mediaType cannot be null.");if(fm.liveswitch.Global.equals(transportProtocol_1,null))throw new fm.liveswitch.Exception("transportProtocol cannot be null.");this.setMediaType(mediaType_1),this.setTransportPort(transportPort_1),this.setNumberOfPorts(fm.liveswitch.sdp.Media.fm_liveswitch_sdp_Media__defaultNumberOfPorts),this.setTransportProtocol(transportProtocol_1),this.setFormatDescription(formatDescription)}else{if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");mediaType=__arguments[0],transportPort=__arguments[1],transportProtocol=__arguments[2],formatDescription=__arguments[3];if(this.fmliveswitchsdpMediaInit(),fm.liveswitch.Global.equals(mediaType,null))throw new fm.liveswitch.Exception("mediaType cannot be null.");if(fm.liveswitch.Global.equals(transportProtocol,null))throw new fm.liveswitch.Exception("transportProtocol cannot be null.");this.setMediaType(mediaType),this.setTransportPort(transportPort),this.setNumberOfPorts(fm.liveswitch.sdp.Media.fm_liveswitch_sdp_Media__defaultNumberOfPorts),this.setTransportProtocol(transportProtocol),this.setFormatDescription(formatDescription)}}return Media.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Media]"},Media.prototype.fmliveswitchsdpMediaInit=function(){this._numberOfPorts=0,this._transportPort=0},Media.parse=function(s){if(fm.liveswitch.sdp.Media.fmliveswitchsdpMediaInitialize(),1==arguments.length){var media=void 0;s=s.substring(2);var array=fm.liveswitch.StringExtensions.split(s,[32]),mediaType=array[0],strArray2=fm.liveswitch.StringExtensions.split(array[1],[47]),transportPort=fm.liveswitch.ParseAssistant.parseIntegerValue(strArray2[0]),transportProtocol=array[2],formatDescription=fm.liveswitch.StringExtensions.join(" ",fm.liveswitch.StringAssistant.subArray(array,3));if(fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.UdpMedia.getUdpTransportProtocol()))media=new fm.liveswitch.sdp.UdpMedia(mediaType,transportPort,formatDescription);else if(fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.rtp.Media.getRtpAvpTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.rtp.Media.getRtpSavpTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.rtp.Media.getRtpAvpfTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.rtp.Media.getRtpSavpfTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.rtp.Media.getUdpTlsRtpSavpTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.rtp.Media.getUdpTlsRtpSavpfTransportProtocol())){var rtpPayloadTypeNumbers=new Array(0);if(!fm.liveswitch.StringExtensions.isNullOrEmpty(formatDescription)){var strArray3=fm.liveswitch.StringExtensions.split(formatDescription,[32]);rtpPayloadTypeNumbers=new Array(strArray3.length);for(var i=0;i<rtpPayloadTypeNumbers.length;i++)rtpPayloadTypeNumbers[i]=fm.liveswitch.ParseAssistant.parseIntegerValue(strArray3[i])}media=new fm.liveswitch.sdp.rtp.Media(mediaType,transportPort,transportProtocol,rtpPayloadTypeNumbers)}else media=fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.sctp.Media.getDtlsSctpTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.sctp.Media.getSctpDtlsTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.sctp.Media.getSctpTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.sctp.Media.getTcpDtlsSctpTransportProtocol())||fm.liveswitch.Global.equals(transportProtocol,fm.liveswitch.sdp.sctp.Media.getUdpDtlsSctpTransportProtocol())?new fm.liveswitch.sdp.sctp.Media(mediaType,transportPort,transportProtocol,formatDescription):new fm.liveswitch.sdp.Media(mediaType,transportPort,transportProtocol,formatDescription);return fm.liveswitch.Global.equals(strArray2.length,2)&&media.setNumberOfPorts(fm.liveswitch.ParseAssistant.parseShortValue(strArray2[1])),media}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.prototype.getFormatDescription=function(){if(0==arguments.length)return this._formatDescription;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.prototype.getMediaType=function(){if(0==arguments.length)return this._mediaType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.prototype.getNumberOfPorts=function(){if(0==arguments.length)return this._numberOfPorts;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.prototype.getTransportPort=function(){if(0==arguments.length)return this._transportPort;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.prototype.getTransportProtocol=function(){if(0==arguments.length)return this._transportProtocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.prototype.setFormatDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._formatDescription=value},Media.prototype.setMediaType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaType=value},Media.prototype.setNumberOfPorts=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._numberOfPorts=fm.liveswitch.Global.toInt(value)},Media.prototype.setTransportPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._transportPort=fm.liveswitch.Global.toInt(value)},Media.prototype.setTransportProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._transportProtocol=value},Media.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append("m="),builder.append(this.getMediaType()),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getTransportPort())),this.getNumberOfPorts()>1&&(builder.append("/"),builder.append(fm.liveswitch.NumberExtensions.toString(this.getNumberOfPorts()))),builder.append(" "),builder.append(this.getTransportProtocol()),fm.liveswitch.Global.equals(this.getFormatDescription(),null)||(builder.append(" "),builder.append(this.getFormatDescription())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.fmliveswitchsdpMediaInitialize=function(){fm.liveswitch.sdp.Media.__fmliveswitchsdpMediaInitialized||fm.liveswitch.sdp.Media.__fmliveswitchsdpMediaInitializing||(fm.liveswitch.sdp.Media.__fmliveswitchsdpMediaInitializing=!0,Media.fm_liveswitch_sdp_Media__defaultNumberOfPorts=0,fm.liveswitch.sdp.Media.fm_liveswitch_sdp_Media__defaultNumberOfPorts=1,fm.liveswitch.sdp.Media.__fmliveswitchsdpMediaInitialized=!0,fm.liveswitch.sdp.Media.__fmliveswitchsdpMediaInitializing=!1)},Media.__fmliveswitchsdpMediaInitialized=!1,Media.__fmliveswitchsdpMediaInitializing=!1,Media}();sdp.Media=Media}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var MediaDescription=function(){function MediaDescription(media){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var media_1=__arguments[0];if(this.__bandwidths=new Array,this.__mediaAttributes=new fm.liveswitch.sdp.AttributeCollection,this.__orphanedAttributes=new Array,fm.liveswitch.Global.equals(media_1,null))throw new fm.liveswitch.Exception("media cannot be null.");this.setMedia(media_1)}return MediaDescription.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.MediaDescription]"},MediaDescription.getBundleOnlyAttributeFromCollection=function(attributes){if(1==arguments.length){var attributeArray=null,_var0=new fm.liveswitch.Holder(attributeArray),_var1=attributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.BundleOnlyAttribute,_var0);return attributeArray=_var0.getValue(),_var1&&attributeArray.length>0?attributeArray[0]:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getBundlingSupportFromCollection=function(attributes){if(1==arguments.length){var attributeArray=null,_var0=new fm.liveswitch.Holder(attributeArray),_var1=attributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.GroupAttribute,_var0);if(attributeArray=_var0.getValue(),_var1)for(var _i=0,attributeArray_1=attributeArray;_i<attributeArray_1.length;_i++){var attribute=attributeArray_1[_i];if(fm.liveswitch.Global.equals(attribute.getSemantics(),fm.liveswitch.sdp.GroupSemanticsType.Bundling))return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getCryptoAttributesFromCollection=function(attributes){if(1==arguments.length){var attributeArray=null,_var0=new fm.liveswitch.Holder(attributeArray),_var1=attributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.CryptoAttribute,_var0);if(attributeArray=_var0.getValue(),_var1){for(var attributeArray2=new Array(attributeArray.length),index=0,_i=0,attributeArray_2=attributeArray;_i<attributeArray_2.length;_i++){var attribute=attributeArray_2[_i];attributeArray2[index]=attribute,index++}return attributeArray2}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getFingerprintAttributeFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.IceFingerprintAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getGroupAttributesFromCollection=function(collection){if(1==arguments.length){var attributes=null,list=new Array,_var0=new fm.liveswitch.Holder(attributes),_var1=collection.tryGetAttributes(fm.liveswitch.sdp.AttributeType.GroupAttribute,_var0);if(attributes=_var0.getValue(),_var1)for(var _i=0,attributes_1=attributes;_i<attributes_1.length;_i++){var attribute=attributes_1[_i],item=attribute;fm.liveswitch.ArrayExtensions.add(list,item)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getIceOptionAttributesFromCollection=function(attributes){if(1==arguments.length){var attributeArray=null,_var0=new fm.liveswitch.Holder(attributeArray),_var1=attributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.IceOptionsAttribute,_var0);return attributeArray=_var0.getValue(),_var1?attributeArray:new Array(0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getIcePasswordAttributeFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.IcePasswordAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getIceUfragAttributeFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.IceUfragAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getIsMutedFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.MutedAttribute,_var0);return attribute=_var0.getValue(),!fm.liveswitch.Global.equals(attributes,null)&&_var1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getQualityAttributeFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.QualityAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getRtcpMultiplexingSupportFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.RtcpMuxAttribute,_var0);return attribute=_var0.getValue(),_var1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getRtpExtMapAttributesFromCollection=function(attributes){if(1==arguments.length){var attributeArray=null,_var0=new fm.liveswitch.Holder(attributeArray),_var1=attributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpExtMapAttribute,_var0);return attributeArray=_var0.getValue(),_var1?attributeArray:new Array(0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getSetupAttributeFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.SetupAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getStreamDirectionFromCollection=function(attributes){if(1==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=attributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.DirectionAttribute,_var0);return attribute=_var0.getValue(),!fm.liveswitch.Global.equals(attributes,null)&&_var1?attribute.getStreamDirection():fm.liveswitch.StreamDirection.Unset}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.getSupportsIceFromCollection=function(attributes){if(1==arguments.length)return!fm.liveswitch.Global.equals(fm.liveswitch.sdp.MediaDescription.getIceUfragAttributeFromCollection(attributes),null)&&!fm.liveswitch.Global.equals(fm.liveswitch.sdp.MediaDescription.getIcePasswordAttributeFromCollection(attributes),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.parse=function(s){if(1==arguments.length){var strArray=fm.liveswitch.sdp.Utility.splitAndClean(s);if(!fm.liveswitch.Global.equals(strArray[0].charCodeAt(0),109))return null;for(var description=new fm.liveswitch.sdp.MediaDescription(fm.liveswitch.sdp.Media.parse(strArray[0])),dictionary={},dictionary2={},dictionary3={},i=1;i<strArray.length;i++){var str=strArray[i];if(fm.liveswitch.Global.equals(str.charCodeAt(0),97)){var str2=void 0,attribute=fm.liveswitch.sdp.Attribute.parse(str);if(fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute)||fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.FormatParametersAttribute)){var attribute5=void 0;if(fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute)){var item=attribute;str2=fm.liveswitch.NumberExtensions.toString(item.getPayloadType());var list2=null,_var4=new fm.liveswitch.Holder(list2),_var5=fm.liveswitch.HashExtensions.tryGetValue(dictionary3,str2,_var4);if(list2=_var4.getValue(),_var5||(list2=new Array),fm.liveswitch.ArrayExtensions.add(list2,item),dictionary3[str2]=list2,fm.liveswitch.Global.equals(str2,"-1"))for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(dictionary2);_i<_a.length;_i++){var str3=_a[_i];dictionary2[str3].addRelatedRtcpFeedbackAttribute(item)}else{attribute5=null;var _var6=new fm.liveswitch.Holder(attribute5),_var7=fm.liveswitch.HashExtensions.tryGetValue(dictionary2,str2,_var6);attribute5=_var6.getValue(),_var7&&attribute5.resetRtcpFeedbackAttributes(fm.liveswitch.ArrayExtensions.toArray(list2))}}else if(fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.FormatParametersAttribute)){var attribute6=attribute;dictionary[str2=fm.liveswitch.NumberExtensions.toString(attribute6.getFormat())]=attribute6,attribute5=null;var _var8=new fm.liveswitch.Holder(attribute5),_var9=fm.liveswitch.HashExtensions.tryGetValue(dictionary2,str2,_var8);attribute5=_var8.getValue(),_var9&&attribute5.setRelatedFormatParametersAttribute(attribute6)}}else if(description.addMediaAttribute(attribute),fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtpMapAttribute)){var attribute2=attribute;dictionary2[str2=fm.liveswitch.NumberExtensions.toString(attribute2.getPayloadType())]=attribute2;var attribute3=null,list=null,_var0=new fm.liveswitch.Holder(attribute3),_var1=fm.liveswitch.HashExtensions.tryGetValue(dictionary,str2,_var0);attribute3=_var0.getValue(),_var1&&attribute2.setRelatedFormatParametersAttribute(attribute3);var _var2=new fm.liveswitch.Holder(list),_var3=fm.liveswitch.HashExtensions.tryGetValue(dictionary3,str2,_var2);list=_var2.getValue(),_var3&&attribute2.resetRtcpFeedbackAttributes(fm.liveswitch.ArrayExtensions.toArray(list))}}fm.liveswitch.Global.equals(str.charCodeAt(0),105)?description.setMediaTitle(str.substring(2)):fm.liveswitch.Global.equals(str.charCodeAt(0),99)?description.setConnectionData(fm.liveswitch.sdp.ConnectionData.parse(str)):fm.liveswitch.Global.equals(str.charCodeAt(0),98)?description.addBandwidth(fm.liveswitch.sdp.Bandwidth.parse(str)):fm.liveswitch.Global.equals(str.charCodeAt(0),107)&&description.setEncryptionKey(fm.liveswitch.sdp.EncryptionKey.parse(str))}return description}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.addBandwidth=function(bandwidth){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__bandwidths,bandwidth)},MediaDescription.prototype.addMediaAttribute=function(attribute){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var attribute3=void 0,type=new fm.liveswitch.Type(attribute.getTypeString()),flag=fm.liveswitch.sdp.Attribute.isMediaLevel(type),flag2=fm.liveswitch.sdp.Attribute.isSessionLevel(type);if(!flag&&!flag2)throw new fm.liveswitch.Exception("Attribute is not registered.");if(flag2&&!flag)throw new fm.liveswitch.Exception("Attribute is session-only.");if(fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute)||fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.FormatParametersAttribute)){var payloadType=-1,attribute2=null;attribute3=null;var flag3=!1;if((payloadType=fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute)?(attribute2=attribute).getPayloadType():(attribute3=attribute).getFormat())>-1)for(var rtpMapAttributes=this.getRtpMapAttributes(),_i=0,rtpMapAttributes_1=rtpMapAttributes;_i<rtpMapAttributes_1.length;_i++){var attribute4=rtpMapAttributes_1[_i],attribute5=attribute4;fm.liveswitch.Global.equals(payloadType,attribute5.getPayloadType())&&(flag3=!0,fm.liveswitch.Global.equals(attribute2,null)||attribute5.addRelatedRtcpFeedbackAttribute(attribute2),fm.liveswitch.Global.equals(attribute3,null)||attribute5.setRelatedFormatParametersAttribute(attribute3))}flag3||fm.liveswitch.ArrayExtensions.add(this.__orphanedAttributes,attribute)}else this.__mediaAttributes.addAttribute(attribute);if(fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtpMapAttribute))for(var attribute6=attribute,num2=attribute6.getPayloadType(),attributeArray2=fm.liveswitch.ArrayExtensions.toArray(this.__orphanedAttributes),_a=0,attributeArray2_1=attributeArray2;_a<attributeArray2_1.length;_a++){var attribute7=attributeArray2_1[_a];if(fm.liveswitch.Global.equals(attribute7.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute)){var attribute8=attribute7;fm.liveswitch.Global.equals(attribute8.getPayloadType(),num2)&&(attribute6.addRelatedRtcpFeedbackAttribute(attribute8),fm.liveswitch.ArrayExtensions.remove(this.__orphanedAttributes,attribute7))}else fm.liveswitch.Global.equals(attribute7.getAttributeType(),fm.liveswitch.sdp.AttributeType.FormatParametersAttribute)&&(attribute3=attribute7,fm.liveswitch.Global.equals(attribute3.getFormat(),num2)&&(attribute6.setRelatedFormatParametersAttribute(attribute3),fm.liveswitch.ArrayExtensions.remove(this.__orphanedAttributes,attribute7)))}},MediaDescription.prototype.getBandwidths=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__bandwidths);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getBundleOnly=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(fm.liveswitch.sdp.MediaDescription.getBundleOnlyAttributeFromCollection(this.__mediaAttributes),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getCandidateAttributes=function(){if(0==arguments.length){var attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.IceCandidateAttribute,_var0);return attributes=_var0.getValue(),_var1?attributes:new Array(0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getCategoryAttributes=function(category){if(1==arguments.length){for(var list=new Array,_i=0,_a=this.__mediaAttributes.toArray();_i<_a.length;_i++){var attribute=_a[_i];fm.liveswitch.Global.equals(attribute.getMultiplexingCategory(),category)&&fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getCcmFirFeedbackAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),this.getRtcpFeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getFir());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getCcmLrrFeedbackAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),this.getRtcpFeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getLrr());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getConnectionData=function(){if(0==arguments.length)return this._connectionData;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getCryptoAttributes=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getCryptoAttributesFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getEncryptionKey=function(){if(0==arguments.length)return this._encryptionKey;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getFingerprintAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getFingerprintAttributeFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getFormatParametersAttribute=function(payloadType){if(1==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);var attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpMapAttribute,_var0);if(attributes=_var0.getValue(),_var1&&!fm.liveswitch.Global.equals(attributes,null))for(var _i=0,attributes_2=attributes;_i<attributes_2.length;_i++){var attribute=attributes_2[_i],attribute2=attribute;if(fm.liveswitch.Global.equals(attribute2.getPayloadType(),payloadType))return attribute2.getRelatedFormatParametersAttribute()}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getFormatParameterValue=function(payloadType,formatParameterName){if(2==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);var rtpMapAttribute=this.getRtpMapAttribute(payloadType);if(fm.liveswitch.Global.equals(rtpMapAttribute,null))return null;var relatedFormatParametersAttribute=rtpMapAttribute.getRelatedFormatParametersAttribute();if(fm.liveswitch.Global.equals(relatedFormatParametersAttribute,null)){if(relatedFormatParametersAttribute=this.getFormatParametersAttribute(payloadType),fm.liveswitch.Global.equals(relatedFormatParametersAttribute,null))return null;rtpMapAttribute.setRelatedFormatParametersAttribute(relatedFormatParametersAttribute)}var str=null,_var0=new fm.liveswitch.Holder(str);relatedFormatParametersAttribute.tryGetFormatSpecificParameter(formatParameterName,_var0);return str=_var0.getValue()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIceOptionAttributes=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getIceOptionAttributesFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIcePasswordAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getIcePasswordAttributeFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIceUfragAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getIceUfragAttributeFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIdenticalCategoryAttributes=function(){if(0==arguments.length)return this.getCategoryAttributes(fm.liveswitch.sdp.AttributeCategory.Identical);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIsApplication=function(){if(0==arguments.length)return this.isMediaType(fm.liveswitch.sdp.MediaType.getApplication());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIsAudio=function(){if(0==arguments.length)return this.isMediaType(fm.liveswitch.sdp.MediaType.getAudio());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIsMessage=function(){if(0==arguments.length)return this.isMediaType(fm.liveswitch.sdp.MediaType.getMessage());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIsMuted=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getIsMutedFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIsText=function(){if(0==arguments.length)return this.isMediaType(fm.liveswitch.sdp.MediaType.getText());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getIsVideo=function(){if(0==arguments.length)return this.isMediaType(fm.liveswitch.sdp.MediaType.getVideo());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getMaxPacketTimeAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.MaxPacketTimeAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getMedia=function(){if(0==arguments.length)return this._media;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getMediaAttributes=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=this.__mediaAttributes.toArray();_i<_a.length;_i++){var attribute=_a[_i];if(fm.liveswitch.ArrayExtensions.add(list,attribute),fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtpMapAttribute)){var attribute2=attribute,relatedRtcpFeedbackAttributes=attribute2.getRelatedRtcpFeedbackAttributes();if(!fm.liveswitch.Global.equals(relatedRtcpFeedbackAttributes,null))for(var _b=0,relatedRtcpFeedbackAttributes_1=relatedRtcpFeedbackAttributes;_b<relatedRtcpFeedbackAttributes_1.length;_b++){var attribute3=relatedRtcpFeedbackAttributes_1[_b];fm.liveswitch.ArrayExtensions.add(list,attribute3)}var relatedFormatParametersAttribute=attribute2.getRelatedFormatParametersAttribute();fm.liveswitch.Global.equals(relatedFormatParametersAttribute,null)||fm.liveswitch.ArrayExtensions.add(list,relatedFormatParametersAttribute)}}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getMediaStreamIdentifierAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.MediaStreamIdAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getMediaTitle=function(){if(0==arguments.length)return this._mediaTitle;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getNackFeedbackAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),this.getRtcpFeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getNackPliFeedbackAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),this.getRtcpFeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getPli());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getNackRpsiFeedbackAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),this.getRtcpFeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getRpsi());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getNackSliFeedbackAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),this.getRtcpFeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getSli());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getPacketTimeAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.PacketTimeAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getPreferredRtpMapAttributes=function(){if(0==arguments.length){var media=this.getMedia();if(fm.liveswitch.Global.equals(media,null))return new Array(0);var list=new Array,formatDescription=media.getFormatDescription();if(!fm.liveswitch.Global.equals(formatDescription,null))for(var strArray=fm.liveswitch.StringExtensions.split(formatDescription,[32]),_i=0,strArray_5=strArray;_i<strArray_5.length;_i++){var str2=strArray_5[_i],intResult=0,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str2,_var0);intResult=_var0.getValue(),_var1&&fm.liveswitch.ArrayExtensions.add(list,this.getRtpMapAttribute(intResult)||fm.liveswitch.sdp.rtp.MapAttribute.getIanaMapAttribute(intResult))}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getQualityAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getQualityAttributeFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRidAttribute=function(rid){if(1==arguments.length){var attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpRidAttribute,_var0);if(attributes=_var0.getValue(),_var1)for(var _i=0,attributes_3=attributes;_i<attributes_3.length;_i++){var attribute=attributes_3[_i],attribute2=attribute;if(fm.liveswitch.Global.equals(attribute2.getId(),rid))return attribute2}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRidAttributes=function(){if(0==arguments.length){var list=new Array,attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpRidAttribute,_var0);if(attributes=_var0.getValue(),_var1)for(var _i=0,attributes_4=attributes;_i<attributes_4.length;_i++){var attribute=attributes_4[_i];fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}if(1==arguments.length){for(var direction=arguments[0],_a=(list=new Array,0),_b=this.getRidAttributes();_a<_b.length;_a++){attribute=_b[_a];fm.liveswitch.Global.equals(attribute.getDirection(),direction)&&fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRtcpAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.RtcpAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRtcpFeedbackAttribute=function(payloadType,type,subType){if(3==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);var attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpMapAttribute,_var0);if(attributes=_var0.getValue(),_var1)for(var _i=0,attributes_5=attributes;_i<attributes_5.length;_i++){var attribute=attributes_5[_i],attribute2=attribute;if(fm.liveswitch.Global.equals(attribute2.getPayloadType(),payloadType))return attribute2.getRelatedRtcpFeedbackAttribute(payloadType,type,subType)}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRtcpMultiplexingSupported=function(){if(0==arguments.length){var rtcpMultiplexingSupportFromCollection=fm.liveswitch.sdp.MediaDescription.getRtcpMultiplexingSupportFromCollection(this.__mediaAttributes);return rtcpMultiplexingSupportFromCollection||(rtcpMultiplexingSupportFromCollection=!fm.liveswitch.Global.equals(fm.liveswitch.sdp.MediaDescription.getBundleOnlyAttributeFromCollection(this.__mediaAttributes),null)),rtcpMultiplexingSupportFromCollection}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRtcpMuxAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.RtcpMuxAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRtpExtMapAttributes=function(){if(0==arguments.length){var attributes=null,_var0=new fm.liveswitch.Holder(attributes);this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpExtMapAttribute,_var0);return attributes=_var0.getValue(),fm.liveswitch.Global.equals(attributes,null)?new Array(0):attributes}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRtpMapAttribute=function(){if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isNumber(arguments[1]))){var formatName=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]);return this.getRtpMapAttribute(formatName,clockRate,null)}if(3==arguments.length){formatName=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]);var formatParameters=arguments[2],rtpMapAttributeIndex=-1,_var0=new fm.liveswitch.Holder(rtpMapAttributeIndex),_var1=this.getRtpMapAttribute(formatName,clockRate,formatParameters,_var0);return rtpMapAttributeIndex=_var0.getValue(),_var1}if(4==arguments.length){formatName=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]),formatParameters=arguments[2];(rtpMapAttributeIndex=arguments[3]).setValue(-1);for(var rtpMapAttributes=this.getRtpMapAttributes(),attribute=null,i=0;i<rtpMapAttributes.length;i++)if(attribute=rtpMapAttributes[i],fm.liveswitch.Global.equals(attribute.getFormatName(),formatName)&&fm.liveswitch.Global.equals(attribute.getClockRate(),clockRate)&&fm.liveswitch.Global.equals(attribute.getFormatParameters(),formatParameters))return rtpMapAttributeIndex.setValue(i),attribute;return null}if(1==arguments.length){var payloadType=fm.liveswitch.Global.toInt(arguments[0]);rtpMapAttributeIndex=-1,_var0=new fm.liveswitch.Holder(rtpMapAttributeIndex),_var1=this.getRtpMapAttribute(payloadType,_var0);return rtpMapAttributeIndex=_var0.getValue(),_var1}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.Holder<number>]"))){payloadType=fm.liveswitch.Global.toInt(arguments[0]);(rtpMapAttributeIndex=arguments[1]).setValue(-1);for(rtpMapAttributes=this.getRtpMapAttributes(),attribute=null,i=0;i<rtpMapAttributes.length;i++)if(attribute=rtpMapAttributes[i],fm.liveswitch.Global.equals(attribute.getPayloadType(),payloadType))return rtpMapAttributeIndex.setValue(i),attribute;return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getRtpMapAttributes=function(){if(0==arguments.length){var list=new Array,attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpMapAttribute,_var0);if(attributes=_var0.getValue(),_var1)for(var _i=0,attributes_6=attributes;_i<attributes_6.length;_i++){var attribute=attributes_6[_i];fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}if(3==arguments.length){var formatName=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]),formatParameters=arguments[2],rtpMapAttributeIndices=new Array(0);_var0=new fm.liveswitch.Holder(rtpMapAttributeIndices),_var1=this.getRtpMapAttributes(formatName,clockRate,formatParameters,_var0);return rtpMapAttributeIndices=_var0.getValue(),_var1}if(4==arguments.length){formatName=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]),formatParameters=arguments[2],rtpMapAttributeIndices=arguments[3];var num=void 0,rtpMapAttributes=this.getRtpMapAttributes(),item=null,list2=(list=new Array,new Array);for(num=0;num<rtpMapAttributes.length;num++)item=rtpMapAttributes[num],fm.liveswitch.Global.equals(item.getFormatName(),formatName)&&fm.liveswitch.Global.equals(item.getClockRate(),clockRate)&&fm.liveswitch.Global.equals(item.getFormatParameters(),formatParameters)&&(fm.liveswitch.ArrayExtensions.add(list,item),fm.liveswitch.ArrayExtensions.add(list2,num));if(fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(list2),0))return rtpMapAttributeIndices.setValue(new Array(0)),new Array(0);for(rtpMapAttributeIndices.setValue(new Array(fm.liveswitch.ArrayExtensions.getCount(list2))),num=0;num<fm.liveswitch.ArrayExtensions.getCount(list2);num++)rtpMapAttributeIndices.getValue()[num]=list2[num];return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSctpMapAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.SctpMapAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSctpMaxMessageSizeAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.SctpMaxMessageSizeAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSctpPortAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.SctpPortAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSetupAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getSetupAttributeFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSimulcastAttribute=function(){if(0==arguments.length){var attribute=null,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__mediaAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.SimulcastAttribute,_var0);return attribute=_var0.getValue(),_var1?attribute:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSsrcAttribute=function(){if(2==arguments.length){for(var ssrc=fm.liveswitch.Global.toInt(arguments[0]),name_15=arguments[1],ssrcAttributes=this.getSsrcAttributes(ssrc,name_15),index=0;index<ssrcAttributes.length;)return ssrcAttributes[index];return null}if(3==arguments.length){ssrc=fm.liveswitch.Global.toInt(arguments[0]);for(var name_16=arguments[1],value=arguments[2],_i=0,_a=this.getSsrcAttributes(ssrc,name_16);_i<_a.length;_i++){var attribute=_a[_i];if(fm.liveswitch.Global.equals(attribute.getValue(),value))return attribute}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSsrcAttributes=function(){if(0==arguments.length){var attributes=null,_var0=new fm.liveswitch.Holder(attributes);this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpSsrcAttribute,_var0);attributes=_var0.getValue();for(var list=new Array,_i=0,attributes_7=attributes;_i<attributes_7.length;_i++){var attribute=attributes_7[_i];fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){for(var name_17=arguments[0],_a=(list=new Array,0),_b=this.getSsrcAttributes();_a<_b.length;_a++){attribute=_b[_a];fm.liveswitch.Global.equals(attribute.getName(),name_17)&&fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){for(var ssrc=fm.liveswitch.Global.toInt(arguments[0]),_c=(list=new Array,0),_d=this.getSsrcAttributes();_c<_d.length;_c++){attribute=_d[_c];fm.liveswitch.Global.equals(attribute.getSynchronizationSource(),ssrc)&&fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}if(2==arguments.length){ssrc=fm.liveswitch.Global.toInt(arguments[0]);for(var name_18=arguments[1],_e=(list=new Array,0),_f=this.getSsrcAttributes(ssrc);_e<_f.length;_e++){attribute=_f[_e];fm.liveswitch.Global.equals(attribute.getName(),name_18)&&fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSsrcGroupAttributes=function(){if(0==arguments.length){var attributes=null,_var0=new fm.liveswitch.Holder(attributes);this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.RtpSsrcGroupAttribute,_var0);attributes=_var0.getValue();for(var list=new Array,_i=0,attributes_8=attributes;_i<attributes_8.length;_i++){var attribute=attributes_8[_i];fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSsrcGroupSsrcs=function(semantics){if(1==arguments.length){for(var _i=0,_a=this.getSsrcGroupAttributes();_i<_a.length;_i++){var attribute=_a[_i];if(fm.liveswitch.Global.equals(attribute.getSemantics(),semantics))return attribute.getSynchronizationSources()}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getStreamDirection=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getStreamDirectionFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getSupportsIce=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getSupportsIceFromCollection(this.__mediaAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.getTransportCategoryAttributes=function(){if(0==arguments.length)return this.getCategoryAttributes(fm.liveswitch.sdp.AttributeCategory.Transport);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.insertMediaAttribute=function(attribute,index){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");index=fm.liveswitch.Global.toInt(arguments[1]),this.addMediaAttribute(attribute)},MediaDescription.prototype.isMediaType=function(mediaType){if(1==arguments.length){var media=this.getMedia();return!fm.liveswitch.Global.equals(media,null)&&fm.liveswitch.Global.equals(media.getMediaType(),mediaType)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.orderFormats=function(names){if(1==arguments.length){var media=this.getMedia();if(fm.liveswitch.Global.equals(media,null))return!1;for(var strArray=fm.liveswitch.StringExtensions.split(media.getFormatDescription(),[32]),list=new Array,list2=new Array,_i=0,strArray_6=strArray;_i<strArray_6.length;_i++){var str=strArray_6[_i],intResult=0,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str,_var0);if(intResult=_var0.getValue(),_var1){var rtpMapAttribute=this.getRtpMapAttribute(intResult);fm.liveswitch.Global.equals(rtpMapAttribute,null)||fm.liveswitch.ArrayExtensions.add(list2,rtpMapAttribute)}}for(var _a=0,names_1=names;_a<names_1.length;_a++)for(var str2=names_1[_a],_b=0,list2_1=list2;_b<list2_1.length;_b++){var attribute=list2_1[_b];fm.liveswitch.StringExtensions.isEqual(attribute.getFormatName(),str2,fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)&&fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.NumberExtensions.toString(attribute.getPayloadType()))}for(var _c=0,list2_2=list2;_c<list2_2.length;_c++){attribute=list2_2[_c];for(var flag=!1,_d=0,list_5=list;_d<list_5.length;_d++){var str3=list_5[_d];if(fm.liveswitch.Global.equals(str3,fm.liveswitch.NumberExtensions.toString(attribute.getPayloadType()))){flag=!0;break}}flag||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.NumberExtensions.toString(attribute.getPayloadType()))}return media.setFormatDescription(fm.liveswitch.StringExtensions.join(" ",fm.liveswitch.ArrayExtensions.toArray(list))),!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.purgeFormat=function(){if(1==arguments.length){var name_19=arguments[0];return this.purgeFormat(name_19,-1)}if(2==arguments.length){var name_20=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]);return this.purgeFormat(name_20,clockRate,-1)}if(3==arguments.length){for(var name_21=arguments[0],channelCount=(clockRate=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.toInt(arguments[2])),flag=!1,rtpMapAttributes=this.getRtpMapAttributes(),_i=0,rtpMapAttributes_2=rtpMapAttributes;_i<rtpMapAttributes_2.length;_i++){var attribute=rtpMapAttributes_2[_i];fm.liveswitch.StringExtensions.isEqual(attribute.getFormatName(),name_21,fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)&&(fm.liveswitch.Global.equals(clockRate,-1)||fm.liveswitch.Global.equals(clockRate,attribute.getClockRate()))&&(fm.liveswitch.Global.equals(channelCount,-1)||fm.liveswitch.Global.equals(fm.liveswitch.NumberExtensions.toString(channelCount),attribute.getFormatParameters()))&&this.purgeRtpMapAttribute(attribute)&&(flag=!0)}return flag}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.purgeRtpMapAttribute=function(rtpMapAttribute){if(1==arguments.length){var media=this.getMedia();if(fm.liveswitch.Global.equals(media,null))return!1;if(!this.removeMediaAttribute(rtpMapAttribute))return!1;var str=fm.liveswitch.NumberExtensions.toString(rtpMapAttribute.getPayloadType()),relatedRtcpFeedbackAttributes=rtpMapAttribute.getRelatedRtcpFeedbackAttributes();if(!fm.liveswitch.Global.equals(relatedRtcpFeedbackAttributes,null))for(var _i=0,relatedRtcpFeedbackAttributes_2=relatedRtcpFeedbackAttributes;_i<relatedRtcpFeedbackAttributes_2.length;_i++){var attribute=relatedRtcpFeedbackAttributes_2[_i];this.removeMediaAttribute(attribute)}var relatedFormatParametersAttribute=rtpMapAttribute.getRelatedFormatParametersAttribute();fm.liveswitch.Global.equals(relatedFormatParametersAttribute,null)||this.removeMediaAttribute(relatedFormatParametersAttribute);var formatDescription=media.getFormatDescription();if(!fm.liveswitch.Global.equals(formatDescription,null)){for(var list=new Array,strArray=fm.liveswitch.StringExtensions.split(formatDescription,[32]),_a=0,strArray_7=strArray;_a<strArray_7.length;_a++){var str3=strArray_7[_a];fm.liveswitch.Global.equals(str3,str)||fm.liveswitch.ArrayExtensions.add(list,str3)}media.setFormatDescription(fm.liveswitch.StringExtensions.join(" ",fm.liveswitch.ArrayExtensions.toArray(list)))}for(var _b=0,_c=this.getRtpMapAttributes();_b<_c.length;_b++){var attribute3=_c[_b];if(fm.liveswitch.StringExtensions.isEqual(attribute3.getFormatName(),"rtx",fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)){var attribute4=attribute3.getRelatedFormatParametersAttribute();!fm.liveswitch.Global.equals(attribute4,null)&&fm.liveswitch.Global.equals(attribute4.getFormatSpecificParameter("apt"),str)&&this.purgeRtpMapAttribute(attribute3)}}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.removeBandwidth=function(bandwidth){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.remove(this.__bandwidths,bandwidth);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.removeBundleCategoryAttributes=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.removeTransportCategoryAttributes(),this.removeIdenticalCategoryAttributes()},MediaDescription.prototype.removeIdenticalCategoryAttributes=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var identicalCategoryAttributes=this.getIdenticalCategoryAttributes(),_i=0,identicalCategoryAttributes_1=identicalCategoryAttributes;_i<identicalCategoryAttributes_1.length;_i++){var attribute=identicalCategoryAttributes_1[_i];this.__mediaAttributes.remove(attribute)}},MediaDescription.prototype.removeMediaAttribute=function(attribute){if(1==arguments.length){var attribute4=void 0,flag=void 0,_var0=attribute.getAttributeType();do{if(_var0==fm.liveswitch.sdp.AttributeType.FormatParametersAttribute){for(var attribute2=attribute,_i=0,rtpMapAttributes_3=this.getRtpMapAttributes();_i<rtpMapAttributes_3.length;_i++){if(attribute4=rtpMapAttributes_3[_i],!fm.liveswitch.Global.equals(attribute4.getRelatedFormatParametersAttribute(),null)&&(flag=fm.liveswitch.Global.equals(attribute4.getRelatedFormatParametersAttribute().getFormat(),attribute2.getFormat())))return attribute4.setRelatedFormatParametersAttribute(null),flag}break}if(_var0==fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute){for(var attribute5=attribute,_a=0,rtpMapAttributes_4=this.getRtpMapAttributes();_a<rtpMapAttributes_4.length;_a++){if(attribute4=rtpMapAttributes_4[_a],!fm.liveswitch.Global.equals(attribute4.getRelatedRtcpFeedbackAttributes(),null)&&(flag=attribute4.removeRelatedRtcpFeedbackAttribute(attribute5)))return flag}break}return this.__mediaAttributes.remove(attribute)}while(0);return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.removeTransportCategoryAttributes=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var transportCategoryAttributes=this.getTransportCategoryAttributes(),_i=0,transportCategoryAttributes_1=transportCategoryAttributes;_i<transportCategoryAttributes_1.length;_i++){var attribute=transportCategoryAttributes_1[_i];this.__mediaAttributes.remove(attribute)}},MediaDescription.prototype.setConnectionData=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionData=value},MediaDescription.prototype.setEncryptionKey=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._encryptionKey=value},MediaDescription.prototype.setFormatParameterValue=function(payloadType,formatParameterName,formatParameterValue){if(3==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);var rtpMapAttributeIndex=-1,_var0=new fm.liveswitch.Holder(rtpMapAttributeIndex),_var1=this.getRtpMapAttribute(payloadType,_var0);rtpMapAttributeIndex=_var0.getValue();var rtpMapAttribute=_var1;if(fm.liveswitch.Global.equals(rtpMapAttribute,null))return!1;var relatedFormatParametersAttribute=rtpMapAttribute.getRelatedFormatParametersAttribute();return fm.liveswitch.Global.equals(relatedFormatParametersAttribute,null)&&(relatedFormatParametersAttribute=this.getFormatParametersAttribute(payloadType),fm.liveswitch.Global.equals(relatedFormatParametersAttribute,null)&&(relatedFormatParametersAttribute=new fm.liveswitch.sdp.FormatParametersAttribute(payloadType),this.insertMediaAttribute(relatedFormatParametersAttribute,rtpMapAttributeIndex+1)),rtpMapAttribute.setRelatedFormatParametersAttribute(relatedFormatParametersAttribute)),relatedFormatParametersAttribute.setFormatSpecificParameter(formatParameterName,formatParameterValue),!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.setIsMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(value){var attribute=new fm.liveswitch.sdp.MutedAttribute(value);this.__mediaAttributes.replaceAttribute(attribute)}else{var attributes=null,_var0=new fm.liveswitch.Holder(attributes),_var1=this.__mediaAttributes.tryGetAttributes(fm.liveswitch.sdp.AttributeType.MutedAttribute,_var0);if(attributes=_var0.getValue(),_var1)for(var _i=0,attributes_9=attributes;_i<attributes_9.length;_i++){var attribute2=attributes_9[_i];this.removeMediaAttribute(attribute2)}}},MediaDescription.prototype.setMedia=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._media=value},MediaDescription.prototype.setMediaTitle=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaTitle=value},MediaDescription.prototype.setQualityAttribute=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__mediaAttributes.replaceAttribute(value)},MediaDescription.prototype.setRtcpAttribute=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__mediaAttributes.replaceAttribute(value)},MediaDescription.prototype.setRtcpMultiplexingSupported=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var rtcpMultiplexingSupportFromCollection=fm.liveswitch.sdp.MediaDescription.getRtcpMultiplexingSupportFromCollection(this.__mediaAttributes);value?rtcpMultiplexingSupportFromCollection||this.addMediaAttribute(new fm.liveswitch.sdp.rtcp.MuxAttribute):rtcpMultiplexingSupportFromCollection&&this.__mediaAttributes.remove(fm.liveswitch.sdp.AttributeType.RtcpMuxAttribute)},MediaDescription.prototype.setSetupAttribute=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__mediaAttributes.replaceAttribute(value)},MediaDescription.prototype.setStreamDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var attribute=fm.liveswitch.sdp.DirectionAttribute.generateDirectionAttribute(value);this.__mediaAttributes.replaceAttribute(attribute)},MediaDescription.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(fm.liveswitch.StringExtensions.concat(this.getMedia().toString(),"\r\n")),fm.liveswitch.Global.equals(this.getMediaTitle(),null)||builder.append(fm.liveswitch.StringExtensions.concat("i=",this.getMediaTitle(),"\r\n")),fm.liveswitch.Global.equals(this.getConnectionData(),null)||builder.append(fm.liveswitch.StringExtensions.concat(this.getConnectionData().toString(),"\r\n"));for(var _i=0,_a=this.getBandwidths();_i<_a.length;_i++){var bandwidth=_a[_i];builder.append(fm.liveswitch.StringExtensions.concat(bandwidth.toString(),"\r\n"))}fm.liveswitch.Global.equals(this.getEncryptionKey(),null)||builder.append(fm.liveswitch.StringExtensions.concat(this.getEncryptionKey().toString(),"\r\n"));for(var _b=0,_c=this.__mediaAttributes.toArray();_b<_c.length;_b++){var attribute=_c[_b];if(builder.append(fm.liveswitch.StringExtensions.concat(attribute.toString(),"\r\n")),fm.liveswitch.Global.equals(attribute.getAttributeType(),fm.liveswitch.sdp.AttributeType.RtpMapAttribute)){var attribute2=attribute,relatedRtcpFeedbackAttributes=attribute2.getRelatedRtcpFeedbackAttributes();if(!fm.liveswitch.Global.equals(relatedRtcpFeedbackAttributes,null))for(var _d=0,relatedRtcpFeedbackAttributes_3=relatedRtcpFeedbackAttributes;_d<relatedRtcpFeedbackAttributes_3.length;_d++){var attribute3=relatedRtcpFeedbackAttributes_3[_d];builder.append(fm.liveswitch.StringExtensions.concat(attribute3.toString(),"\r\n"))}var relatedFormatParametersAttribute=attribute2.getRelatedFormatParametersAttribute();fm.liveswitch.Global.equals(relatedFormatParametersAttribute,null)||builder.append(fm.liveswitch.StringExtensions.concat(relatedFormatParametersAttribute.toString(),"\r\n"))}}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaDescription.prototype.updateQualityAttributeValue=function(quality){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");quality=fm.liveswitch.Global.toInt(arguments[0]),this.__mediaAttributes.replaceAttribute(new fm.liveswitch.sdp.QualityAttribute(quality))},MediaDescription}();sdp.MediaDescription=MediaDescription}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var MediaStreamIdAttribute=function(_super){function MediaStreamIdAttribute(idValue){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var idValue_1=__arguments[0];return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.MediaStreamIdAttribute),_this.setIdentificationTag(idValue_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(MediaStreamIdAttribute,_super),MediaStreamIdAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.MediaStreamIdAttribute],"+_super.prototype.getTypeString.call(this)},MediaStreamIdAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.MediaStreamIdAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getIdentificationTag();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdAttribute.prototype.getIdentificationTag=function(){if(0==arguments.length)return this._identificationTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdAttribute.prototype.setIdentificationTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._identificationTag=value},MediaStreamIdAttribute}(fm.liveswitch.sdp.Attribute);sdp.MediaStreamIdAttribute=MediaStreamIdAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var MediaStreamIdSemanticAttribute=function(_super){function MediaStreamIdSemanticAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length){var semanticToken=__arguments[0];(__arguments=new Array(2))[0]=semanticToken,__arguments[1]="*";var semanticToken_1=__arguments[0],msidList=__arguments[1];_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.MediaStreamIdSemanticAttribute),_this.setSemanticToken(semanticToken_1),_this.setMsIdList(msidList),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");semanticToken=__arguments[0],msidList=__arguments[1];_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.MediaStreamIdSemanticAttribute),_this.setSemanticToken(semanticToken),_this.setMsIdList(msidList),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal)}return _this}return __extends(MediaStreamIdSemanticAttribute,_super),MediaStreamIdSemanticAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.MediaStreamIdSemanticAttribute],"+_super.prototype.getTypeString.call(this)},MediaStreamIdSemanticAttribute.fromAttributeValue=function(value){if(1==arguments.length){var strArray=fm.liveswitch.StringExtensions.split(value,[32]);if(fm.liveswitch.Global.equals(strArray.length,0))return new fm.liveswitch.sdp.MediaStreamIdSemanticAttribute(fm.liveswitch.sdp.MediaStreamIdSemanticToken.Wms);var semanticToken=strArray[0],semanticTokenFromString=fm.liveswitch.sdp.MediaStreamIdSemanticAttribute.getSemanticTokenFromString(semanticToken);return fm.liveswitch.Global.equals(strArray.length,1)?new fm.liveswitch.sdp.MediaStreamIdSemanticAttribute(semanticTokenFromString):new fm.liveswitch.sdp.MediaStreamIdSemanticAttribute(semanticTokenFromString,value.substring(fm.liveswitch.StringExtensions.getLength(semanticToken)+1))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdSemanticAttribute.getSemanticTokenFromString=function(semanticToken){if(1==arguments.length){var str=semanticToken;return!fm.liveswitch.Global.equals(str,null)&&fm.liveswitch.Global.equals(str,"WMS"),fm.liveswitch.sdp.MediaStreamIdSemanticToken.Wms}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdSemanticAttribute.getSemanticTokenString=function(semanticToken){if(1==arguments.length)return fm.liveswitch.Global.equals(semanticToken,fm.liveswitch.sdp.MediaStreamIdSemanticToken.Wms),"WMS";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdSemanticAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isNullOrEmpty(this.getMsIdList())?fm.liveswitch.sdp.MediaStreamIdSemanticAttribute.getSemanticTokenString(this.getSemanticToken()):fm.liveswitch.StringExtensions.concat(fm.liveswitch.sdp.MediaStreamIdSemanticAttribute.getSemanticTokenString(this.getSemanticToken())," ",this.getMsIdList());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdSemanticAttribute.prototype.getMsIdList=function(){if(0==arguments.length)return this._msIdList;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdSemanticAttribute.prototype.getSemanticToken=function(){if(0==arguments.length)return this._semanticToken;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdSemanticAttribute.prototype.setMsIdList=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._msIdList=value},MediaStreamIdSemanticAttribute.prototype.setSemanticToken=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._semanticToken=value},MediaStreamIdSemanticAttribute}(fm.liveswitch.sdp.Attribute);sdp.MediaStreamIdSemanticAttribute=MediaStreamIdSemanticAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var MediaStreamIdSemanticTokenWrapper=function(){function MediaStreamIdSemanticTokenWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_32=__arguments[0];this._value=value_32}return MediaStreamIdSemanticTokenWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.MediaStreamIdSemanticTokenWrapper]"},MediaStreamIdSemanticTokenWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.sdp.MediaStreamIdSemanticToken.Wms?"Wms":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamIdSemanticTokenWrapper}();sdp.MediaStreamIdSemanticTokenWrapper=MediaStreamIdSemanticTokenWrapper}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var MediaType=function(){function MediaType(){}return MediaType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.MediaType]"},MediaType.fromStreamType=function(streamType){if(1==arguments.length){if(fm.liveswitch.Global.equals(streamType,fm.liveswitch.StreamType.Audio))return fm.liveswitch.sdp.MediaType.getAudio();if(fm.liveswitch.Global.equals(streamType,fm.liveswitch.StreamType.Video))return fm.liveswitch.sdp.MediaType.getVideo();if(!fm.liveswitch.Global.equals(streamType,fm.liveswitch.StreamType.Application)){if(fm.liveswitch.Global.equals(streamType,fm.liveswitch.StreamType.Message))return fm.liveswitch.sdp.MediaType.getMessage();if(fm.liveswitch.Global.equals(streamType,fm.liveswitch.StreamType.Text))return fm.liveswitch.sdp.MediaType.getText()}return fm.liveswitch.sdp.MediaType.getApplication()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaType.getApplication=function(){if(0==arguments.length)return"application";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaType.getAudio=function(){if(0==arguments.length)return"audio";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaType.getMessage=function(){if(0==arguments.length)return"message";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaType.getText=function(){if(0==arguments.length)return"text";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaType.getVideo=function(){if(0==arguments.length)return"video";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaType.toStreamType=function(mediaType){if(1==arguments.length){if(fm.liveswitch.Global.equals(mediaType,fm.liveswitch.sdp.MediaType.getAudio()))return fm.liveswitch.StreamType.Audio;if(fm.liveswitch.Global.equals(mediaType,fm.liveswitch.sdp.MediaType.getVideo()))return fm.liveswitch.StreamType.Video;if(!fm.liveswitch.Global.equals(mediaType,fm.liveswitch.sdp.MediaType.getApplication())){if(fm.liveswitch.Global.equals(mediaType,fm.liveswitch.sdp.MediaType.getMessage()))return fm.liveswitch.StreamType.Message;if(fm.liveswitch.Global.equals(mediaType,fm.liveswitch.sdp.MediaType.getText()))return fm.liveswitch.StreamType.Text}return fm.liveswitch.StreamType.Application}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaType}();sdp.MediaType=MediaType}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Message=function(){function Message(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length){var origin_5=__arguments[0];(__arguments=new Array(2))[0]=origin_5,__arguments[1]=null;var origin_6=__arguments[0],sessionName=__arguments[1];(__arguments=new Array(3))[0]=origin_6,__arguments[1]=sessionName,__arguments[2]=null;var origin_7=__arguments[0],sessionName_1=__arguments[1],timeDescriptions=__arguments[2];if(this.__bandwidths=new Array,this.__timeDescriptions=new Array,this.__sessionAttributes=new fm.liveswitch.sdp.AttributeCollection,this.__mediaDescriptions=new Array,fm.liveswitch.Global.equals(origin_7,null))throw new fm.liveswitch.Exception("origin cannot be null.");fm.liveswitch.Global.equals(timeDescriptions,null)&&(timeDescriptions=[new fm.liveswitch.sdp.TimeDescription(new fm.liveswitch.sdp.Timing)]),(fm.liveswitch.Global.equals(sessionName_1,null)||fm.liveswitch.StringExtensions.isNullOrEmpty(fm.liveswitch.StringExtensions.trim(sessionName_1)))&&(sessionName_1="-"),this.setProtocolVersion("0"),this.setOrigin(origin_7),this.setSessionName(fm.liveswitch.StringExtensions.trim(sessionName_1)),fm.liveswitch.ArrayExtensions.addRange(this.__timeDescriptions,timeDescriptions)}else if(2==__arguments.length){var origin_8=__arguments[0];sessionName=__arguments[1];(__arguments=new Array(3))[0]=origin_8,__arguments[1]=sessionName,__arguments[2]=null;var origin_9=__arguments[0],sessionName_2=__arguments[1];timeDescriptions=__arguments[2];if(this.__bandwidths=new Array,this.__timeDescriptions=new Array,this.__sessionAttributes=new fm.liveswitch.sdp.AttributeCollection,this.__mediaDescriptions=new Array,fm.liveswitch.Global.equals(origin_9,null))throw new fm.liveswitch.Exception("origin cannot be null.");fm.liveswitch.Global.equals(timeDescriptions,null)&&(timeDescriptions=[new fm.liveswitch.sdp.TimeDescription(new fm.liveswitch.sdp.Timing)]),(fm.liveswitch.Global.equals(sessionName_2,null)||fm.liveswitch.StringExtensions.isNullOrEmpty(fm.liveswitch.StringExtensions.trim(sessionName_2)))&&(sessionName_2="-"),this.setProtocolVersion("0"),this.setOrigin(origin_9),this.setSessionName(fm.liveswitch.StringExtensions.trim(sessionName_2)),fm.liveswitch.ArrayExtensions.addRange(this.__timeDescriptions,timeDescriptions)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var origin_10=__arguments[0];sessionName=__arguments[1],timeDescriptions=__arguments[2];if(this.__bandwidths=new Array,this.__timeDescriptions=new Array,this.__sessionAttributes=new fm.liveswitch.sdp.AttributeCollection,this.__mediaDescriptions=new Array,fm.liveswitch.Global.equals(origin_10,null))throw new fm.liveswitch.Exception("origin cannot be null.");fm.liveswitch.Global.equals(timeDescriptions,null)&&(timeDescriptions=[new fm.liveswitch.sdp.TimeDescription(new fm.liveswitch.sdp.Timing)]),(fm.liveswitch.Global.equals(sessionName,null)||fm.liveswitch.StringExtensions.isNullOrEmpty(fm.liveswitch.StringExtensions.trim(sessionName)))&&(sessionName="-"),this.setProtocolVersion("0"),this.setOrigin(origin_10),this.setSessionName(fm.liveswitch.StringExtensions.trim(sessionName)),fm.liveswitch.ArrayExtensions.addRange(this.__timeDescriptions,timeDescriptions)}}return Message.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Message]"},Message.parse=function(s){if(1==arguments.length){var strArray=fm.liveswitch.sdp.Utility.splitAndClean(s);if(!fm.liveswitch.Global.equals(strArray[0].charCodeAt(0),118)||!fm.liveswitch.Global.equals(strArray[1].charCodeAt(0),111)||!fm.liveswitch.Global.equals(strArray[2].charCodeAt(0),115))return null;var origin_11=fm.liveswitch.sdp.Origin.parse(strArray[1].substring(2)),sessionName=strArray[2].substring(2),message=new fm.liveswitch.sdp.Message(origin_11,sessionName);message.removeTimeDescriptions();for(var i=3;i<strArray.length;i++){var num2=void 0,str4=void 0,str2=strArray[i];if(fm.liveswitch.Global.equals(str2.charCodeAt(0),105))message.setSessionInformation(str2.substring(2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),117))try{message.setUri(new fm.liveswitch.Uri(str2.substring(2)))}catch(exception1){}else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),101))message.setEmailAddress(str2.substring(2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),112))message.setPhoneNumber(str2.substring(2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),99))message.setConnectionData(fm.liveswitch.sdp.ConnectionData.parse(str2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),98))message.addBandwidth(fm.liveswitch.sdp.Bandwidth.parse(str2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),116)){var str3=str2;for(num2=i+1;num2<strArray.length&&(str4=strArray[num2],fm.liveswitch.Global.equals(str4.charCodeAt(0),114));)str3=fm.liveswitch.StringExtensions.concat(str3,"\n",str4),i++,num2++;message.addTimeDescription(fm.liveswitch.sdp.TimeDescription.parse(str3))}else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),122))message.setTimeZoneAdjustments(fm.liveswitch.sdp.TimeZones.parse(str2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),107))message.setEncryptionKey(fm.liveswitch.sdp.EncryptionKey.parse(str2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),97))message.addSessionAttribute(fm.liveswitch.sdp.Attribute.parse(str2));else if(fm.liveswitch.Global.equals(str2.charCodeAt(0),109)){var str5=str2;for(num2=i+1;num2<strArray.length&&(str4=strArray[num2],!fm.liveswitch.Global.equals(str4.charCodeAt(0),109));num2++)str5=fm.liveswitch.StringExtensions.concat(str5,"\n",str4),i++;message.addMediaDescription(fm.liveswitch.sdp.MediaDescription.parse(str5))}}return message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.addBandwidth=function(bandwidth){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__bandwidths,bandwidth)},Message.prototype.addMediaDescription=function(mediaDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__mediaDescriptions,mediaDescription)},Message.prototype.addSessionAttribute=function(attribute){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.sdp.Attribute.isSessionLevel(new fm.liveswitch.Type(attribute.getTypeString()))){if(fm.liveswitch.sdp.Attribute.isMediaLevel(new fm.liveswitch.Type(attribute.getTypeString())))throw new fm.liveswitch.Exception("Attribute is media-only.");throw new fm.liveswitch.Exception("Attribute is not registered.")}this.__sessionAttributes.addAttribute(attribute)},Message.prototype.addTimeDescription=function(timeDescription){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__timeDescriptions,timeDescription)},Message.prototype.findBundleGroups=function(){if(0==arguments.length){var bundling=fm.liveswitch.sdp.GroupSemanticsType.Bundling,groupAttributesFromCollection=fm.liveswitch.sdp.MediaDescription.getGroupAttributesFromCollection(this.__sessionAttributes);if(fm.liveswitch.Global.equals(groupAttributesFromCollection,null))return null;for(var groupArray=new Array(groupAttributesFromCollection.length),i=0;i<groupArray.length;i++){var attribute=groupAttributesFromCollection[i];if(fm.liveswitch.Global.equals(bundling,attribute.getSemantics())){for(var group=new fm.liveswitch.sdp.BundleGroup(bundling),_i=0,_a=attribute.getIds();_i<_a.length;_i++){var str=_a[_i],mediaDescription=this.findMediaDescription(str);fm.liveswitch.Global.equals(mediaDescription,null)||group.addMediaDescription(mediaDescription)}groupArray[i]=group}}return groupArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.findMediaDescription=function(mid){if(1==arguments.length){for(var _i=0,_a=this.getMediaDescriptions();_i<_a.length;_i++){var description=_a[_i],mediaStreamIdentifierAttribute=description.getMediaStreamIdentifierAttribute();if(!fm.liveswitch.Global.equals(mediaStreamIdentifierAttribute,null)&&fm.liveswitch.Global.equals(mediaStreamIdentifierAttribute.getIdentificationTag(),mid))return description}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.findMediaDescriptions=function(mediaType){if(1==arguments.length){for(var list=new Array,_i=0,_a=this.getMediaDescriptions();_i<_a.length;_i++){var description=_a[_i],media=description.getMedia();!fm.liveswitch.Global.equals(media,null)&&fm.liveswitch.Global.equals(media.getMediaType(),mediaType)&&fm.liveswitch.ArrayExtensions.add(list,description)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getApplicationDescription=function(){if(0==arguments.length)return this.getFirstMediaDescription(this.getApplicationDescriptions());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getApplicationDescriptions=function(){if(0==arguments.length)return this.findMediaDescriptions(fm.liveswitch.sdp.MediaType.getApplication());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getAudioDescription=function(){if(0==arguments.length)return this.getFirstMediaDescription(this.getAudioDescriptions());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getAudioDescriptions=function(){if(0==arguments.length)return this.findMediaDescriptions(fm.liveswitch.sdp.MediaType.getAudio());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getBandwidths=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__bandwidths);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getBundleGroups=function(){if(0==arguments.length)return this.findBundleGroups();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getBundlingSupport=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getBundlingSupportFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getConnectionData=function(){if(0==arguments.length)return this._connectionData;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getEmailAddress=function(){if(0==arguments.length)return this._emailAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getEncryptionKey=function(){if(0==arguments.length)return this._encryptionKey;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getFirstMediaDescription=function(mediaDescriptions){if(1==arguments.length)return fm.liveswitch.Global.equals(mediaDescriptions,null)||fm.liveswitch.Global.equals(mediaDescriptions.length,0)?null:mediaDescriptions[0];throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getMediaDescriptions=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__mediaDescriptions);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getMessageDescription=function(){if(0==arguments.length)return this.getFirstMediaDescription(this.getMessageDescriptions());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getMessageDescriptions=function(){if(0==arguments.length)return this.findMediaDescriptions(fm.liveswitch.sdp.MediaType.getMessage());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getOrigin=function(){if(0==arguments.length)return this._origin;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getPhoneNumber=function(){if(0==arguments.length)return this._phoneNumber;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getProtocolVersion=function(){if(0==arguments.length)return this._protocolVersion;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionAttributes=function(){if(0==arguments.length)return this.__sessionAttributes.toArray();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionInformation=function(){if(0==arguments.length)return this._sessionInformation;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelCryptoAttributes=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getCryptoAttributesFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelDirection=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getStreamDirectionFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelFingerprintAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getFingerprintAttributeFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelIceOptionAttributes=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getIceOptionAttributesFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelIcePasswordAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getIcePasswordAttributeFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelIceUfragAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getIceUfragAttributeFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelRtcpMultiplexingSupport=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getRtcpMultiplexingSupportFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelRtpExtMapAttributes=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getRtpExtMapAttributesFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionLevelSetupAttribute=function(){if(0==arguments.length)return fm.liveswitch.sdp.MediaDescription.getSetupAttributeFromCollection(this.__sessionAttributes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSessionName=function(){if(0==arguments.length)return this._sessionName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSupportsRtcpMultiplexing=function(){if(0==arguments.length){if(this.getSessionLevelRtcpMultiplexingSupport())return!0;if(this.getBundlingSupport())return!0;for(var flag3=!0,_i=0,_a=this.__mediaDescriptions;_i<_a.length;_i++){var description=_a[_i];(description.getIsAudio()||description.getIsVideo())&&(flag3=flag3&&description.getRtcpMultiplexingSupported())}return flag3}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSupportsTrickleIce=function(){if(0==arguments.length){var attribute=null,attribute2=void 0,_var0=new fm.liveswitch.Holder(attribute),_var1=this.__sessionAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.IceOptionsAttribute,_var0);if(attribute=_var0.getValue(),_var1&&(attribute2=attribute).getTrickleOptionSet())return!0;for(var flag2=!0,_i=0,_a=this.getMediaDescriptions();_i<_a.length;_i++){for(var description=_a[_i],flag3=!1,iceOptionAttributes=description.getIceOptionAttributes(),_b=0,iceOptionAttributes_1=iceOptionAttributes;_b<iceOptionAttributes_1.length;_b++){var attribute3=iceOptionAttributes_1[_b];attribute2=attribute3,flag3=flag3||attribute2.getTrickleOptionSet()}flag2=flag2&&flag3}return flag2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getTextDescription=function(){if(0==arguments.length)return this.getFirstMediaDescription(this.getTextDescriptions());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getTextDescriptions=function(){if(0==arguments.length)return this.findMediaDescriptions(fm.liveswitch.sdp.MediaType.getText());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getTimeDescriptions=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__timeDescriptions);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getTimeZoneAdjustments=function(){if(0==arguments.length)return this._timeZoneAdjustments;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getUri=function(){if(0==arguments.length)return this._uri;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getVideoDescription=function(){if(0==arguments.length)return this.getFirstMediaDescription(this.getVideoDescriptions());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getVideoDescriptions=function(){if(0==arguments.length)return this.findMediaDescriptions(fm.liveswitch.sdp.MediaType.getVideo());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.insertMediaDescription=function(index,mediaDescription){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");index=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.ArrayExtensions.insert(this.__mediaDescriptions,index,mediaDescription)},Message.prototype.removeBandwidth=function(bandwidth){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.remove(this.__bandwidths,bandwidth);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.removeMediaDescription=function(mediaDescription){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.remove(this.__mediaDescriptions,mediaDescription);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.removeSessionAttribute=function(attributeType){if(1==arguments.length)return this.__sessionAttributes.remove(attributeType);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.removeTimeDescription=function(timeDescription){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.remove(this.__timeDescriptions,timeDescription);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.removeTimeDescriptions=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__timeDescriptions=new Array},Message.prototype.setConnectionData=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionData=value},Message.prototype.setEmailAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._emailAddress=value},Message.prototype.setEncryptionKey=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._encryptionKey=value},Message.prototype.setOrigin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._origin=value},Message.prototype.setPhoneNumber=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._phoneNumber=value},Message.prototype.setProtocolVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._protocolVersion=value},Message.prototype.setSessionInformation=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sessionInformation=value},Message.prototype.setSessionName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sessionName=value},Message.prototype.setSupportsTrickleIce=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var attribute=null,attribute3=void 0,_i=0,_a=this.getMediaDescriptions();_i<_a.length;_i++){for(var description=_a[_i],iceOptionAttributes=description.getIceOptionAttributes(),list=new Array,_b=0,iceOptionAttributes_2=iceOptionAttributes;_b<iceOptionAttributes_2.length;_b++){var attribute2=iceOptionAttributes_2[_b];(attribute3=attribute2).setTrickleOptionSet(!1),fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(attribute3.getTags()),0)&&fm.liveswitch.ArrayExtensions.add(list,attribute3)}for(var _c=0,list_6=list;_c<list_6.length;_c++){var attribute4=list_6[_c];description.removeMediaAttribute(attribute4)}}var _var0=new fm.liveswitch.Holder(attribute),_var1=this.__sessionAttributes.tryGetAttribute(fm.liveswitch.sdp.AttributeType.IceOptionsAttribute,_var0);if(attribute=_var0.getValue(),_var1){(attribute3=attribute).setTrickleOptionSet(value);var tags=attribute3.getTags();(fm.liveswitch.Global.equals(tags,null)||fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(tags),0))&&this.__sessionAttributes.remove(attribute3)}else if(value){var list5=new Array;fm.liveswitch.ArrayExtensions.add(list5,new fm.liveswitch.sdp.ice.TrickleIceOptionTag);var list4=list5;this.addSessionAttribute(new fm.liveswitch.sdp.ice.OptionsAttribute(list4))}},Message.prototype.setTimeZoneAdjustments=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._timeZoneAdjustments=value},Message.prototype.setUri=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._uri=value},Message.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(fm.liveswitch.StringExtensions.concat("v=",this.getProtocolVersion(),"\r\n")),builder.append(fm.liveswitch.StringExtensions.concat("o=",this.getOrigin().toString(),"\r\n")),builder.append(fm.liveswitch.StringExtensions.concat("s=",this.getSessionName(),"\r\n")),fm.liveswitch.Global.equals(this.getSessionInformation(),null)||builder.append(fm.liveswitch.StringExtensions.concat("i=",this.getSessionInformation(),"\r\n")),fm.liveswitch.Global.equals(this.getUri(),null)||builder.append(fm.liveswitch.StringExtensions.concat("u=",this.getUri().toString(),"\r\n")),fm.liveswitch.Global.equals(this.getEmailAddress(),null)||builder.append(fm.liveswitch.StringExtensions.concat("e=",this.getEmailAddress(),"\r\n")),fm.liveswitch.Global.equals(this.getPhoneNumber(),null)||builder.append(fm.liveswitch.StringExtensions.concat("p=",this.getPhoneNumber(),"\r\n")),fm.liveswitch.Global.equals(this.getConnectionData(),null)||builder.append(fm.liveswitch.StringExtensions.concat(this.getConnectionData().toString(),"\r\n"));for(var _i=0,_a=this.getBandwidths();_i<_a.length;_i++){var bandwidth=_a[_i];builder.append(fm.liveswitch.StringExtensions.concat(bandwidth.toString(),"\r\n"))}for(var _b=0,_c=this.getTimeDescriptions();_b<_c.length;_b++){var description=_c[_b];builder.append(description.toString())}fm.liveswitch.Global.equals(this.getTimeZoneAdjustments(),null)||builder.append(fm.liveswitch.StringExtensions.concat(this.getTimeZoneAdjustments().toString(),"\r\n")),fm.liveswitch.Global.equals(this.getEncryptionKey(),null)||builder.append(fm.liveswitch.StringExtensions.concat(this.getEncryptionKey().toString(),"\r\n"));for(var _d=0,_e=this.getSessionAttributes();_d<_e.length;_d++){var attribute=_e[_d];builder.append(fm.liveswitch.StringExtensions.concat(attribute.toString(),"\r\n"))}for(var _f=0,_g=this.getMediaDescriptions();_f<_g.length;_f++){var description2=_g[_f];builder.append(description2.toString())}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.updateSetupValue=function(setupValue){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.removeSessionAttribute(fm.liveswitch.sdp.AttributeType.SetupAttribute);var attribute=new fm.liveswitch.sdp.SetupAttribute(setupValue);this.addSessionAttribute(attribute)},Message}();sdp.Message=Message}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var NetworkType=function(){function NetworkType(){}return NetworkType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.NetworkType]"},NetworkType.getInternet=function(){if(0==arguments.length)return"IN";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkType}();sdp.NetworkType=NetworkType}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Orientation=function(){function Orientation(){}return Orientation.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Orientation]"},Orientation.getLandscape=function(){if(0==arguments.length)return"landscape";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Orientation.getPortrait=function(){if(0==arguments.length)return"portrait";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Orientation.getSeascape=function(){if(0==arguments.length)return"seascape";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Orientation}();sdp.Orientation=Orientation}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var OrientationAttribute=function(_super){function OrientationAttribute(orientation){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var orientation_1=__arguments[0];return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.OrientationAttribute),_this.setOrientation(orientation_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(OrientationAttribute,_super),OrientationAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.OrientationAttribute],"+_super.prototype.getTypeString.call(this)},OrientationAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.OrientationAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OrientationAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getOrientation();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OrientationAttribute.prototype.getOrientation=function(){if(0==arguments.length)return this._orientation;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OrientationAttribute.prototype.setOrientation=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._orientation=value},OrientationAttribute}(fm.liveswitch.sdp.Attribute);sdp.OrientationAttribute=OrientationAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Origin=function(){function Origin(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length){var unicastAddress=__arguments[0];(__arguments=new Array(2))[0]=unicastAddress,__arguments[1]="-";var unicastAddress_1=__arguments[0],username=__arguments[1];if(this.fmliveswitchsdpOriginInit(),fm.liveswitch.Global.equals(unicastAddress_1,null))throw new fm.liveswitch.Exception("unicastAddress cannot be null.");this.setUsername(username),this.setSessionId(this.generateSessionId()),this.setSessionVersion(this.generateSessionVersion()),this.setNetworkType(fm.liveswitch.sdp.NetworkType.getInternet()),this.setAddressType(fm.liveswitch.sdp.AddressType.getAddressTypeForAddress(unicastAddress_1)),this.setUnicastAddress(unicastAddress_1)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");unicastAddress=__arguments[0],username=__arguments[1];if(this.fmliveswitchsdpOriginInit(),fm.liveswitch.Global.equals(unicastAddress,null))throw new fm.liveswitch.Exception("unicastAddress cannot be null.");this.setUsername(username),this.setSessionId(this.generateSessionId()),this.setSessionVersion(this.generateSessionVersion()),this.setNetworkType(fm.liveswitch.sdp.NetworkType.getInternet()),this.setAddressType(fm.liveswitch.sdp.AddressType.getAddressTypeForAddress(unicastAddress)),this.setUnicastAddress(unicastAddress)}}return Origin.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Origin]"},Origin.prototype.fmliveswitchsdpOriginInit=function(){this._sessionId=0,this._sessionVersion=0},Origin.parse=function(s){if(1==arguments.length){var strArray=fm.liveswitch.StringExtensions.split(s,[32]),username=strArray[0],unicastAddress=strArray[5],origin_12=new fm.liveswitch.sdp.Origin(unicastAddress,username);return origin_12.setSessionId(fm.liveswitch.ParseAssistant.parseLongValue(strArray[1])),origin_12.setSessionVersion(fm.liveswitch.ParseAssistant.parseLongValue(strArray[2])),origin_12.setNetworkType(strArray[3]),origin_12.setAddressType(strArray[4]),origin_12}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.generateSessionId=function(){if(0==arguments.length)return fm.liveswitch.LockedRandomizer.nextLong();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.generateSessionVersion=function(){if(0==arguments.length)return fm.liveswitch.UnixTimestamp.getUtcNow();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.getAddressType=function(){if(0==arguments.length)return this._addressType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.getNetworkType=function(){if(0==arguments.length)return this._networkType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.getSessionId=function(){if(0==arguments.length)return this._sessionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.getSessionVersion=function(){if(0==arguments.length)return this._sessionVersion;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.getUnicastAddress=function(){if(0==arguments.length)return this._unicastAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.getUsername=function(){if(0==arguments.length)return this._username;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin.prototype.setAddressType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._addressType=value},Origin.prototype.setNetworkType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._networkType=value},Origin.prototype.setSessionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sessionId=fm.liveswitch.Global.toInt(value)},Origin.prototype.setSessionVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sessionVersion=fm.liveswitch.Global.toInt(value)},Origin.prototype.setUnicastAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._unicastAddress=value},Origin.prototype.setUsername=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._username=value},Origin.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(this.getUsername()),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getSessionId())),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getSessionVersion())),builder.append(" "),builder.append(this.getNetworkType()),builder.append(" "),builder.append(this.getAddressType()),builder.append(" "),builder.append(this.getUnicastAddress()),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Origin}();sdp.Origin=Origin}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var PacketTimeAttribute=function(_super){function PacketTimeAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpPacketTimeAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.PacketTimeAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var packetTime=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpPacketTimeAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.PacketTimeAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),_this.setPacketTime(packetTime)}return _this}return __extends(PacketTimeAttribute,_super),PacketTimeAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.PacketTimeAttribute],"+_super.prototype.getTypeString.call(this)},PacketTimeAttribute.prototype.fmliveswitchsdpPacketTimeAttributeInit=function(){this._packetTime=0},PacketTimeAttribute.fromAttributeValue=function(value){if(1==arguments.length){var attribute=new fm.liveswitch.sdp.PacketTimeAttribute;return attribute.setPacketTime(fm.liveswitch.ParseAssistant.parseIntegerValue(value)),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PacketTimeAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return fm.liveswitch.NumberExtensions.toString(this.getPacketTime());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PacketTimeAttribute.prototype.getPacketTime=function(){if(0==arguments.length)return this._packetTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PacketTimeAttribute.prototype.setPacketTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._packetTime=fm.liveswitch.Global.toInt(value)},PacketTimeAttribute}(fm.liveswitch.sdp.Attribute);sdp.PacketTimeAttribute=PacketTimeAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var PromptEncryptionKey=function(_super){function PromptEncryptionKey(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(PromptEncryptionKey,_super),PromptEncryptionKey.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.PromptEncryptionKey],"+_super.prototype.getTypeString.call(this)},PromptEncryptionKey.prototype.getMethodAndValue=function(){if(0==arguments.length)return"prompt";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PromptEncryptionKey}(fm.liveswitch.sdp.EncryptionKey);sdp.PromptEncryptionKey=PromptEncryptionKey}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var QualityAttribute=function(_super){function QualityAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpQualityAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.QualityAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var quality=__arguments[0];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpQualityAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.QualityAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),quality<0||quality>10)throw new fm.liveswitch.Exception("quality must be a value in the range 0 to 10.");_this.setQuality(quality)}return _this}return __extends(QualityAttribute,_super),QualityAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.QualityAttribute],"+_super.prototype.getTypeString.call(this)},QualityAttribute.prototype.fmliveswitchsdpQualityAttributeInit=function(){this._quality=0},QualityAttribute.fromAttributeValue=function(value){if(1==arguments.length){var attribute=new fm.liveswitch.sdp.QualityAttribute;return attribute.setQuality(fm.liveswitch.ParseAssistant.parseByteValue(value)),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},QualityAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return fm.liveswitch.NumberExtensions.toString(this.getQuality());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},QualityAttribute.prototype.getQuality=function(){if(0==arguments.length)return this._quality;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},QualityAttribute.prototype.setQuality=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._quality=fm.liveswitch.Global.toInt(value)},QualityAttribute}(fm.liveswitch.sdp.Attribute);sdp.QualityAttribute=QualityAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var ReceiveOnlyAttribute=function(_super){function ReceiveOnlyAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.DirectionAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(ReceiveOnlyAttribute,_super),ReceiveOnlyAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ReceiveOnlyAttribute],"+_super.prototype.getTypeString.call(this)},ReceiveOnlyAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.ReceiveOnlyAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ReceiveOnlyAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ReceiveOnlyAttribute.prototype.getStreamDirection=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.ReceiveOnly;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ReceiveOnlyAttribute}(fm.liveswitch.sdp.DirectionAttribute);sdp.ReceiveOnlyAttribute=ReceiveOnlyAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var RepeatTime=function(){function RepeatTime(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2==__arguments.length){var repeatInterval=__arguments[0],activeDuration=__arguments[1];(__arguments=new Array(3))[0]=repeatInterval,__arguments[1]=activeDuration,__arguments[2]=null;var repeatInterval_1=__arguments[0],activeDuration_1=__arguments[1],offsets=__arguments[2];this.__offsets=new Array,this.setRepeatInterval(repeatInterval_1),this.setActiveDuration(activeDuration_1),fm.liveswitch.Global.equals(offsets,null)||fm.liveswitch.ArrayExtensions.addRange(this.__offsets,offsets)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");repeatInterval=__arguments[0],activeDuration=__arguments[1],offsets=__arguments[2];this.__offsets=new Array,this.setRepeatInterval(repeatInterval),this.setActiveDuration(activeDuration),fm.liveswitch.Global.equals(offsets,null)||fm.liveswitch.ArrayExtensions.addRange(this.__offsets,offsets)}}return RepeatTime.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.RepeatTime]"},RepeatTime.parse=function(s){if(1==arguments.length){s=s.substring(2);for(var strArray=fm.liveswitch.StringExtensions.split(s,[32]),repeatInterval=new fm.liveswitch.TimeSpan(0,0,fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[0])),activeDuration=new fm.liveswitch.TimeSpan(0,0,fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[1])),time=new fm.liveswitch.sdp.RepeatTime(repeatInterval,activeDuration),i=2;i<strArray.length;i++)time.addOffset(new fm.liveswitch.TimeSpan(0,0,fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[2])));return time}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RepeatTime.prototype.addOffset=function(offset){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__offsets,offset)},RepeatTime.prototype.getActiveDuration=function(){if(0==arguments.length)return this._activeDuration;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RepeatTime.prototype.getOffsets=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__offsets);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RepeatTime.prototype.getRepeatInterval=function(){if(0==arguments.length)return this._repeatInterval;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RepeatTime.prototype.removeOffset=function(offset){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.remove(this.__offsets,offset);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RepeatTime.prototype.setActiveDuration=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._activeDuration=value},RepeatTime.prototype.setRepeatInterval=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._repeatInterval=value},RepeatTime.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append("r="),builder.append(fm.liveswitch.NumberExtensions.toString(this.getRepeatInterval().getTotalSeconds())),builder.append(" ");var totalSeconds=this.getActiveDuration().getTotalSeconds();builder.append(fm.liveswitch.NumberExtensions.toString(totalSeconds));for(var _i=0,_a=this.getOffsets();_i<_a.length;_i++){var span=_a[_i];builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(span.getTotalSeconds()))}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RepeatTime}();sdp.RepeatTime=RepeatTime}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtcp){var Attribute=function(_super){function Attribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdprtcpAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtcpAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var port=__arguments[0],connectionAddress=__arguments[1];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtcpAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtcpAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),fm.liveswitch.Global.equals(connectionAddress,null))throw new fm.liveswitch.Exception("connectionAddress cannot be null.");_this.update(port,connectionAddress)}return _this}return __extends(Attribute,_super),Attribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtcp.Attribute],"+_super.prototype.getTypeString.call(this)},Attribute.prototype.fmliveswitchsdprtcpAttributeInit=function(){this._port=0},Attribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),num2=0,str=null,str2=null,str3=null;fm.liveswitch.Global.equals(index,-1)?num2=fm.liveswitch.ParseAssistant.parseIntegerValue(value):(num2=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,index)),value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," "),str=fm.liveswitch.StringExtensions.substring(value,0,index),value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," "),str2=fm.liveswitch.StringExtensions.substring(value,0,index),str3=value=value.substring(index+1));var attribute=new fm.liveswitch.sdp.rtcp.Attribute;return attribute.setPort(num2),attribute.setNetworkType(str),attribute.setAddressType(str2),attribute.setConnectionAddress(str3),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.getAddressType=function(){if(0==arguments.length)return this._addressType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getPort())),fm.liveswitch.Global.equals(this.getConnectionAddress(),null)||(builder.append(" "),builder.append(this.getNetworkType()),builder.append(" "),builder.append(this.getAddressType()),builder.append(" "),builder.append(this.getConnectionAddress())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.getConnectionAddress=function(){if(0==arguments.length)return this._connectionAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.getNetworkType=function(){if(0==arguments.length)return this._networkType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.getPort=function(){if(0==arguments.length)return this._port;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Attribute.prototype.setAddressType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._addressType=value},Attribute.prototype.setConnectionAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionAddress=value},Attribute.prototype.setNetworkType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._networkType=value},Attribute.prototype.setPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._port=fm.liveswitch.Global.toInt(value)},Attribute.prototype.update=function(port,connectionAddress){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");port=fm.liveswitch.Global.toInt(arguments[0]),this.setPort(port),this.setNetworkType(fm.liveswitch.sdp.NetworkType.getInternet()),this.setAddressType(fm.liveswitch.sdp.AddressType.getAddressTypeForAddress(connectionAddress)),this.setConnectionAddress(connectionAddress)},Attribute}(fm.liveswitch.sdp.Attribute);rtcp.Attribute=Attribute}(sdp.rtcp||(sdp.rtcp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtcp){var FeedbackAttribute=function(_super){function FeedbackAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdprtcpFeedbackAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT);else if(2==__arguments.length){var payloadType=__arguments[0],type=__arguments[1];(__arguments=new Array(3))[0]=payloadType,__arguments[1]=type,__arguments[2]=null;var payloadType_1=__arguments[0],type_6=__arguments[1],subtype=__arguments[2];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtcpFeedbackAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),_this.setPayloadType(payloadType_1),_this.setType(type_6),_this.setSubType(subtype)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");payloadType=__arguments[0],type=__arguments[1],subtype=__arguments[2];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtcpFeedbackAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtcpFeedbackAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),_this.setPayloadType(payloadType),_this.setType(type),_this.setSubType(subtype)}return _this}return __extends(FeedbackAttribute,_super),FeedbackAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtcp.FeedbackAttribute],"+_super.prototype.getTypeString.call(this)},FeedbackAttribute.prototype.fmliveswitchsdprtcpFeedbackAttributeInit=function(){this._payloadType=0},FeedbackAttribute.ccmFirAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getFir());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.ccmLrrAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getLrr());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.ccmTmmbnAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getTmmbn());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.ccmTmmbrAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getTmmbr());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.fromAttributeValue=function(value){if(1==arguments.length){var wildcardPayloadType=fm.liveswitch.sdp.rtcp.FeedbackAttribute.getWildcardPayloadType(),index=fm.liveswitch.StringExtensions.indexOf(value," ");if(index<0)return fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.concat("Could not parse SDP attribute (RTCP feedback): ",value)),null;var s=fm.liveswitch.StringExtensions.substring(value,0,index);fm.liveswitch.Global.equals(s,"*")||(wildcardPayloadType=fm.liveswitch.ParseAssistant.parseIntegerValue(s));var str2=value=value.substring(index+1),str3=null;(index=fm.liveswitch.StringExtensions.indexOf(value," "))>=0&&(str2=fm.liveswitch.StringExtensions.substring(value,0,index),str3=value=value.substring(index+1));var attribute=new fm.liveswitch.sdp.rtcp.FeedbackAttribute;return attribute.setPayloadType(wildcardPayloadType),attribute.setType(str2),attribute.setSubType(str3),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.getWildcardPayloadType=function(){if(0==arguments.length)return-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.nackAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.nackPliAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getPli());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.nackRpsiAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getRpsi());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.nackSliAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getSli());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.rembAttribute=function(payloadType){if(1==arguments.length)return payloadType=fm.liveswitch.Global.toInt(arguments[0]),new fm.liveswitch.sdp.rtcp.FeedbackAttribute(payloadType,fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getRemb());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var str=fm.liveswitch.Global.equals(this.getPayloadType(),fm.liveswitch.sdp.rtcp.FeedbackAttribute.getWildcardPayloadType())?"*":fm.liveswitch.NumberExtensions.toString(this.getPayloadType());return fm.liveswitch.Global.equals(this.getSubType(),null)?fm.liveswitch.StringExtensions.format("{0} {1}",str,this.getType()):fm.liveswitch.StringExtensions.format("{0} {1} {2}",str,this.getType(),this.getSubType())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.prototype.getPayloadType=function(){if(0==arguments.length)return this._payloadType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.prototype.getSubType=function(){if(0==arguments.length)return this._subType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttribute.prototype.setPayloadType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._payloadType=fm.liveswitch.Global.toInt(value)},FeedbackAttribute.prototype.setSubType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._subType=value},FeedbackAttribute.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},FeedbackAttribute}(fm.liveswitch.sdp.Attribute);rtcp.FeedbackAttribute=FeedbackAttribute}(sdp.rtcp||(sdp.rtcp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtcp){var FeedbackAttributeSubType=function(){function FeedbackAttributeSubType(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return FeedbackAttributeSubType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType]"},FeedbackAttributeSubType.getFir=function(){if(0==arguments.length)return"fir";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeSubType.getLrr=function(){if(0==arguments.length)return"lrr";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeSubType.getPli=function(){if(0==arguments.length)return"pli";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeSubType.getRpsi=function(){if(0==arguments.length)return"rpsi";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeSubType.getSli=function(){if(0==arguments.length)return"sli";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeSubType.getTmmbn=function(){if(0==arguments.length)return"tmmbn";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeSubType.getTmmbr=function(){if(0==arguments.length)return"tmmbr";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeSubType}();rtcp.FeedbackAttributeSubType=FeedbackAttributeSubType}(sdp.rtcp||(sdp.rtcp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtcp){var FeedbackAttributeType=function(){function FeedbackAttributeType(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return FeedbackAttributeType.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtcp.FeedbackAttributeType]"},FeedbackAttributeType.getAck=function(){if(0==arguments.length)return"ack";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeType.getApp=function(){if(0==arguments.length)return"app";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeType.getCcm=function(){if(0==arguments.length)return"ccm";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeType.getNack=function(){if(0==arguments.length)return"nack";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeType.getRemb=function(){if(0==arguments.length)return"goog-remb";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeType}();rtcp.FeedbackAttributeType=FeedbackAttributeType}(sdp.rtcp||(sdp.rtcp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtcp){var MuxAttribute=function(_super){function MuxAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtcpMuxAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Identical),_this}return __extends(MuxAttribute,_super),MuxAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtcp.MuxAttribute],"+_super.prototype.getTypeString.call(this)},MuxAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.rtcp.MuxAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MuxAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MuxAttribute}(fm.liveswitch.sdp.Attribute);rtcp.MuxAttribute=MuxAttribute}(sdp.rtcp||(sdp.rtcp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var ExtMapAttribute=function(_super){function ExtMapAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdprtpExtMapAttributeInit(),_this.__direction=fm.liveswitch.StreamDirection.Unset,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpExtMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special);else if(2==__arguments.length){var idValue=__arguments[0],uri=__arguments[1];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpExtMapAttributeInit(),_this.__direction=fm.liveswitch.StreamDirection.Unset,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpExtMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special),_this.setId(idValue),_this.setUri(uri)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");idValue=__arguments[0],uri=__arguments[1];var direction=__arguments[2];(__arguments=new Array(2))[0]=idValue,__arguments[1]=uri;var idValue_2=__arguments[0],uri_1=__arguments[1];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpExtMapAttributeInit(),_this.__direction=fm.liveswitch.StreamDirection.Unset,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpExtMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special),_this.setId(idValue_2),_this.setUri(uri_1),_this.setDirection(direction)}return _this}return __extends(ExtMapAttribute,_super),ExtMapAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.ExtMapAttribute],"+_super.prototype.getTypeString.call(this)},ExtMapAttribute.prototype.fmliveswitchsdprtpExtMapAttributeInit=function(){this._id=0},ExtMapAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),num2=fm.liveswitch.StringExtensions.indexOf(value,"/"),flag=num2>-1&&index>num2,sendReceive=fm.liveswitch.StreamDirection.SendReceive,idValue=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,num2>-1?fm.liveswitch.MathAssistant.min(index,num2):index));flag&&(sendReceive=fm.liveswitch.StreamDirectionHelper.directionFromString(fm.liveswitch.StringExtensions.substring(value,num2+1,index-num2-1)));var str2=value.substring(index+1),length_39=fm.liveswitch.StringExtensions.indexOf(str2," "),uri="",str4="";fm.liveswitch.Global.equals(length_39,-1)?uri=str2:(uri=fm.liveswitch.StringExtensions.substring(str2,0,length_39),str4=str2.substring(length_39+1));var attribute=new fm.liveswitch.sdp.rtp.ExtMapAttribute(idValue,uri);return flag&&attribute.setDirection(sendReceive),fm.liveswitch.StringExtensions.isNullOrEmpty(str4)||attribute.setExtensionAttributes(str4),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExtMapAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;if(builder.append(fm.liveswitch.NumberExtensions.toString(this.getId())),!fm.liveswitch.Global.equals(this.getDirection(),fm.liveswitch.StreamDirection.Unset)){var str=fm.liveswitch.StreamDirectionHelper.directionToString(this.getDirection());builder.append("/"),builder.append(str)}return builder.append(" "),builder.append(this.getUri()),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getExtensionAttributes())||(builder.append(" "),builder.append(this.getExtensionAttributes())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExtMapAttribute.prototype.getDirection=function(){if(0==arguments.length)return this.__direction;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExtMapAttribute.prototype.getExtensionAttributes=function(){if(0==arguments.length)return this._extensionAttributes;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExtMapAttribute.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExtMapAttribute.prototype.getUri=function(){if(0==arguments.length)return this._uri;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExtMapAttribute.prototype.setDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__direction=value},ExtMapAttribute.prototype.setExtensionAttributes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._extensionAttributes=value},ExtMapAttribute.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._id=fm.liveswitch.Global.toInt(value)},ExtMapAttribute.prototype.setUri=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._uri=value},ExtMapAttribute}(fm.liveswitch.sdp.Attribute);rtp.ExtMapAttribute=ExtMapAttribute}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var FeedbackAttributeCollection=function(){function FeedbackAttributeCollection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__attributes={}}return FeedbackAttributeCollection.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.FeedbackAttributeCollection]"},FeedbackAttributeCollection.prototype.addAttribute=function(attribute){if(1==arguments.length){var key=this.calculateFeedbackAttributeKey(attribute.getPayloadType(),attribute.getType(),attribute.getSubType());return!fm.liveswitch.HashExtensions.containsKey(this.__attributes,key)&&(fm.liveswitch.HashExtensions.add(this.__attributes,key,attribute),!0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeCollection.prototype.calculateFeedbackAttributeKey=function(payloadType,feedbackAttributeType,subType){if(3==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);var str=fm.liveswitch.StringExtensions.isNullOrEmpty(feedbackAttributeType)?"null":feedbackAttributeType,str2=fm.liveswitch.StringExtensions.isNullOrEmpty(subType)?"null":subType,str3=fm.liveswitch.NumberExtensions.toString(payloadType);return fm.liveswitch.StringExtensions.concat([str,"&",str2,"&",str3])}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeCollection.prototype.clear=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.HashExtensions.clear(this.__attributes)},FeedbackAttributeCollection.prototype.remove=function(attribute){if(1==arguments.length){var key=this.calculateFeedbackAttributeKey(attribute.getPayloadType(),attribute.getType(),attribute.getSubType());return fm.liveswitch.HashExtensions.remove(this.__attributes,key)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeCollection.prototype.toArray=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getValues(this.__attributes);_i<_a.length;_i++){var attribute=_a[_i];fm.liveswitch.ArrayExtensions.add(list,attribute)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeCollection.prototype.tryGetFeedbackAttribute=function(payloadType,feedbackAttributeType,subType,feedbackAttribute){if(4==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);var attribute=null,key=this.calculateFeedbackAttributeKey(payloadType,feedbackAttributeType,subType),_var0=new fm.liveswitch.Holder(attribute),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__attributes,key,_var0);return attribute=_var0.getValue(),_var1?(feedbackAttribute.setValue(attribute),!0):(feedbackAttribute.setValue(null),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FeedbackAttributeCollection}();rtp.FeedbackAttributeCollection=FeedbackAttributeCollection}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var MapAttribute=function(_super){function MapAttribute(){var _this=this;fm.liveswitch.sdp.rtp.MapAttribute.fmliveswitchsdprtpMapAttributeInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdprtpMapAttributeInit(),_this.__relatedRtcpFeedbackAttributes=new fm.liveswitch.sdp.rtp.FeedbackAttributeCollection,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT);else if(3==__arguments.length){var payloadType=__arguments[0],formatName=__arguments[1],clockRate=__arguments[2];(__arguments=new Array(4))[0]=payloadType,__arguments[1]=formatName,__arguments[2]=clockRate,__arguments[3]=null;var payloadType_2=__arguments[0],formatName_1=__arguments[1],clockRate_5=__arguments[2],formatParameters=__arguments[3];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpMapAttributeInit(),_this.__relatedRtcpFeedbackAttributes=new fm.liveswitch.sdp.rtp.FeedbackAttributeCollection,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),fm.liveswitch.Global.equals(formatName_1,null))throw new fm.liveswitch.Exception("formatName cannot be null.");_this.setPayloadType(payloadType_2),_this.setFormatName(formatName_1),_this.setClockRate(clockRate_5),_this.setFormatParameters(formatParameters)}else{if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");payloadType=__arguments[0],formatName=__arguments[1],clockRate=__arguments[2],formatParameters=__arguments[3];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpMapAttributeInit(),_this.__relatedRtcpFeedbackAttributes=new fm.liveswitch.sdp.rtp.FeedbackAttributeCollection,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.IdenticalPerPT),fm.liveswitch.Global.equals(formatName,null))throw new fm.liveswitch.Exception("formatName cannot be null.");_this.setPayloadType(payloadType),_this.setFormatName(formatName),_this.setClockRate(clockRate),_this.setFormatParameters(formatParameters)}return _this}return __extends(MapAttribute,_super),MapAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.MapAttribute],"+_super.prototype.getTypeString.call(this)},MapAttribute.prototype.fmliveswitchsdprtpMapAttributeInit=function(){this._clockRate=0,this._payloadType=0},MapAttribute.fromAttributeValue=function(value){if(fm.liveswitch.sdp.rtp.MapAttribute.fmliveswitchsdprtpMapAttributeInitialize(),1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),num2=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,index));value=value.substring(index+1);var length_40=fm.liveswitch.StringExtensions.indexOf(value,"/"),str=fm.liveswitch.StringExtensions.substring(value,0,length_40);value=value.substring(length_40+1),length_40=fm.liveswitch.StringExtensions.indexOf(value,"/");var num4=0,str2=null;fm.liveswitch.Global.equals(length_40,-1)?num4=fm.liveswitch.ParseAssistant.parseIntegerValue(value):(num4=fm.liveswitch.ParseAssistant.parseIntegerValue(fm.liveswitch.StringExtensions.substring(value,0,length_40)),str2=value.substring(length_40+1));var attribute=new fm.liveswitch.sdp.rtp.MapAttribute;return attribute.setPayloadType(num2),attribute.setFormatName(str),attribute.setClockRate(num4),attribute.setFormatParameters(str2),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.getIanaMapAttribute=function(payloadType){if(fm.liveswitch.sdp.rtp.MapAttribute.fmliveswitchsdprtpMapAttributeInitialize(),1==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);var attribute=null,_var0=new fm.liveswitch.Holder(attribute);fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.tryGetValue(fm.liveswitch.NumberExtensions.toString(payloadType),_var0);return attribute=_var0.getValue()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.addRelatedRtcpFeedbackAttribute=function(attribute){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__relatedRtcpFeedbackAttributes.addAttribute(attribute)},MapAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getPayloadType())),builder.append(" "),builder.append(this.getFormatName()),builder.append("/"),builder.append(fm.liveswitch.NumberExtensions.toString(this.getClockRate())),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getFormatParameters())||(builder.append("/"),builder.append(this.getFormatParameters())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getClockRate=function(){if(0==arguments.length)return this._clockRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getFormatName=function(){if(0==arguments.length)return this._formatName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getFormatParameters=function(){if(0==arguments.length)return this._formatParameters;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getPayloadType=function(){if(0==arguments.length)return this._payloadType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedCcmFirFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getFir());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedCcmLrrFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getLrr());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedCcmTmmbnFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getTmmbn());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedCcmTmmbrFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getCcm(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getTmmbr());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedFormatParametersAttribute=function(){if(0==arguments.length)return this._relatedFormatParametersAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedNackFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedNackPliFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getPli());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedNackRpsiFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getRpsi());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedNackSliFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getNack(),fm.liveswitch.sdp.rtcp.FeedbackAttributeSubType.getSli());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedRembFeedbackAttribute=function(){if(0==arguments.length)return this.getRelatedRtcpFeedbackAttribute(fm.liveswitch.sdp.rtcp.FeedbackAttributeType.getRemb(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedRtcpFeedbackAttribute=function(){if(3==arguments.length){for(var payloadType=fm.liveswitch.Global.toInt(arguments[0]),type=arguments[1],subType=arguments[2],_i=0,_a=this.getRelatedRtcpFeedbackAttributes();_i<_a.length;_i++){var attribute=_a[_i];if(!fm.liveswitch.Global.equals(attribute,null)&&fm.liveswitch.Global.equals(attribute.getType(),type)&&fm.liveswitch.Global.equals(attribute.getSubType(),subType)&&fm.liveswitch.Global.equals(attribute.getPayloadType(),payloadType))return attribute}return null}if(2==arguments.length){type=arguments[0],subType=arguments[1];for(var _b=0,_c=this.getRelatedRtcpFeedbackAttributes();_b<_c.length;_b++){attribute=_c[_b];if(!fm.liveswitch.Global.equals(attribute,null)&&fm.liveswitch.Global.equals(attribute.getType(),type)&&fm.liveswitch.Global.equals(attribute.getSubType(),subType))return attribute}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getRelatedRtcpFeedbackAttributes=function(){if(0==arguments.length)return this.__relatedRtcpFeedbackAttributes.toArray();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.removeRelatedRtcpFeedbackAttribute=function(attribute){if(1==arguments.length)return this.__relatedRtcpFeedbackAttributes.remove(attribute);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.resetRtcpFeedbackAttributes=function(attributes){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__relatedRtcpFeedbackAttributes.clear();for(var _i=0,attributes_10=attributes;_i<attributes_10.length;_i++){var attribute=attributes_10[_i];this.__relatedRtcpFeedbackAttributes.addAttribute(attribute)}},MapAttribute.prototype.setClockRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._clockRate=fm.liveswitch.Global.toInt(value)},MapAttribute.prototype.setFormatName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._formatName=value},MapAttribute.prototype.setFormatParameters=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._formatParameters=value},MapAttribute.prototype.setPayloadType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._payloadType=fm.liveswitch.Global.toInt(value)},MapAttribute.prototype.setRelatedFormatParametersAttribute=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._relatedFormatParametersAttribute=value},MapAttribute.fmliveswitchsdprtpMapAttributeInitialize=function(){fm.liveswitch.sdp.rtp.MapAttribute.__fmliveswitchsdprtpMapAttributeInitialized||fm.liveswitch.sdp.rtp.MapAttribute.__fmliveswitchsdprtpMapAttributeInitializing||(fm.liveswitch.sdp.rtp.MapAttribute.__fmliveswitchsdprtpMapAttributeInitializing=!0,fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes=new fm.liveswitch.ManagedConcurrentDictionary,fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("0",new fm.liveswitch.sdp.rtp.MapAttribute(0,"PCMU",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("3",new fm.liveswitch.sdp.rtp.MapAttribute(3,"GSM",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("4",new fm.liveswitch.sdp.rtp.MapAttribute(4,"G723",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("5",new fm.liveswitch.sdp.rtp.MapAttribute(5,"DVI4",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("6",new fm.liveswitch.sdp.rtp.MapAttribute(6,"DVI4",16e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("7",new fm.liveswitch.sdp.rtp.MapAttribute(7,"LPC",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("8",new fm.liveswitch.sdp.rtp.MapAttribute(8,"PCMA",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("9",new fm.liveswitch.sdp.rtp.MapAttribute(9,"G722",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("10",new fm.liveswitch.sdp.rtp.MapAttribute(10,"L16",44100,"2")),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("11",new fm.liveswitch.sdp.rtp.MapAttribute(11,"L16",44100)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("12",new fm.liveswitch.sdp.rtp.MapAttribute(12,"QCELP",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("13",new fm.liveswitch.sdp.rtp.MapAttribute(13,"CN",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("14",new fm.liveswitch.sdp.rtp.MapAttribute(14,"MPA",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("15",new fm.liveswitch.sdp.rtp.MapAttribute(15,"G728",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("16",new fm.liveswitch.sdp.rtp.MapAttribute(16,"DVI4",11025)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("17",new fm.liveswitch.sdp.rtp.MapAttribute(17,"DVI4",22050)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("18",new fm.liveswitch.sdp.rtp.MapAttribute(18,"G729",8e3)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("25",new fm.liveswitch.sdp.rtp.MapAttribute(25,"CelB",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("26",new fm.liveswitch.sdp.rtp.MapAttribute(26,"JPEG",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("28",new fm.liveswitch.sdp.rtp.MapAttribute(28,"nv",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("31",new fm.liveswitch.sdp.rtp.MapAttribute(31,"H261",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("32",new fm.liveswitch.sdp.rtp.MapAttribute(32,"MPV",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("33",new fm.liveswitch.sdp.rtp.MapAttribute(33,"MP2T",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.fm_liveswitch_sdp_rtp_MapAttribute___ianaMapAttributes.addOrUpdate("34",new fm.liveswitch.sdp.rtp.MapAttribute(34,"H263",9e4)),fm.liveswitch.sdp.rtp.MapAttribute.__fmliveswitchsdprtpMapAttributeInitialized=!0,fm.liveswitch.sdp.rtp.MapAttribute.__fmliveswitchsdprtpMapAttributeInitializing=!1)},MapAttribute.__fmliveswitchsdprtpMapAttributeInitialized=!1,MapAttribute.__fmliveswitchsdprtpMapAttributeInitializing=!1,MapAttribute}(fm.liveswitch.sdp.Attribute);rtp.MapAttribute=MapAttribute}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var Media=function(_super){function Media(mediaType,transportPort,transportProtocol,rtpPayloadTypeNumbers){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var mediaType_2=__arguments[0],transportPort_2=__arguments[1],transportProtocol_2=__arguments[2],rtpPayloadTypeNumbers_1=__arguments[3];if(_this=_super.call(this,mediaType_2,transportPort_2,transportProtocol_2)||this,fm.liveswitch.Global.equals(rtpPayloadTypeNumbers_1,null))throw new fm.liveswitch.Exception("rtpPayloadTypeNumbers cannot be null.");for(var strArray=new Array(rtpPayloadTypeNumbers_1.length),i=0;i<rtpPayloadTypeNumbers_1.length;i++)strArray[i]=fm.liveswitch.NumberExtensions.toString(rtpPayloadTypeNumbers_1[i]);return _super.prototype.setFormatDescription.call(_this,fm.liveswitch.StringExtensions.join(" ",strArray)),_this}return __extends(Media,_super),Media.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.Media],"+_super.prototype.getTypeString.call(this)},Media.generateRtpProfile=function(type,rtcpFeedbackSupported,useDtls,useEncryption){if(4==arguments.length){if(!useEncryption&&useDtls)throw new fm.liveswitch.Exception("Cannot generate RTP Profile for the case when DTLS support is required but encryption is not used. Likely, useEncryption must be set.");if(!fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Video)&&!fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Audio))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Cannot generate RTP Profile streams of type other than Audio or Video. {0} type supplied.",new fm.liveswitch.StreamTypeWrapper(type).toString()));return useEncryption?useDtls?rtcpFeedbackSupported?fm.liveswitch.sdp.rtp.Media.getUdpTlsRtpSavpfTransportProtocol():fm.liveswitch.sdp.rtp.Media.getUdpTlsRtpSavpTransportProtocol():rtcpFeedbackSupported?fm.liveswitch.sdp.rtp.Media.getRtpSavpfTransportProtocol():fm.liveswitch.sdp.rtp.Media.getRtpSavpTransportProtocol():rtcpFeedbackSupported?fm.liveswitch.sdp.rtp.Media.getRtpAvpfTransportProtocol():fm.liveswitch.sdp.rtp.Media.getRtpAvpTransportProtocol()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getPayloadTypes=function(formatDesciption){if(1==arguments.length){if(!fm.liveswitch.Global.equals(formatDesciption,null)&&fm.liveswitch.StringExtensions.getLength(formatDesciption)>0){for(var strArray=fm.liveswitch.StringExtensions.split(fm.liveswitch.StringExtensions.trim(formatDesciption),[32]),numArray=new Array(strArray.length),i=0;i<strArray.length;i++)numArray[i]=fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[i]);return numArray}return new Array(0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getRtpAvpfTransportProtocol=function(){if(0==arguments.length)return"RTP/AVPF";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getRtpAvpTransportProtocol=function(){if(0==arguments.length)return"RTP/AVP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getRtpSavpfTransportProtocol=function(){if(0==arguments.length)return"RTP/SAVPF";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getRtpSavpTransportProtocol=function(){if(0==arguments.length)return"RTP/SAVP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getUdpTlsRtpSavpfTransportProtocol=function(){if(0==arguments.length)return"UDP/TLS/RTP/SAVPF";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getUdpTlsRtpSavpTransportProtocol=function(){if(0==arguments.length)return"UDP/TLS/RTP/SAVP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getWellKnownPayloadClockRate=function(payloadType){if(1==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);return 0==payloadType||3==payloadType||4==payloadType||5==payloadType?8e3:6==payloadType?16e3:7==payloadType||8==payloadType||9==payloadType?8e3:10==payloadType||11==payloadType?44100:12==payloadType||13==payloadType?8e3:14==payloadType?9e4:15==payloadType?8e3:16==payloadType?11025:17==payloadType?22050:18==payloadType?8e3:25==payloadType||26==payloadType||28==payloadType||31==payloadType||32==payloadType||33==payloadType||34==payloadType?9e4:-1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getWellKnownPayloadName=function(payloadType){if(1==arguments.length){payloadType=fm.liveswitch.Global.toInt(arguments[0]);return 0==payloadType?"PCMU":3==payloadType?"GSM":4==payloadType?"G723":5==payloadType||6==payloadType?"DVI4":7==payloadType?"LPC":8==payloadType?"PCMA":9==payloadType?"G722":10==payloadType||11==payloadType?"L16":12==payloadType?"QCELP":13==payloadType?"CN":14==payloadType?"MPA":15==payloadType?"G728":16==payloadType||17==payloadType?"DVI4":18==payloadType?"G729":25==payloadType?"CelB":26==payloadType?"JPEG":28==payloadType?"nv":31==payloadType?"H261":32==payloadType?"MPV":33==payloadType?"MP2T":34==payloadType?"H263":null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.supportsEncryption=function(protocol){if(1==arguments.length)return fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.rtp.Media.getUdpTlsRtpSavpTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.rtp.Media.getUdpTlsRtpSavpfTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.rtp.Media.getRtpSavpTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.rtp.Media.getRtpSavpfTransportProtocol());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.supportsRtcpBasedFeedback=function(protocol){if(1==arguments.length)return fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.rtp.Media.getRtpSavpfTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.rtp.Media.getRtpAvpfTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.rtp.Media.getUdpTlsRtpSavpfTransportProtocol());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media}(fm.liveswitch.sdp.Media);rtp.Media=Media}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SimulcastStream=function(){function SimulcastStream(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.sdp.rtp.SimulcastStreamId]"))){var idValue=__arguments[0];(__arguments=new Array(1))[0]=fm.liveswitch.Global.equals(idValue,null)?null:[idValue];var ids=__arguments[0];if(fm.liveswitch.Global.equals(ids,null))throw new fm.liveswitch.Exception("Simulcast stream 'IDs' cannot be null.");if(fm.liveswitch.Global.equals(ids.length,0))throw new fm.liveswitch.Exception("Simulcast stream requires at least one ID.");this.setIds(ids)}else{if(1!=__arguments.length||!(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.sdp.rtp.SimulcastStreamId]"))))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");ids=__arguments[0];if(fm.liveswitch.Global.equals(ids,null))throw new fm.liveswitch.Exception("Simulcast stream 'IDs' cannot be null.");if(fm.liveswitch.Global.equals(ids.length,0))throw new fm.liveswitch.Exception("Simulcast stream requires at least one ID.");this.setIds(ids)}}return SimulcastStream.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SimulcastStream]"},SimulcastStream.prototype.getIds=function(){if(0==arguments.length)return this._ids;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastStream.prototype.setIds=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ids=value},SimulcastStream}();rtp.SimulcastStream=SimulcastStream}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SimulcastDirection=function(){function SimulcastDirection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return SimulcastDirection.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SimulcastDirection]"},SimulcastDirection.getReceive=function(){if(0==arguments.length)return"recv";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastDirection.getSend=function(){if(0==arguments.length)return"send";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastDirection}();rtp.SimulcastDirection=SimulcastDirection}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SimulcastStreamDescription=function(){function SimulcastStreamDescription(direction,streams){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var direction_1=__arguments[0],streams_11=__arguments[1];if(fm.liveswitch.Global.equals(direction_1,null))throw new fm.liveswitch.Exception("Simulcast stream description 'direction' cannot be null.");if(fm.liveswitch.Global.equals(streams_11,null))throw new fm.liveswitch.Exception("Simulcast stream description 'streams' cannot be null.");if(fm.liveswitch.Global.equals(streams_11.length,0))throw new fm.liveswitch.Exception("Simulcast stream description requires at least one stream.");this.setDirection(direction_1),this.setStreams(streams_11)}return SimulcastStreamDescription.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SimulcastStreamDescription]"},SimulcastStreamDescription.prototype.directionIsValid=function(direction){if(1==arguments.length){for(var _i=0,_a=[fm.liveswitch.sdp.rtp.SimulcastDirection.getSend(),fm.liveswitch.sdp.rtp.SimulcastDirection.getReceive()];_i<_a.length;_i++){var str=_a[_i];if(fm.liveswitch.Global.equals(direction,str))return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastStreamDescription.prototype.getDirection=function(){if(0==arguments.length)return this.__direction;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastStreamDescription.prototype.getStreams=function(){if(0==arguments.length)return this._streams;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastStreamDescription.prototype.setDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!this.directionIsValid(value))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Simulcast stream description 'direction' cannot be '{0}'.",value));this.__direction=value},SimulcastStreamDescription.prototype.setStreams=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._streams=value},SimulcastStreamDescription}();rtp.SimulcastStreamDescription=SimulcastStreamDescription}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var RidDirection=function(){function RidDirection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return RidDirection.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.RidDirection]"},RidDirection.getReceive=function(){if(0==arguments.length)return"recv";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidDirection.getSend=function(){if(0==arguments.length)return"send";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidDirection}();rtp.RidDirection=RidDirection}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var RidRestriction=function(){function RidRestriction(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length){var key=__arguments[0];(__arguments=new Array(2))[0]=key,__arguments[1]=null;var key_1=__arguments[0],value=__arguments[1];if(fm.liveswitch.StringExtensions.isNullOrEmpty(key_1))throw new fm.liveswitch.Exception("RID restriction 'key' cannot be null.");this.setKey(key_1),this.setValue(value)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");key=__arguments[0],value=__arguments[1];if(fm.liveswitch.StringExtensions.isNullOrEmpty(key))throw new fm.liveswitch.Exception("RID restriction 'key' cannot be null.");this.setKey(key),this.setValue(value)}}return RidRestriction.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.RidRestriction]"},RidRestriction.getDependKey=function(){if(0==arguments.length)return"depend";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.getMaxBitrateKey=function(){if(0==arguments.length)return"max-br";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.getMaxBitsPerPixelKey=function(){if(0==arguments.length)return"max-bpp";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.getMaxFrameSizeKey=function(){if(0==arguments.length)return"max-fs";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.getMaxFramesPerSecondKey=function(){if(0==arguments.length)return"max-fps";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.getMaxHeightKey=function(){if(0==arguments.length)return"max-height";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.getMaxPixelsPerSecondKey=function(){if(0==arguments.length)return"max-pps";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.getMaxWidthKey=function(){if(0==arguments.length)return"max-width";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.prototype.getKey=function(){if(0==arguments.length)return this._key;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidRestriction.prototype.setKey=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._key=value},RidRestriction.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},RidRestriction}();rtp.RidRestriction=RidRestriction}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var RidAttribute=function(_super){function RidAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpRidAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special);else if(2==__arguments.length){var idValue=__arguments[0],direction=__arguments[1];(__arguments=new Array(4))[0]=idValue,__arguments[1]=direction,__arguments[2]=null,__arguments[3]=null;var idValue_3=__arguments[0],direction_2=__arguments[1],payloadTypes=__arguments[2],restrictions=__arguments[3];if(__arguments=new Array(0),_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpRidAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special),fm.liveswitch.StringExtensions.isNullOrEmpty(idValue_3))throw new fm.liveswitch.Exception("RID 'id' cannot be null.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(direction_2))throw new fm.liveswitch.Exception("RID 'direction' cannot be null.");if(!fm.liveswitch.sdp.rtp.RidAttribute.validateId(idValue_3))throw new fm.liveswitch.Exception("RID 'id' may only conain alphanumeric characters.");_this.setId(idValue_3),_this.setDirection(direction_2),_this.setPayloadTypes(payloadTypes),_this.setRestrictions(restrictions)}else if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isArray(arguments[2])&&(0==arguments[2].length||fm.liveswitch.Util.isNullOrUndefined(arguments[2][0])||fm.liveswitch.Util.isNumber(arguments[2][0])))){idValue=__arguments[0],direction=__arguments[1],payloadTypes=__arguments[2];(__arguments=new Array(4))[0]=idValue,__arguments[1]=direction,__arguments[2]=payloadTypes,__arguments[3]=null;var idValue_4=__arguments[0],direction_3=__arguments[1],payloadTypes_1=__arguments[2];restrictions=__arguments[3];if(__arguments=new Array(0),_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpRidAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special),fm.liveswitch.StringExtensions.isNullOrEmpty(idValue_4))throw new fm.liveswitch.Exception("RID 'id' cannot be null.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(direction_3))throw new fm.liveswitch.Exception("RID 'direction' cannot be null.");if(!fm.liveswitch.sdp.rtp.RidAttribute.validateId(idValue_4))throw new fm.liveswitch.Exception("RID 'id' may only conain alphanumeric characters.");_this.setId(idValue_4),_this.setDirection(direction_3),_this.setPayloadTypes(payloadTypes_1),_this.setRestrictions(restrictions)}else if(4==__arguments.length){idValue=__arguments[0],direction=__arguments[1],payloadTypes=__arguments[2],restrictions=__arguments[3];if(__arguments=new Array(0),_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpRidAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special),fm.liveswitch.StringExtensions.isNullOrEmpty(idValue))throw new fm.liveswitch.Exception("RID 'id' cannot be null.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(direction))throw new fm.liveswitch.Exception("RID 'direction' cannot be null.");if(!fm.liveswitch.sdp.rtp.RidAttribute.validateId(idValue))throw new fm.liveswitch.Exception("RID 'id' may only conain alphanumeric characters.");_this.setId(idValue),_this.setDirection(direction),_this.setPayloadTypes(payloadTypes),_this.setRestrictions(restrictions)}else{if(3!=__arguments.length||!(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isArray(arguments[2])&&(0==arguments[2].length||fm.liveswitch.Util.isNullOrUndefined(arguments[2][0])||fm.liveswitch.Util.isObjectType(arguments[2][0],"[fm.liveswitch.sdp.rtp.RidRestriction]"))))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");idValue=__arguments[0],direction=__arguments[1],restrictions=__arguments[2];(__arguments=new Array(4))[0]=idValue,__arguments[1]=direction,__arguments[2]=null,__arguments[3]=restrictions;var idValue_5=__arguments[0],direction_4=__arguments[1],restrictions_1=(payloadTypes=__arguments[2],__arguments[3]);if(__arguments=new Array(0),_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpRidAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Special),fm.liveswitch.StringExtensions.isNullOrEmpty(idValue_5))throw new fm.liveswitch.Exception("RID 'id' cannot be null.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(direction_4))throw new fm.liveswitch.Exception("RID 'direction' cannot be null.");if(!fm.liveswitch.sdp.rtp.RidAttribute.validateId(idValue_5))throw new fm.liveswitch.Exception("RID 'id' may only conain alphanumeric characters.");_this.setId(idValue_5),_this.setDirection(direction_4),_this.setPayloadTypes(payloadTypes),_this.setRestrictions(restrictions_1)}return _this}return __extends(RidAttribute,_super),RidAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.RidAttribute],"+_super.prototype.getTypeString.call(this)},RidAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),str=fm.liveswitch.StringExtensions.substring(value,0,index);value=value.substring(index+1);var str2=null,numArray=null,restrictionArray=null;if(index=fm.liveswitch.StringExtensions.indexOf(value," "),fm.liveswitch.Global.equals(index,-1))str2=value;else{var str3=void 0,num3=void 0;str2=fm.liveswitch.StringExtensions.substring(value,0,index),value=value.substring(index+1);var strArray=fm.liveswitch.StringExtensions.split(value,[59]),num2=0;if(strArray.length>num2&&fm.liveswitch.StringExtensions.startsWith(strArray[num2],"pt=")){str3=strArray[num2++];var strArray2=fm.liveswitch.StringExtensions.split(str3.substring(3),[44]);for(numArray=new Array(strArray2.length),num3=0;num3<numArray.length;num3++)numArray[num3]=fm.liveswitch.ParseAssistant.parseIntegerValue(strArray2[num3])}if(strArray.length>num2)for(restrictionArray=new Array(strArray.length-num2),num3=0;num3<restrictionArray.length;num3++){str3=strArray[num2++];var length_41=fm.liveswitch.StringExtensions.indexOf(str3,"=");if(fm.liveswitch.Global.equals(length_41,-1))restrictionArray[num3]=new fm.liveswitch.sdp.rtp.RidRestriction(str3);else{var key=fm.liveswitch.StringExtensions.substring(str3,0,length_41),str5=str3.substring(length_41+1);restrictionArray[num3]=new fm.liveswitch.sdp.rtp.RidRestriction(key,str5)}}}var attribute=new fm.liveswitch.sdp.rtp.RidAttribute;return attribute.setId(str),attribute.setDirection(str2),attribute.setPayloadTypes(numArray),attribute.setRestrictions(restrictionArray),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.validateId=function(idValue){if(1==arguments.length){for(var i=0;i<fm.liveswitch.StringExtensions.getLength(idValue);i++){var ch=idValue.charCodeAt(i);if(ch<45||ch>45&&ch<48||ch>57&&ch<65||ch>90&&ch<95||ch>95&&ch<97||ch>122)return!1}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.directionIsValid=function(direction){if(1==arguments.length){for(var _i=0,_a=[fm.liveswitch.sdp.rtp.RidDirection.getSend(),fm.liveswitch.sdp.rtp.RidDirection.getReceive()];_i<_a.length;_i++){var str=_a[_i];if(fm.liveswitch.Global.equals(direction,str))return!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(this.getId()),builder.append(" "),builder.append(this.getDirection());var num=fm.liveswitch.Global.equals(this.getPayloadTypes(),null)?0:this.getPayloadTypes().length,num2=fm.liveswitch.Global.equals(this.getRestrictions(),null)?0:this.getRestrictions().length,strArray=new Array((fm.liveswitch.Global.equals(num,0)?0:1)+num2),num3=0;if(num>0){for(var strArray2=new Array(num),i=0;i<num;i++)strArray2[i]=fm.liveswitch.NumberExtensions.toString(this.getPayloadTypes()[i]);strArray[num3++]=fm.liveswitch.StringExtensions.format("pt={0}",fm.liveswitch.StringExtensions.join(",",strArray2))}if(num2>0)for(var _i=0,_a=this.getRestrictions();_i<_a.length;_i++){var restriction=_a[_i];fm.liveswitch.Global.equals(restriction.getValue(),null)?strArray[num3++]=restriction.getKey():strArray[num3++]=fm.liveswitch.StringExtensions.format("{0}={1}",restriction.getKey(),restriction.getValue())}return strArray.length>0&&(builder.append(" "),builder.append(fm.liveswitch.StringExtensions.join(";",strArray))),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.getDirection=function(){if(0==arguments.length)return this.__direction;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.getPayloadTypes=function(){if(0==arguments.length)return this._payloadTypes;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.getRestrictions=function(){if(0==arguments.length)return this._restrictions;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.getRestrictionValue=function(restrictionKey){if(1==arguments.length){if(!fm.liveswitch.Global.equals(this.getRestrictions(),null))for(var _i=0,_a=this.getRestrictions();_i<_a.length;_i++){var restriction=_a[_i];if(fm.liveswitch.Global.equals(restriction.getKey(),restrictionKey))return restriction.getValue()}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RidAttribute.prototype.setDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!this.directionIsValid(value))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("RID 'direction' cannot be '{0}'.",value));this.__direction=value},RidAttribute.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},RidAttribute.prototype.setPayloadTypes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._payloadTypes=value},RidAttribute.prototype.setRestrictions=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._restrictions=value},RidAttribute}(fm.liveswitch.sdp.Attribute);rtp.RidAttribute=RidAttribute}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SimulcastAttribute=function(_super){function SimulcastAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdprtpSimulcastAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SimulcastAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal);else if(1==__arguments.length){var description=__arguments[0];(__arguments=new Array(2))[0]=description,__arguments[1]=null;var description1=__arguments[0],description2=__arguments[1];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpSimulcastAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SimulcastAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),fm.liveswitch.Global.equals(description1,null))throw new fm.liveswitch.Exception("Simulcast attribute 'description1' cannot be null.");if(!fm.liveswitch.Global.equals(description2,null)&&fm.liveswitch.Global.equals(description1.getDirection(),description2.getDirection()))throw new fm.liveswitch.Exception("Simulcast attribute 'descriptions' must have different directions.");_this.setDescription1(description1),_this.setDescription2(description2)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");description1=__arguments[0],description2=__arguments[1];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpSimulcastAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SimulcastAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),fm.liveswitch.Global.equals(description1,null))throw new fm.liveswitch.Exception("Simulcast attribute 'description1' cannot be null.");if(!fm.liveswitch.Global.equals(description2,null)&&fm.liveswitch.Global.equals(description1.getDirection(),description2.getDirection()))throw new fm.liveswitch.Exception("Simulcast attribute 'descriptions' must have different directions.");_this.setDescription1(description1),_this.setDescription2(description2)}return _this}return __extends(SimulcastAttribute,_super),SimulcastAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SimulcastAttribute],"+_super.prototype.getTypeString.call(this)},SimulcastAttribute.prototype.fmliveswitchsdprtpSimulcastAttributeInit=function(){this._draftVersion=0},SimulcastAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),direction=fm.liveswitch.StringExtensions.substring(value,0,index);value=value.substring(index+1);var streams=null,str2=null,streamArray2=null;index=fm.liveswitch.StringExtensions.indexOf(value," ");var draftVersion=-1;if(fm.liveswitch.Global.equals(index,-1)){var _var0=new fm.liveswitch.Holder(draftVersion),_var1=fm.liveswitch.sdp.rtp.SimulcastAttribute.streamsFromString(value,_var0);draftVersion=_var0.getValue(),streams=_var1}else{var num3=-1,_var2=new fm.liveswitch.Holder(num3),_var3=fm.liveswitch.sdp.rtp.SimulcastAttribute.streamsFromString(fm.liveswitch.StringExtensions.substring(value,0,index),_var2);num3=_var2.getValue(),streams=_var3,value=value.substring(index+1),index=fm.liveswitch.StringExtensions.indexOf(value," "),str2=fm.liveswitch.StringExtensions.substring(value,0,index),value=value.substring(index+1);var num4=-1,_var4=new fm.liveswitch.Holder(num4),_var5=fm.liveswitch.sdp.rtp.SimulcastAttribute.streamsFromString(value,_var4);num4=_var4.getValue(),streamArray2=_var5,draftVersion=fm.liveswitch.MathAssistant.max(num3,num4)}var description=new fm.liveswitch.sdp.rtp.SimulcastStreamDescription(direction,streams),description2=null;fm.liveswitch.Global.equals(str2,null)||(description2=new fm.liveswitch.sdp.rtp.SimulcastStreamDescription(str2,streamArray2));var attribute=new fm.liveswitch.sdp.rtp.SimulcastAttribute(description,description2);return attribute.setDraftVersion(draftVersion),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.streamsFromString=function(streamsString,draftVersion){if(2==arguments.length){if(draftVersion.setValue(-1),fm.liveswitch.StringExtensions.startsWith(streamsString,"rid="))draftVersion.setValue(3),streamsString=streamsString.substring(fm.liveswitch.StringExtensions.getLength("rid="));else if(fm.liveswitch.StringExtensions.startsWith(streamsString,"pt="))throw new fm.liveswitch.Exception("Draft version 03 'pt=' parsing is not supported.");for(var strArray=fm.liveswitch.StringExtensions.split(streamsString,[59]),streamArray=new Array(strArray.length),i=0;i<streamArray.length;i++){for(var strArray2=fm.liveswitch.StringExtensions.split(strArray[i],[44]),ids=new Array(strArray2.length),j=0;j<ids.length;j++){var idValue=strArray2[j];fm.liveswitch.StringExtensions.startsWith(idValue,"~")?ids[j]=new fm.liveswitch.sdp.rtp.SimulcastStreamId(idValue.substring(1),!0):ids[j]=new fm.liveswitch.sdp.rtp.SimulcastStreamId(idValue)}streamArray[i]=new fm.liveswitch.sdp.rtp.SimulcastStream(ids)}return streamArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.streamsToString=function(streams,draftVersion){if(2==arguments.length){draftVersion=fm.liveswitch.Global.toInt(arguments[1]);for(var strArray=new Array(streams.length),i=0;i<strArray.length;i++){for(var stream=streams[i],strArray2=new Array(stream.getIds().length),j=0;j<strArray2.length;j++){var idValue=stream.getIds()[j];idValue.getPaused()?strArray2[j]=fm.liveswitch.StringExtensions.format("~{0}",idValue.getId()):strArray2[j]=idValue.getId()}strArray[i]=fm.liveswitch.StringExtensions.join(",",strArray2)}var str=fm.liveswitch.StringExtensions.join(";",strArray);return(fm.liveswitch.Global.equals(draftVersion,2)||fm.liveswitch.Global.equals(draftVersion,3))&&(str=fm.liveswitch.StringExtensions.concat("rid=",str)),str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(this.getDescription1().getDirection()),builder.append(" "),builder.append(fm.liveswitch.sdp.rtp.SimulcastAttribute.streamsToString(this.getDescription1().getStreams(),this.getDraftVersion())),fm.liveswitch.Global.equals(this.getDescription2(),null)||(builder.append(" "),builder.append(this.getDescription2().getDirection()),builder.append(" "),builder.append(fm.liveswitch.sdp.rtp.SimulcastAttribute.streamsToString(this.getDescription2().getStreams(),this.getDraftVersion()))),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.getDescription=function(direction){if(1==arguments.length)return!fm.liveswitch.Global.equals(this.getDescription1(),null)&&fm.liveswitch.Global.equals(this.getDescription1().getDirection(),direction)?this.getDescription1():!fm.liveswitch.Global.equals(this.getDescription2(),null)&&fm.liveswitch.Global.equals(this.getDescription2().getDirection(),direction)?this.getDescription2():null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.getDescription1=function(){if(0==arguments.length)return this._description1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.getDescription2=function(){if(0==arguments.length)return this._description2;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.getDraftVersion=function(){if(0==arguments.length)return this._draftVersion;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.getReceiveDescription=function(){if(0==arguments.length)return this.getDescription(fm.liveswitch.sdp.rtp.SimulcastDirection.getReceive());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.getSendDescription=function(){if(0==arguments.length)return this.getDescription(fm.liveswitch.sdp.rtp.SimulcastDirection.getSend());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastAttribute.prototype.setDescription1=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._description1=value},SimulcastAttribute.prototype.setDescription2=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._description2=value},SimulcastAttribute.prototype.setDraftVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._draftVersion=fm.liveswitch.Global.toInt(value)},SimulcastAttribute}(fm.liveswitch.sdp.Attribute);rtp.SimulcastAttribute=SimulcastAttribute}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SimulcastStreamId=function(){function SimulcastStreamId(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length){var idValue=__arguments[0];(__arguments=new Array(2))[0]=idValue,__arguments[1]=!1;var idValue_6=__arguments[0],paused=__arguments[1];if(this.fmliveswitchsdprtpSimulcastStreamIdInit(),fm.liveswitch.Global.equals(idValue_6,null))throw new fm.liveswitch.Exception("Simulcast stream 'ID' cannot be null.");this.setId(idValue_6),this.setPaused(paused)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");idValue=__arguments[0],paused=__arguments[1];if(this.fmliveswitchsdprtpSimulcastStreamIdInit(),fm.liveswitch.Global.equals(idValue,null))throw new fm.liveswitch.Exception("Simulcast stream 'ID' cannot be null.");this.setId(idValue),this.setPaused(paused)}}return SimulcastStreamId.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SimulcastStreamId]"},SimulcastStreamId.prototype.fmliveswitchsdprtpSimulcastStreamIdInit=function(){this._paused=!1},SimulcastStreamId.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastStreamId.prototype.getPaused=function(){if(0==arguments.length)return this._paused;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastStreamId.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},SimulcastStreamId.prototype.setPaused=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._paused=value},SimulcastStreamId}();rtp.SimulcastStreamId=SimulcastStreamId}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SsrcGroupAttribute=function(_super){function SsrcGroupAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpSsrcGroupAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var semantics=__arguments[0],synchronizationSources=__arguments[1];if(__arguments=new Array(0),_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpSsrcGroupAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),fm.liveswitch.StringExtensions.isNullOrEmpty(semantics))throw new fm.liveswitch.Exception("semantics cannot be null.");if(fm.liveswitch.Global.equals(synchronizationSources,null))throw new fm.liveswitch.Exception("synchronizationSources cannot be null.");_this.setSemantics(semantics),_this.setSynchronizationSources(synchronizationSources)}return _this}return __extends(SsrcGroupAttribute,_super),SsrcGroupAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SsrcGroupAttribute],"+_super.prototype.getTypeString.call(this)},SsrcGroupAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),str=fm.liveswitch.StringExtensions.substring(value,0,index);value=value.substring(index+1);for(var strArray=fm.liveswitch.StringExtensions.split(value,[32]),numArray=new Array(strArray.length),i=0;i<numArray.length;i++)numArray[i]=fm.liveswitch.ParseAssistant.parseLongValue(strArray[i]);var attribute=new fm.liveswitch.sdp.rtp.SsrcGroupAttribute;return attribute.setSemantics(str),attribute.setSynchronizationSources(numArray),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcGroupAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(this.getSemantics());for(var _i=0,_a=this.getSynchronizationSources();_i<_a.length;_i++){var num=_a[_i];builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(num))}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcGroupAttribute.prototype.getSemantics=function(){if(0==arguments.length)return this._semantics;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcGroupAttribute.prototype.getSynchronizationSources=function(){if(0==arguments.length)return this._synchronizationSources;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcGroupAttribute.prototype.setSemantics=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._semantics=value},SsrcGroupAttribute.prototype.setSynchronizationSources=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._synchronizationSources=value},SsrcGroupAttribute}(fm.liveswitch.sdp.Attribute);rtp.SsrcGroupAttribute=SsrcGroupAttribute}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SsrcAttribute=function(_super){function SsrcAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdprtpSsrcAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpSsrcAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal);else if(2==__arguments.length){var synchronizationSource=__arguments[0],attributeName=__arguments[1];(__arguments=new Array(3))[0]=synchronizationSource,__arguments[1]=attributeName,__arguments[2]=null;var synchronizationSource_1=__arguments[0],attributeName_1=__arguments[1],attributeValue=__arguments[2];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpSsrcAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpSsrcAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),fm.liveswitch.StringExtensions.isNullOrEmpty(attributeName_1))throw new fm.liveswitch.Exception("attributeName cannot be null.");_this.setSynchronizationSource(synchronizationSource_1),_this.setName(attributeName_1),_this.setValue(attributeValue)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");synchronizationSource=__arguments[0],attributeName=__arguments[1],attributeValue=__arguments[2];if(__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdprtpSsrcAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.RtpSsrcAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),fm.liveswitch.StringExtensions.isNullOrEmpty(attributeName))throw new fm.liveswitch.Exception("attributeName cannot be null.");_this.setSynchronizationSource(synchronizationSource),_this.setName(attributeName),_this.setValue(attributeValue)}return _this}return __extends(SsrcAttribute,_super),SsrcAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SsrcAttribute],"+_super.prototype.getTypeString.call(this)},SsrcAttribute.prototype.fmliveswitchsdprtpSsrcAttributeInit=function(){this._synchronizationSource=0},SsrcAttribute.fromAttributeValue=function(value){if(1==arguments.length){var index=fm.liveswitch.StringExtensions.indexOf(value," "),num2=fm.liveswitch.ParseAssistant.parseLongValue(fm.liveswitch.StringExtensions.substring(value,0,index));value=value.substring(index+1);var length_42=fm.liveswitch.StringExtensions.indexOf(value,":"),str=null,str2=null;fm.liveswitch.Global.equals(length_42,-1)?str=value:(str=fm.liveswitch.StringExtensions.substring(value,0,length_42),str2=value=value.substring(length_42+1));var attribute=new fm.liveswitch.sdp.rtp.SsrcAttribute;return attribute.setSynchronizationSource(num2),attribute.setName(str),attribute.setValue(str2),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getSynchronizationSource())),builder.append(" "),builder.append(this.getName()),fm.liveswitch.StringExtensions.isNullOrEmpty(this.getValue())||(builder.append(":"),builder.append(this.getValue())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttribute.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttribute.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this._synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttribute.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttribute.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},SsrcAttribute.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._synchronizationSource=fm.liveswitch.Global.toInt(value)},SsrcAttribute.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},SsrcAttribute}(fm.liveswitch.sdp.Attribute);rtp.SsrcAttribute=SsrcAttribute}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(rtp){var SsrcAttributeName=function(){function SsrcAttributeName(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return SsrcAttributeName.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.rtp.SsrcAttributeName]"},SsrcAttributeName.getCName=function(){if(0==arguments.length)return"cname";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttributeName.getFormatParameters=function(){if(0==arguments.length)return"fmtp";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttributeName.getLabel=function(){if(0==arguments.length)return"label";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttributeName.getMediaStreamId=function(){if(0==arguments.length)return"msid";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttributeName.getMediaStreamLabel=function(){if(0==arguments.length)return"mslabel";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttributeName.getPreviousSsrc=function(){if(0==arguments.length)return"previous-ssrc";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SsrcAttributeName}();rtp.SsrcAttributeName=SsrcAttributeName}(sdp.rtp||(sdp.rtp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(sctp){var MapAttribute=function(_super){function MapAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpsctpMapAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SctpMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Caution);else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var port=__arguments[0],protocol=__arguments[1],streams=__arguments[2];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpsctpMapAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SctpMapAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Caution),_this.setPort(port),_this.setSctpProtocol(protocol),_this.setStreams(streams)}return _this}return __extends(MapAttribute,_super),MapAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.sctp.MapAttribute],"+_super.prototype.getTypeString.call(this)},MapAttribute.prototype.fmliveswitchsdpsctpMapAttributeInit=function(){this._port=0,this._streams=0},MapAttribute.fromAttributeValue=function(value){if(1==arguments.length){var strArray=fm.liveswitch.StringExtensions.split(value,[32]),num=fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[0]),str=strArray[1],num2=strArray.length>2?fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[2]):16,attribute=new fm.liveswitch.sdp.sctp.MapAttribute;return attribute.setPort(num),attribute.setSctpProtocol(str),attribute.setStreams(num2),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getPort())),builder.append(" "),builder.append(this.getSctpProtocol()),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getStreams())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getPort=function(){if(0==arguments.length)return this._port;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getSctpProtocol=function(){if(0==arguments.length)return this._sctpProtocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.getStreams=function(){if(0==arguments.length)return this._streams;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MapAttribute.prototype.setPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._port=fm.liveswitch.Global.toInt(value)},MapAttribute.prototype.setSctpProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sctpProtocol=value},MapAttribute.prototype.setStreams=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._streams=fm.liveswitch.Global.toInt(value)},MapAttribute}(fm.liveswitch.sdp.Attribute);sctp.MapAttribute=MapAttribute}(sdp.sctp||(sdp.sctp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(sctp){var MaxMessageSizeAttribute=function(_super){function MaxMessageSizeAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpsctpMaxMessageSizeAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SctpMaxMessageSizeAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Caution);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var maxMessageSize=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpsctpMaxMessageSizeAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SctpMaxMessageSizeAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Caution),_this.setMaxMessageSize(maxMessageSize)}return _this}return __extends(MaxMessageSizeAttribute,_super),MaxMessageSizeAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.sctp.MaxMessageSizeAttribute],"+_super.prototype.getTypeString.call(this)},MaxMessageSizeAttribute.prototype.fmliveswitchsdpsctpMaxMessageSizeAttributeInit=function(){this._maxMessageSize=0},MaxMessageSizeAttribute.fromAttributeValue=function(value){if(1==arguments.length){var num=fm.liveswitch.ParseAssistant.parseLongValue(value),attribute=new fm.liveswitch.sdp.sctp.MaxMessageSizeAttribute;return attribute.setMaxMessageSize(num),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MaxMessageSizeAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getMaxMessageSize())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MaxMessageSizeAttribute.prototype.getMaxMessageSize=function(){if(0==arguments.length)return this._maxMessageSize;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MaxMessageSizeAttribute.prototype.setMaxMessageSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxMessageSize=fm.liveswitch.Global.toInt(value)},MaxMessageSizeAttribute}(fm.liveswitch.sdp.Attribute);sctp.MaxMessageSizeAttribute=MaxMessageSizeAttribute}(sdp.sctp||(sdp.sctp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(sctp){var Media=function(_super){function Media(mediaType,transportPort,transportProtocol,associationUsage){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var mediaType_3=__arguments[0],transportPort_3=__arguments[1],transportProtocol_3=__arguments[2],associationUsage_1=__arguments[3];if(_this=_super.call(this,mediaType_3,transportPort_3,transportProtocol_3)||this,fm.liveswitch.Global.equals(associationUsage_1,null))throw new fm.liveswitch.Exception("associationUsage cannot be null.");return _super.prototype.setFormatDescription.call(_this,associationUsage_1),_this}return __extends(Media,_super),Media.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.sctp.Media],"+_super.prototype.getTypeString.call(this)},Media.getDtlsSctpTransportProtocol=function(){if(0==arguments.length)return"DTLS/SCTP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getSctpDtlsTransportProtocol=function(){if(0==arguments.length)return"SCTP/DTLS";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getSctpTransportProtocol=function(){if(0==arguments.length)return"SCTP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getTcpDtlsSctpTransportProtocol=function(){if(0==arguments.length)return"TCP/DTLS/SCTP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getUdpDtlsSctpTransportProtocol=function(){if(0==arguments.length)return"UDP/DTLS/SCTP";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.getWebRtcDatachannelAssociationUsage=function(){if(0==arguments.length)return"webrtc-datachannel";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.isSupported=function(protocol){if(1==arguments.length)return fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getSctpTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getSctpDtlsTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getDtlsSctpTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getUdpDtlsSctpTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getTcpDtlsSctpTransportProtocol());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media.supportsEncryption=function(protocol){if(1==arguments.length)return fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getUdpDtlsSctpTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getDtlsSctpTransportProtocol())||fm.liveswitch.Global.equals(protocol,fm.liveswitch.sdp.sctp.Media.getTcpDtlsSctpTransportProtocol());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Media}(fm.liveswitch.sdp.Media);sctp.Media=Media}(sdp.sctp||(sdp.sctp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){!function(sctp){var PortAttribute=function(_super){function PortAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsdpsctpPortAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SctpPortAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Caution);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var port=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsdpsctpPortAttributeInit(),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SctpPortAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Caution),_this.setPort(port)}return _this}return __extends(PortAttribute,_super),PortAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.sctp.PortAttribute],"+_super.prototype.getTypeString.call(this)},PortAttribute.prototype.fmliveswitchsdpsctpPortAttributeInit=function(){this._port=0},PortAttribute.fromAttributeValue=function(value){if(1==arguments.length){var num=fm.liveswitch.ParseAssistant.parseIntegerValue(value),attribute=new fm.liveswitch.sdp.sctp.PortAttribute;return attribute.setPort(num),attribute}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PortAttribute.prototype.getAttributeValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getPort())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PortAttribute.prototype.getPort=function(){if(0==arguments.length)return this._port;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PortAttribute.prototype.setPort=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._port=fm.liveswitch.Global.toInt(value)},PortAttribute}(fm.liveswitch.sdp.Attribute);sctp.PortAttribute=PortAttribute}(sdp.sctp||(sdp.sctp={}))}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var SdpLanguageAttribute=function(_super){function SdpLanguageAttribute(languageTag){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var languageTag_2=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SdpLanguageAttribute),fm.liveswitch.Global.equals(languageTag_2,null))throw new fm.liveswitch.Exception("languageTag cannot be null.");return _this.setLanguageTag(languageTag_2),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(SdpLanguageAttribute,_super),SdpLanguageAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.SdpLanguageAttribute],"+_super.prototype.getTypeString.call(this)},SdpLanguageAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.SdpLanguageAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SdpLanguageAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getLanguageTag();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SdpLanguageAttribute.prototype.getLanguageTag=function(){if(0==arguments.length)return this._languageTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SdpLanguageAttribute.prototype.setLanguageTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._languageTag=value},SdpLanguageAttribute}(fm.liveswitch.sdp.Attribute);sdp.SdpLanguageAttribute=SdpLanguageAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var SendOnlyAttribute=function(_super){function SendOnlyAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.DirectionAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(SendOnlyAttribute,_super),SendOnlyAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.SendOnlyAttribute],"+_super.prototype.getTypeString.call(this)},SendOnlyAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.SendOnlyAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendOnlyAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendOnlyAttribute.prototype.getStreamDirection=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.SendOnly;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendOnlyAttribute}(fm.liveswitch.sdp.DirectionAttribute);sdp.SendOnlyAttribute=SendOnlyAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var SendReceiveAttribute=function(_super){function SendReceiveAttribute(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.DirectionAttribute),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(SendReceiveAttribute,_super),SendReceiveAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.SendReceiveAttribute],"+_super.prototype.getTypeString.call(this)},SendReceiveAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.SendReceiveAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendReceiveAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendReceiveAttribute.prototype.getStreamDirection=function(){if(0==arguments.length)return fm.liveswitch.StreamDirection.SendReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendReceiveAttribute}(fm.liveswitch.sdp.DirectionAttribute);sdp.SendReceiveAttribute=SendReceiveAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Setup=function(){function Setup(){}return Setup.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Setup]"},Setup.getActive=function(){if(0==arguments.length)return"active";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Setup.getActPass=function(){if(0==arguments.length)return"actpass";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Setup.getPassive=function(){if(0==arguments.length)return"passive";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Setup}();sdp.Setup=Setup}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var SetupAttribute=function(_super){function SetupAttribute(setup){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var setup_1=__arguments[0];return _this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.SetupAttribute),_this.setSetup(setup_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Transport),_this}return __extends(SetupAttribute,_super),SetupAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.SetupAttribute],"+_super.prototype.getTypeString.call(this)},SetupAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.SetupAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SetupAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getSetup();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SetupAttribute.prototype.getSetup=function(){if(0==arguments.length)return this._setup;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SetupAttribute.prototype.setSetup=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._setup=value},SetupAttribute}(fm.liveswitch.sdp.Attribute);sdp.SetupAttribute=SetupAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var TimeDescription=function(){function TimeDescription(timing){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var timing_1=__arguments[0];if(this.__repeatTimes=new Array,fm.liveswitch.Global.equals(timing_1,null))throw new fm.liveswitch.Exception("timing cannot be null.");this.setTiming(timing_1)}return TimeDescription.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.TimeDescription]"},TimeDescription.parse=function(s){if(1==arguments.length){var strArray=fm.liveswitch.sdp.Utility.splitAndClean(s);if(!fm.liveswitch.Global.equals(strArray[0].charCodeAt(0),116))return null;for(var description=new fm.liveswitch.sdp.TimeDescription(fm.liveswitch.sdp.Timing.parse(strArray[0])),i=1;i<strArray.length;i++){var str=strArray[i];fm.liveswitch.Global.equals(str.charCodeAt(0),114)&&description.addRepeatTime(fm.liveswitch.sdp.RepeatTime.parse(str))}return description}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeDescription.prototype.addRepeatTime=function(repeatTime){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__repeatTimes,repeatTime)},TimeDescription.prototype.getRepeatTimes=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__repeatTimes);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeDescription.prototype.getTiming=function(){if(0==arguments.length)return this._timing;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeDescription.prototype.removeRepeatTime=function(repeatTime){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.remove(this.__repeatTimes,repeatTime);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeDescription.prototype.setTiming=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._timing=value},TimeDescription.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(fm.liveswitch.StringExtensions.concat(this.getTiming().toString(),"\r\n"));for(var _i=0,_a=this.getRepeatTimes();_i<_a.length;_i++){var time=_a[_i];builder.append(fm.liveswitch.StringExtensions.concat(time.toString(),"\r\n"))}return builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeDescription}();sdp.TimeDescription=TimeDescription}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var TimeZone=function(){function TimeZone(adjustmentTime,offset){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var adjustmentTime_1=__arguments[0],offset_1=__arguments[1];this.fmliveswitchsdpTimeZoneInit(),this.setAdjustmentTime(adjustmentTime_1),this.setOffset(offset_1)}return TimeZone.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.TimeZone]"},TimeZone.prototype.fmliveswitchsdpTimeZoneInit=function(){this._adjustmentTime=0},TimeZone.parse=function(s){if(1==arguments.length){var strArray=fm.liveswitch.StringExtensions.split(s,[32]),adjustmentTime=fm.liveswitch.ParseAssistant.parseDoubleValue(strArray[0]);return new fm.liveswitch.sdp.TimeZone(adjustmentTime,new fm.liveswitch.TimeSpan(0,0,fm.liveswitch.ParseAssistant.parseIntegerValue(strArray[1])))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZone.prototype.getAdjustmentTime=function(){if(0==arguments.length)return this._adjustmentTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZone.prototype.getOffset=function(){if(0==arguments.length)return this._offset;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZone.prototype.setAdjustmentTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._adjustmentTime=value},TimeZone.prototype.setOffset=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._offset=value},TimeZone.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append(fm.liveswitch.NumberExtensions.toString(this.getAdjustmentTime())),builder.append(" "),builder.append(fm.liveswitch.NumberExtensions.toString(this.getOffset().getTotalSeconds())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZone}();sdp.TimeZone=TimeZone}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var TimeZones=function(){function TimeZones(values){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var values_5=__arguments[0];if(this.__values=new Array,fm.liveswitch.Global.equals(values_5,null))throw new fm.liveswitch.Exception("timeZones cannot be null.");fm.liveswitch.ArrayExtensions.addRange(this.__values,values_5)}return TimeZones.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.TimeZones]"},TimeZones.parse=function(s){if(1==arguments.length){s=s.substring(2);for(var array=fm.liveswitch.StringExtensions.split(s,[32]),zones=new fm.liveswitch.sdp.TimeZones([fm.liveswitch.sdp.TimeZone.parse(fm.liveswitch.StringExtensions.join(" ",fm.liveswitch.StringAssistant.subArray(array,0,2)))]),i=2;i<array.length;i+=2)zones.addTimeZone(fm.liveswitch.sdp.TimeZone.parse(fm.liveswitch.StringExtensions.join(" ",fm.liveswitch.StringAssistant.subArray(array,i,2))));return zones}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZones.prototype.addTimeZone=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__values,value)},TimeZones.prototype.getValues=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__values);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZones.prototype.removeTimeZone=function(value){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.remove(this.__values,value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZones.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append("z=");for(var _i=0,_a=this.getValues();_i<_a.length;_i++){var zone=_a[_i];builder.append(" "),builder.append(zone.toString())}return fm.liveswitch.StringExtensions.trim(builder.toString())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeZones}();sdp.TimeZones=TimeZones}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Timing=function(){function Timing(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchsdpTimingInit(),this.setStartTime(0),this.setStopTime(0);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var startTime=__arguments[0],stopTime=__arguments[1];this.fmliveswitchsdpTimingInit(),this.setStartTime(startTime),this.setStopTime(stopTime)}}return Timing.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Timing]"},Timing.prototype.fmliveswitchsdpTimingInit=function(){this._startTime=0,this._stopTime=0},Timing.parse=function(s){if(1==arguments.length){s=s.substring(2);var strArray=fm.liveswitch.StringExtensions.split(s,[32]),num=0;fm.liveswitch.Global.equals(strArray[0],"0")||(num=fm.liveswitch.ParseAssistant.parseDoubleValue(strArray[0]));var num2=0;fm.liveswitch.Global.equals(strArray[1],"0")||(num2=fm.liveswitch.ParseAssistant.parseDoubleValue(strArray[1]));var timing=new fm.liveswitch.sdp.Timing;return timing.setStartTime(num),timing.setStopTime(num2),timing}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Timing.prototype.getStartTime=function(){if(0==arguments.length)return this._startTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Timing.prototype.getStopTime=function(){if(0==arguments.length)return this._stopTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Timing.prototype.setStartTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._startTime=value},Timing.prototype.setStopTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._stopTime=value},Timing.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append("t="),fm.liveswitch.Global.equals(this.getStartTime(),0)?builder.append("0"):builder.append(fm.liveswitch.NumberExtensions.toString(this.getStartTime())),builder.append(" "),fm.liveswitch.Global.equals(this.getStopTime(),0)?builder.append("0"):builder.append(fm.liveswitch.NumberExtensions.toString(this.getStopTime())),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Timing}();sdp.Timing=Timing}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var ToolAttribute=function(_super){function ToolAttribute(tool){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var tool_1=__arguments[0];if(_this=_super.call(this)||this,_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.ToolAttribute),fm.liveswitch.Global.equals(tool_1,null))throw new fm.liveswitch.Exception("tool cannot be null.");return _this.setTool(tool_1),_super.prototype.setMultiplexingCategory.call(_this,fm.liveswitch.sdp.AttributeCategory.Normal),_this}return __extends(ToolAttribute,_super),ToolAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.ToolAttribute],"+_super.prototype.getTypeString.call(this)},ToolAttribute.fromAttributeValue=function(value){if(1==arguments.length)return new fm.liveswitch.sdp.ToolAttribute(value);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ToolAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getTool();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ToolAttribute.prototype.getTool=function(){if(0==arguments.length)return this._tool;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ToolAttribute.prototype.setTool=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tool=value},ToolAttribute}(fm.liveswitch.sdp.Attribute);sdp.ToolAttribute=ToolAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var UdpMedia=function(_super){function UdpMedia(mediaType,transportPort,formatDescription){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var mediaType_4=__arguments[0],transportPort_4=__arguments[1],formatDescription_1=__arguments[2];return _super.call(this,mediaType_4,transportPort_4,fm.liveswitch.sdp.UdpMedia.getUdpTransportProtocol(),formatDescription_1)||this}return __extends(UdpMedia,_super),UdpMedia.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.UdpMedia],"+_super.prototype.getTypeString.call(this)},UdpMedia.getUdpTransportProtocol=function(){if(0==arguments.length)return"udp";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UdpMedia}(fm.liveswitch.sdp.Media);sdp.UdpMedia=UdpMedia}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var UnknownAttribute=function(_super){function UnknownAttribute(name,value){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var name_22=__arguments[0],value_33=__arguments[1];return(_this=_super.call(this)||this).setName(name_22),_this.setValue(value_33),_super.prototype.setAttributeType.call(_this,fm.liveswitch.sdp.AttributeType.UnknownAttribute),_this}return __extends(UnknownAttribute,_super),UnknownAttribute.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.UnknownAttribute],"+_super.prototype.getTypeString.call(this)},UnknownAttribute.prototype.getAttributeValue=function(){if(0==arguments.length)return this.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownAttribute.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownAttribute.prototype.getValue=function(){if(0==arguments.length)return this._value;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownAttribute.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},UnknownAttribute.prototype.setValue=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._value=value},UnknownAttribute}(fm.liveswitch.sdp.Attribute);sdp.UnknownAttribute=UnknownAttribute}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var UriEncryptionKey=function(_super){function UriEncryptionKey(uri){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var uri_2=__arguments[0];if(_this=_super.call(this)||this,fm.liveswitch.Global.equals(uri_2,null))throw new fm.liveswitch.Exception("uri cannot be null.");return _this.setUri(uri_2),_this}return __extends(UriEncryptionKey,_super),UriEncryptionKey.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.UriEncryptionKey],"+_super.prototype.getTypeString.call(this)},UriEncryptionKey.prototype.getMethodAndValue=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;return builder.append("uri:"),builder.append(this.getUri().toString()),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UriEncryptionKey.prototype.getUri=function(){if(0==arguments.length)return this._uri;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UriEncryptionKey.prototype.setUri=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._uri=value},UriEncryptionKey}(fm.liveswitch.sdp.EncryptionKey);sdp.UriEncryptionKey=UriEncryptionKey}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){var Utility=function(){function Utility(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Utility.prototype.getTypeString=function(){return"[fm.liveswitch.sdp.Utility]"},Utility.splitAndClean=function(s){if(1==arguments.length){for(var list=fm.liveswitch.ArrayExtensions.newArray(fm.liveswitch.StringExtensions.split(s,[10])),i=0;i<fm.liveswitch.ArrayExtensions.getCount(list);i++)list[i]=fm.liveswitch.StringExtensions.trim(list[i]),fm.liveswitch.StringExtensions.isNullOrEmpty(list[i])&&(fm.liveswitch.ArrayExtensions.removeAt(list,i),i--);return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility}();sdp.Utility=Utility}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SessionDescription=function(){function SessionDescription(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchSessionDescriptionInit()}return SessionDescription.prototype.getTypeString=function(){return"[fm.liveswitch.SessionDescription]"},SessionDescription.prototype.fmliveswitchSessionDescriptionInit=function(){this._renegotiation=!1},SessionDescription.fromJson=function(sessionDescriptionJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(sessionDescriptionJson,(function(){return new fm.liveswitch.SessionDescription}),(function(sessionDescription,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"sdpMessage")?sessionDescription.setSdpMessage(fm.liveswitch.sdp.Message.parse(fm.liveswitch.JsonSerializer.deserializeString(valueJson))):fm.liveswitch.Global.equals(str,"tieBreaker")?sessionDescription.setTieBreaker(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"isOffer")&&sessionDescription.setType(fm.liveswitch.Global.equals(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson),!0)?fm.liveswitch.SessionDescriptionType.Offer:fm.liveswitch.SessionDescriptionType.Answer))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.toJson=function(sessionDescription){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(sessionDescription,(function(sd,jsonObject){fm.liveswitch.Global.equals(sessionDescription.getSdpMessage(),null)||(jsonObject.sdpMessage=fm.liveswitch.JsonSerializer.serializeString(sessionDescription.getSdpMessage().toString())),fm.liveswitch.Global.equals(sessionDescription.getTieBreaker(),null)||(jsonObject.tieBreaker=fm.liveswitch.JsonSerializer.serializeString(sessionDescription.getTieBreaker())),jsonObject.isOffer=fm.liveswitch.JsonSerializer.serializeBoolean(sessionDescription.getIsOffer())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getHasAudio=function(){if(0==arguments.length){var sdpMessage=this.getSdpMessage();return!fm.liveswitch.Global.equals(sdpMessage,null)&&!fm.liveswitch.Global.equals(sdpMessage.getAudioDescription(),null)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getHasData=function(){if(0==arguments.length){var sdpMessage=this.getSdpMessage();return!fm.liveswitch.Global.equals(sdpMessage,null)&&(!fm.liveswitch.Global.equals(sdpMessage.getApplicationDescription(),null)||!fm.liveswitch.Global.equals(sdpMessage.getTextDescription(),null)||!fm.liveswitch.Global.equals(sdpMessage.getMessageDescription(),null))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getHasVideo=function(){if(0==arguments.length){var sdpMessage=this.getSdpMessage();return!fm.liveswitch.Global.equals(sdpMessage,null)&&!fm.liveswitch.Global.equals(sdpMessage.getVideoDescription(),null)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getIsOffer=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.SessionDescriptionType.Offer);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getRenegotiation=function(){if(0==arguments.length)return this._renegotiation;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getSdpMessage=function(){if(0==arguments.length)return this._sdpMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getSessionId=function(){if(0==arguments.length){if(!fm.liveswitch.Global.equals(this.getSdpMessage(),null)){var origin_13=this.getSdpMessage().getOrigin();if(!fm.liveswitch.Global.equals(origin_13,null))return origin_13.getSessionId()}return-1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getSessionVersion=function(){if(0==arguments.length){if(!fm.liveswitch.Global.equals(this.getSdpMessage(),null)){var origin_14=this.getSdpMessage().getOrigin();if(!fm.liveswitch.Global.equals(origin_14,null))return origin_14.getSessionVersion()}return-1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getTieBreaker=function(){if(0==arguments.length)return this._tieBreaker;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription.prototype.setRenegotiation=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._renegotiation=value},SessionDescription.prototype.setSdpMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sdpMessage=value},SessionDescription.prototype.setTieBreaker=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tieBreaker=value},SessionDescription.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},SessionDescription.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.SessionDescription.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescription}();liveswitch.SessionDescription=SessionDescription}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SessionDescriptionTypeWrapper=function(){function SessionDescriptionTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_34=__arguments[0];this._value=value_34}return SessionDescriptionTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.SessionDescriptionTypeWrapper]"},SessionDescriptionTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.SessionDescriptionType.Offer?"Offer":this._value==fm.liveswitch.SessionDescriptionType.Answer?"Answer":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionTypeWrapper}();liveswitch.SessionDescriptionTypeWrapper=SessionDescriptionTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Size=function(){function Size(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchSizeInit(),this.setWidth(0),this.setHeight(0);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var width=__arguments[0],height=__arguments[1];this.fmliveswitchSizeInit(),this.setWidth(width),this.setHeight(height)}}return Size.prototype.getTypeString=function(){return"[fm.liveswitch.Size]"},Size.prototype.fmliveswitchSizeInit=function(){this.__height=0,this.__width=0},Size.fromJson=function(sizeJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(sizeJson,(function(){return new fm.liveswitch.Size}),(function(size,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"width")?size.setWidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"height")&&size.setHeight(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.getEmpty=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(fm.liveswitch.Size.fm_liveswitch_Size___empty,null)&&(fm.liveswitch.Size.fm_liveswitch_Size___empty=new fm.liveswitch.Size),fm.liveswitch.Size.fm_liveswitch_Size___empty;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.isEquivalent=function(size1,size2){if(2==arguments.length)return!!fm.liveswitch.Global.equals(size1,size2)||!fm.liveswitch.Global.equals(size1,null)&&!fm.liveswitch.Global.equals(size2,null)&&fm.liveswitch.Size.isEquivalentNoCheck(size1,size2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.isEquivalentNoCheck=function(size1,size2){if(2==arguments.length)return fm.liveswitch.Global.equals(size1.getWidth(),size2.getWidth())&&fm.liveswitch.Global.equals(size1.getHeight(),size2.getHeight());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.toJson=function(size){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(size,(function(obj,jsonObj){fm.liveswitch.Global.equals(size.getWidth(),-1)||(jsonObj.width=fm.liveswitch.JsonSerializer.serializeInteger(size.getWidth())),fm.liveswitch.Global.equals(size.getHeight(),-1)||(jsonObj.height=fm.liveswitch.JsonSerializer.serializeInteger(size.getHeight()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.prototype.getHeight=function(){if(0==arguments.length)return this.__height;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.prototype.getWidth=function(){if(0==arguments.length)return this.__width;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.prototype.isEquivalent=function(size){if(1==arguments.length)return fm.liveswitch.Size.isEquivalent(this,size);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.prototype.setHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if((value=fm.liveswitch.Global.toInt(arguments[0]))<0)throw new fm.liveswitch.Exception("Height cannot be less than 0.");this.__height=fm.liveswitch.Global.toInt(value)},Size.prototype.setWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if((value=fm.liveswitch.Global.toInt(arguments[0]))<0)throw new fm.liveswitch.Exception("Width cannot be less than 0.");this.__width=fm.liveswitch.Global.toInt(value)},Size.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.Size.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.format("{0}x{1}",fm.liveswitch.NumberExtensions.toString(this.getWidth()),fm.liveswitch.NumberExtensions.toString(this.getHeight()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Size}();liveswitch.Size=Size}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamDirectionWrapper=function(){function StreamDirectionWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_35=__arguments[0];this._value=value_35}return StreamDirectionWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.StreamDirectionWrapper]"},StreamDirectionWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.StreamDirection.SendReceive?"SendReceive":this._value==fm.liveswitch.StreamDirection.SendOnly?"SendOnly":this._value==fm.liveswitch.StreamDirection.ReceiveOnly?"ReceiveOnly":this._value==fm.liveswitch.StreamDirection.Inactive?"Inactive":this._value==fm.liveswitch.StreamDirection.Unset?"Unset":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionWrapper}();liveswitch.StreamDirectionWrapper=StreamDirectionWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamDirectionHelper=function(){function StreamDirectionHelper(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return StreamDirectionHelper.prototype.getTypeString=function(){return"[fm.liveswitch.StreamDirectionHelper]"},StreamDirectionHelper.directionFromString=function(directionString){if(1==arguments.length){if(!fm.liveswitch.Global.equals(directionString,null)){var str=directionString;if(!fm.liveswitch.Global.equals(str,null)){if(fm.liveswitch.Global.equals(str,"sendrecv"))return fm.liveswitch.StreamDirection.SendReceive;if(fm.liveswitch.Global.equals(str,"sendonly"))return fm.liveswitch.StreamDirection.SendOnly;if(fm.liveswitch.Global.equals(str,"recvonly"))return fm.liveswitch.StreamDirection.ReceiveOnly;if(fm.liveswitch.Global.equals(str,"inactive"))return fm.liveswitch.StreamDirection.Inactive}}return fm.liveswitch.StreamDirection.Unset}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper.directionToString=function(direction){if(1==arguments.length){var _var0=direction;return _var0==fm.liveswitch.StreamDirection.SendReceive?"sendrecv":_var0==fm.liveswitch.StreamDirection.SendOnly?"sendonly":_var0==fm.liveswitch.StreamDirection.ReceiveOnly?"recvonly":_var0==fm.liveswitch.StreamDirection.Inactive?"inactive":"unset"}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper.isReceiveDisabled=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var direction=arguments[0];return fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.Inactive)||fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.SendOnly)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var directionString=arguments[0];return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(fm.liveswitch.StreamDirectionHelper.directionFromString(directionString))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper.isSendDisabled=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var direction=arguments[0];return fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.Inactive)||fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.ReceiveOnly)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var directionString=arguments[0];return fm.liveswitch.StreamDirectionHelper.isSendDisabled(fm.liveswitch.StreamDirectionHelper.directionFromString(directionString))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper.setReceiveDisabled=function(){if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var direction=arguments[0],disabled=arguments[1];return fm.liveswitch.Global.equals(disabled,fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(direction))?direction:fm.liveswitch.StreamDirectionHelper.toggleReceive(direction)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var directionString=arguments[0];disabled=arguments[1];return fm.liveswitch.StreamDirectionHelper.directionToString(fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.directionFromString(directionString),disabled))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper.setSendDisabled=function(){if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var direction=arguments[0],disabled=arguments[1];return fm.liveswitch.Global.equals(disabled,fm.liveswitch.StreamDirectionHelper.isSendDisabled(direction))?direction:fm.liveswitch.StreamDirectionHelper.toggleSend(direction)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var directionString=arguments[0];disabled=arguments[1];return fm.liveswitch.StreamDirectionHelper.directionToString(fm.liveswitch.StreamDirectionHelper.setSendDisabled(fm.liveswitch.StreamDirectionHelper.directionFromString(directionString),disabled))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper.toggleReceive=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var direction=arguments[0];return fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.Inactive)?fm.liveswitch.StreamDirection.ReceiveOnly:fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.ReceiveOnly)?fm.liveswitch.StreamDirection.Inactive:fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.SendReceive)?fm.liveswitch.StreamDirection.SendOnly:fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.SendOnly)?fm.liveswitch.StreamDirection.SendReceive:fm.liveswitch.StreamDirection.Unset}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var directionString=arguments[0];return fm.liveswitch.StreamDirectionHelper.directionToString(fm.liveswitch.StreamDirectionHelper.toggleReceive(fm.liveswitch.StreamDirectionHelper.directionFromString(directionString)))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper.toggleSend=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var direction=arguments[0];return fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.Inactive)?fm.liveswitch.StreamDirection.SendOnly:fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.SendOnly)?fm.liveswitch.StreamDirection.Inactive:fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.SendReceive)?fm.liveswitch.StreamDirection.ReceiveOnly:fm.liveswitch.Global.equals(direction,fm.liveswitch.StreamDirection.ReceiveOnly)?fm.liveswitch.StreamDirection.SendReceive:fm.liveswitch.StreamDirection.Unset}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var directionString=arguments[0];return fm.liveswitch.StreamDirectionHelper.directionToString(fm.liveswitch.StreamDirectionHelper.toggleSend(fm.liveswitch.StreamDirectionHelper.directionFromString(directionString)))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamDirectionHelper}();liveswitch.StreamDirectionHelper=StreamDirectionHelper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamStateWrapper=function(){function StreamStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_36=__arguments[0];this._value=value_36}return StreamStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.StreamStateWrapper]"},StreamStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.StreamState.New?"New":this._value==fm.liveswitch.StreamState.Initializing?"Initializing":this._value==fm.liveswitch.StreamState.Connecting?"Connecting":this._value==fm.liveswitch.StreamState.Connected?"Connected":this._value==fm.liveswitch.StreamState.Failing?"Failing":this._value==fm.liveswitch.StreamState.Failed?"Failed":this._value==fm.liveswitch.StreamState.Closing?"Closing":this._value==fm.liveswitch.StreamState.Closed?"Closed":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStateWrapper}();liveswitch.StreamStateWrapper=StreamStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamTypeWrapper=function(){function StreamTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_37=__arguments[0];this._value=value_37}return StreamTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.StreamTypeWrapper]"},StreamTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.StreamType.Audio?"Audio":this._value==fm.liveswitch.StreamType.Video?"Video":this._value==fm.liveswitch.StreamType.Application?"Application":this._value==fm.liveswitch.StreamType.Message?"Message":this._value==fm.liveswitch.StreamType.Text?"Text":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamTypeWrapper}();liveswitch.StreamTypeWrapper=StreamTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TransportInfo=function(_super){function TransportInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];_this=_super.call(this)||this;var num=void 0;_super.prototype.setId.call(_this,stats.getId());var flag=fm.liveswitch.Global.equals(lastStats,null);if(fm.liveswitch.Global.equals(stats.getLocalCertificate(),null)||_this.setLocalCertificate(new fm.liveswitch.CertificateInfo(stats.getLocalCertificate(),flag?null:lastStats.getLocalCertificate())),fm.liveswitch.Global.equals(stats.getRemoteCertificate(),null)||_this.setRemoteCertificate(new fm.liveswitch.CertificateInfo(stats.getRemoteCertificate(),flag?null:lastStats.getRemoteCertificate())),!fm.liveswitch.Global.equals(stats.getLocalCandidates(),null))for(_this.setLocalCandidates(new Array(stats.getLocalCandidates().length)),num=0;num<stats.getLocalCandidates().length;num++){var stats2=stats.getLocalCandidates()[num],stats3=null;flag||(stats3=_this.findMatchingCandidate(lastStats.getLocalCandidates(),stats2.getId())),_this.getLocalCandidates()[num]=new fm.liveswitch.CandidateInfo(stats2,stats3)}if(!fm.liveswitch.Global.equals(stats.getRemoteCandidates(),null))for(_this.setRemoteCandidates(new Array(stats.getRemoteCandidates().length)),num=0;num<stats.getRemoteCandidates().length;num++){var stats4=stats.getRemoteCandidates()[num],stats5=null;flag||(stats5=_this.findMatchingCandidate(lastStats.getRemoteCandidates(),stats4.getId())),_this.getRemoteCandidates()[num]=new fm.liveswitch.CandidateInfo(stats4,stats5)}if(!fm.liveswitch.Global.equals(stats.getCandidatePairs(),null))for(_this.setCandidatePairs(new Array(stats.getCandidatePairs().length)),num=0;num<stats.getCandidatePairs().length;num++){var stats6=stats.getCandidatePairs()[num],stats7=null;flag||(stats7=_this.findMatchingCandidatePair(lastStats.getCandidatePairs(),stats6.getId())),_this.getCandidatePairs()[num]=new fm.liveswitch.CandidatePairInfo(stats6,stats7)}_this.setActiveCandidatePairId(fm.liveswitch.Global.equals(stats.getActiveCandidatePair(),null)?null:stats.getActiveCandidatePair().getId()),_this.setReport(new fm.liveswitch.TransportReport(stats,lastStats))}return _this}return __extends(TransportInfo,_super),TransportInfo.prototype.getTypeString=function(){return"[fm.liveswitch.TransportInfo],"+_super.prototype.getTypeString.call(this)},TransportInfo.fromJson=function(transportReportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(transportReportJson,(function(){return new fm.liveswitch.TransportInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.fromJsonArray=function(transportInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(transportInfosJson,fm.liveswitch.TransportInfo.fromJson.bind(fm.liveswitch.TransportInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.toJson=function(transportReport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(transportReport,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.toJsonArray=function(transportInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(transportInfos,fm.liveswitch.TransportInfo.toJson.bind(fm.liveswitch.TransportInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("localCertificate"==_var0){this.setLocalCertificate(fm.liveswitch.CertificateInfo.fromJson(valueJson));break}if("remoteCertificate"==_var0){this.setRemoteCertificate(fm.liveswitch.CertificateInfo.fromJson(valueJson));break}if("localCandidates"==_var0){this.setLocalCandidates(fm.liveswitch.CandidateInfo.fromJsonArray(valueJson));break}if("remoteCandidates"==_var0){this.setRemoteCandidates(fm.liveswitch.CandidateInfo.fromJsonArray(valueJson));break}if("candidatePairs"==_var0){this.setCandidatePairs(fm.liveswitch.CandidatePairInfo.fromJsonArray(valueJson));break}if("activeCandidatePairId"==_var0){this.setActiveCandidatePairId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("report"==_var0){this.setReport(fm.liveswitch.TransportReport.fromJson(valueJson));break}}while(0)},TransportInfo.prototype.findMatchingCandidate=function(candidates,idValue){if(2==arguments.length){if(!fm.liveswitch.Global.equals(candidates,null))for(var _i=0,candidates_1=candidates;_i<candidates_1.length;_i++){var stats=candidates_1[_i];if(fm.liveswitch.Global.equals(stats.getId(),idValue))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.findMatchingCandidatePair=function(candidatePairs,idValue){if(2==arguments.length){if(!fm.liveswitch.Global.equals(candidatePairs,null))for(var _i=0,candidatePairs_1=candidatePairs;_i<candidatePairs_1.length;_i++){var stats=candidatePairs_1[_i];if(fm.liveswitch.Global.equals(stats.getId(),idValue))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.getActiveCandidatePairId=function(){if(0==arguments.length)return this._activeCandidatePairId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.getCandidatePairs=function(){if(0==arguments.length)return this._candidatePairs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.getLocalCandidates=function(){if(0==arguments.length)return this._localCandidates;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.getLocalCertificate=function(){if(0==arguments.length)return this._localCertificate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.getRemoteCandidates=function(){if(0==arguments.length)return this._remoteCandidates;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.getRemoteCertificate=function(){if(0==arguments.length)return this._remoteCertificate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getLocalCertificate(),null)||(jsonObject.localCertificate=fm.liveswitch.CertificateInfo.toJson(this.getLocalCertificate())),fm.liveswitch.Global.equals(this.getRemoteCertificate(),null)||(jsonObject.remoteCertificate=fm.liveswitch.CertificateInfo.toJson(this.getRemoteCertificate())),fm.liveswitch.Global.equals(this.getLocalCandidates(),null)||(jsonObject.localCandidates=fm.liveswitch.CandidateInfo.toJsonArray(this.getLocalCandidates())),fm.liveswitch.Global.equals(this.getRemoteCandidates(),null)||(jsonObject.remoteCandidates=fm.liveswitch.CandidateInfo.toJsonArray(this.getRemoteCandidates())),fm.liveswitch.Global.equals(this.getCandidatePairs(),null)||(jsonObject.candidatePairs=fm.liveswitch.CandidatePairInfo.toJsonArray(this.getCandidatePairs())),fm.liveswitch.Global.equals(this.getActiveCandidatePairId(),null)||(jsonObject.activeCandidatePairId=fm.liveswitch.JsonSerializer.serializeString(this.getActiveCandidatePairId())),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=fm.liveswitch.TransportReport.toJson(this.getReport()))},TransportInfo.prototype.setActiveCandidatePairId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._activeCandidatePairId=value},TransportInfo.prototype.setCandidatePairs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._candidatePairs=value},TransportInfo.prototype.setLocalCandidates=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localCandidates=value},TransportInfo.prototype.setLocalCertificate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localCertificate=value},TransportInfo.prototype.setRemoteCandidates=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCandidates=value},TransportInfo.prototype.setRemoteCertificate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCertificate=value},TransportInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},TransportInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.TransportInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportInfo}(fm.liveswitch.Info);liveswitch.TransportInfo=TransportInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TransportStats=function(_super){function TransportStats(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchTransportStatsInit(),_this}return __extends(TransportStats,_super),TransportStats.prototype.getTypeString=function(){return"[fm.liveswitch.TransportStats],"+_super.prototype.getTypeString.call(this)},TransportStats.prototype.fmliveswitchTransportStatsInit=function(){this._bytesReceived=0,this._bytesSent=0},TransportStats.fromJson=function(transportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(transportJson,(function(){return new fm.liveswitch.TransportStats}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.toJson=function(transport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(transport,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("bytesSent"==_var0){this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("bytesReceived"==_var0){this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("rtcpTransport"==_var0){this.setRtcpTransport(fm.liveswitch.TransportStats.fromJson(valueJson));break}if("localCandidates"==_var0){this.setLocalCandidates(fm.liveswitch.CandidateStats.fromJsonArray(valueJson));break}if("remoteCandidates"==_var0){this.setRemoteCandidates(fm.liveswitch.CandidateStats.fromJsonArray(valueJson));break}if("candidatePairs"==_var0){this.setCandidatePairs(fm.liveswitch.CandidatePairStats.fromJsonArray(valueJson));break}if("activeCandidatePair"==_var0){this.setActiveCandidatePair(fm.liveswitch.CandidatePairStats.fromJson(valueJson));break}if("localCertificate"==_var0){this.setLocalCertificate(fm.liveswitch.CertificateStats.fromJson(valueJson));break}if("remoteCertificate"==_var0){this.setRemoteCertificate(fm.liveswitch.CertificateStats.fromJson(valueJson));break}}while(0)},TransportStats.prototype.getActiveCandidatePair=function(){if(0==arguments.length)return this._activeCandidatePair;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getCandidatePair=function(candidatePairId){if(1==arguments.length){for(var _i=0,_a=this.getCandidatePairs();_i<_a.length;_i++){var stats=_a[_i];if(fm.liveswitch.Global.equals(stats.getId(),candidatePairId))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getCandidatePairs=function(){if(0==arguments.length)return this._candidatePairs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getIsHost=function(){if(0==arguments.length){var activeCandidatePair=this.getActiveCandidatePair();if(fm.liveswitch.Global.equals(activeCandidatePair,null))return!1;var localCandidate=this.getLocalCandidate(activeCandidatePair.getLocalCandidateId()),remoteCandidate=this.getRemoteCandidate(activeCandidatePair.getRemoteCandidateId());return!fm.liveswitch.Global.equals(localCandidate,null)&&localCandidate.getIsHost()||!fm.liveswitch.Global.equals(remoteCandidate,null)&&remoteCandidate.getIsHost()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getIsReflexive=function(){if(0==arguments.length){var activeCandidatePair=this.getActiveCandidatePair();if(fm.liveswitch.Global.equals(activeCandidatePair,null))return!1;var localCandidate=this.getLocalCandidate(activeCandidatePair.getLocalCandidateId()),remoteCandidate=this.getRemoteCandidate(activeCandidatePair.getRemoteCandidateId());return!fm.liveswitch.Global.equals(localCandidate,null)&&localCandidate.getIsReflexive()||!fm.liveswitch.Global.equals(remoteCandidate,null)&&remoteCandidate.getIsReflexive()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getIsRelayed=function(){if(0==arguments.length){var activeCandidatePair=this.getActiveCandidatePair();if(fm.liveswitch.Global.equals(activeCandidatePair,null))return!1;var localCandidate=this.getLocalCandidate(activeCandidatePair.getLocalCandidateId()),remoteCandidate=this.getRemoteCandidate(activeCandidatePair.getRemoteCandidateId());return!fm.liveswitch.Global.equals(localCandidate,null)&&localCandidate.getIsRelayed()||!fm.liveswitch.Global.equals(remoteCandidate,null)&&remoteCandidate.getIsRelayed()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getLocalCandidate=function(candidateId){if(1==arguments.length){for(var _i=0,_a=this.getLocalCandidates();_i<_a.length;_i++){var stats=_a[_i];if(fm.liveswitch.Global.equals(stats.getId(),candidateId))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getLocalCandidates=function(){if(0==arguments.length)return this._localCandidates;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getLocalCertificate=function(){if(0==arguments.length)return this._localCertificate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getRemoteCandidate=function(candidateId){if(1==arguments.length){for(var _i=0,_a=this.getRemoteCandidates();_i<_a.length;_i++){var stats=_a[_i];if(fm.liveswitch.Global.equals(stats.getId(),candidateId))return stats}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getRemoteCandidates=function(){if(0==arguments.length)return this._remoteCandidates;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getRemoteCertificate=function(){if(0==arguments.length)return this._remoteCertificate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.getRtcpTransport=function(){if(0==arguments.length)return this._rtcpTransport;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent()),jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived()),fm.liveswitch.Global.equals(this.getRtcpTransport(),null)||(jsonObject.rtcpTransport=fm.liveswitch.TransportStats.toJson(this.getRtcpTransport())),fm.liveswitch.Global.equals(this.getLocalCandidates(),null)||(jsonObject.localCandidates=fm.liveswitch.CandidateStats.toJsonArray(this.getLocalCandidates())),fm.liveswitch.Global.equals(this.getRemoteCandidates(),null)||(jsonObject.remoteCandidates=fm.liveswitch.CandidateStats.toJsonArray(this.getRemoteCandidates())),fm.liveswitch.Global.equals(this.getCandidatePairs(),null)||(jsonObject.candidatePairs=fm.liveswitch.CandidatePairStats.toJsonArray(this.getCandidatePairs())),fm.liveswitch.Global.equals(this.getActiveCandidatePair(),null)||(jsonObject.activeCandidatePair=fm.liveswitch.CandidatePairStats.toJson(this.getActiveCandidatePair())),fm.liveswitch.Global.equals(this.getLocalCertificate(),null)||(jsonObject.localCertificate=fm.liveswitch.CertificateStats.toJson(this.getLocalCertificate())),fm.liveswitch.Global.equals(this.getRemoteCertificate(),null)||(jsonObject.remoteCertificate=fm.liveswitch.CertificateStats.toJson(this.getRemoteCertificate()))},TransportStats.prototype.setActiveCandidatePair=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._activeCandidatePair=value},TransportStats.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesReceived=fm.liveswitch.Global.toInt(value)},TransportStats.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._bytesSent=fm.liveswitch.Global.toInt(value)},TransportStats.prototype.setCandidatePairs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._candidatePairs=value},TransportStats.prototype.setLocalCandidates=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localCandidates=value},TransportStats.prototype.setLocalCertificate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localCertificate=value},TransportStats.prototype.setRemoteCandidates=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCandidates=value},TransportStats.prototype.setRemoteCertificate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCertificate=value},TransportStats.prototype.setRtcpTransport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtcpTransport=value},TransportStats.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.TransportStats.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportStats}(fm.liveswitch.BaseStats);liveswitch.TransportStats=TransportStats}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Utility=function(){function Utility(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Utility.prototype.getTypeString=function(){return"[fm.liveswitch.Utility]"},Utility.clone=function(list){if(1==arguments.length){var list2=new Array;return fm.liveswitch.ArrayExtensions.addRange(list2,list),list2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.cloneIntArray=function(intArray){if(1==arguments.length){if(fm.liveswitch.Global.equals(intArray,null))return null;for(var numArray=new Array(intArray.length),i=0;i<intArray.length;i++)numArray[i]=intArray[i];return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.cloneLongArray=function(longArray){if(1==arguments.length){if(fm.liveswitch.Global.equals(longArray,null))return null;for(var numArray=new Array(longArray.length),i=0;i<longArray.length;i++)numArray[i]=longArray[i];return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.cloneStringArray=function(stringArray){if(1==arguments.length){if(fm.liveswitch.Global.equals(stringArray,null))return null;for(var strArray=new Array(stringArray.length),i=0;i<stringArray.length;i++)strArray[i]=stringArray[i];return strArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.firstOrDefault=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObject(arguments[0][0])))){var array=arguments[0];return fm.liveswitch.Global.equals(array,null)||fm.liveswitch.Global.equals(array.length,0)?null:array[0]}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObject(arguments[0]))){var list=arguments[0];return fm.liveswitch.Global.equals(list,null)||fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(list),0)?null:list[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.formatDoubleAsPercent=function(value,decimalPlaces){if(2==arguments.length){var num=void 0;(decimalPlaces=fm.liveswitch.Global.toInt(arguments[1]))<0&&(decimalPlaces=0);var str=fm.liveswitch.NumberExtensions.toString(100*value),strArray=fm.liveswitch.StringExtensions.split(str,[46]);if(fm.liveswitch.Global.equals(strArray.length,1)){for(decimalPlaces>0&&(str=fm.liveswitch.StringExtensions.concat(str,".")),num=0;num<decimalPlaces;num++)str=fm.liveswitch.StringExtensions.concat(str,"0");return str}var str2=strArray[0];if(fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(str2),0)&&(str2="0"),fm.liveswitch.Global.equals(decimalPlaces,0))return str2;var str3=strArray[1];if(fm.liveswitch.StringExtensions.getLength(str3)>decimalPlaces)str3=fm.liveswitch.StringExtensions.substring(str3,0,decimalPlaces);else if(fm.liveswitch.StringExtensions.getLength(str3)<decimalPlaces){var num2=decimalPlaces-fm.liveswitch.StringExtensions.getLength(str3);for(num=0;num<num2;num++)str3=fm.liveswitch.StringExtensions.concat(str3,"0")}return fm.liveswitch.StringExtensions.concat(str2,".",str3)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.generateId=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-","");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.generateSynchronizationSource=function(){if(0==arguments.length){var buffer=new Uint8Array(4);return fm.liveswitch.LockedRandomizer.nextBytes(buffer),fm.liveswitch.Binary.fromBytes32(buffer,0,!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.generateTieBreaker=function(){if(0==arguments.length)return fm.liveswitch.Utility.generateId();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.getRtpSequenceNumberDelta=function(rtpSequenceNumber,lastRtpSequenceNumber){if(2==arguments.length){var num=(rtpSequenceNumber=fm.liveswitch.Global.toInt(arguments[0]))-(lastRtpSequenceNumber=fm.liveswitch.Global.toInt(arguments[1]));return num<-32768?num+65536:(num>=32768&&(num-=65536),num)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.getRtpTimestampDelta=function(rtpTimestamp,lastRtpTimestamp){if(2==arguments.length){var num=(rtpTimestamp=fm.liveswitch.Global.toInt(arguments[0]))-(lastRtpTimestamp=fm.liveswitch.Global.toInt(arguments[1]));return num<-2147483648?num+4294967296:(num>=2147483648&&(num-=4294967296),num)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.lastOrDefault=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObject(arguments[0][0])))){var array=arguments[0];return fm.liveswitch.Global.equals(array,null)||fm.liveswitch.Global.equals(array.length,0)?null:array[array.length-1]}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObject(arguments[0]))){var list=arguments[0];return fm.liveswitch.Global.equals(list,null)||fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(list),0)?null:list[fm.liveswitch.ArrayExtensions.getCount(list)-1]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.singleOrDefault=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObject(arguments[0][0])))){var array=arguments[0];return fm.liveswitch.Global.equals(array,null)||!fm.liveswitch.Global.equals(array.length,1)?null:array[0]}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObject(arguments[0]))){var list=arguments[0];return fm.liveswitch.Global.equals(list,null)||!fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(list),1)?null:list[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.splice=function(){if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isArray(arguments[2])&&(0==arguments[2].length||fm.liveswitch.Util.isNullOrUndefined(arguments[2][0])||fm.liveswitch.Util.isObject(arguments[2][0])))){var array=arguments[0],index=fm.liveswitch.Global.toInt(arguments[1]),addItems=arguments[2],createArray=arguments[3];return fm.liveswitch.Utility.splice(array,index,0,addItems,createArray)}if(5==arguments.length){array=arguments[0],index=fm.liveswitch.Global.toInt(arguments[1]);var removeCount=fm.liveswitch.Global.toInt(arguments[2]);addItems=arguments[3],createArray=arguments[4];if(index<0&&array.length+index>=0&&(index=array.length+index),index<0||removeCount<0||index+removeCount>array.length){var length_43=array.length;throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Cannot splice {0} items at index {1} from an array of length {2}.",fm.liveswitch.NumberExtensions.toString(removeCount),fm.liveswitch.NumberExtensions.toString(index),fm.liveswitch.NumberExtensions.toString(length_43)))}for(var num=fm.liveswitch.Global.equals(addItems,null)?0:addItems.length,localArray=createArray(array.length-removeCount+num),num2=0,num3=0,num4=0;num3<index;)localArray[num2++]=array[num3++];for(;num4<num;)localArray[num2++]=addItems[num4++];for(num3+=removeCount;num3<array.length;)localArray[num2++]=array[num3++];return localArray}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isNumber(arguments[2]))){array=arguments[0],index=fm.liveswitch.Global.toInt(arguments[1]),removeCount=fm.liveswitch.Global.toInt(arguments[2]),createArray=arguments[3];return fm.liveswitch.Utility.splice(array,index,removeCount,null,createArray)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.toIntArray=function(intList){if(1==arguments.length){for(var numArray=new Array(fm.liveswitch.ArrayExtensions.getCount(intList)),i=0;i<numArray.length;i++)numArray[i]=intList[i];return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.toList=function(array){if(1==arguments.length){for(var list=new Array,i=0;i<array.length;i++)fm.liveswitch.ArrayExtensions.add(list,array[i]);return list}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.toLongArray=function(longList){if(1==arguments.length){for(var numArray=new Array(fm.liveswitch.ArrayExtensions.getCount(longList)),i=0;i<numArray.length;i++)numArray[i]=longList[i];return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.toStringArray=function(stringList){if(1==arguments.length){for(var strArray=new Array(fm.liveswitch.ArrayExtensions.getCount(stringList)),i=0;i<strArray.length;i++)strArray[i]=stringList[i];return strArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Utility.treeFindLeaves=function(root,childrenCallback,nodeCallback){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var localArray=childrenCallback(root);if(fm.liveswitch.Global.equals(localArray,null))nodeCallback(root);else for(var _i=0,localArray_3=localArray;_i<localArray_3.length;_i++){var local=localArray_3[_i];fm.liveswitch.Utility.treeSearch(local,childrenCallback,nodeCallback)}},Utility.treeSearch=function(root,childrenCallback,nodeCallback){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");nodeCallback(root);var localArray=childrenCallback(root);if(!fm.liveswitch.Global.equals(localArray,null))for(var _i=0,localArray_4=localArray;_i<localArray_4.length;_i++){var local=localArray_4[_i];fm.liveswitch.Utility.treeSearch(local,childrenCallback,nodeCallback)}},Utility}();liveswitch.Utility=Utility}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ScreenConfig=function(_super){function ScreenConfig(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Point]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.Size]"))){var origin_15=__arguments[0],size=__arguments[1],frameRate=__arguments[2];(__arguments=new Array(2))[0]=new fm.liveswitch.Rectangle(origin_15,size),__arguments[1]=frameRate;var region=__arguments[0],frameRate_3=__arguments[1];(__arguments=new Array(3))[0]=region,__arguments[1]=frameRate_3,__arguments[2]=9e4;var region_1=__arguments[0],frameRate_4=__arguments[1],clockRate=__arguments[2];(_this=_super.call(this,clockRate)||this).fmliveswitchScreenConfigInit(),_this.setRegion(region_1),_this.setFrameRate(frameRate_4)}else if(4==__arguments.length){var origin_16=__arguments[0];size=__arguments[1],frameRate=__arguments[2],clockRate=__arguments[3];(__arguments=new Array(3))[0]=new fm.liveswitch.Rectangle(origin_16,size),__arguments[1]=frameRate,__arguments[2]=clockRate;region=__arguments[0];var frameRate_5=__arguments[1],clockRate_6=__arguments[2];(_this=_super.call(this,clockRate_6)||this).fmliveswitchScreenConfigInit(),_this.setRegion(region),_this.setFrameRate(frameRate_5)}else if(2==__arguments.length){region=__arguments[0],frameRate=__arguments[1];(__arguments=new Array(3))[0]=region,__arguments[1]=frameRate,__arguments[2]=9e4;var region_2=__arguments[0],frameRate_6=__arguments[1];clockRate=__arguments[2];(_this=_super.call(this,clockRate)||this).fmliveswitchScreenConfigInit(),_this.setRegion(region_2),_this.setFrameRate(frameRate_6)}else if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Rectangle]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isNumber(arguments[1]))){region=__arguments[0],frameRate=__arguments[1],clockRate=__arguments[2];(_this=_super.call(this,clockRate)||this).fmliveswitchScreenConfigInit(),_this.setRegion(region),_this.setFrameRate(frameRate)}else if(5==__arguments.length){var x=__arguments[0],y=__arguments[1],width=__arguments[2],height=__arguments[3];frameRate=__arguments[4];(__arguments=new Array(3))[0]=new fm.liveswitch.Point(x,y),__arguments[1]=new fm.liveswitch.Size(width,height),__arguments[2]=frameRate;var origin_17=__arguments[0],frameRate_7=(size=__arguments[1],__arguments[2]);(__arguments=new Array(2))[0]=new fm.liveswitch.Rectangle(origin_17,size),__arguments[1]=frameRate_7;region=__arguments[0];var frameRate_8=__arguments[1];(__arguments=new Array(3))[0]=region,__arguments[1]=frameRate_8,__arguments[2]=9e4;var region_3=__arguments[0],frameRate_9=__arguments[1];clockRate=__arguments[2];(_this=_super.call(this,clockRate)||this).fmliveswitchScreenConfigInit(),_this.setRegion(region_3),_this.setFrameRate(frameRate_9)}else{if(6!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");x=__arguments[0],y=__arguments[1],width=__arguments[2],height=__arguments[3],frameRate=__arguments[4],clockRate=__arguments[5];(__arguments=new Array(4))[0]=new fm.liveswitch.Point(x,y),__arguments[1]=new fm.liveswitch.Size(width,height),__arguments[2]=frameRate,__arguments[3]=clockRate;var origin_18=__arguments[0],frameRate_10=(size=__arguments[1],__arguments[2]),clockRate_7=__arguments[3];(__arguments=new Array(3))[0]=new fm.liveswitch.Rectangle(origin_18,size),__arguments[1]=frameRate_10,__arguments[2]=clockRate_7;region=__arguments[0];var frameRate_11=__arguments[1],clockRate_8=__arguments[2];(_this=_super.call(this,clockRate_8)||this).fmliveswitchScreenConfigInit(),_this.setRegion(region),_this.setFrameRate(frameRate_11)}return _this}return __extends(ScreenConfig,_super),ScreenConfig.prototype.getTypeString=function(){return"[fm.liveswitch.ScreenConfig],"+_super.prototype.getTypeString.call(this)},ScreenConfig.prototype.fmliveswitchScreenConfigInit=function(){this.__frameRate=0},ScreenConfig.prototype.getFrameRate=function(){if(0==arguments.length)return this.__frameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.getHeight=function(){if(0==arguments.length)return this.getSize().getHeight();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.getOrigin=function(){if(0==arguments.length)return this.getRegion().getOrigin();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.getRegion=function(){if(0==arguments.length)return this.__region;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.getSize=function(){if(0==arguments.length)return this.getRegion().getSize();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.getWidth=function(){if(0==arguments.length)return this.getSize().getWidth();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.getX=function(){if(0==arguments.length)return this.getOrigin().getX();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.getY=function(){if(0==arguments.length)return this.getOrigin().getY();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.isEquivalent=function(config){if(1==arguments.length)return!!_super.prototype.isEquivalent.call(this,config)&&(fm.liveswitch.Global.equals(this.getX(),config.getX())&&fm.liveswitch.Global.equals(this.getY(),config.getY())&&fm.liveswitch.Global.equals(this.getWidth(),config.getWidth())&&fm.liveswitch.Global.equals(this.getHeight(),config.getHeight())&&fm.liveswitch.Global.equals(this.getFrameRate(),config.getFrameRate()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig.prototype.setFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(value<=0)throw new fm.liveswitch.Exception("Frame-rate must be greater than 0.");this.__frameRate=value},ScreenConfig.prototype.setOrigin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getRegion().setOrigin(value)},ScreenConfig.prototype.setRegion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Region cannot be null.");this.__region=value},ScreenConfig.prototype.setSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getRegion().setSize(value)},ScreenConfig.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.format("Clock Rate: {0}, X: {1}, Y: {2} Width: {3}, Height: {4}, Frame Rate: {5}",[fm.liveswitch.NumberExtensions.toString(_super.prototype.getClockRate.call(this)),fm.liveswitch.NumberExtensions.toString(this.getX()),fm.liveswitch.NumberExtensions.toString(this.getY()),fm.liveswitch.NumberExtensions.toString(this.getWidth()),fm.liveswitch.NumberExtensions.toString(this.getHeight()),fm.liveswitch.NumberExtensions.toString(this.getFrameRate())]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ScreenConfig}(fm.liveswitch.MediaConfig);liveswitch.ScreenConfig=ScreenConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoConfig=function(_super){function VideoConfig(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2==__arguments.length){var size=__arguments[0],frameRate=__arguments[1];(__arguments=new Array(3))[0]=size,__arguments[1]=frameRate,__arguments[2]=9e4;var size_1=__arguments[0],frameRate_12=__arguments[1],clockRate=__arguments[2];(_this=_super.call(this,clockRate)||this).fmliveswitchVideoConfigInit(),_this.setSize(size_1),_this.setFrameRate(frameRate_12)}else if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Size]"))){size=__arguments[0],frameRate=__arguments[1],clockRate=__arguments[2];(_this=_super.call(this,clockRate)||this).fmliveswitchVideoConfigInit(),_this.setSize(size),_this.setFrameRate(frameRate)}else if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var width=__arguments[0],height=__arguments[1];frameRate=__arguments[2];(__arguments=new Array(2))[0]=new fm.liveswitch.Size(width,height),__arguments[1]=frameRate;size=__arguments[0];var frameRate_13=__arguments[1];(__arguments=new Array(3))[0]=size,__arguments[1]=frameRate_13,__arguments[2]=9e4;var size_2=__arguments[0],frameRate_14=__arguments[1];clockRate=__arguments[2];(_this=_super.call(this,clockRate)||this).fmliveswitchVideoConfigInit(),_this.setSize(size_2),_this.setFrameRate(frameRate_14)}else{if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");width=__arguments[0],height=__arguments[1],frameRate=__arguments[2],clockRate=__arguments[3];(__arguments=new Array(3))[0]=new fm.liveswitch.Size(width,height),__arguments[1]=frameRate,__arguments[2]=clockRate;size=__arguments[0];var frameRate_15=__arguments[1],clockRate_9=__arguments[2];(_this=_super.call(this,clockRate_9)||this).fmliveswitchVideoConfigInit(),_this.setSize(size),_this.setFrameRate(frameRate_15)}return _this}return __extends(VideoConfig,_super),VideoConfig.prototype.getTypeString=function(){return"[fm.liveswitch.VideoConfig],"+_super.prototype.getTypeString.call(this)},VideoConfig.prototype.fmliveswitchVideoConfigInit=function(){this.__frameRate=0},VideoConfig.prototype.getFrameDuration=function(){if(0==arguments.length){var frameRate=this.getFrameRate();return frameRate<=0?-1:1e3/frameRate}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoConfig.prototype.getFrameRate=function(){if(0==arguments.length)return this.__frameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoConfig.prototype.getHeight=function(){if(0==arguments.length)return this.getSize().getHeight();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoConfig.prototype.getSize=function(){if(0==arguments.length)return this.__size;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoConfig.prototype.getWidth=function(){if(0==arguments.length)return this.getSize().getWidth();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoConfig.prototype.isEquivalent=function(config){if(1==arguments.length)return!!_super.prototype.isEquivalent.call(this,config)&&(fm.liveswitch.Global.equals(this.getWidth(),config.getWidth())&&fm.liveswitch.Global.equals(this.getHeight(),config.getHeight())&&fm.liveswitch.Global.equals(this.getFrameRate(),config.getFrameRate()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoConfig.prototype.setFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(value<=0)throw new fm.liveswitch.Exception("Frame-rate must be greater than 0.");this.__frameRate=value},VideoConfig.prototype.setSize=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Size cannot be null.");this.__size=value},VideoConfig.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.format("Clock Rate: {0}, Width: {1}, Height: {2}, Frame Rate: {3}",[fm.liveswitch.NumberExtensions.toString(_super.prototype.getClockRate.call(this)),fm.liveswitch.NumberExtensions.toString(this.getWidth()),fm.liveswitch.NumberExtensions.toString(this.getHeight()),fm.liveswitch.NumberExtensions.toString(this.getFrameRate())]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoConfig}(fm.liveswitch.MediaConfig);liveswitch.VideoConfig=VideoConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaBuffer=function(_super){function MediaBuffer(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaBufferInit();else if(2==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var dataBuffer=__arguments[0],format=__arguments[1];(_this=_super.call(this)||this).fmliveswitchMediaBufferInit(),_this.setDataBuffer(dataBuffer),_this.setFormat(format)}else{if(2!=__arguments.length||!(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.DataBuffer]"))))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var dataBuffers=__arguments[0];format=__arguments[1];(_this=_super.call(this)||this).fmliveswitchMediaBufferInit(),_this.setDataBuffers(dataBuffers),_this.setFormat(format)}return _this}return __extends(MediaBuffer,_super),MediaBuffer.prototype.getTypeString=function(){return"[fm.liveswitch.MediaBuffer],"+_super.prototype.getTypeString.call(this)},MediaBuffer.prototype.fmliveswitchMediaBufferInit=function(){this._recoveredByFec=!1},MediaBuffer.prototype.clone=function(){if(0==arguments.length){var local=this.createInstance();if(local.setDataBuffers(this.getDataBuffers()),local.setSequenceNumbers(fm.liveswitch.Utility.cloneLongArray(this.getSequenceNumbers())),!fm.liveswitch.Global.equals(this.getRtpHeaders(),null)){local.setRtpHeaders(new Array(this.getRtpHeaders().length));for(var i=0;i<local.getRtpHeaders().length;i++)fm.liveswitch.Global.equals(this.getRtpHeaders()[i],null)||(local.getRtpHeaders()[i]=this.getRtpHeaders()[i].clone())}return local.setFormat(this.getFormat().clone()),local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.free=function(){if(0==arguments.length){for(var _i=0,_a=this.getDataBuffers();_i<_a.length;_i++){var buffer=_a[_i];buffer.free()}return this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getDataBuffer=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getDataBuffers());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getDataBuffers=function(){if(0==arguments.length)return this.__dataBuffers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getFootprint=function(){if(0==arguments.length){for(var num=0,_i=0,_a=this.getDataBuffers();_i<_a.length;_i++){var buffer=_a[_i];num+=buffer.getLength()}return num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getFormat=function(){if(0==arguments.length)return this.__format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getIsPacketized=function(){if(0==arguments.length)return!1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getLastSequenceNumber=function(){if(0==arguments.length){var sequenceNumbers=this.getSequenceNumbers();return fm.liveswitch.Global.equals(sequenceNumbers,null)?-1:sequenceNumbers[sequenceNumbers.length-1]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getRecoveredByFec=function(){if(0==arguments.length)return this._recoveredByFec;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getRtpHeader=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getRtpHeaders());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getRtpHeaders=function(){if(0==arguments.length)return this._rtpHeaders;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getRtpSequenceNumber=function(){if(0==arguments.length){var rtpSequenceNumbers=this.getRtpSequenceNumbers();return fm.liveswitch.Global.equals(rtpSequenceNumbers,null)?-1:rtpSequenceNumbers[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getRtpSequenceNumbers=function(){if(0==arguments.length){var rtpHeaders=this.getRtpHeaders();if(fm.liveswitch.Global.equals(rtpHeaders,null))return null;for(var numArray=new Array(rtpHeaders.length),i=0;i<numArray.length;i++){var header=rtpHeaders[i];fm.liveswitch.Global.equals(header,null)?numArray[i]=-1:numArray[i]=rtpHeaders[i].getSequenceNumber()}return numArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getSequenceNumber=function(){if(0==arguments.length){var sequenceNumbers=this.getSequenceNumbers();return fm.liveswitch.Global.equals(sequenceNumbers,null)?-1:sequenceNumbers[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getSequenceNumbers=function(){if(0==arguments.length)return this._sequenceNumbers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.getSourceId=function(){if(0==arguments.length)return this._sourceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.keep=function(){if(0==arguments.length){for(var _i=0,_a=this.getDataBuffers();_i<_a.length;_i++){var buffer=_a[_i];buffer.keep()}return this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.setDataBuffer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Data buffer cannot be null.");this.__dataBuffers=[value]},MediaBuffer.prototype.setDataBuffers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Data buffers cannot be null.");this.__dataBuffers=value},MediaBuffer.prototype.setFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Format cannot be null.");this.__format=value},MediaBuffer.prototype.setRecoveredByFec=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._recoveredByFec=value},MediaBuffer.prototype.setRtpHeader=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setRtpHeaders(fm.liveswitch.Global.equals(value,null)?null:[value])},MediaBuffer.prototype.setRtpHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._rtpHeaders=value},MediaBuffer.prototype.setSequenceNumber=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.setSequenceNumbers([value])},MediaBuffer.prototype.setSequenceNumbers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sequenceNumbers=value},MediaBuffer.prototype.setSourceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sourceId=value},MediaBuffer.prototype.toString=function(){if(0==arguments.length)return this.getFormat().toString();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaBuffer.prototype.tryKeep=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{for(var _i=0,_a=this.getDataBuffers();_i<_a.length;_i++){var buffer=_a[_i];buffer.keep()}return!0}catch(obj1){return!1}},MediaBuffer}(fm.liveswitch.Dynamic);liveswitch.MediaBuffer=MediaBuffer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaFormat=function(){function MediaFormat(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchMediaFormatInit(),this.initialize();else if(2==__arguments.length){var name_23=__arguments[0],clockRate=__arguments[1];this.fmliveswitchMediaFormatInit(),this.initialize(),this.initialize(name_23,clockRate,null,null,null,null)}else if(3==__arguments.length){var name_24=__arguments[0],packetizationMode=(clockRate=__arguments[1],__arguments[2]);this.fmliveswitchMediaFormatInit(),this.initialize(),this.initialize(name_24,clockRate,null,null,packetizationMode,null)}else if(4==__arguments.length){var name_25=__arguments[0],profile=(clockRate=__arguments[1],__arguments[2]),level=__arguments[3];this.fmliveswitchMediaFormatInit(),this.initialize(),this.initialize(name_25,clockRate,profile,level,null,null)}else if(5==__arguments.length){var name_26=__arguments[0];clockRate=__arguments[1],profile=__arguments[2],level=__arguments[3],packetizationMode=__arguments[4];this.fmliveswitchMediaFormatInit(),this.initialize(),this.initialize(name_26,clockRate,profile,level,packetizationMode,null)}else{if(6!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var name_27=__arguments[0],tier=(clockRate=__arguments[1],profile=__arguments[2],level=__arguments[3],packetizationMode=__arguments[4],__arguments[5]);this.fmliveswitchMediaFormatInit(),this.initialize(),this.initialize(name_27,clockRate,profile,level,packetizationMode,tier)}}return MediaFormat.prototype.getTypeString=function(){return"[fm.liveswitch.MediaFormat]"},MediaFormat.prototype.fmliveswitchMediaFormatInit=function(){this._clockRate=0,this._isEncrypted=!1,this._isFixedBitrate=!1,this._isInjected=!1,this._isPacketized=!1,this._levelIsStrict=!1,this._registeredPayloadType=0,this._staticPayloadType=0},MediaFormat.getRedName=function(){if(0==arguments.length)return"red";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.getUlpFecName=function(){if(0==arguments.length)return"ulpfec";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.clone=function(){if(0==arguments.length){var local=this.createInstance();return local.setName(this.getName()),local.setClockRate(this.getClockRate()),local.setIsPacketized(this.getIsPacketized()),local.setPacketizationMode(this.getPacketizationMode()),local.setProfile(this.getProfile()),local.setLevel(this.getLevel()),local.setLevelIsStrict(this.getLevelIsStrict()),local.setTier(this.getTier()),local.setIsEncrypted(this.getIsEncrypted()),local.setIsInjected(this.getIsInjected()),local.setRegisteredPayloadType(this.getRegisteredPayloadType()),local.setStaticPayloadType(this.getStaticPayloadType()),local.setIsFixedBitrate(this.getIsFixedBitrate()),local}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getClockRate=function(){if(0==arguments.length)return this._clockRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getFullName=function(){if(0==arguments.length){if(fm.liveswitch.Global.equals(this.getName(),null))throw new fm.liveswitch.Exception("Name cannot be null.");var parameters=this.getParameters();return fm.liveswitch.StringExtensions.isNullOrEmpty(parameters)?fm.liveswitch.StringExtensions.format("{0}/{1}",this.getName(),fm.liveswitch.NumberExtensions.toString(this.getClockRate())):fm.liveswitch.StringExtensions.format("{0}/{1}/{2}",this.getName(),fm.liveswitch.NumberExtensions.toString(this.getClockRate()),parameters)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getIsEncrypted=function(){if(0==arguments.length)return this._isEncrypted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getIsFixedBitrate=function(){if(0==arguments.length)return this._isFixedBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getIsInjected=function(){if(0==arguments.length)return this._isInjected;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getIsPacketized=function(){if(0==arguments.length)return this._isPacketized;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getLevel=function(){if(0==arguments.length)return this._level;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getLevelIsStrict=function(){if(0==arguments.length)return this._levelIsStrict;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getMaxBitrate=function(){if(0==arguments.length)return-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getMaxLevel=function(level1,level2){if(2==arguments.length)return level1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getMinBitrate=function(){if(0==arguments.length)return-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getMinLevel=function(level1,level2){if(2==arguments.length)return level1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getName=function(){if(0==arguments.length)return this.__name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getPacketizationMode=function(){if(0==arguments.length)return this.getIsPacketized()?this.__packetizationMode:null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getProfile=function(){if(0==arguments.length)return this._profile;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getRegisteredPayloadType=function(){if(0==arguments.length)return this._registeredPayloadType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getStaticPayloadType=function(){if(0==arguments.length)return this._staticPayloadType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.getTier=function(){if(0==arguments.length)return this._tier;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.initialize=function(){if(0==arguments.length)this.setRegisteredPayloadType(-1),this.setStaticPayloadType(-1);else{if(6!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var name_28=arguments[0],clockRate=fm.liveswitch.Global.toInt(arguments[1]),profile=arguments[2],level=arguments[3],packetizationMode=arguments[4],tier=arguments[5];this.setName(name_28),this.setClockRate(clockRate),this.setProfile(profile),this.setLevel(level),this.setPacketizationMode(packetizationMode),this.setTier(tier),fm.liveswitch.Global.equals(packetizationMode,null)||this.setIsPacketized(!0)}},MediaFormat.prototype.isCompatible=function(format){if(1==arguments.length)return!fm.liveswitch.Global.equals(format,null)&&(!!fm.liveswitch.StringExtensions.isEqual(this.getName(),format.getName(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)&&(!!fm.liveswitch.Global.equals(this.getClockRate(),format.getClockRate())&&(!!fm.liveswitch.Global.equals(this.getIsPacketized(),format.getIsPacketized())&&(!!fm.liveswitch.Global.equals(this.getPacketizationMode(),format.getPacketizationMode())&&(!!(fm.liveswitch.Global.equals(this.getProfile(),null)||fm.liveswitch.Global.equals(format.getProfile(),null)||fm.liveswitch.StringExtensions.isEqual(this.getProfile(),format.getProfile(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)||this.isProfileCompatible(format.getProfile()))&&(!!(fm.liveswitch.Global.equals(this.getLevel(),null)||fm.liveswitch.Global.equals(format.getLevel(),null)||!this.getLevelIsStrict()||fm.liveswitch.StringExtensions.isEqual(this.getLevel(),format.getLevel(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase)||this.isLevelCompatible(format.getLevel()))&&!!(fm.liveswitch.Global.equals(this.getTier(),null)||fm.liveswitch.Global.equals(format.getTier(),null)||fm.liveswitch.StringExtensions.isEqual(this.getTier(),format.getTier(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase))))))));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.isEquivalent=function(format,ignoreIsPacketized){if(2==arguments.length){if(fm.liveswitch.Global.equals(format,null))return!1;if(!fm.liveswitch.StringExtensions.isEqual(this.getName(),format.getName(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase))return!1;if(!fm.liveswitch.Global.equals(this.getClockRate(),format.getClockRate()))return!1;if(!ignoreIsPacketized){if(!fm.liveswitch.Global.equals(this.getIsPacketized(),format.getIsPacketized()))return!1;if(!fm.liveswitch.Global.equals(this.getPacketizationMode(),format.getPacketizationMode()))return!1}if(fm.liveswitch.Global.equals(this.getProfile(),null)){if(!fm.liveswitch.Global.equals(format.getProfile(),null))return!1}else if(!fm.liveswitch.StringExtensions.isEqual(this.getProfile(),format.getProfile(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase))return!1;if(fm.liveswitch.Global.equals(this.getLevel(),null)){if(!fm.liveswitch.Global.equals(format.getLevel(),null))return!1}else if(!fm.liveswitch.StringExtensions.isEqual(this.getLevel(),format.getLevel(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase))return!1;if(fm.liveswitch.Global.equals(this.getTier(),null)){if(!fm.liveswitch.Global.equals(format.getTier(),null))return!1}else if(!fm.liveswitch.StringExtensions.isEqual(this.getTier(),format.getLevel(),fm.liveswitch.StringComparison.InvariantCultureIgnoreCase))return!1;return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.isLevelCompatible=function(level){if(1==arguments.length)return!1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.isProfileCompatible=function(profile){if(1==arguments.length)return!1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.setClockRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._clockRate=fm.liveswitch.Global.toInt(value)},MediaFormat.prototype.setIsEncrypted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._isEncrypted=value},MediaFormat.prototype.setIsFixedBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._isFixedBitrate=value},MediaFormat.prototype.setIsInjected=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._isInjected=value},MediaFormat.prototype.setIsPacketized=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._isPacketized=value},MediaFormat.prototype.setLevel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._level=value},MediaFormat.prototype.setLevelIsStrict=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._levelIsStrict=value},MediaFormat.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Name cannot be null.");this.__name=value},MediaFormat.prototype.setPacketizationMode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__packetizationMode=value},MediaFormat.prototype.setProfile=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._profile=value},MediaFormat.prototype.setRegisteredPayloadType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._registeredPayloadType=fm.liveswitch.Global.toInt(value)},MediaFormat.prototype.setStaticPayloadType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._staticPayloadType=fm.liveswitch.Global.toInt(value)},MediaFormat.prototype.setTier=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tier=value},MediaFormat.prototype.toString=function(){if(0==arguments.length){var builder=new fm.liveswitch.StringBuilder;builder.append(this.getFullName());var list=new Array;return fm.liveswitch.Global.equals(this.getPacketizationMode(),null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Packetization Mode {0}",this.getPacketizationMode())),fm.liveswitch.Global.equals(this.getProfile(),null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Profile {0}",this.getProfile())),fm.liveswitch.Global.equals(this.getLevel(),null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Level {0}",this.getLevel())),fm.liveswitch.Global.equals(this.getTier(),null)||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.StringExtensions.format("Tier {0}",this.getTier())),fm.liveswitch.ArrayExtensions.getCount(list)>0&&(builder.append(" ("),builder.append(fm.liveswitch.StringExtensions.join("; ",fm.liveswitch.ArrayExtensions.toArray(list))),builder.append(")")),builder.toString()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaFormat.prototype.updateLevelIsStrictToCompatible=function(format){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");format.getLevelIsStrict()&&this.setLevelIsStrict(!0)},MediaFormat.prototype.updateLevelToCompatible=function(format){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(format.getLevel(),null)||(fm.liveswitch.Global.equals(this.getLevel(),null)?this.setLevel(format.getLevel()):this.getLevelIsStrict()||(format.getLevelIsStrict()?this.setLevel(format.getLevel()):this.setLevel(this.getMinLevel(this.getLevel(),format.getLevel()))))},MediaFormat.prototype.updateProfileToCompatible=function(format){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(format.getProfile(),null)||this.setProfile(format.getProfile())},MediaFormat.prototype.updateTierToCompatible=function(format){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(format.getTier(),null)||this.setTier(format.getTier())},MediaFormat.prototype.updateToCompatible=function(format){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.updateProfileToCompatible(format),this.updateLevelToCompatible(format),this.updateLevelIsStrictToCompatible(format),this.updateTierToCompatible(format)},MediaFormat}();liveswitch.MediaFormat=MediaFormat}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AudioFormat=function(_super){function AudioFormat(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchAudioFormatInit();else if(3==__arguments.length){var name_29=__arguments[0],clockRate=__arguments[1],channelCount=__arguments[2];(_this=_super.call(this,name_29,clockRate)||this).fmliveswitchAudioFormatInit(),_this.setChannelCount(channelCount)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var name_30=__arguments[0],config=__arguments[1];(_this=_super.call(this,name_30,config.getClockRate())||this).fmliveswitchAudioFormatInit(),_this.setChannelCount(config.getChannelCount())}return _this}return __extends(AudioFormat,_super),AudioFormat.prototype.getTypeString=function(){return"[fm.liveswitch.AudioFormat],"+_super.prototype.getTypeString.call(this)},AudioFormat.prototype.fmliveswitchAudioFormatInit=function(){this._channelCount=0,this._littleEndian=!1},AudioFormat.fromFormatInfo=function(info){if(1==arguments.length){if(fm.liveswitch.Global.equals(info.getChannelCount(),-1))throw new fm.liveswitch.Exception("Not an audio format info.");return new fm.liveswitch.AudioFormat(info.getName(),new fm.liveswitch.AudioConfig(info.getClockRate(),info.getChannelCount()))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.fromJson=function(audioFormatJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(audioFormatJson,(function(){return new fm.liveswitch.AudioFormat}),(function(audioFormat,name,valueJson){var _var0=name;do{if("channelCount"==_var0){audioFormat.setChannelCount(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("littleEndian"==_var0){audioFormat.setLittleEndian(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("name"==_var0){audioFormat.setName(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clockRate"==_var0){audioFormat.setClockRate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("isPacketized"==_var0){audioFormat.setIsPacketized(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("isEncrypted"==_var0){audioFormat.setIsEncrypted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("registeredPayloadType"==_var0){audioFormat.setRegisteredPayloadType(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("staticPayloadType"==_var0){audioFormat.setStaticPayloadType(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.getDtmfName=function(){if(0==arguments.length)return"telephone-event";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.getG722Name=function(){if(0==arguments.length)return"G722";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.getL16Name=function(){if(0==arguments.length)return"L16";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.getOpusName=function(){if(0==arguments.length)return"opus";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.getPcmaName=function(){if(0==arguments.length)return"PCMA";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.getPcmName=function(){if(0==arguments.length)return"PCM";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.getPcmuName=function(){if(0==arguments.length)return"PCMU";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.toJson=function(audioFormat){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(audioFormat,(function(obj,jsonObject){jsonObject.channelCount=fm.liveswitch.JsonSerializer.serializeInteger(audioFormat.getChannelCount()),jsonObject.littleEndian=fm.liveswitch.JsonSerializer.serializeBoolean(audioFormat.getLittleEndian()),jsonObject.name=fm.liveswitch.JsonSerializer.serializeString(audioFormat.getName()),jsonObject.clockRate=fm.liveswitch.JsonSerializer.serializeInteger(audioFormat.getClockRate()),jsonObject.isPacketized=fm.liveswitch.JsonSerializer.serializeBoolean(audioFormat.getIsPacketized()),jsonObject.isEncrypted=fm.liveswitch.JsonSerializer.serializeBoolean(audioFormat.getIsEncrypted()),jsonObject.registeredPayloadType=fm.liveswitch.JsonSerializer.serializeInteger(audioFormat.getRegisteredPayloadType()),jsonObject.staticPayloadType=fm.liveswitch.JsonSerializer.serializeInteger(audioFormat.getStaticPayloadType())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.clone=function(){if(0==arguments.length){var format=_super.prototype.clone.call(this);return format.setChannelCount(this.getChannelCount()),format.setLittleEndian(this.getLittleEndian()),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.AudioFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getChannelCount=function(){if(0==arguments.length)return this._channelCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getConfig=function(){if(0==arguments.length)return new fm.liveswitch.AudioConfig(_super.prototype.getClockRate.call(this),this.getChannelCount());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getInfo=function(){if(0==arguments.length)return new fm.liveswitch.FormatInfo(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsCompressed=function(){if(0==arguments.length)return!this.getIsPcm();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsDtmf=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.AudioFormat.getDtmfName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsG722=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.AudioFormat.getG722Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsL16=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.AudioFormat.getL16Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsOpus=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.AudioFormat.getOpusName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsPcm=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.AudioFormat.getPcmName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsPcma=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.AudioFormat.getPcmaName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getIsPcmu=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.AudioFormat.getPcmuName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getLittleEndian=function(){if(0==arguments.length)return this._littleEndian;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.getParameters=function(){if(0==arguments.length){var channelCount=this.getChannelCount();return fm.liveswitch.Global.equals(channelCount,1)?null:fm.liveswitch.NumberExtensions.toString(channelCount)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.isCompatible=function(format){if(1==arguments.length)return!!_super.prototype.isCompatible.call(this,format)&&!!fm.liveswitch.Global.equals(this.getChannelCount(),format.getChannelCount());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.isEquivalent=function(format,ignoreIsPacketized){if(2==arguments.length)return _super.prototype.isEquivalent.call(this,format,ignoreIsPacketized)&&fm.liveswitch.Global.equals(this.getChannelCount(),format.getChannelCount());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat.prototype.setChannelCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._channelCount=fm.liveswitch.Global.toInt(value)},AudioFormat.prototype.setLittleEndian=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._littleEndian=value},AudioFormat.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.AudioFormat.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioFormat}(fm.liveswitch.MediaFormat);liveswitch.AudioFormat=AudioFormat}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSinkBase=function(_super){function MediaSinkBase(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).__id=fm.liveswitch.Utility.generateId(),_this}return __extends(MediaSinkBase,_super),MediaSinkBase.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSinkBase],"+_super.prototype.getTypeString.call(this)},MediaSinkBase.prototype.getExternalId=function(){if(0==arguments.length)return this._externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkBase.prototype.getId=function(){if(0==arguments.length)return this.__id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkBase.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSinkBase.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._externalId=value},MediaSinkBase.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},MediaSinkBase}(fm.liveswitch.Dynamic);liveswitch.MediaSinkBase=MediaSinkBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSourceBase=function(_super){function MediaSourceBase(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).__id=fm.liveswitch.Utility.generateId(),_this}return __extends(MediaSourceBase,_super),MediaSourceBase.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSourceBase],"+_super.prototype.getTypeString.call(this)},MediaSourceBase.prototype.getExternalId=function(){if(0==arguments.length)return this._externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceBase.prototype.getId=function(){if(0==arguments.length)return this.__id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceBase.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSourceBase.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._externalId=value},MediaSourceBase.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},MediaSourceBase}(fm.liveswitch.Dynamic);liveswitch.MediaSourceBase=MediaSourceBase}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CcmTmmbnPolicyWrapper=function(){function CcmTmmbnPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_38=__arguments[0];this._value=value_38}return CcmTmmbnPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CcmTmmbnPolicyWrapper]"},CcmTmmbnPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CcmTmmbnPolicy.Disabled?"Disabled":this._value==fm.liveswitch.CcmTmmbnPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CcmTmmbnPolicyWrapper}();liveswitch.CcmTmmbnPolicyWrapper=CcmTmmbnPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CcmTmmbrPolicyWrapper=function(){function CcmTmmbrPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_39=__arguments[0];this._value=value_39}return CcmTmmbrPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CcmTmmbrPolicyWrapper]"},CcmTmmbrPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CcmTmmbrPolicy.Disabled?"Disabled":this._value==fm.liveswitch.CcmTmmbrPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CcmTmmbrPolicyWrapper}();liveswitch.CcmTmmbrPolicyWrapper=CcmTmmbrPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RateLimiter=function(){function RateLimiter(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.RateLimiter.generateRateLimiterRules(200,2,9);var rules=__arguments[0];this.fmliveswitchRateLimiterInit(),this.__lock=new Object,this.__nextAllowedExecution=-1,this.__rules=rules}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");rules=__arguments[0];this.fmliveswitchRateLimiterInit(),this.__lock=new Object,this.__nextAllowedExecution=-1,this.__rules=rules}}return RateLimiter.prototype.getTypeString=function(){return"[fm.liveswitch.RateLimiter]"},RateLimiter.prototype.fmliveswitchRateLimiterInit=function(){this.__nextAllowedExecution=0,this.__numExecutions=0,this.__originalExecutionTime=0},RateLimiter.generateRateLimiterRules=function(originalInterval,backoffMultiplier,numRules){if(3==arguments.length){originalInterval=fm.liveswitch.Global.toInt(arguments[0]),backoffMultiplier=fm.liveswitch.Global.toInt(arguments[1]),numRules=fm.liveswitch.Global.toInt(arguments[2]);var ruleArray=new Array(numRules);ruleArray[0]=new fm.liveswitch.RateLimiterRule(1,originalInterval);for(var i=1;i<numRules;i++)ruleArray[i]=new fm.liveswitch.RateLimiterRule(i+1,backoffMultiplier*ruleArray[i-1].getPeriod());return ruleArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RateLimiter.prototype.checkDelay=function(currentTime){if(1==arguments.length){if(currentTime=fm.liveswitch.Global.toInt(arguments[0]),this.__nextAllowedExecution<=currentTime){var index=fm.liveswitch.MathAssistant.min(this.__numExecutions,this.__rules.length);return fm.liveswitch.Global.equals(index,0)&&(this.__originalExecutionTime=currentTime),this.__nextAllowedExecution=this.__rules[index].getPeriod()+this.__originalExecutionTime,this.__numExecutions++,0}return this.__nextAllowedExecution-currentTime}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RateLimiter.prototype.getRules=function(){if(0==arguments.length)return this.__rules;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RateLimiter.prototype.reset=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__nextAllowedExecution=-1,this.__numExecutions=0},RateLimiter}();liveswitch.RateLimiter=RateLimiter}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RateLimiterRule=function(){function RateLimiterRule(limit,period){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var limit_1=__arguments[0],period_1=__arguments[1];this.fmliveswitchRateLimiterRuleInit(),this.setLimit(limit_1),this.setPeriod(period_1)}return RateLimiterRule.prototype.getTypeString=function(){return"[fm.liveswitch.RateLimiterRule]"},RateLimiterRule.prototype.fmliveswitchRateLimiterRuleInit=function(){this._limit=0,this._period=0},RateLimiterRule.prototype.getLimit=function(){if(0==arguments.length)return this._limit;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RateLimiterRule.prototype.getPeriod=function(){if(0==arguments.length)return this._period;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RateLimiterRule.prototype.setLimit=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._limit=fm.liveswitch.Global.toInt(value)},RateLimiterRule.prototype.setPeriod=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._period=fm.liveswitch.Global.toInt(value)},RateLimiterRule}();liveswitch.RateLimiterRule=RateLimiterRule}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaStreamMediaDescriptionManagerUtility=function(){function MediaStreamMediaDescriptionManagerUtility(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return MediaStreamMediaDescriptionManagerUtility.prototype.getTypeString=function(){return"[fm.liveswitch.MediaStreamMediaDescriptionManagerUtility]"},MediaStreamMediaDescriptionManagerUtility.prototype.checkIfMuted=function(sdpMediaDescription){if(1==arguments.length)return sdpMediaDescription.getIsMuted();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamMediaDescriptionManagerUtility.prototype.setMuted=function(muted,sdpMediaDescription){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");sdpMediaDescription.setIsMuted(muted)},MediaStreamMediaDescriptionManagerUtility.prototype.updateSdpMediaDescription=function(mediaDescription,requirements){if(2==arguments.length)return requirements.getLocalMuted()&&mediaDescription.addMediaAttribute(new fm.liveswitch.sdp.MutedAttribute(!0)),mediaDescription;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaStreamMediaDescriptionManagerUtility}();liveswitch.MediaStreamMediaDescriptionManagerUtility=MediaStreamMediaDescriptionManagerUtility}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoTypeWrapper=function(){function VideoTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_40=__arguments[0];this._value=value_40}return VideoTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.VideoTypeWrapper]"},VideoTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.VideoType.Unknown?"Unknown":this._value==fm.liveswitch.VideoType.Camera?"Camera":this._value==fm.liveswitch.VideoType.Screen?"Screen":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoTypeWrapper}();liveswitch.VideoTypeWrapper=VideoTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoDegradationPreferenceWrapper=function(){function VideoDegradationPreferenceWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_41=__arguments[0];this._value=value_41}return VideoDegradationPreferenceWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.VideoDegradationPreferenceWrapper]"},VideoDegradationPreferenceWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.VideoDegradationPreference.Automatic?"Automatic":this._value==fm.liveswitch.VideoDegradationPreference.Balanced?"Balanced":this._value==fm.liveswitch.VideoDegradationPreference.FrameRate?"FrameRate":this._value==fm.liveswitch.VideoDegradationPreference.Resolution?"Resolution":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoDegradationPreferenceWrapper}();liveswitch.VideoDegradationPreferenceWrapper=VideoDegradationPreferenceWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SimulcastConfig=function(){function SimulcastConfig(encodingCount,preferredBitrate){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var encodingCount_1=__arguments[0],preferredBitrate_1=__arguments[1];this.fmliveswitchSimulcastConfigInit(),this.setEncodingCount(encodingCount_1),this.setPreferredBitrate(preferredBitrate_1)}return SimulcastConfig.prototype.getTypeString=function(){return"[fm.liveswitch.SimulcastConfig]"},SimulcastConfig.prototype.fmliveswitchSimulcastConfigInit=function(){this.__encodingCount=0,this.__preferredBitrate=0,this._disabled=!1},SimulcastConfig.prototype.getDisabled=function(){if(0==arguments.length)return this._disabled;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastConfig.prototype.getEncodingCount=function(){if(0==arguments.length)return this.__encodingCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastConfig.prototype.getPreferredBitrate=function(){if(0==arguments.length)return this.__preferredBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastConfig.prototype.setDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disabled=value},SimulcastConfig.prototype.setEncodingCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if((value=fm.liveswitch.Global.toInt(arguments[0]))<=0)throw new fm.liveswitch.Exception("Encoding count must be a positive integer.");this.__encodingCount=fm.liveswitch.Global.toInt(value)},SimulcastConfig.prototype.setPreferredBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if((value=fm.liveswitch.Global.toInt(arguments[0]))<=0)throw new fm.liveswitch.Exception("Preferred bitrate must be a positive integer.");this.__preferredBitrate=fm.liveswitch.Global.toInt(value)},SimulcastConfig}();liveswitch.SimulcastConfig=SimulcastConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var AudioSimulcastConfig=function(_super){function AudioSimulcastConfig(encodingCount,preferredBitrate){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var encodingCount_2=__arguments[0],preferredBitrate_2=__arguments[1];return _super.call(this,encodingCount_2,preferredBitrate_2)||this}return __extends(AudioSimulcastConfig,_super),AudioSimulcastConfig.prototype.getTypeString=function(){return"[fm.liveswitch.AudioSimulcastConfig],"+_super.prototype.getTypeString.call(this)},AudioSimulcastConfig.prototype.getEncodingConfigs=function(){if(0==arguments.length){var list=new Array;if(_super.prototype.getDisabled.call(this))fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.AudioEncodingConfig);else for(var format=new fm.liveswitch.opus.Format,num=fm.liveswitch.MathAssistant.min(fm.liveswitch.MathAssistant.max(format.getMinBitrate(),_super.prototype.getPreferredBitrate.call(this)),format.getMaxBitrate()),i=0;i<_super.prototype.getEncodingCount.call(this);i++){var num3=1/fm.liveswitch.MathAssistant.pow(2,i),config2=new fm.liveswitch.AudioEncodingConfig;config2.setBitrate(fm.liveswitch.MathAssistant.ceil(num*num3));var item=config2;item.getBitrate()>=format.getMinBitrate()&&fm.liveswitch.ArrayExtensions.add(list,item)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},AudioSimulcastConfig}(fm.liveswitch.SimulcastConfig);liveswitch.AudioSimulcastConfig=AudioSimulcastConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoSimulcastConfig=function(_super){function VideoSimulcastConfig(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2==__arguments.length){var encodingCount=__arguments[0],preferredBitrate=__arguments[1];(__arguments=new Array(3))[0]=encodingCount,__arguments[1]=preferredBitrate,__arguments[2]=0;var encodingCount_3=__arguments[0],preferredBitrate_3=__arguments[1],bitsPerPixel=__arguments[2];(_this=_super.call(this,encodingCount_3,preferredBitrate_3)||this).fmliveswitchVideoSimulcastConfigInit(),_this.setBitsPerPixel(bitsPerPixel),_this.setDegradationPreference(fm.liveswitch.VideoDegradationPreference.Automatic)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");encodingCount=__arguments[0],preferredBitrate=__arguments[1],bitsPerPixel=__arguments[2];(_this=_super.call(this,encodingCount,preferredBitrate)||this).fmliveswitchVideoSimulcastConfigInit(),_this.setBitsPerPixel(bitsPerPixel),_this.setDegradationPreference(fm.liveswitch.VideoDegradationPreference.Automatic)}return _this}return __extends(VideoSimulcastConfig,_super),VideoSimulcastConfig.prototype.getTypeString=function(){return"[fm.liveswitch.VideoSimulcastConfig],"+_super.prototype.getTypeString.call(this)},VideoSimulcastConfig.prototype.fmliveswitchVideoSimulcastConfigInit=function(){this.__bitsPerPixel=0},VideoSimulcastConfig.prototype.getBitsPerPixel=function(){if(0==arguments.length)return this.__bitsPerPixel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoSimulcastConfig.prototype.getDegradationPreference=function(){if(0==arguments.length)return this._degradationPreference;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoSimulcastConfig.prototype.getEncodingConfigs=function(sourceType,sourceWidth,sourceHeight,sourceFrameRate){if(4==arguments.length){sourceWidth=fm.liveswitch.Global.toInt(arguments[1]),sourceHeight=fm.liveswitch.Global.toInt(arguments[2]);var list=new Array;if(_super.prototype.getDisabled.call(this))fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.VideoEncodingConfig);else for(var format=new fm.liveswitch.vp8.Format,num=fm.liveswitch.MathAssistant.min(fm.liveswitch.MathAssistant.max(format.getMinBitrate(),fm.liveswitch.VideoUtility.getBitrate(_super.prototype.getPreferredBitrate.call(this),sourceWidth,sourceHeight,sourceFrameRate,this.getBitsPerPixel())),format.getMaxBitrate()),degradationPreference=fm.liveswitch.VideoUtility.processDegradationPreference(this.getDegradationPreference(),sourceType),i=0;i<_super.prototype.getEncodingCount.call(this);i++){var multiplier=fm.liveswitch.MathAssistant.pow(1/fm.liveswitch.MathAssistant.pow(2,i),fm.liveswitch.VideoUtility.getBitratePowerScale()),config2=new fm.liveswitch.VideoEncodingConfig;config2.setBitrate(fm.liveswitch.MathAssistant.ceil(num*multiplier));var encodingConfig=config2;fm.liveswitch.VideoUtility.updateEncodingConfig(encodingConfig,degradationPreference,multiplier,sourceFrameRate),encodingConfig.getBitrate()>=format.getMinBitrate()&&fm.liveswitch.ArrayExtensions.add(list,encodingConfig)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoSimulcastConfig.prototype.setBitsPerPixel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(value<0)throw new fm.liveswitch.Exception("Bits-per-pixel must be greater than or equal to zero.");this.__bitsPerPixel=value},VideoSimulcastConfig.prototype.setDegradationPreference=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._degradationPreference=value},VideoSimulcastConfig}(fm.liveswitch.SimulcastConfig);liveswitch.VideoSimulcastConfig=VideoSimulcastConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoFormat=function(_super){function VideoFormat(){var _this=this;fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else if(1==__arguments.length){var name_31=__arguments[0];_this=_super.call(this,name_31,fm.liveswitch.VideoFormat.getDefaultClockRate())||this}else if(2==__arguments.length){var name_32=__arguments[0],clockRate=__arguments[1];_this=_super.call(this,name_32,clockRate)||this}else if(3==__arguments.length){var name_33=__arguments[0],packetizationMode=(clockRate=__arguments[1],__arguments[2]);_this=_super.call(this,name_33,clockRate,packetizationMode)||this}else if(4==__arguments.length){var name_34=__arguments[0],profile=(clockRate=__arguments[1],__arguments[2]),level=__arguments[3];_this=_super.call(this,name_34,clockRate,profile,level)||this}else if(5==__arguments.length){var name_35=__arguments[0];clockRate=__arguments[1],profile=__arguments[2],level=__arguments[3],packetizationMode=__arguments[4];_this=_super.call(this,name_35,clockRate,profile,level,packetizationMode)||this}else{if(6!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var name_36=__arguments[0],tier=(clockRate=__arguments[1],profile=__arguments[2],level=__arguments[3],packetizationMode=__arguments[4],__arguments[5]);_this=_super.call(this,name_36,clockRate,profile,level,packetizationMode,tier)||this}return _this}return __extends(VideoFormat,_super),VideoFormat.prototype.getTypeString=function(){return"[fm.liveswitch.VideoFormat],"+_super.prototype.getTypeString.call(this)},VideoFormat.formatNameToFourCC=function(formatName){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),1==arguments.length)return fm.liveswitch.HashExtensions.containsKey(fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup,formatName)?fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[formatName]:0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.fromFormatInfo=function(info){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),1==arguments.length)return new fm.liveswitch.VideoFormat(info.getName(),info.getClockRate());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.fromJson=function(videoFormatJson){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(videoFormatJson,(function(){return new fm.liveswitch.VideoFormat}),(function(videoFormat,name,valueJson){var _var0=name;do{if("name"==_var0){videoFormat.setName(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clockRate"==_var0){videoFormat.setClockRate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("isPacketized"==_var0){videoFormat.setIsPacketized(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("isEncrypted"==_var0){videoFormat.setIsEncrypted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("registeredPayloadType"==_var0){videoFormat.setRegisteredPayloadType(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("staticPayloadType"==_var0){videoFormat.setStaticPayloadType(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("packetizationMode"==_var0){videoFormat.setPacketizationMode(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("profile"==_var0){videoFormat.setProfile(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("level"==_var0){videoFormat.setLevel(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("tier"==_var0){videoFormat.setTier(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("levelIsStrict"==_var0){videoFormat.setLevelIsStrict(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getAbgr=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getAbgrName());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getAbgrName=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"ABGR";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getArgb=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getArgbName());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getArgbName=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"ARGB";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getBgr=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getBgrName());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getBgra=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getBgraName());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getBgraName=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"BGRA";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getBgrName=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"BGR";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getDefaultClockRate=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return 9e4;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getH264=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return new fm.liveswitch.h264.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getH264Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"H264";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getH265=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return new fm.liveswitch.h265.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getH265Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"H265";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getI420=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getI420Name());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getI420Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"I420";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getNv12=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getNv12Name());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getNv12Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"NV12";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getNv21=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getNv21Name());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getNv21Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"NV21";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getRgb=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getRgbName());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getRgba=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getRgbaName());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getRgbaName=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"RGBA";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getRgbName=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"RGB";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getVp8=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return new fm.liveswitch.vp8.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getVp8Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"VP8";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getVp9=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return new fm.liveswitch.vp9.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getVp9Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"VP9";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getYv12=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length){var format=new fm.liveswitch.VideoFormat(fm.liveswitch.VideoFormat.getYv12Name());return format.setIsFixedBitrate(!0),format}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.getYv12Name=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),0==arguments.length)return"YV12";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.toFourCC=function(){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),4==arguments.length){var a=arguments[0],b=arguments[1],c=arguments[2],d=arguments[3];return a|fm.liveswitch.BitAssistant.leftShiftInteger(b,8)|fm.liveswitch.BitAssistant.leftShiftInteger(c,16)|fm.liveswitch.BitAssistant.leftShiftInteger(d,24)}if(1==arguments.length){var fourcc=arguments[0];return fm.liveswitch.VideoFormat.toFourCC(fourcc.charCodeAt(0),fourcc.charCodeAt(1),fourcc.charCodeAt(2),fourcc.charCodeAt(3))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.toJson=function(videoFormat){if(fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(videoFormat,(function(obj,jsonObject){jsonObject.name=fm.liveswitch.JsonSerializer.serializeString(videoFormat.getName()),jsonObject.clockRate=fm.liveswitch.JsonSerializer.serializeInteger(videoFormat.getClockRate()),jsonObject.isPacketized=fm.liveswitch.JsonSerializer.serializeBoolean(videoFormat.getIsPacketized()),jsonObject.isEncrypted=fm.liveswitch.JsonSerializer.serializeBoolean(videoFormat.getIsEncrypted()),jsonObject.registeredPayloadType=fm.liveswitch.JsonSerializer.serializeInteger(videoFormat.getRegisteredPayloadType()),jsonObject.staticPayloadType=fm.liveswitch.JsonSerializer.serializeInteger(videoFormat.getStaticPayloadType()),jsonObject.packetizationMode=fm.liveswitch.JsonSerializer.serializeString(videoFormat.getPacketizationMode()),jsonObject.profile=fm.liveswitch.JsonSerializer.serializeString(videoFormat.getProfile()),jsonObject.level=fm.liveswitch.JsonSerializer.serializeString(videoFormat.getLevel()),jsonObject.tier=fm.liveswitch.JsonSerializer.serializeString(videoFormat.getTier()),jsonObject.levelIsStrict=fm.liveswitch.JsonSerializer.serializeBoolean(videoFormat.getLevelIsStrict())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.clone=function(){if(0==arguments.length)return _super.prototype.clone.call(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.VideoFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.fourCCToFormatName=function(fourcc){if(1==arguments.length){if(fourcc=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.Global.equals(fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__reverseFourCCLookup,null)){for(var dictionary={},_i=0,_a=fm.liveswitch.HashExtensions.getKeys(fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup);_i<_a.length;_i++){var str=_a[_i];dictionary[fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[str]]=str}fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__reverseFourCCLookup=dictionary}var str2=null,_var0=new fm.liveswitch.Holder(str2),_var1=fm.liveswitch.HashExtensions.tryGetValue(fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__reverseFourCCLookup,fourcc,_var0);return str2=_var0.getValue(),_var1?str2:""}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getFourCC=function(){if(0==arguments.length)return fm.liveswitch.VideoFormat.formatNameToFourCC(_super.prototype.getName.call(this));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getInfo=function(){if(0==arguments.length)return new fm.liveswitch.FormatInfo(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsAbgr=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getAbgrName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsArgb=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getArgbName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsBgr=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getBgrName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsBgra=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getBgraName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsCompressed=function(){if(0==arguments.length)return!this.getIsRaw();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsH264=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getH264Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsH265=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getH265Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsI420=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getI420Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsNv12=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getNv12Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsNv21=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getNv21Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsRaw=function(){if(0==arguments.length)return this.getIsYuvType()||this.getIsRgbType()||this.getIsRgbaType();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsRgb=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getRgbName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsRgba=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getRgbaName(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsRgbaType=function(){if(0==arguments.length)return this.getIsRgba()||this.getIsBgra()||this.getIsArgb()||this.getIsAbgr();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsRgbType=function(){if(0==arguments.length)return this.getIsRgb()||this.getIsBgr();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsVp8=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getVp8Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsVp9=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getVp9Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsYuvType=function(){if(0==arguments.length)return this.getIsI420()||this.getIsYv12()||this.getIsNv12()||this.getIsNv21();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getIsYv12=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.isEqual(_super.prototype.getName.call(this),fm.liveswitch.VideoFormat.getYv12Name(),fm.liveswitch.StringComparison.OrdinalIgnoreCase);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getMaxLevel=function(level1,level2){if(2==arguments.length){if(this.getIsH264()){var hexBytes=fm.liveswitch.BitAssistant.getHexBytes(level1),buffer2=fm.liveswitch.BitAssistant.getHexBytes(level2);return hexBytes[0]>buffer2[0]?level1:level2}if(this.getIsH265()&&!fm.liveswitch.StringExtensions.isNullOrEmpty(level1)&&!fm.liveswitch.StringExtensions.isNullOrEmpty(level2)){var num=fm.liveswitch.ParseAssistant.parseIntegerValue(level1),num2=fm.liveswitch.ParseAssistant.parseIntegerValue(level2);return num>num2?level1:level2}return _super.prototype.getMaxLevel.call(this,level1,level2)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getMinLevel=function(level1,level2){if(2==arguments.length){if(this.getIsH264()){var hexBytes=fm.liveswitch.BitAssistant.getHexBytes(level1),buffer2=fm.liveswitch.BitAssistant.getHexBytes(level2);return hexBytes[0]>buffer2[0]?level2:level1}if(this.getIsH265()&&!fm.liveswitch.StringExtensions.isNullOrEmpty(level1)&&!fm.liveswitch.StringExtensions.isNullOrEmpty(level2)){var num=fm.liveswitch.ParseAssistant.parseIntegerValue(level1),num2=fm.liveswitch.ParseAssistant.parseIntegerValue(level2);return num>num2?level2:level1}return _super.prototype.getMinLevel.call(this,level1,level2)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.getParameters=function(){if(0==arguments.length)return null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.isLevelCompatible=function(level){if(1==arguments.length){if(this.getIsH264()){if(fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(_super.prototype.getLevel.call(this)),2)&&fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(level),2)){var hexBytes=fm.liveswitch.BitAssistant.getHexBytes(_super.prototype.getLevel.call(this)),buffer2=fm.liveswitch.BitAssistant.getHexBytes(level);return hexBytes[0]<=buffer2[0]}}else if(this.getIsH265()&&!fm.liveswitch.StringExtensions.isNullOrEmpty(_super.prototype.getLevel.call(this))&&!fm.liveswitch.StringExtensions.isNullOrEmpty(level)){var num=fm.liveswitch.ParseAssistant.parseIntegerValue(_super.prototype.getLevel.call(this)),num2=fm.liveswitch.ParseAssistant.parseIntegerValue(level);return num<=num2}return _super.prototype.isLevelCompatible.call(this,level)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.isProfileCompatible=function(profile){if(1==arguments.length){if(this.getIsH264()&&fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(_super.prototype.getProfile.call(this)),4)&&fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(profile),4)){var hexBytes=fm.liveswitch.BitAssistant.getHexBytes(_super.prototype.getProfile.call(this)),buffer2=fm.liveswitch.BitAssistant.getHexBytes(profile);return hexBytes[0]<=buffer2[0]}return _super.prototype.isProfileCompatible.call(this,profile)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.setFourCC=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.setName.call(this,this.fourCCToFormatName(value))},VideoFormat.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.VideoFormat.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoFormat.prototype.updateProfileToCompatible=function(format){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(this.getIsH264()&&!fm.liveswitch.Global.equals(format.getProfile(),null))if(!fm.liveswitch.Global.equals(_super.prototype.getProfile.call(this),null)&&fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(_super.prototype.getProfile.call(this)),4)&&fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(format.getProfile()),4)){var hexBytes=fm.liveswitch.BitAssistant.getHexBytes(_super.prototype.getProfile.call(this)),buffer2=fm.liveswitch.BitAssistant.getHexBytes(format.getProfile());_super.prototype.setProfile.call(this,fm.liveswitch.BitAssistant.getHexString(new Uint8Array([buffer2[0],hexBytes[1]|buffer2[1]])))}else _super.prototype.setProfile.call(this,format.getProfile());_super.prototype.updateProfileToCompatible.call(this,format)},VideoFormat.fmliveswitchVideoFormatInitialize=function(){fm.liveswitch.VideoFormat.__fmliveswitchVideoFormatInitialized||fm.liveswitch.VideoFormat.__fmliveswitchVideoFormatInitializing||(fm.liveswitch.VideoFormat.__fmliveswitchVideoFormatInitializing=!0,fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup={},fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__reverseFourCCLookup=null,fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getRgbName()]=fm.liveswitch.VideoFormat.toFourCC(114,97,119,32),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getBgrName()]=fm.liveswitch.VideoFormat.toFourCC(50,52,66,71),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getNv12Name()]=fm.liveswitch.VideoFormat.toFourCC(78,86,49,50),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getNv21Name()]=fm.liveswitch.VideoFormat.toFourCC(78,86,50,49),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getI420Name()]=fm.liveswitch.VideoFormat.toFourCC(73,52,50,48),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getYv12Name()]=fm.liveswitch.VideoFormat.toFourCC(89,86,49,50),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getArgbName()]=fm.liveswitch.VideoFormat.toFourCC(65,82,71,66),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getAbgrName()]=fm.liveswitch.VideoFormat.toFourCC(65,66,71,82),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getRgbaName()]=fm.liveswitch.VideoFormat.toFourCC(82,71,66,65),fm.liveswitch.VideoFormat.fm_liveswitch_VideoFormat__fourCCLookup[fm.liveswitch.VideoFormat.getBgraName()]=fm.liveswitch.VideoFormat.toFourCC(66,71,82,65),fm.liveswitch.VideoFormat.__fmliveswitchVideoFormatInitialized=!0,fm.liveswitch.VideoFormat.__fmliveswitchVideoFormatInitializing=!1)},VideoFormat.__fmliveswitchVideoFormatInitialized=!1,VideoFormat.__fmliveswitchVideoFormatInitializing=!1,VideoFormat}(fm.liveswitch.MediaFormat);liveswitch.VideoFormat=VideoFormat}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(h265){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this,fm.liveswitch.VideoFormat.getH265Name())||this;else if(1==__arguments.length){var clockRate=__arguments[0];_this=_super.call(this,fm.liveswitch.VideoFormat.getH265Name(),clockRate)||this}else if(4==__arguments.length){clockRate=__arguments[0];var profile=__arguments[1],level=__arguments[2],tier=__arguments[3];_this=_super.call(this,fm.liveswitch.VideoFormat.getH265Name(),clockRate,fm.liveswitch.NumberExtensions.toString(profile),fm.liveswitch.NumberExtensions.toString(level),null,fm.liveswitch.NumberExtensions.toString(tier))||this}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");profile=__arguments[0],level=__arguments[1],tier=__arguments[2];_this=_super.call(this,fm.liveswitch.VideoFormat.getH265Name(),9e4,fm.liveswitch.NumberExtensions.toString(profile),fm.liveswitch.NumberExtensions.toString(level),null,fm.liveswitch.NumberExtensions.toString(tier))||this}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.h265.Format],"+_super.prototype.getTypeString.call(this)},Format}(fm.liveswitch.VideoFormat);h265.Format=Format}(liveswitch.h265||(liveswitch.h265={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(g722){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.g722.Format.getDefaultConfig();var config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();var clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getG722Name(),clockRate,channelCount)||this,_super.prototype.setIsFixedBitrate.call(_this,!0),_super.prototype.setStaticPayloadType.call(_this,9)}else if(2==__arguments.length){clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getG722Name(),clockRate,channelCount)||this,_super.prototype.setIsFixedBitrate.call(_this,!0),_super.prototype.setStaticPayloadType.call(_this,9)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getG722Name(),clockRate,channelCount)||this,_super.prototype.setIsFixedBitrate.call(_this,!0),_super.prototype.setStaticPayloadType.call(_this,9)}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.g722.Format],"+_super.prototype.getTypeString.call(this)},Format.getDefaultChannelCount=function(){if(0==arguments.length)return 1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.getDefaultClockRate=function(){if(0==arguments.length)return 16e3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.getDefaultConfig=function(){if(0==arguments.length)return new fm.liveswitch.AudioConfig(fm.liveswitch.g722.Format.getDefaultClockRate(),fm.liveswitch.g722.Format.getDefaultChannelCount());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.g722.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getFixedBitrate=function(){if(0==arguments.length)return 64;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMaxBitrate=function(){if(0==arguments.length)return this.getFixedBitrate();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMinBitrate=function(){if(0==arguments.length)return this.getFixedBitrate();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.AudioFormat);g722.Format=Format}(liveswitch.g722||(liveswitch.g722={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CcmLrrPolicyWrapper=function(){function CcmLrrPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_42=__arguments[0];this._value=value_42}return CcmLrrPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CcmLrrPolicyWrapper]"},CcmLrrPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CcmLrrPolicy.Disabled?"Disabled":this._value==fm.liveswitch.CcmLrrPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CcmLrrPolicyWrapper}();liveswitch.CcmLrrPolicyWrapper=CcmLrrPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataMessage=function(){function DataMessage(){fm.liveswitch.DataMessage.fmliveswitchDataMessageInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataBuffer]"))){var messageBytes=__arguments[0];this.__elements=new Array,this.setDataBytes(messageBytes)}else{if(1!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[0])&&!fm.liveswitch.Util.isString(arguments[0]))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var messageString=__arguments[0];this.__elements=new Array,this.setDataString(messageString)}}return DataMessage.prototype.getTypeString=function(){return"[fm.liveswitch.DataMessage]"},DataMessage.parseBytes=function(buffer){if(fm.liveswitch.DataMessage.fmliveswitchDataMessageInitialize(),1==arguments.length){var num=buffer.read4(0,0);if(!fm.liveswitch.Global.equals(num,1))return fm.liveswitch.DataMessage.fm_liveswitch_DataMessage___log.error(fm.liveswitch.StringExtensions.format("Cannot parse Liveswitch Data Message of version {0}",fm.liveswitch.NumberExtensions.toString(num))),null;var num2=buffer.read4(0,4),offset=buffer.read16(2),num4=0,list=null;if(offset>0){list=new Array;for(var offsetPlus=-1,item=null;num4+4<offset;){var _var0=new fm.liveswitch.Holder(offsetPlus),_var1=fm.liveswitch.datamessageheader.Element.parseBytes(buffer,4+num4,_var0);if(item=_var1,(num4+=offsetPlus=_var0.getValue())+4>offset){var num6=num4+4;return fm.liveswitch.DataMessage.fm_liveswitch_DataMessage___log.error(fm.liveswitch.StringExtensions.format("Could not parse Data Message. Header length declared to have {0} bytes, while {1} bytes of header length were read.",fm.liveswitch.NumberExtensions.toString(offset),fm.liveswitch.NumberExtensions.toString(num6))),null}fm.liveswitch.Global.equals(item,null)||fm.liveswitch.ArrayExtensions.add(list,item)}}var message=null,_var2=num2;do{if(0==_var2){message=new fm.liveswitch.DataMessage(buffer.subset(offset));break}if(1==_var2){message=new fm.liveswitch.DataMessage(buffer.readUtf8String(offset));break}return fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Received a data message with an unknown payload {0}. Will not parse.",fm.liveswitch.NumberExtensions.toString(num2))),null}while(0);return fm.liveswitch.Global.equals(list,null)||message.setElements(fm.liveswitch.ArrayExtensions.toArray(list)),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getBytes=function(){if(0==arguments.length){var element=void 0,size=4,bytes=null,num2=4;fm.liveswitch.Global.equals(this.getDataBytes(),null)?fm.liveswitch.Global.equals(this.getDataString(),null)||(size+=(bytes=fm.liveswitch.Utf8.encode(this.getDataString())).length):size+=this.getDataBytes().getLength();for(var index=0;index<this.getElements().length;)size+=(element=this.getElements()[index]).getLength(),num2+=element.getLength(),index++;var buffer2=null;(buffer2=fm.liveswitch.DataBufferPool.getIsSupported()?fm.liveswitch.DataMessage.fm_liveswitch_DataMessage___dataBufferPool.take(size):fm.liveswitch.DataBuffer.allocate(size)).write4(1,0,0),fm.liveswitch.Global.equals(this.getDataString(),null)?fm.liveswitch.Global.equals(this.getDataBytes(),null)||buffer2.write4(0,0,4):buffer2.write4(1,0,4),buffer2.write8(0,1),buffer2.write16(num2,2);var offset=4;for(index=0;index<this.getElements().length;index++){var length_44=(element=this.getElements()[index]).getLength();buffer2.write(element.getBytes(),offset),offset+=length_44}return fm.liveswitch.Global.equals(bytes,null)?(fm.liveswitch.Global.equals(this.getDataBytes(),null)||buffer2.write(this.getDataBytes(),offset),buffer2):(buffer2.writeBytes(bytes,offset),buffer2)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getDataBytes=function(){if(0==arguments.length)return this._dataBytes;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getDataString=function(){if(0==arguments.length)return this._dataString;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getElements=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__elements);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getNumberOfRetransmissions=function(){if(0==arguments.length){for(var _i=0,_a=this.getElements();_i<_a.length;_i++){var element=_a[_i];if(fm.liveswitch.Global.equals(element.getType(),fm.liveswitch.datamessageheader.Type.getDeliveryAttempts()))return element.getDeliveryAttempts()}return-1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getRemoteConnectionId=function(){if(0==arguments.length){for(var _i=0,_a=this.getElements();_i<_a.length;_i++){var element=_a[_i];if(fm.liveswitch.Global.equals(element.getType(),fm.liveswitch.datamessageheader.Type.getConnectionId()))return element.getConnectionId()}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getTimeToLive=function(){if(0==arguments.length){for(var _i=0,_a=this.getElements();_i<_a.length;_i++){var element=_a[_i];if(fm.liveswitch.Global.equals(element.getType(),fm.liveswitch.datamessageheader.Type.getTimeToLive()))return element.getTimeToLive()}return-1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.getVersion=function(){if(0==arguments.length)return 1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataMessage.prototype.setDataBytes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataBytes=value},DataMessage.prototype.setDataString=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataString=value},DataMessage.prototype.setElements=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)||fm.liveswitch.ArrayExtensions.addRange(this.__elements,value)},DataMessage.prototype.setNumberOfRetransmissions=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]);for(var _i=0,_a=this.getElements();_i<_a.length;_i++){var element=_a[_i];fm.liveswitch.Global.equals(element.getType(),fm.liveswitch.datamessageheader.Type.getDeliveryAttempts())&&fm.liveswitch.ArrayExtensions.remove(this.__elements,element)}fm.liveswitch.ArrayExtensions.add(this.__elements,new fm.liveswitch.datamessageheader.DeliveryAttemptsElement(value))},DataMessage.prototype.setRemoteConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,_a=this.getElements();_i<_a.length;_i++){var element=_a[_i];fm.liveswitch.Global.equals(element.getType(),fm.liveswitch.datamessageheader.Type.getConnectionId())&&fm.liveswitch.ArrayExtensions.remove(this.__elements,element)}fm.liveswitch.ArrayExtensions.add(this.__elements,new fm.liveswitch.datamessageheader.ConnectionIdElement(value))},DataMessage.prototype.setTimeToLive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]);for(var _i=0,_a=this.getElements();_i<_a.length;_i++){var element=_a[_i];fm.liveswitch.Global.equals(element.getType(),fm.liveswitch.datamessageheader.Type.getTimeToLive())&&fm.liveswitch.ArrayExtensions.remove(this.__elements,element)}fm.liveswitch.ArrayExtensions.add(this.__elements,new fm.liveswitch.datamessageheader.TimeToLiveElement(value))},DataMessage.fmliveswitchDataMessageInitialize=function(){fm.liveswitch.DataMessage.__fmliveswitchDataMessageInitialized||fm.liveswitch.DataMessage.__fmliveswitchDataMessageInitializing||(fm.liveswitch.DataMessage.__fmliveswitchDataMessageInitializing=!0,fm.liveswitch.DataMessage.fm_liveswitch_DataMessage___dataBufferPool=fm.liveswitch.DataBufferPool.getTracer(new fm.liveswitch.Type("[fm.liveswitch.DataMessage]")),fm.liveswitch.DataMessage.fm_liveswitch_DataMessage___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.DataMessage]")),fm.liveswitch.DataMessage.__fmliveswitchDataMessageInitialized=!0,fm.liveswitch.DataMessage.__fmliveswitchDataMessageInitializing=!1)},DataMessage.IntUnset=-1,DataMessage.__fmliveswitchDataMessageInitialized=!1,DataMessage.__fmliveswitchDataMessageInitializing=!1,DataMessage}();liveswitch.DataMessage=DataMessage}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(datamessageheader){var Element=function(){function Element(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchdatamessageheaderElementInit()}return Element.prototype.getTypeString=function(){return"[fm.liveswitch.datamessageheader.Element]"},Element.prototype.fmliveswitchdatamessageheaderElementInit=function(){this._type=0},Element.parseBytes=function(buffer,offset,offsetPlus){if(3==arguments.length){offset=fm.liveswitch.Global.toInt(arguments[1]);var num=buffer.read8(offset);if(fm.liveswitch.Global.equals(num,fm.liveswitch.datamessageheader.Type.getTimeToLive())){var _var0=fm.liveswitch.datamessageheader.TimeToLiveElement.doParseBytes(buffer,offset,offsetPlus);return _var0}if(fm.liveswitch.Global.equals(num,fm.liveswitch.datamessageheader.Type.getDeliveryAttempts())){var _var1=fm.liveswitch.datamessageheader.DeliveryAttemptsElement.doParseBytes(buffer,offset,offsetPlus);return _var1}if(fm.liveswitch.Global.equals(num,fm.liveswitch.datamessageheader.Type.getConnectionId())){var _var2=fm.liveswitch.datamessageheader.ConnectionIdElement.doParseBytes(buffer,offset,offsetPlus);return _var2}var _var3=fm.liveswitch.datamessageheader.UnknownElement.doParseBytes(buffer,offset,offsetPlus);return _var3}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Element.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Element.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._type=fm.liveswitch.Global.toInt(value)},Element}();datamessageheader.Element=Element}(liveswitch.datamessageheader||(liveswitch.datamessageheader={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(datamessageheader){var DeliveryAttemptsElement=function(_super){function DeliveryAttemptsElement(numAttempts){var _this=this;fm.liveswitch.datamessageheader.DeliveryAttemptsElement.fmliveswitchdatamessageheaderDeliveryAttemptsElementInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var numAttempts_1=__arguments[0];return(_this=_super.call(this)||this).fmliveswitchdatamessageheaderDeliveryAttemptsElementInit(),_super.prototype.setType.call(_this,fm.liveswitch.datamessageheader.Type.getDeliveryAttempts()),_this.setDeliveryAttempts(numAttempts_1),_this}return __extends(DeliveryAttemptsElement,_super),DeliveryAttemptsElement.prototype.getTypeString=function(){return"[fm.liveswitch.datamessageheader.DeliveryAttemptsElement],"+_super.prototype.getTypeString.call(this)},DeliveryAttemptsElement.prototype.fmliveswitchdatamessageheaderDeliveryAttemptsElementInit=function(){this._deliveryAttempts=0},DeliveryAttemptsElement.doParseBytes=function(buffer,index,offsetPlus){if(fm.liveswitch.datamessageheader.DeliveryAttemptsElement.fmliveswitchdatamessageheaderDeliveryAttemptsElementInitialize(),3==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[1]),offsetPlus.setValue(5),new fm.liveswitch.datamessageheader.DeliveryAttemptsElement(buffer.read16(index+3));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DeliveryAttemptsElement.prototype.getBytes=function(){if(0==arguments.length){var buffer=fm.liveswitch.datamessageheader.DeliveryAttemptsElement.fm_liveswitch_datamessageheader_DeliveryAttemptsElement___dataBufferPool.take(this.getLength());return buffer.write8(_super.prototype.getType.call(this),0),buffer.write16(this.getLength(),1),buffer.write16(this.getDeliveryAttempts(),3),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DeliveryAttemptsElement.prototype.getDeliveryAttempts=function(){if(0==arguments.length)return this._deliveryAttempts;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DeliveryAttemptsElement.prototype.getLength=function(){if(0==arguments.length)return 5;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DeliveryAttemptsElement.prototype.setDeliveryAttempts=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._deliveryAttempts=fm.liveswitch.Global.toInt(value)},DeliveryAttemptsElement.fmliveswitchdatamessageheaderDeliveryAttemptsElementInitialize=function(){fm.liveswitch.datamessageheader.DeliveryAttemptsElement.__fmliveswitchdatamessageheaderDeliveryAttemptsElementInitialized||fm.liveswitch.datamessageheader.DeliveryAttemptsElement.__fmliveswitchdatamessageheaderDeliveryAttemptsElementInitializing||(fm.liveswitch.datamessageheader.DeliveryAttemptsElement.__fmliveswitchdatamessageheaderDeliveryAttemptsElementInitializing=!0,fm.liveswitch.datamessageheader.DeliveryAttemptsElement.fm_liveswitch_datamessageheader_DeliveryAttemptsElement___dataBufferPool=fm.liveswitch.DataBufferPool.getTracer(new fm.liveswitch.Type("[fm.liveswitch.datamessageheader.DeliveryAttemptsElement]")),fm.liveswitch.datamessageheader.DeliveryAttemptsElement.__fmliveswitchdatamessageheaderDeliveryAttemptsElementInitialized=!0,fm.liveswitch.datamessageheader.DeliveryAttemptsElement.__fmliveswitchdatamessageheaderDeliveryAttemptsElementInitializing=!1)},DeliveryAttemptsElement.__fmliveswitchdatamessageheaderDeliveryAttemptsElementInitialized=!1,DeliveryAttemptsElement.__fmliveswitchdatamessageheaderDeliveryAttemptsElementInitializing=!1,DeliveryAttemptsElement}(fm.liveswitch.datamessageheader.Element);datamessageheader.DeliveryAttemptsElement=DeliveryAttemptsElement}(liveswitch.datamessageheader||(liveswitch.datamessageheader={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(datamessageheader){var ConnectionIdElement=function(_super){function ConnectionIdElement(idValue){var _this=this;fm.liveswitch.datamessageheader.ConnectionIdElement.fmliveswitchdatamessageheaderConnectionIdElementInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var idValue_7=__arguments[0];return _this=_super.call(this)||this,_super.prototype.setType.call(_this,fm.liveswitch.datamessageheader.Type.getConnectionId()),_this.setConnectionId(idValue_7),_this}return __extends(ConnectionIdElement,_super),ConnectionIdElement.prototype.getTypeString=function(){return"[fm.liveswitch.datamessageheader.ConnectionIdElement],"+_super.prototype.getTypeString.call(this)},ConnectionIdElement.doParseBytes=function(buffer,index,offsetPlus){if(fm.liveswitch.datamessageheader.ConnectionIdElement.fmliveswitchdatamessageheaderConnectionIdElementInitialize(),3==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[1]),offsetPlus.setValue(buffer.read16(index+1)),new fm.liveswitch.datamessageheader.ConnectionIdElement(buffer.readUtf8String(index+3,offsetPlus.getValue()-3));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionIdElement.prototype.getBytes=function(){if(0==arguments.length){var buffer=fm.liveswitch.datamessageheader.ConnectionIdElement.fm_liveswitch_datamessageheader_ConnectionIdElement___dataBufferPool.take(this.getLength());return buffer.write8(_super.prototype.getType.call(this),0),buffer.write16(this.getLength(),1),buffer.write(fm.liveswitch.DataBuffer.wrap(this.__connectionId),3),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionIdElement.prototype.getConnectionId=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__connectionId,null)?null:fm.liveswitch.Encoding.getUtf8().getString(this.__connectionId);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionIdElement.prototype.getLength=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__connectionId,null)?3:this.__connectionId.length+3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionIdElement.prototype.setConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__connectionId=fm.liveswitch.Utf8.encode(value)},ConnectionIdElement.fmliveswitchdatamessageheaderConnectionIdElementInitialize=function(){fm.liveswitch.datamessageheader.ConnectionIdElement.__fmliveswitchdatamessageheaderConnectionIdElementInitialized||fm.liveswitch.datamessageheader.ConnectionIdElement.__fmliveswitchdatamessageheaderConnectionIdElementInitializing||(fm.liveswitch.datamessageheader.ConnectionIdElement.__fmliveswitchdatamessageheaderConnectionIdElementInitializing=!0,fm.liveswitch.datamessageheader.ConnectionIdElement.fm_liveswitch_datamessageheader_ConnectionIdElement___dataBufferPool=fm.liveswitch.DataBufferPool.getTracer(new fm.liveswitch.Type("[fm.liveswitch.datamessageheader.ConnectionIdElement]")),fm.liveswitch.datamessageheader.ConnectionIdElement.__fmliveswitchdatamessageheaderConnectionIdElementInitialized=!0,fm.liveswitch.datamessageheader.ConnectionIdElement.__fmliveswitchdatamessageheaderConnectionIdElementInitializing=!1)},ConnectionIdElement.__fmliveswitchdatamessageheaderConnectionIdElementInitialized=!1,ConnectionIdElement.__fmliveswitchdatamessageheaderConnectionIdElementInitializing=!1,ConnectionIdElement}(fm.liveswitch.datamessageheader.Element);datamessageheader.ConnectionIdElement=ConnectionIdElement}(liveswitch.datamessageheader||(liveswitch.datamessageheader={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(datamessageheader){var TimeToLiveElement=function(_super){function TimeToLiveElement(ttl){var _this=this;fm.liveswitch.datamessageheader.TimeToLiveElement.fmliveswitchdatamessageheaderTimeToLiveElementInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var ttl_1=__arguments[0];return(_this=_super.call(this)||this).fmliveswitchdatamessageheaderTimeToLiveElementInit(),_super.prototype.setType.call(_this,fm.liveswitch.datamessageheader.Type.getTimeToLive()),_this.setTimeToLive(ttl_1),_this}return __extends(TimeToLiveElement,_super),TimeToLiveElement.prototype.getTypeString=function(){return"[fm.liveswitch.datamessageheader.TimeToLiveElement],"+_super.prototype.getTypeString.call(this)},TimeToLiveElement.prototype.fmliveswitchdatamessageheaderTimeToLiveElementInit=function(){this._timeToLive=0},TimeToLiveElement.doParseBytes=function(buffer,index,offsetPlus){if(fm.liveswitch.datamessageheader.TimeToLiveElement.fmliveswitchdatamessageheaderTimeToLiveElementInitialize(),3==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[1]),offsetPlus.setValue(7),new fm.liveswitch.datamessageheader.TimeToLiveElement(buffer.read32(index+3));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeToLiveElement.prototype.getBytes=function(){if(0==arguments.length){var buffer=fm.liveswitch.datamessageheader.TimeToLiveElement.fm_liveswitch_datamessageheader_TimeToLiveElement___dataBufferPool.take(this.getLength());return buffer.write8(_super.prototype.getType.call(this),0),buffer.write16(this.getLength(),1),buffer.write32(this.getTimeToLive(),3),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeToLiveElement.prototype.getLength=function(){if(0==arguments.length)return 7;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeToLiveElement.prototype.getTimeToLive=function(){if(0==arguments.length)return this._timeToLive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TimeToLiveElement.prototype.setTimeToLive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timeToLive=fm.liveswitch.Global.toInt(value)},TimeToLiveElement.fmliveswitchdatamessageheaderTimeToLiveElementInitialize=function(){fm.liveswitch.datamessageheader.TimeToLiveElement.__fmliveswitchdatamessageheaderTimeToLiveElementInitialized||fm.liveswitch.datamessageheader.TimeToLiveElement.__fmliveswitchdatamessageheaderTimeToLiveElementInitializing||(fm.liveswitch.datamessageheader.TimeToLiveElement.__fmliveswitchdatamessageheaderTimeToLiveElementInitializing=!0,fm.liveswitch.datamessageheader.TimeToLiveElement.fm_liveswitch_datamessageheader_TimeToLiveElement___dataBufferPool=fm.liveswitch.DataBufferPool.getTracer(new fm.liveswitch.Type("[fm.liveswitch.datamessageheader.TimeToLiveElement]")),fm.liveswitch.datamessageheader.TimeToLiveElement.__fmliveswitchdatamessageheaderTimeToLiveElementInitialized=!0,fm.liveswitch.datamessageheader.TimeToLiveElement.__fmliveswitchdatamessageheaderTimeToLiveElementInitializing=!1)},TimeToLiveElement.__fmliveswitchdatamessageheaderTimeToLiveElementInitialized=!1,TimeToLiveElement.__fmliveswitchdatamessageheaderTimeToLiveElementInitializing=!1,TimeToLiveElement}(fm.liveswitch.datamessageheader.Element);datamessageheader.TimeToLiveElement=TimeToLiveElement}(liveswitch.datamessageheader||(liveswitch.datamessageheader={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(datamessageheader){var Type=function(){function Type(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Type.prototype.getTypeString=function(){return"[fm.liveswitch.datamessageheader.Type]"},Type.getConnectionId=function(){if(0==arguments.length)return 3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Type.getDeliveryAttempts=function(){if(0==arguments.length)return 2;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Type.getTimeToLive=function(){if(0==arguments.length)return 1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Type}();datamessageheader.Type=Type}(liveswitch.datamessageheader||(liveswitch.datamessageheader={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(datamessageheader){var UnknownElement=function(_super){function UnknownElement(type,payload){var _this=this;fm.liveswitch.datamessageheader.UnknownElement.fmliveswitchdatamessageheaderUnknownElementInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type_7=__arguments[0],payload_1=__arguments[1];return(_this=_super.call(this)||this).fmliveswitchdatamessageheaderUnknownElementInit(),_super.prototype.setType.call(_this,type_7),_this.setPayload(payload_1),_this}return __extends(UnknownElement,_super),UnknownElement.prototype.getTypeString=function(){return"[fm.liveswitch.datamessageheader.UnknownElement],"+_super.prototype.getTypeString.call(this)},UnknownElement.prototype.fmliveswitchdatamessageheaderUnknownElementInit=function(){this.__length=0},UnknownElement.doParseBytes=function(buffer,index,offsetPlus){if(fm.liveswitch.datamessageheader.UnknownElement.fmliveswitchdatamessageheaderUnknownElementInitialize(),3==arguments.length){index=fm.liveswitch.Global.toInt(arguments[1]);var num=buffer.read8(index);return offsetPlus.setValue(buffer.read16(index+1)),new fm.liveswitch.datamessageheader.UnknownElement(num,buffer.subset(index+3,offsetPlus.getValue()-3))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownElement.prototype.getBytes=function(){if(0==arguments.length){var buffer=fm.liveswitch.datamessageheader.UnknownElement.fm_liveswitch_datamessageheader_UnknownElement___dataBufferPool.take(this.getLength());return buffer.write8(_super.prototype.getType.call(this),0),buffer.write16(this.getLength(),1),buffer.write(this.getPayload(),3),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownElement.prototype.getLength=function(){if(0==arguments.length)return this.__length;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownElement.prototype.getPayload=function(){if(0==arguments.length)return this.__payload;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},UnknownElement.prototype.setPayload=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__payload=value,this.__length=fm.liveswitch.Global.toInt(this.__payload.getLength()+3)},UnknownElement.fmliveswitchdatamessageheaderUnknownElementInitialize=function(){fm.liveswitch.datamessageheader.UnknownElement.__fmliveswitchdatamessageheaderUnknownElementInitialized||fm.liveswitch.datamessageheader.UnknownElement.__fmliveswitchdatamessageheaderUnknownElementInitializing||(fm.liveswitch.datamessageheader.UnknownElement.__fmliveswitchdatamessageheaderUnknownElementInitializing=!0,fm.liveswitch.datamessageheader.UnknownElement.fm_liveswitch_datamessageheader_UnknownElement___dataBufferPool=fm.liveswitch.DataBufferPool.getTracer(new fm.liveswitch.Type("[fm.liveswitch.datamessageheader.UnknownElement]")),fm.liveswitch.datamessageheader.UnknownElement.__fmliveswitchdatamessageheaderUnknownElementInitialized=!0,fm.liveswitch.datamessageheader.UnknownElement.__fmliveswitchdatamessageheaderUnknownElementInitializing=!1)},UnknownElement.__fmliveswitchdatamessageheaderUnknownElementInitialized=!1,UnknownElement.__fmliveswitchdatamessageheaderUnknownElementInitializing=!1,UnknownElement}(fm.liveswitch.datamessageheader.Element);datamessageheader.UnknownElement=UnknownElement}(liveswitch.datamessageheader||(liveswitch.datamessageheader={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CcmFirPolicyWrapper=function(){function CcmFirPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_43=__arguments[0];this._value=value_43}return CcmFirPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.CcmFirPolicyWrapper]"},CcmFirPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.CcmFirPolicy.Disabled?"Disabled":this._value==fm.liveswitch.CcmFirPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CcmFirPolicyWrapper}();liveswitch.CcmFirPolicyWrapper=CcmFirPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NackPliPolicyWrapper=function(){function NackPliPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_44=__arguments[0];this._value=value_44}return NackPliPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.NackPliPolicyWrapper]"},NackPliPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.NackPliPolicy.Disabled?"Disabled":this._value==fm.liveswitch.NackPliPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NackPliPolicyWrapper}();liveswitch.NackPliPolicyWrapper=NackPliPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SessionDescriptionStreamMatcher=function(){function SessionDescriptionStreamMatcher(numStreams){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var numStreams_1=__arguments[0];this.__offererAudioStreamIndex=new Array,this.__offererVideoStreamIndex=new Array,this.__offererDataStreamIndex=new Array,this.__internalAudioStreamIndex=new Array,this.__internalVideoStreamIndex=new Array,this.__internalDataStreamIndex=new Array,this.reset(numStreams_1)}return SessionDescriptionStreamMatcher.prototype.getTypeString=function(){return"[fm.liveswitch.SessionDescriptionStreamMatcher]"},SessionDescriptionStreamMatcher.prototype.getInternalStreamIndexFor=function(oferrerStreamIndex){if(1==arguments.length)return oferrerStreamIndex=fm.liveswitch.Global.toInt(arguments[0]),this.__internalStreamIndexByOfferIndex.length>oferrerStreamIndex?this.__internalStreamIndexByOfferIndex[oferrerStreamIndex]:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionStreamMatcher.prototype.getInternalStreamMediaIndexForStream=function(type,indexInType){if(2==arguments.length)return indexInType=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Audio)?this.__internalAudioStreamIndex[indexInType]:fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Video)?this.__internalVideoStreamIndex[indexInType]:fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Application)?this.__internalDataStreamIndex[indexInType]:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionStreamMatcher.prototype.getOffererStreamIndexFor=function(internalStreamIndex){if(1==arguments.length)return internalStreamIndex=fm.liveswitch.Global.toInt(arguments[0]),this.__offererStreamIndexByInternalIndex.length>internalStreamIndex?this.__offererStreamIndexByInternalIndex[internalStreamIndex]:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionStreamMatcher.prototype.getOffererStreamMediaIndexForStream=function(type,indexInType){if(2==arguments.length)return indexInType=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Audio)?this.__offererAudioStreamIndex[indexInType]:fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Video)?this.__offererVideoStreamIndex[indexInType]:fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Application)?this.__offererDataStreamIndex[indexInType]:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionStreamMatcher.prototype.populateInternalStreamTypeIndexes=function(streams){if(1==arguments.length){for(var i=0;i<fm.liveswitch.ArrayExtensions.getCount(streams);i++){var local=streams[i],type=local.getType();if(fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Audio))fm.liveswitch.ArrayExtensions.add(this.__internalAudioStreamIndex,i);else if(fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Video))fm.liveswitch.ArrayExtensions.add(this.__internalVideoStreamIndex,i);else{if(!fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Application))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Sdp offer contains a stream of type {0}. Processing of such streams is not currently supported.",new fm.liveswitch.StreamTypeWrapper(type).toString())));fm.liveswitch.ArrayExtensions.add(this.__internalDataStreamIndex,i)}}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionStreamMatcher.prototype.populateOffererStreamTypeIndexes=function(sdpMediaDescriptions){if(1==arguments.length){for(var i=0;i<sdpMediaDescriptions.length;i++){var type=fm.liveswitch.sdp.MediaType.toStreamType(sdpMediaDescriptions[i].getMedia().getMediaType());if(fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Audio))fm.liveswitch.ArrayExtensions.add(this.__offererAudioStreamIndex,i);else if(fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Video))fm.liveswitch.ArrayExtensions.add(this.__offererVideoStreamIndex,i);else{if(!fm.liveswitch.Global.equals(type,fm.liveswitch.StreamType.Application))return new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture,new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Sdp offer contains a stream of type {0}. Processing of such streams is not currently supported.",new fm.liveswitch.StreamTypeWrapper(type).toString())));fm.liveswitch.ArrayExtensions.add(this.__offererDataStreamIndex,i)}}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SessionDescriptionStreamMatcher.prototype.reset=function(){if(0==arguments.length)this.reset(this.__offererStreamIndexByInternalIndex.length);else{if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var numStreams=fm.liveswitch.Global.toInt(arguments[0]);fm.liveswitch.ArrayExtensions.clear(this.__offererAudioStreamIndex),fm.liveswitch.ArrayExtensions.clear(this.__offererVideoStreamIndex),fm.liveswitch.ArrayExtensions.clear(this.__offererDataStreamIndex),this.__offererStreamIndexByInternalIndex=new Array(numStreams),fm.liveswitch.ArrayExtensions.clear(this.__internalAudioStreamIndex),fm.liveswitch.ArrayExtensions.clear(this.__internalVideoStreamIndex),fm.liveswitch.ArrayExtensions.clear(this.__internalDataStreamIndex),this.__internalStreamIndexByOfferIndex=new Array(numStreams);for(var i=0;i<numStreams;i++)this.__offererStreamIndexByInternalIndex[i]=i,this.__internalStreamIndexByOfferIndex[i]=i}},SessionDescriptionStreamMatcher.prototype.setMatchingIndexes=function(internalStreamIndex,offererStreamIndex){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(internalStreamIndex=fm.liveswitch.Global.toInt(arguments[0]),offererStreamIndex=fm.liveswitch.Global.toInt(arguments[1]),this.__offererStreamIndexByInternalIndex.length<=internalStreamIndex)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Cannot set offerer stream index for the internal stream index {0}. Number of streams exceeded.",fm.liveswitch.NumberExtensions.toString(internalStreamIndex)));this.__offererStreamIndexByInternalIndex[internalStreamIndex]=offererStreamIndex,this.__internalStreamIndexByOfferIndex[offererStreamIndex]=internalStreamIndex},SessionDescriptionStreamMatcher}();liveswitch.SessionDescriptionStreamMatcher=SessionDescriptionStreamMatcher}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SimulcastModeWrapper=function(){function SimulcastModeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_45=__arguments[0];this._value=value_45}return SimulcastModeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.SimulcastModeWrapper]"},SimulcastModeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.SimulcastMode.Disabled?"Disabled":this._value==fm.liveswitch.SimulcastMode.RtpStreamId?"RtpStreamId":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SimulcastModeWrapper}();liveswitch.SimulcastModeWrapper=SimulcastModeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var BundlePolicyWrapper=function(){function BundlePolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_46=__arguments[0];this._value=value_46}return BundlePolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.BundlePolicyWrapper]"},BundlePolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.BundlePolicy.Balanced?"Balanced":this._value==fm.liveswitch.BundlePolicy.MaxCompatibility?"MaxCompatibility":this._value==fm.liveswitch.BundlePolicy.MaxBundle?"MaxBundle":this._value==fm.liveswitch.BundlePolicy.Disabled?"Disabled":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BundlePolicyWrapper}();liveswitch.BundlePolicyWrapper=BundlePolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Candidate=function(){function Candidate(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchCandidateInit(),this.__relayProtocol=fm.liveswitch.ProtocolType.Unknown,this.__protocol=fm.liveswitch.ProtocolType.Unknown}return Candidate.prototype.getTypeString=function(){return"[fm.liveswitch.Candidate]"},Candidate.prototype.fmliveswitchCandidateInit=function(){this._dispatched=!1,this._sdpMediaIndex=0},Candidate.fromJson=function(candidateJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(candidateJson,(function(){return new fm.liveswitch.Candidate}),(function(candidate,name,valueJson){var str2=name;if(!fm.liveswitch.Global.equals(str2,null))if(fm.liveswitch.Global.equals(str2,"sdpCandidateAttribute")){var s=fm.liveswitch.JsonSerializer.deserializeString(valueJson);fm.liveswitch.Global.equals(s,null)||(fm.liveswitch.StringExtensions.startsWith(s,"a=")||(s=fm.liveswitch.StringExtensions.concat("a=",s)),candidate.setSdpCandidateAttribute(fm.liveswitch.Global.tryCast(fm.liveswitch.sdp.Attribute.parse(s),fm.liveswitch.sdp.ice.CandidateAttribute)))}else fm.liveswitch.Global.equals(str2,"sdpMediaIndex")&&candidate.setSdpMediaIndex(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.toJson=function(candidate){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(candidate,(function(c,jsonObject){var sdpCandidateAttribute=candidate.getSdpCandidateAttribute();if(!fm.liveswitch.Global.equals(sdpCandidateAttribute,null)){var str=sdpCandidateAttribute.toString();fm.liveswitch.StringExtensions.startsWith(str,"a=")||(str=fm.liveswitch.StringExtensions.concat("a=",str)),jsonObject.sdpCandidateAttribute=fm.liveswitch.JsonSerializer.serializeString(str)}jsonObject.sdpMediaIndex=fm.liveswitch.JsonSerializer.serializeInteger(candidate.getSdpMediaIndex())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.prototype.getDispatched=function(){if(0==arguments.length)return this._dispatched;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.prototype.getProtocol=function(){if(0==arguments.length)return this.__protocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.prototype.getRelayProtocol=function(){if(0==arguments.length)return this.__relayProtocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.prototype.getSdpCandidateAttribute=function(){if(0==arguments.length)return this.__sdpCandidateAttribute;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.prototype.getSdpMediaIndex=function(){if(0==arguments.length)return this._sdpMediaIndex;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.prototype.getTurnTransportProtocol=function(){if(0==arguments.length)return this.getRelayProtocol();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate.prototype.setDispatched=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dispatched=value},Candidate.prototype.setProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__protocol=value},Candidate.prototype.setRelayProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__relayProtocol=value},Candidate.prototype.setSdpCandidateAttribute=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setProtocol(fm.liveswitch.CandidateUtility.protocolTypeFromString(value.getProtocol())),this.__sdpCandidateAttribute=value},Candidate.prototype.setSdpMediaIndex=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sdpMediaIndex=fm.liveswitch.Global.toInt(value)},Candidate.prototype.setTurnTransportProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setRelayProtocol(value)},Candidate.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.Candidate.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Candidate}();liveswitch.Candidate=Candidate}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Color=function(){function Color(r,g,b){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var r_1=__arguments[0],g_1=__arguments[1],b_1=__arguments[2];this.fmliveswitchColorInit(),this.setR(fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.min(255,r_1))),this.setG(fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.min(255,g_1))),this.setB(fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.min(255,b_1)))}return Color.prototype.getTypeString=function(){return"[fm.liveswitch.Color]"},Color.prototype.fmliveswitchColorInit=function(){this._b=0,this._g=0,this._r=0},Color.fromHsb=function(hue,saturation,brightness){if(3==arguments.length){if(hue=fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.min(359,hue)),saturation=fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.min(1,saturation)),brightness=fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.min(1,brightness)),fm.liveswitch.Global.equals(saturation,0)){var r=255*brightness+.5;return new fm.liveswitch.Color(r,r,r)}var num2=6*(hue-fm.liveswitch.MathAssistant.floor(hue)),num3=num2-fm.liveswitch.MathAssistant.floor(num2),num4=brightness*(1-saturation),num5=brightness*(1-saturation*num3),num6=brightness*(1-saturation*(1-num3)),_var0=num2;return 0==_var0?new fm.liveswitch.Color(255*brightness+.5,255*num6+.5,255*num4+.5):1==_var0?new fm.liveswitch.Color(255*num5+.5,255*brightness+.5,255*num4+.5):2==_var0?new fm.liveswitch.Color(255*num4+.5,255*brightness+.5,255*num6+.5):3==_var0?new fm.liveswitch.Color(255*num4+.5,255*num5+.5,255*brightness+.5):4==_var0?new fm.liveswitch.Color(255*num6+.5,255*num4+.5,255*brightness+.5):new fm.liveswitch.Color(255*brightness+.5,255*num4+.5,255*num5+.5)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getBlack=function(){if(0==arguments.length)return new fm.liveswitch.Color(0,0,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getBlue=function(){if(0==arguments.length)return new fm.liveswitch.Color(0,0,255);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getCyan=function(){if(0==arguments.length)return new fm.liveswitch.Color(0,255,255);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getDarkBlue=function(){if(0==arguments.length)return new fm.liveswitch.Color(0,0,127);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getDarkGreen=function(){if(0==arguments.length)return new fm.liveswitch.Color(0,127,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getDarkRed=function(){if(0==arguments.length)return new fm.liveswitch.Color(127,0,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getGray=function(){if(0==arguments.length)return new fm.liveswitch.Color(127,127,127);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getGreen=function(){if(0==arguments.length)return new fm.liveswitch.Color(0,255,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getMagenta=function(){if(0==arguments.length)return new fm.liveswitch.Color(255,0,255);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getOlive=function(){if(0==arguments.length)return new fm.liveswitch.Color(127,127,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getPurple=function(){if(0==arguments.length)return new fm.liveswitch.Color(127,0,127);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getRed=function(){if(0==arguments.length)return new fm.liveswitch.Color(255,0,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getTeal=function(){if(0==arguments.length)return new fm.liveswitch.Color(0,127,127);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getWhite=function(){if(0==arguments.length)return new fm.liveswitch.Color(255,255,255);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.getYellow=function(){if(0==arguments.length)return new fm.liveswitch.Color(255,255,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.prototype.getB=function(){if(0==arguments.length)return this._b;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.prototype.getG=function(){if(0==arguments.length)return this._g;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.prototype.getR=function(){if(0==arguments.length)return this._r;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Color.prototype.setB=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._b=fm.liveswitch.Global.toInt(value)},Color.prototype.setG=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._g=fm.liveswitch.Global.toInt(value)},Color.prototype.setR=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._r=fm.liveswitch.Global.toInt(value)},Color}();liveswitch.Color=Color}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionCollection=function(_super){function ConnectionCollection(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).__lookupByExternalId={},_this.__lookupByInternalId={},_this.__lookupLock=new Object,_this}return __extends(ConnectionCollection,_super),ConnectionCollection.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionCollection],"+_super.prototype.getTypeString.call(this)},ConnectionCollection.prototype.addSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.addSuccess.call(this,value),this.__lookupByInternalId[value.getId()]=value;var externalId=value.getExternalId();fm.liveswitch.Global.equals(externalId,null)||(this.__lookupByExternalId[externalId]=value),value.removeOnExternalIdChange(this.processExternalIdChange.bind(this)),value.addOnExternalIdChange(this.processExternalIdChange.bind(this))},ConnectionCollection.prototype.arrayFromList=function(list){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(list);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionCollection.prototype.createCollection=function(){if(0==arguments.length)return new fm.liveswitch.ConnectionCollection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionCollection.prototype.getByExternalId=function(idValue){if(1==arguments.length){var connection=null,_var0=new fm.liveswitch.Holder(connection),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__lookupByExternalId,idValue,_var0);return connection=_var0.getValue(),_var1?connection:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionCollection.prototype.getById=function(idValue){if(1==arguments.length){var connection=null,_var0=new fm.liveswitch.Holder(connection),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__lookupByInternalId,idValue,_var0);return connection=_var0.getValue(),_var1?connection:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionCollection.prototype.processExternalIdChange=function(internalId,oldExternalId){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var connection=null,_var0=new fm.liveswitch.Holder(connection),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__lookupByInternalId,internalId,_var0);if(connection=_var0.getValue(),_var1){var externalId=connection.getExternalId();fm.liveswitch.Global.equals(oldExternalId,null)||fm.liveswitch.HashExtensions.remove(this.__lookupByExternalId,oldExternalId),this.__lookupByExternalId[externalId]=connection}},ConnectionCollection.prototype.removeSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.removeSuccess.call(this,value),fm.liveswitch.HashExtensions.remove(this.__lookupByInternalId,value.getId());var externalId=value.getExternalId();fm.liveswitch.Global.equals(externalId,null)||fm.liveswitch.HashExtensions.remove(this.__lookupByExternalId,externalId),value.removeOnExternalIdChange(this.processExternalIdChange.bind(this))},ConnectionCollection.prototype.tryGetByExternalId=function(idValue,connection){if(2==arguments.length){var _var0=fm.liveswitch.HashExtensions.tryGetValue(this.__lookupByExternalId,idValue,connection);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionCollection.prototype.tryGetById=function(idValue,connection){if(2==arguments.length){var _var0=fm.liveswitch.HashExtensions.tryGetValue(this.__lookupByInternalId,idValue,connection);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionCollection}(fm.liveswitch.Collection);liveswitch.ConnectionCollection=ConnectionCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannelStateMachine=function(_super){function DataChannelStateMachine(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this,fm.liveswitch.DataChannelState.New)||this,_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.New,fm.liveswitch.DataChannelState.Connecting),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.New,fm.liveswitch.DataChannelState.Failed),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.New,fm.liveswitch.DataChannelState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.Connecting,fm.liveswitch.DataChannelState.Connected),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.Connecting,fm.liveswitch.DataChannelState.Failed),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.Connecting,fm.liveswitch.DataChannelState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.Connected,fm.liveswitch.DataChannelState.Failed),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.Connected,fm.liveswitch.DataChannelState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.Closing,fm.liveswitch.DataChannelState.Failed),_super.prototype.addTransition.call(_this,fm.liveswitch.DataChannelState.Closing,fm.liveswitch.DataChannelState.Closed),_this}return __extends(DataChannelStateMachine,_super),DataChannelStateMachine.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannelStateMachine],"+_super.prototype.getTypeString.call(this)},DataChannelStateMachine.prototype.stateToValue=function(state){if(1==arguments.length)return state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStateMachine.prototype.valueToState=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelStateMachine}(fm.liveswitch.StateMachine);liveswitch.DataChannelStateMachine=DataChannelStateMachine}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamStateMachine=function(_super){function StreamStateMachine(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this,fm.liveswitch.StreamState.New)||this,_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.New,fm.liveswitch.StreamState.Initializing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.New,fm.liveswitch.StreamState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.New,fm.liveswitch.StreamState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Initializing,fm.liveswitch.StreamState.Connecting),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Initializing,fm.liveswitch.StreamState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Initializing,fm.liveswitch.StreamState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Connecting,fm.liveswitch.StreamState.Connected),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Connecting,fm.liveswitch.StreamState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Connecting,fm.liveswitch.StreamState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Connected,fm.liveswitch.StreamState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Connected,fm.liveswitch.StreamState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Closing,fm.liveswitch.StreamState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Closing,fm.liveswitch.StreamState.Closed),_super.prototype.addTransition.call(_this,fm.liveswitch.StreamState.Failing,fm.liveswitch.StreamState.Failed),_this}return __extends(StreamStateMachine,_super),StreamStateMachine.prototype.getTypeString=function(){return"[fm.liveswitch.StreamStateMachine],"+_super.prototype.getTypeString.call(this)},StreamStateMachine.prototype.stateToValue=function(state){if(1==arguments.length)return state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStateMachine.prototype.valueToState=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamStateMachine}(fm.liveswitch.StateMachine);liveswitch.StreamStateMachine=StreamStateMachine}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionStateMachine=function(_super){function ConnectionStateMachine(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this,fm.liveswitch.ConnectionState.New)||this,_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.New,fm.liveswitch.ConnectionState.Initializing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.New,fm.liveswitch.ConnectionState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.New,fm.liveswitch.ConnectionState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Initializing,fm.liveswitch.ConnectionState.Connecting),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Initializing,fm.liveswitch.ConnectionState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Initializing,fm.liveswitch.ConnectionState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Connecting,fm.liveswitch.ConnectionState.Connected),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Connecting,fm.liveswitch.ConnectionState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Connecting,fm.liveswitch.ConnectionState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Connected,fm.liveswitch.ConnectionState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Connected,fm.liveswitch.ConnectionState.Closing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Closing,fm.liveswitch.ConnectionState.Failing),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Closing,fm.liveswitch.ConnectionState.Closed),_super.prototype.addTransition.call(_this,fm.liveswitch.ConnectionState.Failing,fm.liveswitch.ConnectionState.Failed),_this}return __extends(ConnectionStateMachine,_super),ConnectionStateMachine.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionStateMachine],"+_super.prototype.getTypeString.call(this)},ConnectionStateMachine.prototype.stateToValue=function(state){if(1==arguments.length)return state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStateMachine.prototype.valueToState=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionStateMachine}(fm.liveswitch.StateMachine);liveswitch.ConnectionStateMachine=ConnectionStateMachine}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannelCollection=function(_super){function DataChannelCollection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(DataChannelCollection,_super),DataChannelCollection.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannelCollection],"+_super.prototype.getTypeString.call(this)},DataChannelCollection.prototype.arrayFromList=function(list){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(list);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelCollection.prototype.createCollection=function(){if(0==arguments.length)return new fm.liveswitch.DataChannelCollection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelCollection}(fm.liveswitch.Collection);liveswitch.DataChannelCollection=DataChannelCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannelReceiveArgs=function(){function DataChannelReceiveArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return DataChannelReceiveArgs.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannelReceiveArgs]"},DataChannelReceiveArgs.prototype.getDataBytes=function(){if(0==arguments.length)return this._dataBytes;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReceiveArgs.prototype.getDataMessage=function(){if(0==arguments.length)return this._dataMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReceiveArgs.prototype.getDataString=function(){if(0==arguments.length)return this._dataString;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReceiveArgs.prototype.getRemoteConnectionInfo=function(){if(0==arguments.length)return this.__remoteConnectionInfo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReceiveArgs.prototype.setDataBytes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataBytes=value},DataChannelReceiveArgs.prototype.setDataMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataMessage=value},DataChannelReceiveArgs.prototype.setDataString=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataString=value},DataChannelReceiveArgs.prototype.setRemoteConnectionInfo=function(remoteConnectionInfo){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__remoteConnectionInfo=remoteConnectionInfo},DataChannelReceiveArgs}();liveswitch.DataChannelReceiveArgs=DataChannelReceiveArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(dtmf){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.dtmf.Format.getDefaultClockRate();var clockRate=__arguments[0];_this=_super.call(this,fm.liveswitch.AudioFormat.getDtmfName(),clockRate,1)||this,_super.prototype.setIsFixedBitrate.call(_this,!0),_super.prototype.setIsInjected.call(_this,!0)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");clockRate=__arguments[0];_this=_super.call(this,fm.liveswitch.AudioFormat.getDtmfName(),clockRate,1)||this,_super.prototype.setIsFixedBitrate.call(_this,!0),_super.prototype.setIsInjected.call(_this,!0)}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.dtmf.Format],"+_super.prototype.getTypeString.call(this)},Format.getDefaultClockRate=function(){if(0==arguments.length)return 8e3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.AudioFormat);dtmf.Format=Format}(liveswitch.dtmf||(liveswitch.dtmf={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EncryptionPolicyWrapper=function(){function EncryptionPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_47=__arguments[0];this._value=value_47}return EncryptionPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.EncryptionPolicyWrapper]"},EncryptionPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.EncryptionPolicy.Required?"Required":this._value==fm.liveswitch.EncryptionPolicy.Negotiated?"Negotiated":this._value==fm.liveswitch.EncryptionPolicy.Disabled?"Disabled":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EncryptionPolicyWrapper}();liveswitch.EncryptionPolicyWrapper=EncryptionPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(g711){var Format=function(_super){function Format(name,clockRate,channelCount){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var name_37=__arguments[0],clockRate_10=__arguments[1],channelCount_2=__arguments[2];return _this=_super.call(this,name_37,clockRate_10,channelCount_2)||this,_super.prototype.setIsFixedBitrate.call(_this,!0),_this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.g711.Format],"+_super.prototype.getTypeString.call(this)},Format.getDefaultChannelCount=function(){if(0==arguments.length)return 1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.getDefaultClockRate=function(){if(0==arguments.length)return 8e3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.getDefaultConfig=function(){if(0==arguments.length)return new fm.liveswitch.AudioConfig(fm.liveswitch.g711.Format.getDefaultClockRate(),fm.liveswitch.g711.Format.getDefaultChannelCount());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getFixedBitrate=function(){if(0==arguments.length)return fm.liveswitch.MathAssistant.floor(fm.liveswitch.MathAssistant.floor(_super.prototype.getConfig.call(this).getClockRate()*_super.prototype.getConfig.call(this).getChannelCount()*2*8/2)/1e3);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMaxBitrate=function(){if(0==arguments.length)return this.getFixedBitrate();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMinBitrate=function(){if(0==arguments.length)return this.getFixedBitrate();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.AudioFormat);g711.Format=Format}(liveswitch.g711||(liveswitch.g711={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(h264){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name())||this;else if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){var clockRate=__arguments[0];_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name(),clockRate)||this}else if(2==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))){clockRate=__arguments[0];var packetizationMode=__arguments[1];_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name(),clockRate,fm.liveswitch.NumberExtensions.toString(packetizationMode))||this}else if(4==__arguments.length){clockRate=__arguments[0];var profile=__arguments[1],level=__arguments[2];packetizationMode=__arguments[3];_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name(),clockRate,profile,level,fm.liveswitch.NumberExtensions.toString(packetizationMode))||this}else if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isNumber(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.h264.ProfileLevelId]"))){clockRate=__arguments[0];var profileLevelId=__arguments[1];packetizationMode=__arguments[2];_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name(),clockRate,profileLevelId.getProfile(),profileLevelId.getLevel(),fm.liveswitch.NumberExtensions.toString(packetizationMode))||this}else if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){profile=__arguments[0],level=__arguments[1],packetizationMode=__arguments[2];_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name(),9e4,profile,level,fm.liveswitch.NumberExtensions.toString(packetizationMode))||this}else if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.h264.ProfileLevelId]"))){profileLevelId=__arguments[0];_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name(),9e4,profileLevelId.getProfile(),profileLevelId.getLevel())||this}else{if(2!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[0])&&!fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.h264.ProfileLevelId]"))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");profileLevelId=__arguments[0],packetizationMode=__arguments[1];_this=_super.call(this,fm.liveswitch.VideoFormat.getH264Name(),9e4,profileLevelId.getProfile(),profileLevelId.getLevel(),fm.liveswitch.NumberExtensions.toString(packetizationMode))||this}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.h264.Format],"+_super.prototype.getTypeString.call(this)},Format.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.h264.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMaxBitrate=function(){if(0==arguments.length)return 1e5;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMinBitrate=function(){if(0==arguments.length)return 100;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.VideoFormat);h264.Format=Format}(liveswitch.h264||(liveswitch.h264={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(h264){var ProfileIop=function(){function ProfileIop(profileIop){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var profileIop_1=__arguments[0];this.setDataBuffer(fm.liveswitch.DataBuffer.wrap(new Uint8Array([profileIop_1])))}return ProfileIop.prototype.getTypeString=function(){return"[fm.liveswitch.h264.ProfileIop]"},ProfileIop.prototype.getConstraintSet0=function(){if(0==arguments.length)return this.getDataBuffer().read1(0,0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileIop.prototype.getConstraintSet1=function(){if(0==arguments.length)return this.getDataBuffer().read1(0,1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileIop.prototype.getConstraintSet2=function(){if(0==arguments.length)return this.getDataBuffer().read1(0,2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileIop.prototype.getDataBuffer=function(){if(0==arguments.length)return this._dataBuffer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileIop.prototype.setConstraintSet0=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getDataBuffer().write1(value,0,0)},ProfileIop.prototype.setConstraintSet1=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getDataBuffer().write1(value,0,1)},ProfileIop.prototype.setConstraintSet2=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getDataBuffer().write1(value,0,2)},ProfileIop.prototype.setDataBuffer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataBuffer=value},ProfileIop}();h264.ProfileIop=ProfileIop}(liveswitch.h264||(liveswitch.h264={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(h264){var ProfileLevelId=function(){function ProfileLevelId(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchh264ProfileLevelIdInit();else if(2==__arguments.length){var profile=__arguments[0],level=__arguments[1];if(this.fmliveswitchh264ProfileLevelIdInit(),fm.liveswitch.Global.equals(profile,null))throw new fm.liveswitch.Exception("Cannot initialize with null profile.");if(fm.liveswitch.Global.equals(level,null))throw new fm.liveswitch.Exception("Cannot initialize with null level.");if(!fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(profile),4))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Invalid profile. (Length was {0} and should be 4.)",fm.liveswitch.NumberExtensions.toString(fm.liveswitch.StringExtensions.getLength(profile))));if(!fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(level),2))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Invalid level. (Length was {0} and should be 2.)",fm.liveswitch.NumberExtensions.toString(fm.liveswitch.StringExtensions.getLength(level))));var hexBytes=fm.liveswitch.BitAssistant.getHexBytes(profile),buffer2=fm.liveswitch.BitAssistant.getHexBytes(level);this.setProfileIdc(hexBytes[0]),this.setProfileIop(new fm.liveswitch.h264.ProfileIop(hexBytes[1])),this.setLevelIdc(buffer2[0])}else if(3==__arguments.length){var profileIdc=__arguments[0],profileIop=__arguments[1],levelIdc=__arguments[2];this.fmliveswitchh264ProfileLevelIdInit(),this.setProfileIdc(profileIdc),this.setProfileIop(new fm.liveswitch.h264.ProfileIop(profileIop)),this.setLevelIdc(levelIdc)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var profileLevelId=__arguments[0];if(this.fmliveswitchh264ProfileLevelIdInit(),fm.liveswitch.Global.equals(profileLevelId,null))throw new fm.liveswitch.Exception("Cannot initialize with null profile level ID.");if(!fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.getLength(profileLevelId),6))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Invalid profile level ID. (Length was {0} and should be 6.)",fm.liveswitch.NumberExtensions.toString(fm.liveswitch.StringExtensions.getLength(profileLevelId))));hexBytes=fm.liveswitch.BitAssistant.getHexBytes(fm.liveswitch.StringExtensions.substring(profileLevelId,0,2)),buffer2=fm.liveswitch.BitAssistant.getHexBytes(fm.liveswitch.StringExtensions.substring(profileLevelId,2,2));var buffer3=fm.liveswitch.BitAssistant.getHexBytes(fm.liveswitch.StringExtensions.substring(profileLevelId,4,2));this.setProfileIdc(hexBytes[0]),this.setProfileIop(new fm.liveswitch.h264.ProfileIop(buffer2[0])),this.setLevelIdc(buffer3[0])}}return ProfileLevelId.prototype.getTypeString=function(){return"[fm.liveswitch.h264.ProfileLevelId]"},ProfileLevelId.prototype.fmliveswitchh264ProfileLevelIdInit=function(){this._levelIdc=0,this._profileIdc=0},ProfileLevelId.getBaselineLevel10=function(){if(0==arguments.length)return new fm.liveswitch.h264.ProfileLevelId(66,0,10);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.getBaselineLevel31=function(){if(0==arguments.length)return new fm.liveswitch.h264.ProfileLevelId(66,0,31);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.getConstrainedBaselineLevel10=function(){if(0==arguments.length)return new fm.liveswitch.h264.ProfileLevelId(66,224,10);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.getConstrainedBaselineLevel31=function(){if(0==arguments.length)return new fm.liveswitch.h264.ProfileLevelId(66,224,31);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.getDefault=function(){if(0==arguments.length)return fm.liveswitch.h264.ProfileLevelId.getConstrainedBaselineLevel31();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.getHighLevel50=function(){if(0==arguments.length)return new fm.liveswitch.h264.ProfileLevelId(100,0,50);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.getMainLevel50=function(){if(0==arguments.length)return new fm.liveswitch.h264.ProfileLevelId(77,0,50);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.prototype.getLevel=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.substring(this.toString(),4,2);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.prototype.getLevelIdc=function(){if(0==arguments.length)return this._levelIdc;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.prototype.getMaxEncoding=function(){if(0==arguments.length){if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"0a",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info=new fm.liveswitch.EncodingInfo;return info.setBitrate(64),info.setFrameRate(15),info.setSize(new fm.liveswitch.Size(176,144)),info}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"0b",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info2=new fm.liveswitch.EncodingInfo;return info2.setBitrate(192),info2.setFrameRate(7.5),info2.setSize(new fm.liveswitch.Size(352,288)),info2}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"0c",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info3=new fm.liveswitch.EncodingInfo;return info3.setBitrate(384),info3.setFrameRate(15.2),info3.setSize(new fm.liveswitch.Size(352,288)),info3}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"0d",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info4=new fm.liveswitch.EncodingInfo;return info4.setBitrate(768),info4.setFrameRate(30),info4.setSize(new fm.liveswitch.Size(352,288)),info4}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"14",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info5=new fm.liveswitch.EncodingInfo;return info5.setBitrate(2e3),info5.setFrameRate(30),info5.setSize(new fm.liveswitch.Size(352,288)),info5}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"15",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info6=new fm.liveswitch.EncodingInfo;return info6.setBitrate(4e3),info6.setFrameRate(25),info6.setSize(new fm.liveswitch.Size(352,576)),info6}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"16",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info7=new fm.liveswitch.EncodingInfo;return info7.setBitrate(4e3),info7.setFrameRate(12.5),info7.setSize(new fm.liveswitch.Size(720,576)),info7}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"1e",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info8=new fm.liveswitch.EncodingInfo;return info8.setBitrate(1e4),info8.setFrameRate(25),info8.setSize(new fm.liveswitch.Size(720,576)),info8}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"1f",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info9=new fm.liveswitch.EncodingInfo;return info9.setBitrate(14e3),info9.setFrameRate(30),info9.setSize(new fm.liveswitch.Size(1280,720)),info9}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"20",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info10=new fm.liveswitch.EncodingInfo;return info10.setBitrate(2e4),info10.setFrameRate(42.2),info10.setSize(new fm.liveswitch.Size(1280,1024)),info10}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"28",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info11=new fm.liveswitch.EncodingInfo;return info11.setBitrate(2e4),info11.setFrameRate(30),info11.setSize(new fm.liveswitch.Size(2048,1024)),info11}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"29",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info12=new fm.liveswitch.EncodingInfo;return info12.setBitrate(5e4),info12.setFrameRate(30),info12.setSize(new fm.liveswitch.Size(2048,1024)),info12}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"2a",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info13=new fm.liveswitch.EncodingInfo;return info13.setBitrate(5e4),info13.setFrameRate(60),info13.setSize(new fm.liveswitch.Size(2048,1080)),info13}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"32",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info14=new fm.liveswitch.EncodingInfo;return info14.setBitrate(135e3),info14.setFrameRate(26.7),info14.setSize(new fm.liveswitch.Size(3672,1536)),info14}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"33",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info15=new fm.liveswitch.EncodingInfo;return info15.setBitrate(24e4),info15.setFrameRate(26.7),info15.setSize(new fm.liveswitch.Size(4096,2304)),info15}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"34",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info16=new fm.liveswitch.EncodingInfo;return info16.setBitrate(24e4),info16.setFrameRate(56.3),info16.setSize(new fm.liveswitch.Size(4096,2304)),info16}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"3c",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info17=new fm.liveswitch.EncodingInfo;return info17.setBitrate(24e4),info17.setFrameRate(30.2),info17.setSize(new fm.liveswitch.Size(8192,4320)),info17}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"3d",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info18=new fm.liveswitch.EncodingInfo;return info18.setBitrate(48e4),info18.setFrameRate(60.4),info18.setSize(new fm.liveswitch.Size(8192,4320)),info18}if(fm.liveswitch.StringExtensions.isEqual(this.getLevel(),"3e",fm.liveswitch.StringComparison.OrdinalIgnoreCase)){var info19=new fm.liveswitch.EncodingInfo;return info19.setBitrate(8e5),info19.setFrameRate(120.9),info19.setSize(new fm.liveswitch.Size(8192,4320)),info19}var info20=new fm.liveswitch.EncodingInfo;return info20.setBitrate(64),info20.setFrameRate(15),info20.setSize(new fm.liveswitch.Size(176,144)),info20}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.prototype.getProfile=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.substring(this.toString(),0,4);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.prototype.getProfileIdc=function(){if(0==arguments.length)return this._profileIdc;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.prototype.getProfileIop=function(){if(0==arguments.length)return this._profileIop;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId.prototype.setLevelIdc=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._levelIdc=fm.liveswitch.Global.toInt(value)},ProfileLevelId.prototype.setProfileIdc=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._profileIdc=fm.liveswitch.Global.toInt(value)},ProfileLevelId.prototype.setProfileIop=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._profileIop=value},ProfileLevelId.prototype.toString=function(){if(0==arguments.length)return fm.liveswitch.BitAssistant.getHexString(new Uint8Array([this.getProfileIdc(),this.getProfileIop().getDataBuffer().read8(0),this.getLevelIdc()]));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ProfileLevelId}();h264.ProfileLevelId=ProfileLevelId}(liveswitch.h264||(liveswitch.h264={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var IceConnectionStateWrapper=function(){function IceConnectionStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_48=__arguments[0];this._value=value_48}return IceConnectionStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.IceConnectionStateWrapper]"},IceConnectionStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.IceConnectionState.New?"New":this._value==fm.liveswitch.IceConnectionState.Checking?"Checking":this._value==fm.liveswitch.IceConnectionState.Connected?"Connected":this._value==fm.liveswitch.IceConnectionState.Completed?"Completed":this._value==fm.liveswitch.IceConnectionState.Failed?"Failed":this._value==fm.liveswitch.IceConnectionState.Disconnected?"Disconnected":this._value==fm.liveswitch.IceConnectionState.Closed?"Closed":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceConnectionStateWrapper}();liveswitch.IceConnectionStateWrapper=IceConnectionStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var IceGatheringStateWrapper=function(){function IceGatheringStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_49=__arguments[0];this._value=value_49}return IceGatheringStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.IceGatheringStateWrapper]"},IceGatheringStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.IceGatheringState.New?"New":this._value==fm.liveswitch.IceGatheringState.Gathering?"Gathering":this._value==fm.liveswitch.IceGatheringState.Complete?"Complete":this._value==fm.liveswitch.IceGatheringState.Closing?"Closing":this._value==fm.liveswitch.IceGatheringState.Closed?"Closed":this._value==fm.liveswitch.IceGatheringState.Failed?"Failed":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceGatheringStateWrapper}();liveswitch.IceGatheringStateWrapper=IceGatheringStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var IceGatherPolicyWrapper=function(){function IceGatherPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_50=__arguments[0];this._value=value_50}return IceGatherPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.IceGatherPolicyWrapper]"},IceGatherPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.IceGatherPolicy.All?"All":this._value==fm.liveswitch.IceGatherPolicy.NoHost?"NoHost":this._value==fm.liveswitch.IceGatherPolicy.Relay?"Relay":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceGatherPolicyWrapper}();liveswitch.IceGatherPolicyWrapper=IceGatherPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var IceServer=function(){function IceServer(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length);else if(1==__arguments.length){var url=__arguments[0];if(fm.liveswitch.StringExtensions.isNullOrEmpty(url))throw new fm.liveswitch.Exception("URL cannot be null or empty.");if(fm.liveswitch.StringExtensions.startsWith(url,"turn:")||fm.liveswitch.StringExtensions.startsWith(url,"turns:"))throw new fm.liveswitch.Exception("TURN servers require a username and password.");fm.liveswitch.StringExtensions.startsWith(url,"stun:")||fm.liveswitch.StringExtensions.startsWith(url,"stuns:")||(url=fm.liveswitch.StringExtensions.format("stun:{0}",url)),fm.liveswitch.StringExtensions.contains(url,"?transport=")||(url=fm.liveswitch.StringExtensions.format("{0}?transport=udp",url)),this.setUrl(url)}else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");url=__arguments[0];var username=__arguments[1],password=__arguments[2];if(fm.liveswitch.StringExtensions.isNullOrEmpty(url))throw new fm.liveswitch.Exception("URL cannot be null or empty.");if(fm.liveswitch.Global.equals(username,null))throw new fm.liveswitch.Exception("Username cannot be null.");if(fm.liveswitch.Global.equals(password,null))throw new fm.liveswitch.Exception("Password cannot be null.");if(fm.liveswitch.StringExtensions.startsWith(url,"stun:")||fm.liveswitch.StringExtensions.startsWith(url,"stuns:"))throw new fm.liveswitch.Exception("STUN servers do not have a username or password.");fm.liveswitch.StringExtensions.startsWith(url,"turn:")||fm.liveswitch.StringExtensions.startsWith(url,"turns:")||(url=fm.liveswitch.StringExtensions.format("turn:{0}",url)),this.setUrl(url),this.setUsername(username),this.setPassword(password)}}return IceServer.prototype.getTypeString=function(){return"[fm.liveswitch.IceServer]"},IceServer.fromJson=function(iceServerJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(iceServerJson,(function(){return new fm.liveswitch.IceServer}),(function(iceServer,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"url")?iceServer.setUrl(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"username")?iceServer.setUsername(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"password")&&iceServer.setPassword(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.fromJsonArray=function(iceServersJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(iceServersJson,fm.liveswitch.IceServer.fromJson.bind(fm.liveswitch.IceServer));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.getDefaultPort=function(){if(0==arguments.length)return fm.liveswitch.Log.warn("Getting the value of IceServer.DefaultPort is deprecated. Get the value of IceServer.DefaultStunsPort/DefaultStunPort/DefaultTurnsPort/DefaultTurnPort instead."),3478;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.getDefaultStunPort=function(){if(0==arguments.length)return 3478;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.getDefaultStunsPort=function(){if(0==arguments.length)return 5349;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.getDefaultTurnPort=function(){if(0==arguments.length)return 3478;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.getDefaultTurnsPort=function(){if(0==arguments.length)return 5349;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.parseAddress=function(address,host,port){if(3==arguments.length){var strArray=void 0;return host.setValue(null),port.setValue(-1),fm.liveswitch.Global.equals(address,null)?!1:(address=fm.liveswitch.StringExtensions.split(address,[63])[0],(fm.liveswitch.StringExtensions.startsWith(address,"stun:")||fm.liveswitch.StringExtensions.startsWith(address,"stuns:")||fm.liveswitch.StringExtensions.startsWith(address,"turn:")||fm.liveswitch.StringExtensions.startsWith(address,"turns:"))&&(address=address.substring(fm.liveswitch.StringExtensions.indexOf(address,":")+1)),fm.liveswitch.StringExtensions.startsWith(address,"[")?(address=fm.liveswitch.StringExtensions.substring(address,1,fm.liveswitch.StringExtensions.getLength(address)-1),strArray=fm.liveswitch.StringExtensions.split(address,[93]),host.setValue(strArray[0]),strArray.length>1&&fm.liveswitch.StringExtensions.startsWith(strArray[1],":")&&port.setValue(fm.liveswitch.IceServer.parsePort(strArray[1].substring(1)))):(strArray=fm.liveswitch.StringExtensions.split(address,[58]),fm.liveswitch.Global.equals(strArray.length,1)?host.setValue(address):fm.liveswitch.Global.equals(strArray.length,2)?(host.setValue(strArray[0]),port.setValue(fm.liveswitch.IceServer.parsePort(strArray[1]))):strArray.length>2&&host.setValue(address)),!0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.parsePort=function(portString){if(1==arguments.length){var intResult=-1,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(portString,_var0);if(intResult=_var0.getValue(),!_var1)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Could not parse port when trying to interpret uri in the IceServer constructor. Please verify that the port was given as an integer. Tried parsing value {0}.",portString));return intResult}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.toJson=function(iceServer){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(iceServer,(function(i,jsonObject){fm.liveswitch.Global.equals(iceServer.getUrl(),null)||(jsonObject.url=fm.liveswitch.JsonSerializer.serializeString(iceServer.getUrl())),fm.liveswitch.Global.equals(iceServer.getUsername(),null)||(jsonObject.username=fm.liveswitch.JsonSerializer.serializeString(iceServer.getUsername())),fm.liveswitch.Global.equals(iceServer.getPassword(),null)||(jsonObject.password=fm.liveswitch.JsonSerializer.serializeString(iceServer.getPassword()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.toJsonArray=function(iceServers){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(iceServers,fm.liveswitch.IceServer.toJson.bind(fm.liveswitch.IceServer));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getHost=function(){if(0==arguments.length){var host=null,port=-1,_var0=new fm.liveswitch.Holder(host),_var1=new fm.liveswitch.Holder(port);fm.liveswitch.IceServer.parseAddress(this.getUrl(),_var0,_var1);return host=_var0.getValue(),port=_var1.getValue(),host}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getIPAddress=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__ipAddress,null)&&!fm.liveswitch.Global.equals(this.__ipAddresses,null)&&this.__ipAddresses.length>0&&(this.__ipAddress=this.__ipAddresses[0]),this.__ipAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getIPAddresses=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__ipAddresses,null)&&!fm.liveswitch.Global.equals(this.__ipAddress,null)&&(this.__ipAddresses=[this.__ipAddress]),this.__ipAddresses;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getIsSecure=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.startsWith(this.getUrl(),"stuns:")||fm.liveswitch.StringExtensions.startsWith(this.getUrl(),"turns:");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getIsStun=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.startsWith(this.getUrl(),"stun:")||fm.liveswitch.StringExtensions.startsWith(this.getUrl(),"stuns:");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getIsTcp=function(){if(0==arguments.length)return!fm.liveswitch.StringExtensions.endsWith(this.getUrl(),"?transport=udp");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getIsTurn=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.startsWith(this.getUrl(),"turn:")||fm.liveswitch.StringExtensions.startsWith(this.getUrl(),"turns:");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getIsUdp=function(){if(0==arguments.length)return!fm.liveswitch.StringExtensions.endsWith(this.getUrl(),"?transport=tcp");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getPassword=function(){if(0==arguments.length)return this._password;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getPort=function(){if(0==arguments.length){var host=null,port=-1,_var0=new fm.liveswitch.Holder(host),_var1=new fm.liveswitch.Holder(port);fm.liveswitch.IceServer.parseAddress(this.getUrl(),_var0,_var1);return host=_var0.getValue(),port=_var1.getValue(),fm.liveswitch.Global.equals(port,-1)?!this.getIsSecure()&&this.getIsTurn()?fm.liveswitch.IceServer.getDefaultTurnPort():!this.getIsSecure()&&this.getIsStun()?fm.liveswitch.IceServer.getDefaultStunPort():this.getIsSecure()&&this.getIsTurn()?fm.liveswitch.IceServer.getDefaultTurnsPort():fm.liveswitch.IceServer.getDefaultStunsPort():port}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getUrl=function(){if(0==arguments.length)return this._url;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.getUsername=function(){if(0==arguments.length)return this._username;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer.prototype.setIPAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__ipAddress=value},IceServer.prototype.setIPAddresses=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__ipAddresses=value},IceServer.prototype.setPassword=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._password=value},IceServer.prototype.setUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._url=value},IceServer.prototype.setUsername=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._username=value},IceServer.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.IceServer.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServer}();liveswitch.IceServer=IceServer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var IceServerCollection=function(_super){function IceServerCollection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(IceServerCollection,_super),IceServerCollection.prototype.getTypeString=function(){return"[fm.liveswitch.IceServerCollection],"+_super.prototype.getTypeString.call(this)},IceServerCollection.prototype.arrayFromList=function(list){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(list);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServerCollection.prototype.createCollection=function(){if(0==arguments.length)return new fm.liveswitch.IceServerCollection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},IceServerCollection}(fm.liveswitch.Collection);liveswitch.IceServerCollection=IceServerCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Layout=function(){function Layout(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchLayoutInit(),this.__localFrame=new fm.liveswitch.LayoutFrame(0,0,0,0),this.__remoteFrames=new Array(0)}return Layout.prototype.getTypeString=function(){return"[fm.liveswitch.Layout]"},Layout.prototype.fmliveswitchLayoutInit=function(){this._height=0,this._width=0},Layout.prototype.getAllFrames=function(){if(0==arguments.length){var list=new Array;return fm.liveswitch.ArrayExtensions.add(list,this.getLocalFrame()),fm.liveswitch.ArrayExtensions.addRange(list,this.getRemoteFrames()),fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Layout.prototype.getHeight=function(){if(0==arguments.length)return this._height;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Layout.prototype.getLocalFrame=function(){if(0==arguments.length)return this.__localFrame;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Layout.prototype.getOrigin=function(){if(0==arguments.length)return this._origin;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Layout.prototype.getRemoteFrames=function(){if(0==arguments.length)return this.__remoteFrames;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Layout.prototype.getWidth=function(){if(0==arguments.length)return this._width;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Layout.prototype.setHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._height=fm.liveswitch.Global.toInt(value)},Layout.prototype.setLocalFrame=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)?this.__localFrame=new fm.liveswitch.LayoutFrame(0,0,0,0):this.__localFrame=value},Layout.prototype.setOrigin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._origin=value},Layout.prototype.setRemoteFrames=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)?this.__remoteFrames=new Array(0):this.__remoteFrames=value},Layout.prototype.setWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._width=fm.liveswitch.Global.toInt(value)},Layout.prototype.swapFrames=function(frame1,frame2){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var x=frame1.getX(),y=frame1.getY(),width=frame1.getWidth(),height=frame1.getHeight();frame1.setX(frame2.getX()),frame1.setY(frame2.getY()),frame1.setWidth(frame2.getWidth()),frame1.setHeight(frame2.getHeight()),frame2.setX(x),frame2.setY(y),frame2.setWidth(width),frame2.setHeight(height)},Layout.prototype.swapLocalFrame=function(remoteFrameIndex){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");remoteFrameIndex=fm.liveswitch.Global.toInt(arguments[0]);var localFrame=this.getLocalFrame(),remoteFrames=this.getRemoteFrames();!fm.liveswitch.Global.equals(localFrame,null)&&remoteFrameIndex<remoteFrames.length&&this.swapFrames(localFrame,remoteFrames[remoteFrameIndex])},Layout.prototype.swapRemoteFrames=function(remoteFrameIndex1,remoteFrameIndex2){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");remoteFrameIndex1=fm.liveswitch.Global.toInt(arguments[0]),remoteFrameIndex2=fm.liveswitch.Global.toInt(arguments[1]);var remoteFrames=this.getRemoteFrames();remoteFrameIndex1<remoteFrames.length&&remoteFrameIndex2<remoteFrames.length&&this.swapFrames(remoteFrames[remoteFrameIndex1],remoteFrames[remoteFrameIndex2])},Layout}();liveswitch.Layout=Layout}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutAlignmentWrapper=function(){function LayoutAlignmentWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_51=__arguments[0];this._value=value_51}return LayoutAlignmentWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutAlignmentWrapper]"},LayoutAlignmentWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.LayoutAlignment.TopLeft?"TopLeft":this._value==fm.liveswitch.LayoutAlignment.Top?"Top":this._value==fm.liveswitch.LayoutAlignment.TopRight?"TopRight":this._value==fm.liveswitch.LayoutAlignment.Left?"Left":this._value==fm.liveswitch.LayoutAlignment.Center?"Center":this._value==fm.liveswitch.LayoutAlignment.Right?"Right":this._value==fm.liveswitch.LayoutAlignment.BottomLeft?"BottomLeft":this._value==fm.liveswitch.LayoutAlignment.Bottom?"Bottom":this._value==fm.liveswitch.LayoutAlignment.BottomRight?"BottomRight":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutAlignmentWrapper}();liveswitch.LayoutAlignmentWrapper=LayoutAlignmentWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutDirectionWrapper=function(){function LayoutDirectionWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_52=__arguments[0];this._value=value_52}return LayoutDirectionWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutDirectionWrapper]"},LayoutDirectionWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.LayoutDirection.Horizontal?"Horizontal":this._value==fm.liveswitch.LayoutDirection.Vertical?"Vertical":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutDirectionWrapper}();liveswitch.LayoutDirectionWrapper=LayoutDirectionWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutModeWrapper=function(){function LayoutModeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_53=__arguments[0];this._value=value_53}return LayoutModeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutModeWrapper]"},LayoutModeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.LayoutMode.FloatLocal?"FloatLocal":this._value==fm.liveswitch.LayoutMode.FloatRemote?"FloatRemote":this._value==fm.liveswitch.LayoutMode.Block?"Block":this._value==fm.liveswitch.LayoutMode.Inline?"Inline":this._value==fm.liveswitch.LayoutMode.InlineOverflow?"InlineOverflow":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutModeWrapper}();liveswitch.LayoutModeWrapper=LayoutModeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutOriginWrapper=function(){function LayoutOriginWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_54=__arguments[0];this._value=value_54}return LayoutOriginWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutOriginWrapper]"},LayoutOriginWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.LayoutOrigin.TopLeft?"TopLeft":this._value==fm.liveswitch.LayoutOrigin.TopRight?"TopRight":this._value==fm.liveswitch.LayoutOrigin.BottomRight?"BottomRight":this._value==fm.liveswitch.LayoutOrigin.BottomLeft?"BottomLeft":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutOriginWrapper}();liveswitch.LayoutOriginWrapper=LayoutOriginWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutTable=function(){function LayoutTable(columnCount,rowCount,cellWidth,cellHeight){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var columnCount_1=__arguments[0],rowCount_1=__arguments[1],cellWidth_1=__arguments[2],cellHeight_1=__arguments[3];this.fmliveswitchLayoutTableInit(),this.setColumnCount(columnCount_1),this.setRowCount(rowCount_1),this.setCellWidth(cellWidth_1),this.setCellHeight(cellHeight_1)}return LayoutTable.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutTable]"},LayoutTable.prototype.fmliveswitchLayoutTableInit=function(){this._cellHeight=0,this._cellWidth=0,this._columnCount=0,this._rowCount=0},LayoutTable.prototype.getCellHeight=function(){if(0==arguments.length)return this._cellHeight;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutTable.prototype.getCellWidth=function(){if(0==arguments.length)return this._cellWidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutTable.prototype.getColumnCount=function(){if(0==arguments.length)return this._columnCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutTable.prototype.getRowCount=function(){if(0==arguments.length)return this._rowCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutTable.prototype.setCellHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._cellHeight=fm.liveswitch.Global.toInt(value)},LayoutTable.prototype.setCellWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._cellWidth=fm.liveswitch.Global.toInt(value)},LayoutTable.prototype.setColumnCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._columnCount=fm.liveswitch.Global.toInt(value)},LayoutTable.prototype.setRowCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._rowCount=fm.liveswitch.Global.toInt(value)},LayoutTable}();liveswitch.LayoutTable=LayoutTable}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LocalMediaStateWrapper=function(){function LocalMediaStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_55=__arguments[0];this._value=value_55}return LocalMediaStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.LocalMediaStateWrapper]"},LocalMediaStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.LocalMediaState.New?"New":this._value==fm.liveswitch.LocalMediaState.Starting?"Starting":this._value==fm.liveswitch.LocalMediaState.Started?"Started":this._value==fm.liveswitch.LocalMediaState.Stopping?"Stopping":this._value==fm.liveswitch.LocalMediaState.Stopped?"Stopped":this._value==fm.liveswitch.LocalMediaState.Destroying?"Destroying":this._value==fm.liveswitch.LocalMediaState.Destroyed?"Destroyed":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LocalMediaStateWrapper}();liveswitch.LocalMediaStateWrapper=LocalMediaStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoBuffer=function(_super){function VideoBuffer(){var _this=this;fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchVideoBufferInit(),_this.__orientation=0;else if(4==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataBuffer]"))){var width=__arguments[0],height=__arguments[1],dataBuffer=__arguments[2],format=__arguments[3];(_this=_super.call(this,dataBuffer,format)||this).fmliveswitchVideoBufferInit(),_this.__orientation=0,_this.setWidth(width),_this.setHeight(height),_this.setStrides(_this.getDefaultStrides(width,format))}else if(4==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isArray(arguments[2])&&(0==arguments[2].length||fm.liveswitch.Util.isNullOrUndefined(arguments[2][0])||fm.liveswitch.Util.isObjectType(arguments[2][0],"[fm.liveswitch.DataBuffer]")))){width=__arguments[0],height=__arguments[1];var dataBuffers=__arguments[2];format=__arguments[3];(_this=_super.call(this,dataBuffers,format)||this).fmliveswitchVideoBufferInit(),_this.__orientation=0,_this.setWidth(width),_this.setHeight(height),_this.setStrides(_this.getDefaultStrides(width,format))}else if(5==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isNumber(arguments[2]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isObjectType(arguments[3],"[fm.liveswitch.DataBuffer]"))){width=__arguments[0],height=__arguments[1];var stride=__arguments[2];dataBuffer=__arguments[3],format=__arguments[4];(_this=_super.call(this,dataBuffer,format)||this).fmliveswitchVideoBufferInit(),_this.__orientation=0,_this.setWidth(width),_this.setHeight(height),_this.setStride(stride)}else{if(5!=__arguments.length||!(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isArray(arguments[2])&&(0==arguments[2].length||fm.liveswitch.Util.isNullOrUndefined(arguments[2][0])||fm.liveswitch.Util.isNumber(arguments[2][0])))||!(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isArray(arguments[3])&&(0==arguments[3].length||fm.liveswitch.Util.isNullOrUndefined(arguments[3][0])||fm.liveswitch.Util.isObjectType(arguments[3][0],"[fm.liveswitch.DataBuffer]"))))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");width=__arguments[0],height=__arguments[1];var strides=__arguments[2];dataBuffers=__arguments[3],format=__arguments[4];(_this=_super.call(this,dataBuffers,format)||this).fmliveswitchVideoBufferInit(),_this.__orientation=0,_this.setWidth(width),_this.setHeight(height),_this.setStrides(strides)}return _this}return __extends(VideoBuffer,_super),VideoBuffer.prototype.getTypeString=function(){return"[fm.liveswitch.VideoBuffer],"+_super.prototype.getTypeString.call(this)},VideoBuffer.prototype.fmliveswitchVideoBufferInit=function(){this.__height=0,this.__isMuted=!1,this.__orientation=0,this.__width=0,this._horizontallyMirrored=!1,this._verticallyMirrored=!1},VideoBuffer.calculateByteCount=function(format,width,height){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[1]),height=fm.liveswitch.Global.toInt(arguments[2]),format.getIsYuvType()?width*height*1.5:format.getIsRgbType()?width*height*3:format.getIsRgbaType()?width*height*4:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.canPackWithoutCopy=function(dataBuffers){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),1==arguments.length){for(var data=dataBuffers[0].getData(),index=dataBuffers[0].getIndex(),length_45=dataBuffers[0].getLength(),i=1;i<dataBuffers.length;i++){var buffer2=dataBuffers[i];if(!fm.liveswitch.Global.equals(buffer2.getData(),data))return!1;if(!fm.liveswitch.Global.equals(buffer2.getIndex(),index+length_45))return!1;index=buffer2.getIndex(),length_45=buffer2.getLength()}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.clamp=function(value){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),1==arguments.length)return fm.liveswitch.MathAssistant.max(0,fm.liveswitch.MathAssistant.min(255,fm.liveswitch.MathAssistant.round(value)));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createBlack=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,0,0,0,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createBlue=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,0,0,255,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createCustom=function(){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),6==arguments.length){var width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),red=fm.liveswitch.Global.toInt(arguments[2]),green=fm.liveswitch.Global.toInt(arguments[3]),blue=fm.liveswitch.Global.toInt(arguments[4]),formatName=arguments[5];return fm.liveswitch.VideoBuffer.createCustom(width,height,red,green,blue,formatName,null)}if(7==arguments.length){width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),red=fm.liveswitch.Global.toInt(arguments[2]),green=fm.liveswitch.Global.toInt(arguments[3]),blue=fm.liveswitch.Global.toInt(arguments[4]),formatName=arguments[5];var buffer=arguments[6],num3=void 0,num4=void 0,count=fm.liveswitch.VideoBuffer.getMinimumBufferLength(width,height,formatName);if(fm.liveswitch.Global.equals(count,-1))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Could not create custom video buffer. Format '{0}' is not supported.",formatName));if(fm.liveswitch.Global.equals(buffer,null)&&(buffer=fm.liveswitch.DataBuffer.allocate(count)),buffer.getLength()<count)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Buffer too small. Minimum buffer length is {0} but buffer length is {1}.",fm.liveswitch.NumberExtensions.toString(count),fm.liveswitch.NumberExtensions.toString(buffer.getLength())));var flag=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getBgrName(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag2=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getRgbName(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag3=flag||flag2,flag4=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getBgraName(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag5=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getRgbaName(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag6=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getAbgrName(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag7=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getArgbName(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag8=flag4||flag5||flag6||flag7,flag9=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getI420Name(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag10=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getYv12Name(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag11=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getNv12Name(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag12=fm.liveswitch.StringExtensions.isEqual(fm.liveswitch.VideoFormat.getNv21Name(),formatName,fm.liveswitch.StringComparison.OrdinalIgnoreCase),flag13=flag9||flag10||flag11||flag12,num2=width*height;if(flag3)if(fm.liveswitch.Global.equals(red,green)&&fm.liveswitch.Global.equals(red,blue))buffer.set(fm.liveswitch.BitAssistant.castByte(red));else if(num3=0,flag)for(num4=0;num4<num2;num4++)buffer.write8(blue,num3++),buffer.write8(green,num3++),buffer.write8(red,num3++);else for(num4=0;num4<num2;)buffer.write8(red,num3++),buffer.write8(green,num3++),buffer.write8(blue,num3++),num4++;else if(flag8){num3=0;var num5=255;if(flag4)for(num4=0;num4<num2;num4++)buffer.write8(blue,num3++),buffer.write8(green,num3++),buffer.write8(red,num3++),buffer.write8(num5,num3++);else if(flag5)for(num4=0;num4<num2;num4++)buffer.write8(red,num3++),buffer.write8(green,num3++),buffer.write8(blue,num3++),buffer.write8(num5,num3++);else if(flag6)for(num4=0;num4<num2;num4++)buffer.write8(num5,num3++),buffer.write8(blue,num3++),buffer.write8(green,num3++),buffer.write8(red,num3++);else if(flag7)for(num4=0;num4<num2;num4++)buffer.write8(num5,num3++),buffer.write8(red,num3++),buffer.write8(green,num3++),buffer.write8(blue,num3++)}else{if(!flag13)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Could not create custom video buffer. Format '{0}' is not recognized.",formatName));var num6=.299*red+.587*green+.110004*blue,num7=-.168736*red-.331264*green+.5*blue+128,num8=.5*red-.418688*green-.081312*blue+128,length_46=num2;if(buffer.set(fm.liveswitch.BitAssistant.castByte(num6),0,length_46),flag9||flag10){var num10=fm.liveswitch.MathAssistant.floor(num2/4),num11=fm.liveswitch.MathAssistant.floor(num2/4),offset=length_46,num13=length_46+num10;flag10&&(num13=length_46,offset=length_46+num11),buffer.set(fm.liveswitch.BitAssistant.castByte(num7),offset,num10),buffer.set(fm.liveswitch.BitAssistant.castByte(num8),num13,num11)}else{var num14=fm.liveswitch.MathAssistant.floor(num2/2),num15=length_46,num16=0,num17=1;for(flag12&&(num16=1,num17=0),num4=num15;num4<num15+num14;num4+=2)buffer.write8(num15+num16,num7),buffer.write8(num15+num17,num8)}}return new fm.liveswitch.VideoBuffer(width,height,buffer,new fm.liveswitch.VideoFormat(formatName))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createCyan=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,0,255,255,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createDarkBlue=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,0,0,128,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createDarkGreen=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,0,128,0,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createDarkRed=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,128,0,0,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createGray=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,128,128,128,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createGreen=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,0,255,0,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createMagenta=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,255,0,255,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createOlive=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,128,128,0,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createPurple=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,128,0,128,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createRed=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,255,0,0,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createTeal=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,0,128,128,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createWhite=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,255,255,255,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.createYellow=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length)return width=fm.liveswitch.Global.toInt(arguments[0]),height=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.VideoBuffer.createCustom(width,height,255,255,0,formatName);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.fromJson=function(videoBufferJson){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(videoBufferJson,(function(){return new fm.liveswitch.VideoBuffer}),(function(videoBuffer,name,valueJson){var _var0=name;do{if("width"==_var0){videoBuffer.setWidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("height"==_var0){videoBuffer.setHeight(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("strides"==_var0){videoBuffer.setStrides(fm.liveswitch.JsonSerializer.deserializeIntegerArray(valueJson));break}if("orientation"==_var0){videoBuffer.setOrientation(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("horizontalMirror"==_var0){videoBuffer.setHorizontallyMirrored(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("verticalMirror"==_var0){videoBuffer.setVerticallyMirrored(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("isMuted"==_var0){videoBuffer.setIsMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("dataBuffers"==_var0){videoBuffer.setDataBuffers(fm.liveswitch.DataBuffer.fromJsonArray(valueJson));break}if("format"==_var0){videoBuffer.setFormat(fm.liveswitch.VideoFormat.fromJson(valueJson));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.fromJsonArray=function(videoBuffersJson){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(videoBuffersJson,fm.liveswitch.VideoBuffer.fromJson.bind(fm.liveswitch.VideoBuffer));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.getMinimumBufferLength=function(width,height,formatName){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),3==arguments.length){var num=(width=fm.liveswitch.Global.toInt(arguments[0]))*(height=fm.liveswitch.Global.toInt(arguments[1]));return fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getBgrName())||fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getRgbName())?3*num:fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getBgraName())||fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getRgbaName())||fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getAbgrName())||fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getArgbName())?4*num:fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getNv12Name())||fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getNv21Name())||fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getI420Name())||fm.liveswitch.Global.equals(formatName,fm.liveswitch.VideoFormat.getYv12Name())?1.5*num:(fm.liveswitch.Log.error(fm.liveswitch.StringExtensions.format("Could not get minimum buffer length. Format '{0}' is not supported.",formatName)),-1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.toJson=function(videoBuffer){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(videoBuffer,(function(obj,jsonObject){jsonObject.width=fm.liveswitch.JsonSerializer.serializeInteger(videoBuffer.getWidth()),jsonObject.height=fm.liveswitch.JsonSerializer.serializeInteger(videoBuffer.getHeight()),jsonObject.strides=fm.liveswitch.JsonSerializer.serializeIntegerArray(videoBuffer.getStrides()),jsonObject.orientation=fm.liveswitch.JsonSerializer.serializeInteger(videoBuffer.getOrientation()),jsonObject.horizontalMirror=fm.liveswitch.JsonSerializer.serializeBoolean(videoBuffer.getHorizontallyMirrored()),jsonObject.verticalMirror=fm.liveswitch.JsonSerializer.serializeBoolean(videoBuffer.getVerticallyMirrored()),jsonObject.isMuted=fm.liveswitch.JsonSerializer.serializeBoolean(videoBuffer.getIsMuted()),jsonObject.dataBuffers=fm.liveswitch.DataBuffer.toJsonArray(videoBuffer.getDataBuffers()),jsonObject.format=fm.liveswitch.VideoFormat.toJson(videoBuffer.getFormat())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.toJsonArray=function(videoBuffers){if(fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(videoBuffers,fm.liveswitch.VideoBuffer.toJson.bind(fm.liveswitch.VideoBuffer));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.clone=function(){if(0==arguments.length){var buffer=_super.prototype.clone.call(this);return buffer.setStrides(this.getStrides()),buffer.setWidth(this.getWidth()),buffer.setHeight(this.getHeight()),buffer.setOrientation(this.getOrientation()),buffer.setHorizontallyMirrored(this.getHorizontallyMirrored()),buffer.setVerticallyMirrored(this.getVerticallyMirrored()),buffer.__isMuted=this.__isMuted,buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.convert=function(){if(1==arguments.length){var format=arguments[0];return this.convert(format,!1)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataBuffer]"))){format=arguments[0];var dataBuffer=arguments[1],numArray=void 0,numArray2=void 0,numArray3=void 0,numArray4=void 0,numArray5=void 0,numArray6=void 0,numArray7=void 0;if(!_super.prototype.getFormat.call(this).getIsRaw()||!format.getIsRaw())throw new fm.liveswitch.Exception("Cannot convert to or from encoded formats.");fm.liveswitch.Global.equals(dataBuffer,null)&&(dataBuffer=fm.liveswitch.DataBuffer.allocate(fm.liveswitch.VideoBuffer.calculateByteCount(format,this.getWidth(),this.getHeight())));var buffer=new fm.liveswitch.VideoBuffer(this.getWidth(),this.getHeight(),dataBuffer,format);if(_super.prototype.getFormat.call(this).getIsYuvType()){numArray=null,numArray2=null,numArray3=null;var _var0=new fm.liveswitch.Holder(numArray),_var1=new fm.liveswitch.Holder(numArray2),_var2=new fm.liveswitch.Holder(numArray3);if(this.readYuv(_var0,_var1,_var2),numArray=_var0.getValue(),numArray2=_var1.getValue(),numArray3=_var2.getValue(),format.getIsYuvType())return buffer.writeYuv(numArray,numArray2,numArray3),buffer;numArray4=null,numArray5=null,numArray6=null,numArray7=null;var _var3=new fm.liveswitch.Holder(numArray4),_var4=new fm.liveswitch.Holder(numArray5),_var5=new fm.liveswitch.Holder(numArray6),_var6=new fm.liveswitch.Holder(numArray7);return this.convertYuvToRgba(numArray,numArray2,numArray3,_var3,_var4,_var5,_var6),numArray4=_var3.getValue(),numArray5=_var4.getValue(),numArray6=_var5.getValue(),numArray7=_var6.getValue(),buffer.writeRgba(numArray4,numArray5,numArray6,numArray7),buffer}numArray4=null,numArray5=null,numArray6=null,numArray7=null;var _var7=new fm.liveswitch.Holder(numArray4),_var8=new fm.liveswitch.Holder(numArray5),_var9=new fm.liveswitch.Holder(numArray6),_var10=new fm.liveswitch.Holder(numArray7);if(this.readRgba(_var7,_var8,_var9,_var10),numArray4=_var7.getValue(),numArray5=_var8.getValue(),numArray6=_var9.getValue(),numArray7=_var10.getValue(),format.getIsYuvType()){numArray=null,numArray2=null,numArray3=null;var _var11=new fm.liveswitch.Holder(numArray),_var12=new fm.liveswitch.Holder(numArray2),_var13=new fm.liveswitch.Holder(numArray3);return this.convertRgbaToYuv(numArray4,numArray5,numArray6,numArray7,_var11,_var12,_var13),numArray=_var11.getValue(),numArray2=_var12.getValue(),numArray3=_var13.getValue(),buffer.writeYuv(numArray,numArray2,numArray3),buffer}return buffer.writeRgba(numArray4,numArray5,numArray6,numArray7),buffer}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isBoolean(arguments[1]))){format=arguments[0];var usePool=arguments[1];if(fm.liveswitch.Global.equals(format,null)||_super.prototype.getFormat.call(this).isEquivalent(format,!1))return this;dataBuffer=null;return usePool&&(dataBuffer=fm.liveswitch.VideoBuffer.fm_liveswitch_VideoBuffer___dataBufferPool.take(fm.liveswitch.VideoBuffer.calculateByteCount(format,this.getWidth(),this.getHeight()))),this.convert(format,dataBuffer)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.convertRgbaToYuv=function(rValues,gValues,bValues,aValues,yValues,uValues,vValues){if(7!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num=this.getWidth()*this.getHeight();yValues.setValue(new Array(num)),uValues.setValue(new Array(fm.liveswitch.MathAssistant.floor(num/4))),vValues.setValue(new Array(fm.liveswitch.MathAssistant.floor(num/4)));for(var index=0,num3=0,i=0;i<this.getHeight();i++)for(var j=0;j<this.getWidth();j++){var num6=rValues[index],num7=gValues[index],num8=bValues[index],num9=.299,num10=.587,num11=.114;if(yValues.getValue()[index]=fm.liveswitch.VideoBuffer.clamp(num9*num6+num10*num7+num11*num8),fm.liveswitch.Global.equals(j%2,0)&&fm.liveswitch.Global.equals(i%2,0)){var num12=rValues[index],num13=rValues[index+1],num14=rValues[index+this.getWidth()],num15=rValues[index+this.getWidth()+1],num16=gValues[index],num17=gValues[index+1],num18=gValues[index+this.getWidth()],num19=gValues[index+this.getWidth()+1],num20=bValues[index],num21=bValues[index+1],num22=bValues[index+this.getWidth()],num23=bValues[index+this.getWidth()+1],num24=-.5*num12*num9/(1-num11)-.5*num16*num10/(1-num11)+.5*num20+128,num25=-.5*num13*num9/(1-num11)-.5*num17*num10/(1-num11)+.5*num21+128,num26=-.5*num14*num9/(1-num11)-.5*num18*num10/(1-num11)+.5*num22+128,num27=-.5*num15*num9/(1-num11)-.5*num19*num10/(1-num11)+.5*num23+128,num28=.5*num12-.5*num16*num10/(1-num9)-.5*num20*num11/(1-num9)+128,num29=.5*num13-.5*num17*num10/(1-num9)-.5*num21*num11/(1-num9)+128,num30=.5*num14-.5*num18*num10/(1-num9)-.5*num22*num11/(1-num9)+128,num31=.5*num15-.5*num19*num10/(1-num9)-.5*num23*num11/(1-num9)+128;uValues.getValue()[num3]=fm.liveswitch.VideoBuffer.clamp((num24+num25+num26+num27)/4),vValues.getValue()[num3]=fm.liveswitch.VideoBuffer.clamp((num28+num29+num30+num31)/4),num3++}index++}},VideoBuffer.prototype.convertYuvToRgba=function(yValues,uValues,vValues,rValues,gValues,bValues,aValues){if(7!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num=this.getWidth()*this.getHeight();rValues.setValue(new Array(num)),gValues.setValue(new Array(num)),bValues.setValue(new Array(num)),aValues.setValue(new Array(num));for(var i=0;i<num;i++){var num3=yValues[i],num4=uValues[fm.liveswitch.MathAssistant.floor(i/4)],num5=vValues[fm.liveswitch.MathAssistant.floor(i/4)],num6=.299,num7=.587,num8=.114;rValues.getValue()[i]=fm.liveswitch.VideoBuffer.clamp(num3+2*(num5-128)*(1-num6)),gValues.getValue()[i]=fm.liveswitch.VideoBuffer.clamp(num3-2*(num4-128)*(1-num8)*num8/num7-2*(num5-128)*(1-num6)*num6/num7),bValues.getValue()[i]=fm.liveswitch.VideoBuffer.clamp(num3+2*(num4-128)*(1-num8)),aValues.getValue()[i]=255}},VideoBuffer.prototype.copyTransformationAttributes=function(sourceBuffer){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setOrientation(sourceBuffer.getOrientation()),this.setHorizontallyMirrored(sourceBuffer.getHorizontallyMirrored()),this.setVerticallyMirrored(sourceBuffer.getVerticallyMirrored())},VideoBuffer.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.VideoBuffer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getAValue=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgbaType()?_super.prototype.getDataBuffer.call(this).read8(this.getAValueOffset(index)):255;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getAValueOffset=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgba()||_super.prototype.getFormat.call(this).getIsBgra()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+3:_super.prototype.getFormat.call(this).getIsArgb()||_super.prototype.getFormat.call(this).getIsAbgr()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getBValue=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgbType()||_super.prototype.getFormat.call(this).getIsRgbaType()?_super.prototype.getDataBuffer.call(this).read8(this.getBValueOffset(index)):-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getBValueOffset=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgb()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*3+2:_super.prototype.getFormat.call(this).getIsBgr()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*3:_super.prototype.getFormat.call(this).getIsRgba()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+2:_super.prototype.getFormat.call(this).getIsBgra()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4:_super.prototype.getFormat.call(this).getIsArgb()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+3:_super.prototype.getFormat.call(this).getIsAbgr()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+1:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getDefaultStrides=function(width,format){if(2==arguments.length){if(width=fm.liveswitch.Global.toInt(arguments[0]),format.getIsRgbType())return[3*width];if(format.getIsRgbaType())return[4*width];if(format.getIsI420()||format.getIsYv12())return this.getIsPacked()?[width]:[width,fm.liveswitch.MathAssistant.floor(width/2),fm.liveswitch.MathAssistant.floor(width/2)];if(format.getIsNv12()||format.getIsNv21())return this.getIsPacked()?[width]:[width,width];if(!(fm.liveswitch.Global.equals(format.getName(),fm.liveswitch.VideoFormat.getVp8Name())||fm.liveswitch.Global.equals(format.getName(),fm.liveswitch.VideoFormat.getVp9Name())||fm.liveswitch.Global.equals(format.getName(),fm.liveswitch.VideoFormat.getH264Name())||fm.liveswitch.Global.equals(format.getName(),fm.liveswitch.VideoFormat.getH265Name())||fm.liveswitch.Global.equals(format.getName(),fm.liveswitch.MediaFormat.getRedName())||fm.liveswitch.Global.equals(format.getName(),fm.liveswitch.MediaFormat.getUlpFecName())))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.concat("Unsupported video format '",format.getName(),"'."));return new Array(1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getGValue=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgbType()||_super.prototype.getFormat.call(this).getIsRgbaType()?_super.prototype.getDataBuffer.call(this).read8(this.getGValueOffset(index)):-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getGValueOffset=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgb()||_super.prototype.getFormat.call(this).getIsBgr()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*3+1:_super.prototype.getFormat.call(this).getIsRgba()||_super.prototype.getFormat.call(this).getIsBgra()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+1:_super.prototype.getFormat.call(this).getIsArgb()||_super.prototype.getFormat.call(this).getIsAbgr()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+2:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getHeight=function(){if(0==arguments.length)return this.__height;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getHorizontallyMirrored=function(){if(0==arguments.length)return this._horizontallyMirrored;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getInversionRequired=function(){if(0==arguments.length)return fm.liveswitch.Global.xor(this.getVerticallyMirrored(),this.getHorizontallyMirrored());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsAbgr=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsAbgr()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsArgb=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsArgb()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsBgr=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsBgr()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsBgra=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsBgra()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsH264=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsH264()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsH265=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsH265()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsI420=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsI420()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsMuted=function(){if(0==arguments.length)return this.__isMuted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsNv12=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsNv12()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsNv21=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsNv21()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsPacked=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(_super.prototype.getDataBuffers.call(this).length,1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsPlanar=function(){if(0==arguments.length)return _super.prototype.getDataBuffers.call(this).length>1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsRaw=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsRaw()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsRgb=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsRgb()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsRgba=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsRgba()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsRgbaType=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsRgbaType()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsRgbType=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsRgbType()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsVp8=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsVp8()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsVp9=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsVp9()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsYuvType=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsYuvType()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getIsYv12=function(){if(0==arguments.length){var format=_super.prototype.getFormat.call(this);return!fm.liveswitch.Global.equals(format,null)&&format.getIsYv12()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getOrientation=function(){if(0==arguments.length)return this.__orientation;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getRotationRequired=function(){if(0==arguments.length){var orientation_2=this.getOrientation();return this.getVerticallyMirrored()&&this.getHorizontallyMirrored()?orientation_2+=180:this.getVerticallyMirrored()?orientation_2=360-orientation_2:this.getHorizontallyMirrored()&&(fm.liveswitch.Global.equals(this.getOrientation(),0)||fm.liveswitch.Global.equals(this.getOrientation(),180))&&(orientation_2+=180),orientation_2%360}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getRValue=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgbType()||_super.prototype.getFormat.call(this).getIsRgbaType()?_super.prototype.getDataBuffer.call(this).read8(this.getRValueOffset(index)):-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getRValueOffset=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsRgb()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*3:_super.prototype.getFormat.call(this).getIsBgr()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*3+2:_super.prototype.getFormat.call(this).getIsRgba()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4:_super.prototype.getFormat.call(this).getIsBgra()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+2:_super.prototype.getFormat.call(this).getIsArgb()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+1:_super.prototype.getFormat.call(this).getIsAbgr()?fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth()*4+3:-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getStride=function(){if(0==arguments.length){var strides=this.getStrides();return fm.liveswitch.Global.equals(strides,null)?0:strides[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getStrides=function(){if(0==arguments.length)return this._strides;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getTransformRequired=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getRotationRequired(),0)||this.getInversionRequired();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getUValue=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsYuvType()?this.getIsPacked()?_super.prototype.getDataBuffers.call(this)[0].read8(this.getUValueOffset(index)):this.getIsYv12()?_super.prototype.getDataBuffers.call(this)[2].read8(this.getUValueOffset(index)):_super.prototype.getDataBuffers.call(this)[1].read8(this.getUValueOffset(index)):-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getUValueOffset=function(index){if(1==arguments.length){index=fm.liveswitch.Global.toInt(arguments[0]);var num2=void 0,num3=void 0,num4=void 0;if(this.getIsPacked()){if(this.getIsI420()||this.getIsYv12()){var num=fm.liveswitch.MathAssistant.floor(this.getStride()/2);return num2=fm.liveswitch.MathAssistant.floor(this.getWidth()/2),num3=fm.liveswitch.MathAssistant.floor(index/num2)*num+index%num2,this.getIsI420()?this.getHeight()*this.getStride()+num3:fm.liveswitch.MathAssistant.floor(this.getHeight()*this.getStride()*5/4)+num3}return num4=2*index,num3=fm.liveswitch.MathAssistant.floor(num4/this.getWidth())*this.getStride()+num4%this.getWidth(),this.getIsNv12()?this.getHeight()*this.getStride()+num3:this.getHeight()*this.getStride()+num3+1}return this.getIsI420()||this.getIsYv12()?(num2=fm.liveswitch.MathAssistant.floor(this.getWidth()/2),this.getIsI420()?fm.liveswitch.MathAssistant.floor(index/num2)*this.getStrides()[1]+index%num2:fm.liveswitch.MathAssistant.floor(index/num2)*this.getStrides()[2]+index%num2):(num4=2*index,num3=fm.liveswitch.MathAssistant.floor(num4/this.getWidth())*this.getStrides()[1]+num4%this.getWidth(),this.getIsNv12()?num3:num3+1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getVerticallyMirrored=function(){if(0==arguments.length)return this._verticallyMirrored;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getVValue=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsYuvType()?this.getIsPacked()?_super.prototype.getDataBuffers.call(this)[0].read8(this.getVValueOffset(index)):this.getIsI420()?_super.prototype.getDataBuffers.call(this)[2].read8(this.getVValueOffset(index)):_super.prototype.getDataBuffers.call(this)[1].read8(this.getVValueOffset(index)):-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getVValueOffset=function(index){if(1==arguments.length){index=fm.liveswitch.Global.toInt(arguments[0]);var num2=void 0,num3=void 0,num4=void 0;if(this.getIsPacked()){if(this.getIsI420()||this.getIsYv12()){var num=fm.liveswitch.MathAssistant.floor(this.getStride()/2);return num2=fm.liveswitch.MathAssistant.floor(this.getWidth()/2),num3=fm.liveswitch.MathAssistant.floor(index/num2)*num+index%num2,this.getIsI420()?fm.liveswitch.MathAssistant.floor(this.getHeight()*this.getStride()*5/4)+num3:this.getHeight()*this.getStride()+num3}return num4=2*index,num3=fm.liveswitch.MathAssistant.floor(num4/this.getWidth())*this.getStride()+num4%this.getWidth(),this.getIsNv12()?this.getHeight()*this.getStride()+num3+1:this.getHeight()*this.getStride()+num3}return this.getIsI420()||this.getIsYv12()?(num2=fm.liveswitch.MathAssistant.floor(this.getWidth()/2),this.getIsI420()?fm.liveswitch.MathAssistant.floor(index/num2)*this.getStrides()[2]+index%num2:fm.liveswitch.MathAssistant.floor(index/num2)*this.getStrides()[1]+index%num2):(num4=2*index,num3=fm.liveswitch.MathAssistant.floor(num4/this.getWidth())*this.getStrides()[1]+num4%this.getWidth(),this.getIsNv12()?num3+1:num3)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getWidth=function(){if(0==arguments.length)return this.__width;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getYValue=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),_super.prototype.getFormat.call(this).getIsYuvType()?_super.prototype.getDataBuffer.call(this).read8(this.getYValueOffset(index)):-1;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.getYValueOffset=function(index){if(1==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.MathAssistant.floor(index/this.getWidth())*this.getStride()+index%this.getWidth();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.mute=function(){if(0==arguments.length){if(!this.__isMuted){if(_super.prototype.getFormat.call(this).getIsRgbType())_super.prototype.getDataBuffer.call(this).set(0);else{var dataBuffer=void 0,num3=void 0;if(_super.prototype.getFormat.call(this).getIsRgbaType()){dataBuffer=_super.prototype.getDataBuffer.call(this);var num=1,num2=0;for((_super.prototype.getFormat.call(this).getIsBgra()||_super.prototype.getFormat.call(this).getIsRgba())&&(num=0,num2=3),num3=0;num3<dataBuffer.getLength();num3+=4)dataBuffer.set(0,num3+num,3),dataBuffer.set(fm.liveswitch.BitAssistant.castByte(255),num3+num2,1)}else{if(!_super.prototype.getFormat.call(this).getIsYuvType())return!1;var dataBuffers=_super.prototype.getDataBuffers.call(this);if(this.getIsPacked()){var length_47=this.getWidth()*this.getHeight();(dataBuffer=dataBuffers[0]).set(0,0,length_47),dataBuffer.set(fm.liveswitch.BitAssistant.castByte(128),length_47)}else if(this.getIsPlanar())for(dataBuffers[0].set(0),num3=1;num3<dataBuffers.length;num3++)dataBuffers[num3].set(fm.liveswitch.BitAssistant.castByte(128))}}this.__isMuted=!0}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.readRgba=function(rValues,gValues,bValues,aValues){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num=this.getWidth()*this.getHeight();rValues.setValue(new Array(num)),gValues.setValue(new Array(num)),bValues.setValue(new Array(num)),aValues.setValue(new Array(num));for(var i=0;i<num;i++)rValues.getValue()[i]=this.getRValue(i),gValues.getValue()[i]=this.getGValue(i),bValues.getValue()[i]=this.getBValue(i),aValues.getValue()[i]=this.getAValue(i)},VideoBuffer.prototype.readYuv=function(yValues,uValues,vValues){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num2=void 0,num=this.getWidth()*this.getHeight();for(yValues.setValue(new Array(num)),uValues.setValue(new Array(fm.liveswitch.MathAssistant.floor(num/4))),vValues.setValue(new Array(fm.liveswitch.MathAssistant.floor(num/4))),num2=0;num2<num;num2++)yValues.getValue()[num2]=this.getYValue(num2);for(num2=0;num2<fm.liveswitch.MathAssistant.floor(num/4);num2++)uValues.getValue()[num2]=this.getUValue(num2),vValues.getValue()[num2]=this.getVValue(num2)},VideoBuffer.prototype.resetTransformationAttributes=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setOrientation(0),this.setHorizontallyMirrored(!1),this.setVerticallyMirrored(!1)},VideoBuffer.prototype.setAValue=function(aValue,index){if(2==arguments.length)return aValue=fm.liveswitch.Global.toInt(arguments[0]),index=fm.liveswitch.Global.toInt(arguments[1]),_super.prototype.getFormat.call(this).getIsRgbaType()&&_super.prototype.getDataBuffer.call(this).write8(aValue,this.getAValueOffset(index));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.setBValue=function(bValue,index){if(2==arguments.length)return bValue=fm.liveswitch.Global.toInt(arguments[0]),index=fm.liveswitch.Global.toInt(arguments[1]),(_super.prototype.getFormat.call(this).getIsRgbType()||_super.prototype.getFormat.call(this).getIsRgbaType())&&_super.prototype.getDataBuffer.call(this).write8(bValue,this.getBValueOffset(index));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.setGValue=function(gValue,index){if(2==arguments.length)return gValue=fm.liveswitch.Global.toInt(arguments[0]),index=fm.liveswitch.Global.toInt(arguments[1]),(_super.prototype.getFormat.call(this).getIsRgbType()||_super.prototype.getFormat.call(this).getIsRgbaType())&&_super.prototype.getDataBuffer.call(this).write8(gValue,this.getGValueOffset(index));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.setHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),!fm.liveswitch.Global.equals(value,-1)&&value%2>0&&value--,this.__height=fm.liveswitch.Global.toInt(value)},VideoBuffer.prototype.setHorizontallyMirrored=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._horizontallyMirrored=value},VideoBuffer.prototype.setIsMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__isMuted=value},VideoBuffer.prototype.setOrientation=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(value=fm.liveswitch.Global.toInt(arguments[0]),!(fm.liveswitch.Global.equals(value,0)||fm.liveswitch.Global.equals(value,90)||fm.liveswitch.Global.equals(value,180)||fm.liveswitch.Global.equals(value,270)))throw new fm.liveswitch.Exception("Video orientation can only be 0, 90, 180 or 270.");this.__orientation=fm.liveswitch.Global.toInt(value)},VideoBuffer.prototype.setRValue=function(rValue,index){if(2==arguments.length)return rValue=fm.liveswitch.Global.toInt(arguments[0]),index=fm.liveswitch.Global.toInt(arguments[1]),(_super.prototype.getFormat.call(this).getIsRgbType()||_super.prototype.getFormat.call(this).getIsRgbaType())&&_super.prototype.getDataBuffer.call(this).write8(rValue,this.getRValueOffset(index));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.setStride=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.setStrides([value])},VideoBuffer.prototype.setStrides=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._strides=value},VideoBuffer.prototype.setUValue=function(uValue,index){if(2==arguments.length)return uValue=fm.liveswitch.Global.toInt(arguments[0]),index=fm.liveswitch.Global.toInt(arguments[1]),!!_super.prototype.getFormat.call(this).getIsYuvType()&&(this.getIsPacked()?_super.prototype.getDataBuffers.call(this)[0].write8(uValue,this.getUValueOffset(index)):this.getIsYv12()?_super.prototype.getDataBuffers.call(this)[2].write8(uValue,this.getUValueOffset(index)):_super.prototype.getDataBuffers.call(this)[1].write8(uValue,this.getUValueOffset(index)));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.setVerticallyMirrored=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._verticallyMirrored=value},VideoBuffer.prototype.setVValue=function(vValue,index){if(2==arguments.length)return vValue=fm.liveswitch.Global.toInt(arguments[0]),index=fm.liveswitch.Global.toInt(arguments[1]),!!_super.prototype.getFormat.call(this).getIsYuvType()&&(this.getIsPacked()?_super.prototype.getDataBuffers.call(this)[0].write8(vValue,this.getVValueOffset(index)):this.getIsI420()?_super.prototype.getDataBuffers.call(this)[2].write8(vValue,this.getVValueOffset(index)):_super.prototype.getDataBuffers.call(this)[1].write8(vValue,this.getVValueOffset(index)));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.setWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),!fm.liveswitch.Global.equals(value,-1)&&value%2>0&&value--,this.__width=fm.liveswitch.Global.toInt(value)},VideoBuffer.prototype.setYValue=function(yValue,index){if(2==arguments.length)return yValue=fm.liveswitch.Global.toInt(arguments[0]),index=fm.liveswitch.Global.toInt(arguments[1]),_super.prototype.getFormat.call(this).getIsYuvType()&&_super.prototype.getDataBuffer.call(this).write8(yValue,this.getYValueOffset(index));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.VideoBuffer.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.toPacked=function(){if(0==arguments.length)return this.toPacked(!1);if(1==arguments.length){var usePool=arguments[0],num=void 0,buffer3=void 0;if(!(this.getIsYuvType()&&_super.prototype.getDataBuffers.call(this).length>1))return this;var buffer=this.clone(),dataBuffers=buffer.getDataBuffers(),strides=buffer.getStrides();if(fm.liveswitch.VideoBuffer.canPackWithoutCopy(dataBuffers)){num=0;for(var _i=0,dataBuffers_1=dataBuffers;_i<dataBuffers_1.length;_i++){num+=(buffer2=dataBuffers_1[_i]).getLength()}(buffer3=dataBuffers[0]).setLength(num),buffer.setDataBuffer(buffer3)}else{num=strides[0]*buffer.getHeight()*3/2,buffer3=usePool?fm.liveswitch.VideoBuffer.fm_liveswitch_VideoBuffer___dataBufferPool.take(num):fm.liveswitch.DataBuffer.allocate(num);for(var offset=0,_a=0,dataBuffers_2=dataBuffers;_a<dataBuffers_2.length;_a++){var buffer2=dataBuffers_2[_a],_var0=new fm.liveswitch.Holder(offset);buffer3.write(buffer2,offset,_var0),offset=_var0.getValue()}buffer.setDataBuffer(buffer3)}return buffer.setStride(strides[0]),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.toPlanar=function(){if(0==arguments.length){var num2=void 0,num5=void 0,num8=void 0;if(!(this.getIsYuvType()&&_super.prototype.getDataBuffers.call(this).length<=1))return this;var buffer=this.clone(),dataBuffer=buffer.getDataBuffer(),stride=buffer.getStride();if(buffer.getIsI420()||buffer.getIsYv12()){var num9=void 0,num10=void 0;num2=stride;var num3=fm.liveswitch.MathAssistant.floor(stride/2),num4=fm.liveswitch.MathAssistant.floor(stride/2);num5=stride*buffer.getHeight();var num6=fm.liveswitch.MathAssistant.floor(num5/4),num7=fm.liveswitch.MathAssistant.floor(num5/4);return num8=0,buffer.getIsI420()?(num9=num5,num10=num5+num6,buffer.setDataBuffers([dataBuffer.subset(num8,num5),dataBuffer.subset(num9,num6),dataBuffer.subset(num10,num7)]),buffer.setStrides([num2,num3,num4])):(num10=num5,num9=num5+num7,buffer.setDataBuffers([dataBuffer.subset(num8,num5),dataBuffer.subset(num10,num7),dataBuffer.subset(num9,num6)]),buffer.setStrides([num2,num4,num3])),buffer}num2=stride;var num11=stride;num5=stride*buffer.getHeight();var length_48=fm.liveswitch.MathAssistant.floor(num5/2);num8=0;var offset=num5;return buffer.setDataBuffers([dataBuffer.subset(num8,num5),dataBuffer.subset(offset,length_48)]),buffer.setStrides([num2,num11]),buffer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoBuffer.prototype.writeRgba=function(rValues,gValues,bValues,aValues){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var num=this.getWidth()*this.getHeight(),i=0;i<num;i++)this.setRValue(rValues[i],i),this.setGValue(gValues[i],i),this.setBValue(bValues[i],i),this.setAValue(aValues[i],i)},VideoBuffer.prototype.writeYuv=function(yValues,uValues,vValues){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var num=void 0;for(num=0;num<yValues.length;num++)this.setYValue(yValues[num],num);for(num=0;num<uValues.length;num++)this.setUValue(uValues[num],num);for(num=0;num<vValues.length;num++)this.setVValue(vValues[num],num)},VideoBuffer.fmliveswitchVideoBufferInitialize=function(){fm.liveswitch.VideoBuffer.__fmliveswitchVideoBufferInitialized||fm.liveswitch.VideoBuffer.__fmliveswitchVideoBufferInitializing||(fm.liveswitch.VideoBuffer.__fmliveswitchVideoBufferInitializing=!0,fm.liveswitch.VideoBuffer.fm_liveswitch_VideoBuffer___dataBufferPool=fm.liveswitch.DataBufferPool.getTracer(new fm.liveswitch.Type("[fm.liveswitch.VideoBuffer]")),fm.liveswitch.VideoBuffer.__fmliveswitchVideoBufferInitialized=!0,fm.liveswitch.VideoBuffer.__fmliveswitchVideoBufferInitializing=!1)},VideoBuffer.__fmliveswitchVideoBufferInitialized=!1,VideoBuffer.__fmliveswitchVideoBufferInitializing=!1,VideoBuffer}(fm.liveswitch.MediaBuffer);liveswitch.VideoBuffer=VideoBuffer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RemoteCandidatePromise=function(_super){function RemoteCandidatePromise(remoteCandidate){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var remoteCandidate_1=__arguments[0];return(_this=_super.call(this)||this).setRemoteCandidate(remoteCandidate_1),_this}return __extends(RemoteCandidatePromise,_super),RemoteCandidatePromise.prototype.getTypeString=function(){return"[fm.liveswitch.RemoteCandidatePromise],"+_super.prototype.getTypeString.call(this)},RemoteCandidatePromise.prototype.getRemoteCandidate=function(){if(0==arguments.length)return this._remoteCandidate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteCandidatePromise.prototype.setRemoteCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteCandidate=value},RemoteCandidatePromise}(fm.liveswitch.Promise);liveswitch.RemoteCandidatePromise=RemoteCandidatePromise}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RemoteMediaCollection=function(_super){function RemoteMediaCollection(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).__lookup={},_this.__lookupLock=new Object,_this}return __extends(RemoteMediaCollection,_super),RemoteMediaCollection.prototype.getTypeString=function(){return"[fm.liveswitch.RemoteMediaCollection],"+_super.prototype.getTypeString.call(this)},RemoteMediaCollection.prototype.addSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.addSuccess.call(this,value),this.__lookup[value.getId()]=value},RemoteMediaCollection.prototype.arrayFromList=function(list){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(list);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteMediaCollection.prototype.createCollection=function(){if(0==arguments.length)return new fm.liveswitch.RemoteMediaCollection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteMediaCollection.prototype.getById=function(idValue){if(1==arguments.length){var media=null,_var0=new fm.liveswitch.Holder(media),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__lookup,idValue,_var0);return media=_var0.getValue(),_var1?media:null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteMediaCollection.prototype.removeSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.removeSuccess.call(this,value),fm.liveswitch.HashExtensions.remove(this.__lookup,value.getId())},RemoteMediaCollection}(fm.liveswitch.Collection);liveswitch.RemoteMediaCollection=RemoteMediaCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaCollection=function(_super){function MediaCollection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(MediaCollection,_super),MediaCollection.prototype.getTypeString=function(){return"[fm.liveswitch.MediaCollection],"+_super.prototype.getTypeString.call(this)},MediaCollection}(fm.liveswitch.RemoteMediaCollection);liveswitch.MediaCollection=MediaCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NackPolicyWrapper=function(){function NackPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_56=__arguments[0];this._value=value_56}return NackPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.NackPolicyWrapper]"},NackPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.NackPolicy.Disabled?"Disabled":this._value==fm.liveswitch.NackPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NackPolicyWrapper}();liveswitch.NackPolicyWrapper=NackPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(opus){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.opus.Format.getDefaultConfig();var config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();var clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getOpusName(),clockRate,channelCount)||this}else if(2==__arguments.length){clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getOpusName(),clockRate,channelCount)||this}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getOpusName(),clockRate,channelCount)||this}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.opus.Format],"+_super.prototype.getTypeString.call(this)},Format.getDefaultChannelCount=function(){if(0==arguments.length)return 2;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.getDefaultClockRate=function(){if(0==arguments.length)return 48e3;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.getDefaultConfig=function(){if(0==arguments.length)return new fm.liveswitch.AudioConfig(fm.liveswitch.opus.Format.getDefaultClockRate(),fm.liveswitch.opus.Format.getDefaultChannelCount());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.opus.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMaxBitrate=function(){if(0==arguments.length)return 510;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMinBitrate=function(){if(0==arguments.length)return 6;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.AudioFormat);opus.Format=Format}(liveswitch.opus||(liveswitch.opus={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(pcma){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.g711.Format.getDefaultConfig();var config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();var clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getPcmaName(),clockRate,channelCount)||this,_super.prototype.setStaticPayloadType.call(_this,8)}else if(2==__arguments.length){clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getPcmaName(),clockRate,channelCount)||this,_super.prototype.setStaticPayloadType.call(_this,8)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getPcmaName(),clockRate,channelCount)||this,_super.prototype.setStaticPayloadType.call(_this,8)}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.pcma.Format],"+_super.prototype.getTypeString.call(this)},Format.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.pcma.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.g711.Format);pcma.Format=Format}(liveswitch.pcma||(liveswitch.pcma={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(pcmu){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(1))[0]=fm.liveswitch.g711.Format.getDefaultConfig();var config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();var clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getPcmuName(),clockRate,channelCount)||this,_super.prototype.setStaticPayloadType.call(_this,0)}else if(2==__arguments.length){clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getPcmuName(),clockRate,channelCount)||this,_super.prototype.setStaticPayloadType.call(_this,0)}else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");config=__arguments[0];(__arguments=new Array(2))[0]=config.getClockRate(),__arguments[1]=config.getChannelCount();clockRate=__arguments[0],channelCount=__arguments[1];_this=_super.call(this,fm.liveswitch.AudioFormat.getPcmuName(),clockRate,channelCount)||this,_super.prototype.setStaticPayloadType.call(_this,0)}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.pcmu.Format],"+_super.prototype.getTypeString.call(this)},Format.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.pcmu.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.g711.Format);pcmu.Format=Format}(liveswitch.pcmu||(liveswitch.pcmu={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RedFecPolicyWrapper=function(){function RedFecPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_57=__arguments[0];this._value=value_57}return RedFecPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.RedFecPolicyWrapper]"},RedFecPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.RedFecPolicy.Disabled?"Disabled":this._value==fm.liveswitch.RedFecPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RedFecPolicyWrapper}();liveswitch.RedFecPolicyWrapper=RedFecPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RembPolicyWrapper=function(){function RembPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_58=__arguments[0];this._value=value_58}return RembPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.RembPolicyWrapper]"},RembPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.RembPolicy.Disabled?"Disabled":this._value==fm.liveswitch.RembPolicy.Negotiated?"Negotiated":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RembPolicyWrapper}();liveswitch.RembPolicyWrapper=RembPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var RtpPacketHeader=function(){function RtpPacketHeader(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchRtpPacketHeaderInit(),this.setVersion(2),this.setPayloadType(-1),this.setSequenceNumber(-1),this.setTimestamp(-1),this.setSynchronizationSource(-1)}return RtpPacketHeader.prototype.getTypeString=function(){return"[fm.liveswitch.RtpPacketHeader]"},RtpPacketHeader.prototype.fmliveswitchRtpPacketHeaderInit=function(){this._contributingSourceCount=0,this._extension=!1,this._marker=!1,this._padding=!1,this._paddingLength=0,this._payloadType=0,this._sequenceNumber=0,this._synchronizationSource=0,this._timestamp=0,this._version=0},RtpPacketHeader.getFixedHeaderLength=function(){if(0==arguments.length)return 12;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.calculateHeaderLength=function(){if(0==arguments.length){var num=fm.liveswitch.RtpPacketHeader.getFixedHeaderLength()+4*this.getContributingSourceCount();return this.getExtension()&&(num+=4*this.getHeaderExtension().getLength()+4),num}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.clone=function(){if(0==arguments.length){var header=new fm.liveswitch.RtpPacketHeader;return header.setVersion(this.getVersion()),header.setMarker(this.getMarker()),header.setPadding(this.getPadding()),header.setExtension(this.getExtension()),header.setHeaderExtension(this.getHeaderExtension()),header.setContributingSourceCount(this.getContributingSourceCount()),header.setPayloadType(this.getPayloadType()),header.setSequenceNumber(this.getSequenceNumber()),header.setTimestamp(this.getTimestamp()),header.setSynchronizationSource(this.getSynchronizationSource()),header.setContributingSources(this.getContributingSources()),header}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getContributingSourceCount=function(){if(0==arguments.length)return this._contributingSourceCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getContributingSources=function(){if(0==arguments.length)return this._contributingSources;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getExtension=function(){if(0==arguments.length)return this._extension;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getHeaderExtension=function(){if(0==arguments.length)return this.__headerExtension;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getMarker=function(){if(0==arguments.length)return this._marker;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getPadding=function(){if(0==arguments.length)return this._padding;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getPaddingLength=function(){if(0==arguments.length)return this._paddingLength;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getPayloadType=function(){if(0==arguments.length)return this._payloadType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getSequenceNumber=function(){if(0==arguments.length)return this._sequenceNumber;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getSynchronizationSource=function(){if(0==arguments.length)return this._synchronizationSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getTimestamp=function(){if(0==arguments.length)return this._timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.getVersion=function(){if(0==arguments.length)return this._version;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RtpPacketHeader.prototype.setContributingSourceCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._contributingSourceCount=fm.liveswitch.Global.toInt(value)},RtpPacketHeader.prototype.setContributingSources=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._contributingSources=value},RtpPacketHeader.prototype.setExtension=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._extension=value},RtpPacketHeader.prototype.setHeaderExtension=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)?(this.setExtension(!1),this.__headerExtension=value):(this.__headerExtension=value,this.setExtension(!0))},RtpPacketHeader.prototype.setMarker=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._marker=value},RtpPacketHeader.prototype.setPadding=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._padding=value},RtpPacketHeader.prototype.setPaddingLength=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._paddingLength=fm.liveswitch.Global.toInt(value)},RtpPacketHeader.prototype.setPayloadType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._payloadType=fm.liveswitch.Global.toInt(value)},RtpPacketHeader.prototype.setSequenceNumber=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sequenceNumber=fm.liveswitch.Global.toInt(value)},RtpPacketHeader.prototype.setSynchronizationSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._synchronizationSource=fm.liveswitch.Global.toInt(value)},RtpPacketHeader.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timestamp=fm.liveswitch.Global.toInt(value)},RtpPacketHeader.prototype.setVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._version=fm.liveswitch.Global.toInt(value)},RtpPacketHeader.prototype.writeTo=function(buffer,offset){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(offset=fm.liveswitch.Global.toInt(arguments[1]),buffer.write2(this.getVersion(),offset,0),buffer.write1(this.getPadding(),offset,2),buffer.write1(this.getExtension(),offset,3),buffer.write4(this.getContributingSourceCount(),offset,4),buffer.write1(this.getMarker(),offset+1,0),buffer.write7(this.getPayloadType(),offset+1,1),buffer.write16(this.getSequenceNumber(),offset+2),buffer.write32(this.getTimestamp(),offset+4),buffer.write32(this.getSynchronizationSource(),offset+8),this.getContributingSourceCount()>0){if(fm.liveswitch.Global.equals(this.getContributingSources(),null)||!fm.liveswitch.Global.equals(this.getContributingSourceCount(),this.getContributingSources().length))throw new fm.liveswitch.Exception("Contributing sources count has a non-zero value but the contributing sources array is null or contains an invalid count.");for(var i=0;i<this.getContributingSourceCount();i++)buffer.write32(this.getContributingSources()[i],offset+12+4*i)}if(this.getExtension()){var num2=offset+fm.liveswitch.RtpPacketHeader.getFixedHeaderLength()+4*this.getContributingSourceCount();buffer.getData()[buffer.getIndex()+num2]=this.getHeaderExtension().getId()[0],buffer.getData()[buffer.getIndex()+num2+1]=this.getHeaderExtension().getId()[1],buffer.write16(this.getHeaderExtension().getLength(),num2+2),this.getHeaderExtension().fillBuffer(buffer,num2+4)}},RtpPacketHeader}();liveswitch.RtpPacketHeader=RtpPacketHeader}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(rtp){var HeaderExtensionFormWrapper=function(){function HeaderExtensionFormWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_59=__arguments[0];this._value=value_59}return HeaderExtensionFormWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.rtp.HeaderExtensionFormWrapper]"},HeaderExtensionFormWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.rtp.HeaderExtensionForm.OneByte?"OneByte":this._value==fm.liveswitch.rtp.HeaderExtensionForm.TwoByte?"TwoByte":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HeaderExtensionFormWrapper}();rtp.HeaderExtensionFormWrapper=HeaderExtensionFormWrapper}(liveswitch.rtp||(liveswitch.rtp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(rtp){var RawHeaderExtension=function(){function RawHeaderExtension(idValue,payload){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var idValue_8=__arguments[0],payload_2=__arguments[1];this.fmliveswitchrtpRawHeaderExtensionInit(),this.setId(idValue_8),this.setPayload(payload_2),fm.liveswitch.Global.equals(idValue_8[0],16)?(this.setForm(fm.liveswitch.rtp.HeaderExtensionForm.TwoByte),this.setAppBits(idValue_8[1])):(this.setForm(fm.liveswitch.rtp.HeaderExtensionForm.OneByte),this.setAppBits(0))}return RawHeaderExtension.prototype.getTypeString=function(){return"[fm.liveswitch.rtp.RawHeaderExtension]"},RawHeaderExtension.prototype.fmliveswitchrtpRawHeaderExtensionInit=function(){this._appBits=0},RawHeaderExtension.prototype.fillBuffer=function(buffer,offset){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");offset=fm.liveswitch.Global.toInt(arguments[1]),buffer.writeBytes(this.getPayload(),offset)},RawHeaderExtension.prototype.getAppBits=function(){if(0==arguments.length)return this._appBits;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RawHeaderExtension.prototype.getForm=function(){if(0==arguments.length)return this._form;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RawHeaderExtension.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RawHeaderExtension.prototype.getLength=function(){if(0==arguments.length)return fm.liveswitch.MathAssistant.floor(this.getPayload().length/4);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RawHeaderExtension.prototype.getPayload=function(){if(0==arguments.length)return this._payload;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RawHeaderExtension.prototype.setAppBits=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._appBits=fm.liveswitch.Global.toInt(value)},RawHeaderExtension.prototype.setForm=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._form=value},RawHeaderExtension.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},RawHeaderExtension.prototype.setPayload=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._payload=value},RawHeaderExtension}();rtp.RawHeaderExtension=RawHeaderExtension}(liveswitch.rtp||(liveswitch.rtp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SdesPolicyWrapper=function(){function SdesPolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_60=__arguments[0];this._value=value_60}return SdesPolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.SdesPolicyWrapper]"},SdesPolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.SdesPolicy.Negotiated?"Negotiated":this._value==fm.liveswitch.SdesPolicy.Disabled?"Disabled":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SdesPolicyWrapper}();liveswitch.SdesPolicyWrapper=SdesPolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SignallingStateWrapper=function(){function SignallingStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_61=__arguments[0];this._value=value_61}return SignallingStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.SignallingStateWrapper]"},SignallingStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.SignallingState.New?"New":this._value==fm.liveswitch.SignallingState.HaveLocalOffer?"HaveLocalOffer":this._value==fm.liveswitch.SignallingState.HaveRemoteOffer?"HaveRemoteOffer":this._value==fm.liveswitch.SignallingState.Stable?"Stable":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SignallingStateWrapper}();liveswitch.SignallingStateWrapper=SignallingStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SinkOutput=function(){function SinkOutput(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var idValue=__arguments[0],name_38=__arguments[1];this.setId(idValue),this.setName(name_38)}}return SinkOutput.prototype.getTypeString=function(){return"[fm.liveswitch.SinkOutput]"},SinkOutput.fromJson=function(sinkOutputJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(sinkOutputJson,(function(){return new fm.liveswitch.SinkOutput}),(function(obj,key,valueJson){var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"id")?obj.setId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"name")&&obj.setName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput.fromJsonArray=function(sinkOutputsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(sinkOutputsJson,fm.liveswitch.SinkOutput.fromJson.bind(fm.liveswitch.SinkOutput));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput.toJson=function(sinkOutput){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(sinkOutput,(function(obj,jsonObject){fm.liveswitch.Global.equals(obj.getId(),null)||(jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(obj.getId())),fm.liveswitch.Global.equals(obj.getName(),null)||(jsonObject.name=fm.liveswitch.JsonSerializer.serializeString(obj.getName()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput.toJsonArray=function(sinkOutputs){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(sinkOutputs,fm.liveswitch.SinkOutput.toJson.bind(fm.liveswitch.SinkOutput));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},SinkOutput.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},SinkOutput.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.SinkOutput.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput.prototype.toString=function(){if(0==arguments.length)return this.getName();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SinkOutput}();liveswitch.SinkOutput=SinkOutput}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SourceInput=function(){function SourceInput(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length);else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var idValue=__arguments[0],name_39=__arguments[1];this.setId(idValue),this.setName(name_39)}}return SourceInput.prototype.getTypeString=function(){return"[fm.liveswitch.SourceInput]"},SourceInput.fromJson=function(sourceInputJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(sourceInputJson,(function(){return new fm.liveswitch.SourceInput}),(function(obj,key,valueJson){var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"id")?obj.setId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"name")&&obj.setName(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput.fromJsonArray=function(sourceInputsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(sourceInputsJson,fm.liveswitch.SourceInput.fromJson.bind(fm.liveswitch.SourceInput));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput.toJson=function(sourceInput){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(sourceInput,(function(obj,jsonObject){fm.liveswitch.Global.equals(obj.getId(),null)||(jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(obj.getId())),fm.liveswitch.Global.equals(obj.getName(),null)||(jsonObject.name=fm.liveswitch.JsonSerializer.serializeString(obj.getName()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput.toJsonArray=function(sourceInputs){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(sourceInputs,fm.liveswitch.SourceInput.toJson.bind(fm.liveswitch.SourceInput));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput.prototype.getName=function(){if(0==arguments.length)return this._name;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},SourceInput.prototype.setName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._name=value},SourceInput.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.SourceInput.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput.prototype.toString=function(){if(0==arguments.length)return this.getName();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SourceInput}();liveswitch.SourceInput=SourceInput}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var StreamCollection=function(_super){function StreamCollection(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(StreamCollection,_super),StreamCollection.prototype.getTypeString=function(){return"[fm.liveswitch.StreamCollection],"+_super.prototype.getTypeString.call(this)},StreamCollection.prototype.arrayFromList=function(list){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(list);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamCollection.prototype.createCollection=function(){if(0==arguments.length)return new fm.liveswitch.StreamCollection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamCollection.prototype.getByType=function(type){if(1==arguments.length){for(var _i=0,_a=_super.prototype.getValues.call(this);_i<_a.length;_i++){var stream=_a[_i];if(fm.liveswitch.Global.equals(stream.getType(),type))return stream}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamCollection.prototype.getManyByType=function(type){if(1==arguments.length){for(var list=new Array,_i=0,_a=_super.prototype.getValues.call(this);_i<_a.length;_i++){var stream=_a[_i];fm.liveswitch.Global.equals(stream.getType(),type)&&fm.liveswitch.ArrayExtensions.add(list,stream)}return list}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},StreamCollection}(fm.liveswitch.Collection);liveswitch.StreamCollection=StreamCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TransportTypeWrapper=function(){function TransportTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_62=__arguments[0];this._value=value_62}return TransportTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.TransportTypeWrapper]"},TransportTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.TransportType.Gatherer?"Gatherer":this._value==fm.liveswitch.TransportType.IceTransport?"IceTransport":this._value==fm.liveswitch.TransportType.DtlsTransport?"DtlsTransport":this._value==fm.liveswitch.TransportType.SctpTransport?"SctpTransport":this._value==fm.liveswitch.TransportType.ReliableDataTransport?"ReliableDataTransport":this._value==fm.liveswitch.TransportType.SrtpTransport?"SrtpTransport":this._value==fm.liveswitch.TransportType.Unset?"Unset":this._value==fm.liveswitch.TransportType.MediaTransport?"MediaTransport":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportTypeWrapper}();liveswitch.TransportTypeWrapper=TransportTypeWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TrickleIcePolicyWrapper=function(){function TrickleIcePolicyWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_63=__arguments[0];this._value=value_63}return TrickleIcePolicyWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.TrickleIcePolicyWrapper]"},TrickleIcePolicyWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.TrickleIcePolicy.NotSupported?"NotSupported":this._value==fm.liveswitch.TrickleIcePolicy.FullTrickle?"FullTrickle":this._value==fm.liveswitch.TrickleIcePolicy.HalfTrickle?"HalfTrickle":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TrickleIcePolicyWrapper}();liveswitch.TrickleIcePolicyWrapper=TrickleIcePolicyWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoUtility=function(){function VideoUtility(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return VideoUtility.prototype.getTypeString=function(){return"[fm.liveswitch.VideoUtility]"},VideoUtility.getBitrate=function(){if(3==arguments.length){var pixelCount=fm.liveswitch.Global.toInt(arguments[0]),num=640,num2=480,num3=num*num2,num4=num3*(frameRate=arguments[1])*(bitsPerPixel=arguments[2])/1e3,x=pixelCount/num3;return fm.liveswitch.MathAssistant.ceil(fm.liveswitch.MathAssistant.pow(x,fm.liveswitch.VideoUtility.getBitratePowerScale())*num4)}if(5==arguments.length){var preferredBitrate=fm.liveswitch.Global.toInt(arguments[0]),width=fm.liveswitch.Global.toInt(arguments[1]),height=fm.liveswitch.Global.toInt(arguments[2]),frameRate=arguments[3],bitsPerPixel=arguments[4];return width>0&&height>0&&frameRate>0&&bitsPerPixel>0?fm.liveswitch.VideoUtility.getBitrate(width*height,frameRate,bitsPerPixel):preferredBitrate}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoUtility.getBitratePowerScale=function(){if(0==arguments.length)return.75;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoUtility.getEncodingConfig=function(degradationPreference,multiplier,frameRate){if(3==arguments.length){var encodingConfig=new fm.liveswitch.VideoEncodingConfig;return fm.liveswitch.VideoUtility.updateEncodingConfig(encodingConfig,degradationPreference,multiplier,frameRate),encodingConfig}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoUtility.getPixelCount=function(bitrate,frameRate,bitsPerPixel){if(3==arguments.length){bitrate=fm.liveswitch.Global.toInt(arguments[0]);var num=640,num2=480,num3=num*num2,num4=num3*frameRate*bitsPerPixel/1e3;return fm.liveswitch.MathAssistant.round(fm.liveswitch.MathAssistant.pow(bitrate/num4,1/fm.liveswitch.VideoUtility.getBitratePowerScale())*num3)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoUtility.processDegradationPreference=function(degradationPreference,type){if(2==arguments.length)return fm.liveswitch.Global.equals(degradationPreference,fm.liveswitch.VideoDegradationPreference.Automatic)?fm.liveswitch.Global.equals(type,fm.liveswitch.VideoType.Camera)?fm.liveswitch.VideoDegradationPreference.Resolution:fm.liveswitch.Global.equals(type,fm.liveswitch.VideoType.Screen)?fm.liveswitch.VideoDegradationPreference.FrameRate:fm.liveswitch.VideoDegradationPreference.Balanced:degradationPreference;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoUtility.updateEncodingConfig=function(encodingConfig,degradationPreference,multiplier,frameRate){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(degradationPreference,fm.liveswitch.VideoDegradationPreference.Balanced)&&(multiplier=fm.liveswitch.MathAssistant.sqrt(multiplier)),frameRate>0&&(fm.liveswitch.Global.equals(degradationPreference,fm.liveswitch.VideoDegradationPreference.FrameRate)||fm.liveswitch.Global.equals(degradationPreference,fm.liveswitch.VideoDegradationPreference.Balanced)?encodingConfig.setFrameRate(frameRate*multiplier):encodingConfig.setFrameRate(frameRate)),fm.liveswitch.Global.equals(degradationPreference,fm.liveswitch.VideoDegradationPreference.Resolution)||fm.liveswitch.Global.equals(degradationPreference,fm.liveswitch.VideoDegradationPreference.Balanced)?encodingConfig.setScale(fm.liveswitch.MathAssistant.sqrt(multiplier)):encodingConfig.setScale(1)},VideoUtility}();liveswitch.VideoUtility=VideoUtility}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(vp8){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this,fm.liveswitch.VideoFormat.getVp8Name())||this;else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var clockRate=__arguments[0];_this=_super.call(this,fm.liveswitch.VideoFormat.getVp8Name(),clockRate)||this}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.vp8.Format],"+_super.prototype.getTypeString.call(this)},Format.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.vp8.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMaxBitrate=function(){if(0==arguments.length)return 1e5;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMinBitrate=function(){if(0==arguments.length)return 100;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.VideoFormat);vp8.Format=Format}(liveswitch.vp8||(liveswitch.vp8={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(vp9){var Format=function(_super){function Format(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this,fm.liveswitch.VideoFormat.getVp9Name())||this;else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var clockRate=__arguments[0];_this=_super.call(this,fm.liveswitch.VideoFormat.getVp9Name(),clockRate)||this}return _this}return __extends(Format,_super),Format.prototype.getTypeString=function(){return"[fm.liveswitch.vp9.Format],"+_super.prototype.getTypeString.call(this)},Format.prototype.createInstance=function(){if(0==arguments.length)return new fm.liveswitch.vp9.Format;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMaxBitrate=function(){if(0==arguments.length)return 1e5;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format.prototype.getMinBitrate=function(){if(0==arguments.length)return 100;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Format}(fm.liveswitch.VideoFormat);vp9.Format=Format}(liveswitch.vp9||(liveswitch.vp9={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Channel=function(_super){function Channel(sharedLock,connectionFactory,applicationId,userId,userAlias,deviceId,deviceAlias,clientId,clientTag,clientRoles,idValue,doSend){var _this=this;fm.liveswitch.Channel.fmliveswitchChannelInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(12!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var sharedLock_2=__arguments[0],connectionFactory_1=__arguments[1],applicationId_1=__arguments[2],userId_1=__arguments[3],userAlias_1=__arguments[4],deviceId_1=__arguments[5],deviceAlias_1=__arguments[6],clientId_1=__arguments[7],clientTag_1=__arguments[8],clientRoles_1=__arguments[9],idValue_9=__arguments[10],doSend_1=__arguments[11];return(_this=_super.call(this)||this).fmliveswitchChannelInit(),_this.__left=!1,_this.__deferredLayoutTimestamp=-1,_this.__messagesSent=new fm.liveswitch.AtomicLong,_this.__messagesReceived=new fm.liveswitch.AtomicLong,_this.__messageBytesSent=new fm.liveswitch.AtomicLong,_this.__messageBytesReceived=new fm.liveswitch.AtomicLong,_this.__lastVideoLayoutTimestamp=-1,_this.__lock=sharedLock_2,_this.__channelQueue=new fm.liveswitch.DispatchQueue(_this.processMessageSync.bind(_this)),_this.setApplicationId(applicationId_1),_this.setUserId(userId_1),_this.setUserAlias(userAlias_1),_this.setDeviceId(deviceId_1),_this.setDeviceAlias(deviceAlias_1),_this.setClientId(clientId_1),_this.setClientTag(clientTag_1),_this.setClientRoles(clientRoles_1),_this.setId(idValue_9),_this.__doSend=doSend_1,_this.__connectionFactory=connectionFactory_1,_this.__remoteClientInfos={},_this.__remoteUpstreamConnectionInfos={},_this.__peerConnectionOffers=new fm.liveswitch.ManagedConcurrentDictionary,_this.__invitations=new fm.liveswitch.ManagedConcurrentDictionary,_this.setConnections(new fm.liveswitch.ManagedConnectionCollection),_this}return __extends(Channel,_super),Channel.prototype.getTypeString=function(){return"[fm.liveswitch.Channel],"+_super.prototype.getTypeString.call(this)},Channel.prototype.fmliveswitchChannelInit=function(){var _this=this;this.__deferredLayoutTimestamp=0,this.__lastVideoLayoutTimestamp=0,this.__left=!1,this.__onClaimUpdate=[],this.__onClientMessage=[],this.__onDeviceMessage=[],this.__onKick=[],this.__onMcuVideoLayout=[],this.__onMessage=[],this.__onPeerConnectionOffer=[],this.__onRemoteClientJoin=[],this.__onRemoteClientLeave=[],this.__onRemoteClientUpdate=[],this.__onRemoteUpstreamConnectionClose=[],this.__onRemoteUpstreamConnectionOpen=[],this.__onRemoteUpstreamConnectionUpdate=[],this.__onUserMessage=[],this._onClaimUpdate=function(p0,p1){for(var _i=0,_a=_this.__onClaimUpdate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onClientMessage=function(p0,p1){for(var _i=0,_a=_this.__onClientMessage;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onDeviceMessage=function(p0,p1){for(var _i=0,_a=_this.__onDeviceMessage;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onKick=function(){for(var _i=0,_a=_this.__onKick;_i<_a.length;_i++){(0,_a[_i])()}},this._onMcuVideoLayout=function(p0){for(var _i=0,_a=_this.__onMcuVideoLayout;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onMessage=function(p0,p1){for(var _i=0,_a=_this.__onMessage;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onPeerConnectionOffer=function(p0){for(var _i=0,_a=_this.__onPeerConnectionOffer;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onRemoteClientJoin=function(p0){for(var _i=0,_a=_this.__onRemoteClientJoin;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onRemoteClientLeave=function(p0){for(var _i=0,_a=_this.__onRemoteClientLeave;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onRemoteClientUpdate=function(p0,p1){for(var _i=0,_a=_this.__onRemoteClientUpdate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteUpstreamConnectionClose=function(p0){for(var _i=0,_a=_this.__onRemoteUpstreamConnectionClose;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onRemoteUpstreamConnectionOpen=function(p0){for(var _i=0,_a=_this.__onRemoteUpstreamConnectionOpen;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onRemoteUpstreamConnectionUpdate=function(p0,p1){for(var _i=0,_a=_this.__onRemoteUpstreamConnectionUpdate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onUserMessage=function(p0,p1){for(var _i=0,_a=_this.__onUserMessage;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}}},Channel.prototype.addOnClaimUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onClaimUpdate,value)},Channel.prototype.addOnClientMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onClientMessage,value)},Channel.prototype.addOnDeviceMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onDeviceMessage,value)},Channel.prototype.addOnKick=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onKick,value)},Channel.prototype.addOnMcuVideoLayout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onMcuVideoLayout,value)},Channel.prototype.addOnMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onMessage,value)},Channel.prototype.addOnPeerConnectionOffer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onPeerConnectionOffer,value)},Channel.prototype.addOnRemoteClientJoin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteClientJoin,value)},Channel.prototype.addOnRemoteClientLeave=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteClientLeave,value)},Channel.prototype.addOnRemoteClientUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteClientUpdate,value)},Channel.prototype.addOnRemoteUpstreamConnectionClose=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteUpstreamConnectionClose,value)},Channel.prototype.addOnRemoteUpstreamConnectionOpen=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteUpstreamConnectionOpen,value)},Channel.prototype.addOnRemoteUpstreamConnectionUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteUpstreamConnectionUpdate,value)},Channel.prototype.addOnUserMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onUserMessage,value)},Channel.prototype.closeAll=function(){if(0==arguments.length){fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Closing all channel {0} connections.",this.getId()));for(var list=new Array,_i=0,_a=this.getConnections().getValues();_i<_a.length;_i++){var connection=_a[_i];fm.liveswitch.ArrayExtensions.add(list,connection.close())}return fm.liveswitch.PromiseBase.all(fm.liveswitch.ArrayExtensions.toArray(list))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.createMcuConnection=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))){var audioStream=arguments[0];return this.createMcuConnection(audioStream,null,null,null)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){audioStream=arguments[0];var dataStream=arguments[1];return this.createMcuConnection(audioStream,null,dataStream,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isString(arguments[2]))){audioStream=arguments[0],dataStream=arguments[1];var mediaId=arguments[2];return this.createMcuConnection(audioStream,null,dataStream,mediaId)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){audioStream=arguments[0],mediaId=arguments[1];return this.createMcuConnection(audioStream,null,null,mediaId)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))){audioStream=arguments[0];var videoStream=arguments[1];return this.createMcuConnection(audioStream,videoStream,null,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){audioStream=arguments[0],videoStream=arguments[1],dataStream=arguments[2];return this.createMcuConnection(audioStream,videoStream,dataStream,null)}if(4==arguments.length){audioStream=arguments[0],videoStream=arguments[1],dataStream=arguments[2],mediaId=arguments[3];if(this.__left)throw new fm.liveswitch.Exception("You have left this channel.");if(fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(dataStream,null))throw new fm.liveswitch.Exception("Cannot open a connection with no streams.");fm.liveswitch.Global.equals(dataStream,null)||dataStream.setGetRemoteConnectionInfo(this.getRemoteConnectionInfo.bind(this));var connection=this.__connectionFactory.createMcuConnection(this.__lock,this.getApplicationId(),this.getId(),this.getUserId(),this.getDeviceId(),this.getClientId(),this.send.bind(this),audioStream,videoStream,dataStream,mediaId);return this.getConnections().add(connection),connection.addOnStateChange(this.processConnectionStateChange.bind(this)),connection}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isString(arguments[2]))){audioStream=arguments[0],videoStream=arguments[1],mediaId=arguments[2];return this.createMcuConnection(audioStream,videoStream,null,mediaId)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataStream]"))){dataStream=arguments[0];return this.createMcuConnection(null,null,dataStream,null)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){dataStream=arguments[0],mediaId=arguments[1];return this.createMcuConnection(null,null,dataStream,mediaId)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))){videoStream=arguments[0];return this.createMcuConnection(null,videoStream,null,null)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){videoStream=arguments[0],dataStream=arguments[1];return this.createMcuConnection(null,videoStream,dataStream,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isString(arguments[2]))){videoStream=arguments[0],dataStream=arguments[1],mediaId=arguments[2];return this.createMcuConnection(null,videoStream,dataStream,mediaId)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){videoStream=arguments[0],mediaId=arguments[1];return this.createMcuConnection(null,videoStream,null,mediaId)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.createPeerConnection=function(){if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.PeerConnectionOffer]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))){var peerConnectionOffer=arguments[0],audioStream=arguments[1];return this.createPeerConnection(peerConnectionOffer,audioStream,null,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.PeerConnectionOffer]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){peerConnectionOffer=arguments[0],audioStream=arguments[1];var dataStream=arguments[2];return this.createPeerConnection(peerConnectionOffer,audioStream,null,dataStream)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.PeerConnectionOffer]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.VideoStream]"))){peerConnectionOffer=arguments[0],audioStream=arguments[1];var videoStream=arguments[2];return this.createPeerConnection(peerConnectionOffer,audioStream,videoStream,null)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.PeerConnectionOffer]"))){peerConnectionOffer=arguments[0],audioStream=arguments[1],videoStream=arguments[2],dataStream=arguments[3];if(this.__left)throw new fm.liveswitch.Exception("You have left this channel.");if(fm.liveswitch.Global.equals(peerConnectionOffer,null))throw new fm.liveswitch.Exception("Peer connection offer cannot be null.");if(fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(dataStream,null))throw new fm.liveswitch.Exception("Cannot open a connection with no streams.");if(!fm.liveswitch.Global.equals(audioStream,null)&&!peerConnectionOffer.getHasAudio())throw new fm.liveswitch.Exception("Cannot open a connection with an audio stream if the offer does not contain an audio description.");if(!fm.liveswitch.Global.equals(videoStream,null)&&!peerConnectionOffer.getHasVideo())throw new fm.liveswitch.Exception("Cannot open a connection with a video stream if the offer does not contain a video description.");if(!fm.liveswitch.Global.equals(dataStream,null)&&!peerConnectionOffer.getHasData())throw new fm.liveswitch.Exception("Cannot open a connection with a data stream if the offer does not contain a data description.");if(fm.liveswitch.Global.equals(audioStream,null)&&peerConnectionOffer.getHasAudio())throw new fm.liveswitch.Exception("An audio stream is required by the offer.");if(fm.liveswitch.Global.equals(videoStream,null)&&peerConnectionOffer.getHasVideo())throw new fm.liveswitch.Exception("A video stream is required by the offer.");if(fm.liveswitch.Global.equals(dataStream,null)&&peerConnectionOffer.getHasData())throw new fm.liveswitch.Exception("A data stream is required by the offer.");if(this.__peerConnectionOffers.tryRemove(peerConnectionOffer.getRemoteConnectionId())){var connection=this.__connectionFactory.createPeerConnection(this.__lock,this.getApplicationId(),this.getId(),this.getUserId(),this.getDeviceId(),this.getClientId(),this.send.bind(this),peerConnectionOffer,audioStream,videoStream,dataStream);this.getConnections().add(connection),connection.addOnStateChange(this.processConnectionStateChange.bind(this));for(var _i=0,_a=peerConnectionOffer.getEarlyCandidateMessages();_i<_a.length;_i++){var message=_a[_i];connection.processMessage(message)}return connection}return null}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.PeerConnectionOffer]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){peerConnectionOffer=arguments[0],dataStream=arguments[1];return this.createPeerConnection(peerConnectionOffer,null,null,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.PeerConnectionOffer]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))){peerConnectionOffer=arguments[0],videoStream=arguments[1];return this.createPeerConnection(peerConnectionOffer,null,videoStream,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.PeerConnectionOffer]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){peerConnectionOffer=arguments[0],videoStream=arguments[1],dataStream=arguments[2];return this.createPeerConnection(peerConnectionOffer,null,videoStream,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))){var remoteClientInfo=arguments[0];audioStream=arguments[1];return this.createPeerConnection(remoteClientInfo,audioStream,null,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){remoteClientInfo=arguments[0],audioStream=arguments[1],dataStream=arguments[2];return this.createPeerConnection(remoteClientInfo,audioStream,null,dataStream)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.VideoStream]"))){remoteClientInfo=arguments[0],audioStream=arguments[1],videoStream=arguments[2];return this.createPeerConnection(remoteClientInfo,audioStream,videoStream,null)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))){remoteClientInfo=arguments[0],audioStream=arguments[1],videoStream=arguments[2],dataStream=arguments[3];if(this.__left)throw new fm.liveswitch.Exception("You have left this channel.");if(fm.liveswitch.Global.equals(remoteClientInfo,null))throw new fm.liveswitch.Exception("Remote client information cannot be null.");if(fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(dataStream,null))throw new fm.liveswitch.Exception("Cannot open a connection with no streams.");connection=this.__connectionFactory.createPeerConnection(this.__lock,this.getApplicationId(),this.getId(),this.getUserId(),this.getDeviceId(),this.getClientId(),this.send.bind(this),remoteClientInfo,audioStream,videoStream,dataStream);return this.getConnections().add(connection),connection.addOnStateChange(this.processConnectionStateChange.bind(this)),connection}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){remoteClientInfo=arguments[0],dataStream=arguments[1];return this.createPeerConnection(remoteClientInfo,null,null,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))){remoteClientInfo=arguments[0],videoStream=arguments[1];return this.createPeerConnection(remoteClientInfo,null,videoStream,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){remoteClientInfo=arguments[0],videoStream=arguments[1],dataStream=arguments[2];return this.createPeerConnection(remoteClientInfo,null,videoStream,dataStream)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.createSfuDownstreamConnection=function(){if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))){var remoteConnectionInfo=arguments[0],audioStream=arguments[1];return this.createSfuDownstreamConnection(remoteConnectionInfo,audioStream,null,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){remoteConnectionInfo=arguments[0],audioStream=arguments[1];var dataStream=arguments[2];return this.createSfuDownstreamConnection(remoteConnectionInfo,audioStream,null,dataStream)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.VideoStream]"))){remoteConnectionInfo=arguments[0],audioStream=arguments[1];var videoStream=arguments[2];return this.createSfuDownstreamConnection(remoteConnectionInfo,audioStream,videoStream,null)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))){remoteConnectionInfo=arguments[0],audioStream=arguments[1],videoStream=arguments[2],dataStream=arguments[3];if(this.__left)throw new fm.liveswitch.Exception("You have left this channel.");if(fm.liveswitch.Global.equals(remoteConnectionInfo,null))throw new fm.liveswitch.Exception("Remote connection information cannot be null.");if(fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(dataStream,null))throw new fm.liveswitch.Exception("Cannot open a connection with no streams.");fm.liveswitch.Global.equals(dataStream,null)||dataStream.setGetRemoteConnectionInfo(this.getRemoteConnectionInfo.bind(this));var connection=this.__connectionFactory.createSfuDownstreamConnection(this.__lock,this.getApplicationId(),this.getId(),this.getUserId(),this.getDeviceId(),this.getClientId(),this.send.bind(this),remoteConnectionInfo,audioStream,videoStream,dataStream);return this.getConnections().add(connection),connection.addOnStateChange(this.processConnectionStateChange.bind(this)),connection}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){remoteConnectionInfo=arguments[0],dataStream=arguments[1];return this.createSfuDownstreamConnection(remoteConnectionInfo,null,null,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))){remoteConnectionInfo=arguments[0],videoStream=arguments[1];return this.createSfuDownstreamConnection(remoteConnectionInfo,null,videoStream,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){remoteConnectionInfo=arguments[0],videoStream=arguments[1],dataStream=arguments[2];return this.createSfuDownstreamConnection(remoteConnectionInfo,null,videoStream,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))){var remoteMediaId=arguments[0];audioStream=arguments[1];return this.createSfuDownstreamConnection(remoteMediaId,audioStream,null,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){remoteMediaId=arguments[0],audioStream=arguments[1],dataStream=arguments[2];return this.createSfuDownstreamConnection(remoteMediaId,audioStream,null,dataStream)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.VideoStream]"))){remoteMediaId=arguments[0],audioStream=arguments[1],videoStream=arguments[2];return this.createSfuDownstreamConnection(remoteMediaId,audioStream,videoStream,null)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){remoteMediaId=arguments[0],audioStream=arguments[1],videoStream=arguments[2],dataStream=arguments[3];if(this.__left)throw new fm.liveswitch.Exception("You have left this channel.");if(fm.liveswitch.Global.equals(remoteMediaId,null))throw new fm.liveswitch.Exception("Remote media identifier cannot be null.");if(fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(dataStream,null))throw new fm.liveswitch.Exception("Cannot open a connection with no streams.");fm.liveswitch.Global.equals(dataStream,null)||dataStream.setGetRemoteConnectionInfo(this.getRemoteConnectionInfo.bind(this));connection=this.__connectionFactory.createSfuDownstreamConnection(this.__lock,this.getApplicationId(),this.getId(),this.getUserId(),this.getDeviceId(),this.getClientId(),this.send.bind(this),remoteMediaId,audioStream,videoStream,dataStream);return this.getConnections().add(connection),connection.addOnStateChange(this.processConnectionStateChange.bind(this)),connection}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){remoteMediaId=arguments[0],dataStream=arguments[1];return this.createSfuDownstreamConnection(remoteMediaId,null,null,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))){remoteMediaId=arguments[0],videoStream=arguments[1];return this.createSfuDownstreamConnection(remoteMediaId,null,videoStream,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){remoteMediaId=arguments[0],videoStream=arguments[1],dataStream=arguments[2];return this.createSfuDownstreamConnection(remoteMediaId,null,videoStream,dataStream)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.createSfuUpstreamConnection=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))){var audioStream=arguments[0];return this.createSfuUpstreamConnection(audioStream,null,null,null)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){audioStream=arguments[0];var dataStream=arguments[1];return this.createSfuUpstreamConnection(audioStream,null,dataStream)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isString(arguments[2]))){audioStream=arguments[0],dataStream=arguments[1];var mediaId=arguments[2];return this.createSfuUpstreamConnection(audioStream,null,dataStream,mediaId)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){audioStream=arguments[0],mediaId=arguments[1];return this.createSfuUpstreamConnection(audioStream,null,null,mediaId)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))){audioStream=arguments[0];var videoStream=arguments[1];return this.createSfuUpstreamConnection(audioStream,videoStream,null,null)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.DataStream]"))){audioStream=arguments[0],videoStream=arguments[1],dataStream=arguments[2];return this.createSfuUpstreamConnection(audioStream,videoStream,dataStream,null)}if(4==arguments.length){audioStream=arguments[0],videoStream=arguments[1],dataStream=arguments[2],mediaId=arguments[3];if(this.__left)throw new fm.liveswitch.Exception("You have left this channel.");if(fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(dataStream,null))throw new fm.liveswitch.Exception("Cannot open a connection with no streams.");fm.liveswitch.Global.equals(dataStream,null)||dataStream.setGetRemoteConnectionInfo(this.getRemoteConnectionInfo.bind(this));var connection=this.__connectionFactory.createSfuUpstreamConnection(this.__lock,this.getApplicationId(),this.getId(),this.getUserId(),this.getDeviceId(),this.getClientId(),this.send.bind(this),audioStream,videoStream,dataStream,mediaId);return this.getConnections().add(connection),connection.addOnStateChange(this.processConnectionStateChange.bind(this)),connection}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isString(arguments[2]))){audioStream=arguments[0],videoStream=arguments[1],mediaId=arguments[2];return this.createSfuUpstreamConnection(audioStream,videoStream,null,mediaId)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataStream]"))){dataStream=arguments[0];return this.createSfuUpstreamConnection(null,null,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){dataStream=arguments[0],mediaId=arguments[1];return this.createSfuUpstreamConnection(null,null,dataStream,mediaId)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))){videoStream=arguments[0];return this.createSfuUpstreamConnection(null,videoStream,null,null)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){videoStream=arguments[0],dataStream=arguments[1];return this.createSfuUpstreamConnection(null,videoStream,dataStream)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isString(arguments[2]))){videoStream=arguments[0],dataStream=arguments[1],mediaId=arguments[2];return this.createSfuUpstreamConnection(null,videoStream,dataStream,mediaId)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){videoStream=arguments[0],mediaId=arguments[1];return this.createSfuUpstreamConnection(null,videoStream,null,mediaId)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.doInvite=function(promise,invite,msg){var _this=this;if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.send(msg).then((function(m){_this.processInviteFeedback(m),promise.resolve(invite)}),(function(ex){promise.reject(ex)}))},Channel.prototype.doKickClient=function(promise,remoteClientInfo){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.send(fm.liveswitch.Message.createKickMessage(this.getId(),remoteClientInfo.getId())).then((function(msg){!fm.liveswitch.Global.equals(msg,null)&&fm.liveswitch.Global.equals(msg.getType(),fm.liveswitch.MessageType.getError())?promise.reject(new fm.liveswitch.Exception(msg.getPayload())):promise.resolve(null)}),(function(ex){promise.reject(ex)}))},Channel.prototype.doSimpleSend=function(promise,message){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null;try{if(this.__left)throw new fm.liveswitch.Exception("You have left this channel.");fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(response){promise.resolve(null)}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){promise.reject(ex)}),this.send(message).then(resolveAction,rejectAction)}catch(exception){promise.reject(exception)}},Channel.prototype.doUpdate=function(promise,newConfig){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.send(fm.liveswitch.Message.createUpdateMessage(newConfig.toJson())).then((function(msg){!fm.liveswitch.Global.equals(msg,null)&&fm.liveswitch.Global.equals(msg.getType(),fm.liveswitch.MessageType.getError())?promise.reject(new fm.liveswitch.Exception(msg.getPayload())):promise.resolve(null)}),(function(ex){promise.reject(ex)}))},Channel.prototype.getApplicationId=function(){if(0==arguments.length)return this._applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getClaim=function(){if(0==arguments.length)return this._claim;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getClientRoles=function(){if(0==arguments.length)return this._clientRoles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getClientTag=function(){if(0==arguments.length)return this._clientTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getConnections=function(){if(0==arguments.length)return this._connections;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getDeviceAlias=function(){if(0==arguments.length)return this._deviceAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getEquivalentRemoteClientInfo=function(remoteClientInfo){if(1==arguments.length){for(var _i=0,_a=this.getRemoteClientInfos();_i<_a.length;_i++){var info=_a[_i];if(info.isEquivalent(remoteClientInfo))return info}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getEquivalentRemoteUpstreamConnectionInfo=function(remoteUpstreamConnectionInfo){if(1==arguments.length){for(var _i=0,_a=this.getRemoteUpstreamConnectionInfos();_i<_a.length;_i++){var info=_a[_i];if(info.isEquivalent(remoteUpstreamConnectionInfo))return info}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getMessageBytesReceived=function(){if(0==arguments.length)return this.__messageBytesReceived.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getMessageBytesSent=function(){if(0==arguments.length)return this.__messageBytesSent.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getMessagesReceived=function(){if(0==arguments.length)return this.__messagesReceived.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getMessagesSent=function(){if(0==arguments.length)return this.__messagesSent.getValue();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getRemoteClientInfo=function(clientId){if(1==arguments.length){for(var _i=0,_a=this.getRemoteClientInfos();_i<_a.length;_i++){var info=_a[_i];if(fm.liveswitch.Global.equals(info.getId(),clientId))return info}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getRemoteClientInfos=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getValues(this.__remoteClientInfos);_i<_a.length;_i++){var info=_a[_i];fm.liveswitch.ArrayExtensions.add(list,info)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getRemoteConnectionInfo=function(connectionId){if(1==arguments.length){for(var _i=0,_a=this.getRemoteUpstreamConnectionInfos();_i<_a.length;_i++){var info=_a[_i];if(fm.liveswitch.Global.equals(info.getId(),connectionId))return info}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getRemoteUpstreamConnectionInfos=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getValues(this.__remoteUpstreamConnectionInfos);_i<_a.length;_i++){var info=_a[_i];fm.liveswitch.ArrayExtensions.add(list,info)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getReport=function(){if(0==arguments.length){var report=new fm.liveswitch.ChannelReport;return report.setId(this.getId()),report.setMessagesSent(this.getMessagesSent()),report.setMessagesReceived(this.getMessagesReceived()),report.setMessageBytesSent(this.getMessageBytesSent()),report.setMessageBytesReceived(this.getMessageBytesReceived()),report}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getUserAlias=function(){if(0==arguments.length)return this._userAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.invite=function(userId,protocol){if(2==arguments.length){var invitation=new fm.liveswitch.Invitation(this,userId,protocol);if(this.__invitations.tryAdd(invitation.getInviteKey(),invitation)){var promise=new fm.liveswitch.Promise,msg=fm.liveswitch.Message.createInviteMessage(userId,protocol);return this.doInvite(promise,invitation,msg),promise}return fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Already existing invitation for this user and protocol."))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.kickClient=function(remoteClientInfo){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doKickClient(promise,remoteClientInfo),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.leave=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__channelQueue.destroy(),this.__left=!0},Channel.prototype.processAnswer=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getConnectionId(),null)?fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)?fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Discarding unrecognized '{0}' message. ({1})",message.getType(),message.toJson())):this.processMessageForRemoteConnection(message):this.processMessageForLocalConnection(message)},Channel.prototype.processBitrateNotification=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var connection=fm.liveswitch.Global.equals(message.getConnectionId(),null)?this.getConnections().getByRemoteId(message.getRemoteConnectionId()):this.getConnections().getById(message.getConnectionId());if(fm.liveswitch.Global.equals(connection,null)){var offer=null,_var0=new fm.liveswitch.Holder(offer),_var1=this.__peerConnectionOffers.tryGetValue(message.getRemoteConnectionId(),_var0);offer=_var0.getValue(),!fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)&&_var1?offer.processMessage(message):fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.concat("Discarding bitrateRequest message for unrecognized connection: ",message.toJson()))}else connection.processMessage(message)},Channel.prototype.processBitrateRequest=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var connection=fm.liveswitch.Global.equals(message.getConnectionId(),null)?this.getConnections().getByRemoteId(message.getRemoteConnectionId()):this.getConnections().getById(message.getConnectionId());if(fm.liveswitch.Global.equals(connection,null)){var offer=null,_var0=new fm.liveswitch.Holder(offer),_var1=this.__peerConnectionOffers.tryGetValue(message.getRemoteConnectionId(),_var0);offer=_var0.getValue(),!fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)&&_var1?offer.processMessage(message):fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.concat("Discarding bitrateRequest message for unrecognized connection: ",message.toJson()))}else connection.processMessage(message)},Channel.prototype.processCandidate=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getConnectionId(),null)?fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)?fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Discarding unrecognized '{0}' message. ({1})",message.getType(),message.toJson())):this.processMessageForRemoteConnection(message):this.processMessageForLocalConnection(message)},Channel.prototype.processClientUpdate=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var config=fm.liveswitch.ClientConfig.fromJson(message.getPayload()),remoteClientInfo=new fm.liveswitch.ClientInfo(message.getRemoteUserId(),null,message.getRemoteDeviceId(),null,message.getRemoteClientId(),null,null),equivalentRemoteClientInfo=this.getEquivalentRemoteClientInfo(remoteClientInfo);if(!fm.liveswitch.Global.equals(equivalentRemoteClientInfo,null)){var info3=new fm.liveswitch.ClientInfo(equivalentRemoteClientInfo.getUserId(),equivalentRemoteClientInfo.getUserAlias(),equivalentRemoteClientInfo.getDeviceId(),equivalentRemoteClientInfo.getDeviceAlias(),equivalentRemoteClientInfo.getId(),equivalentRemoteClientInfo.getTag(),equivalentRemoteClientInfo.getRoles());equivalentRemoteClientInfo.inflate(config.getUserAlias(),config.getDeviceAlias(),config.getTag(),config.getRoles());var onRemoteClientUpdate=this._onRemoteClientUpdate;fm.liveswitch.Global.equals(onRemoteClientUpdate,null)||onRemoteClientUpdate(info3,equivalentRemoteClientInfo)}},Channel.prototype.processClose=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(message.getConnectionId(),null))if(fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)){for(var _i=0,_a=this.getConnections().getValues();_i<_a.length;_i++){var connection=_a[_i],message2=message.clone();message2.setConnectionId(connection.getId()),connection.processMessage(message2)}this.__peerConnectionOffers.clear()}else this.processMessageForRemoteConnection(message);else this.processMessageForLocalConnection(message)},Channel.prototype.processConnectionMessages=function(message){if(1==arguments.length){if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getOffer()))return this.processOffer(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getAnswer()))return this.processAnswer(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getCandidate()))return this.processCandidate(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getKeyFrameRequest()))return this.processKeyFrameRequest(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getBitrateRequest()))return this.processBitrateRequest(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getBitrateNotification()))return this.processBitrateNotification(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getClose()))return this.processClose(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getFail()))return this.processFail(message),!0;if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getUpdate())&&!fm.liveswitch.Global.equals(message.getConnectionId(),null)){var byId=this.getConnections().getById(message.getConnectionId());return fm.liveswitch.Global.equals(byId,null)||byId.processMessage(message),!0}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.processConnectionStateChange=function(connection){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(connection.getState(),fm.liveswitch.ConnectionState.Failed)||fm.liveswitch.Global.equals(connection.getState(),fm.liveswitch.ConnectionState.Closed)){this.getConnections().remove(connection);var dataStream=connection.getDataStream();fm.liveswitch.Global.equals(dataStream,null)||dataStream.setGetRemoteConnectionInfo(null)}},Channel.prototype.processError=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getConnectionId(),null)?fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)?fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Discarding unrecognized '{0}' message. ({1})",message.getType(),message.toJson())):this.processMessageForRemoteConnection(message):this.processMessageForLocalConnection(message)},Channel.prototype.processFail=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(message.getConnectionId(),null))if(fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)){for(var _i=0,_a=this.getConnections().getValues();_i<_a.length;_i++){var connection=_a[_i],message2=message.clone();message2.setConnectionId(connection.getId()),connection.processMessage(message2)}this.__peerConnectionOffers.clear()}else this.processMessageForRemoteConnection(message);else this.processMessageForLocalConnection(message)},Channel.prototype.processInviteFeedback=function(message){if(1==arguments.length){var feedback=fm.liveswitch.InviteFeedback.fromJson(message.getPayload()),key=fm.liveswitch.Invitation.getInviteKey(this.getId(),feedback.getUserId(),feedback.getProtocol()),invitation=null,_var0=new fm.liveswitch.Holder(invitation),_var1=this.__invitations.tryGetValue(key,_var0);if(invitation=_var0.getValue(),_var1){if(!invitation.processFeedback(feedback)){var _var2=new fm.liveswitch.Holder(invitation);this.__invitations.tryRemove(key,_var2);return invitation=_var2.getValue(),!1}return!0}return fm.liveswitch.Channel.fm_liveswitch_Channel___log.error("Received InviteFeedback for unknown invite."),!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.processKeyFrameRequest=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getConnectionId(),null)?fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)?fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Discarding unrecognized '{0}' message. ({1})",message.getType(),message.toJson())):this.processMessageForRemoteConnection(message):this.processMessageForLocalConnection(message)},Channel.prototype.processMessageAsync=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.processConnectionMessages(message)||this.__channelQueue.enqueue(message)},Channel.prototype.processMessageForLocalConnection=function(message){if(1==arguments.length){var connectionId=message.getConnectionId(),byId=this.getConnections().getById(connectionId);return fm.liveswitch.Global.equals(byId,null)?(fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Discarding '{0}' message for unrecognized local connection '{1}'. ({2})",message.getType(),connectionId,message.toJson())),!1):(byId.processMessage(message),!0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.processMessageForRemoteConnection=function(message){if(1==arguments.length){var remoteConnectionId=message.getRemoteConnectionId(),byRemoteId=this.getConnections().getByRemoteId(remoteConnectionId);if(!fm.liveswitch.Global.equals(byRemoteId,null))return byRemoteId.processMessage(message),!0;var offer=null,_var0=new fm.liveswitch.Holder(offer),_var1=this.__peerConnectionOffers.tryGetValue(remoteConnectionId,_var0);return offer=_var0.getValue(),_var1?(offer.processMessage(message),!0):(fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Discarding '{0}' message for unrecognized remote connection '{1}'. ({2})",message.getType(),remoteConnectionId,message.toJson())),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.processMessageSync=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getNotifyJoin()))this.processNotifyJoin(fm.liveswitch.ClientInfo.fromJsonArray(message.getPayload()));else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getNotifyLeave()))this.processNotifyLeave(fm.liveswitch.ClientInfo.fromJsonArray(message.getPayload()),new fm.liveswitch.ClientInfo(message.getRemoteUserId(),message.getRemoteDeviceId(),message.getRemoteClientId()));else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getNotifyUpstreamOpen()))this.processNotifyUpstreamOpen(fm.liveswitch.ConnectionInfo.fromJsonArray(message.getPayload()));else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getNotifyUpstreamClose()))this.processNotifyUpstreamClose(fm.liveswitch.ConnectionInfo.fromJsonArray(message.getPayload()));else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getError()))this.processError(message);else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getNotifyUpstreamUpdate()))this.processNotifyUpstreamUpdate(fm.liveswitch.ConnectionInfo.fromJson(message.getPayload()));else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getReject()))this.processReject(message);else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getMcuVideoLayout()))this.processVideoLayout(fm.liveswitch.VideoLayout.fromJson(message.getPayload()),message.getTimestamp());else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getMessage()))this.processMessageType(message);else if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getUpdate())&&fm.liveswitch.Global.equals(message.getRemoteClientId(),null)){var claim=fm.liveswitch.ChannelClaim.fromJson(message.getPayload());if(fm.liveswitch.Global.equals(this.getClaim(),null))this.setClaim(claim);else{var claim2=this.getClaim();this.setClaim(claim);var onClaimUpdate=this._onClaimUpdate;fm.liveswitch.Global.equals(onClaimUpdate,null)||onClaimUpdate(claim2,claim)}}else fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getUpdate())&&fm.liveswitch.Global.equals(message.getConnectionId(),null)?this.processClientUpdate(message):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getInviteFeedback())?this.processInviteFeedback(message):fm.liveswitch.Channel.fm_liveswitch_Channel___log.error(fm.liveswitch.StringExtensions.concat("Unexpected message: ",message.toJson()))},Channel.prototype.processMessageType=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var info=new fm.liveswitch.ClientInfo(message.getRemoteUserId(),message.getUserAlias(),message.getRemoteDeviceId(),message.getDeviceAlias(),message.getRemoteClientId(),message.getClientTag(),message.getClientRoles());if(!fm.liveswitch.Global.equals(info,null)){var onClientMessage=void 0,input=fm.liveswitch.JsonSerializer.deserializeString(message.getPayload());this.__messagesReceived.increment(),this.__messageBytesReceived.add(fm.liveswitch.Utf8.encode(input).length),fm.liveswitch.Global.equals(message.getClientId(),null)?fm.liveswitch.Global.equals(message.getDeviceId(),null)?fm.liveswitch.Global.equals(message.getUserId(),null)?(onClientMessage=this._onMessage,fm.liveswitch.Global.equals(onClientMessage,null)||onClientMessage(info,input)):(onClientMessage=this._onUserMessage,fm.liveswitch.Global.equals(onClientMessage,null)||onClientMessage(info,input)):(onClientMessage=this._onDeviceMessage,fm.liveswitch.Global.equals(onClientMessage,null)||onClientMessage(info,input)):(onClientMessage=this._onClientMessage,fm.liveswitch.Global.equals(onClientMessage,null)||onClientMessage(info,input))}},Channel.prototype.processNotifyJoin=function(remoteClientInfos){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,remoteClientInfos_1=remoteClientInfos;_i<remoteClientInfos_1.length;_i++){var info=remoteClientInfos_1[_i];if(!info.isEquivalent(this.getUserId(),this.getDeviceId(),this.getClientId())){var flag=!1;if(fm.liveswitch.HashExtensions.containsKey(this.__remoteClientInfos,info.getId())||(flag=!0),this.__remoteClientInfos[info.getId()]=info,flag){var onRemoteClientJoin=this._onRemoteClientJoin;fm.liveswitch.Global.equals(onRemoteClientJoin,null)||onRemoteClientJoin(info)}}}},Channel.prototype.processNotifyLeave=function(deflatedRemoteClientInfos,deflatedSourceClientInfo){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,deflatedRemoteClientInfos_1=deflatedRemoteClientInfos;_i<deflatedRemoteClientInfos_1.length;_i++){var info=deflatedRemoteClientInfos_1[_i];if(info.isEquivalent(this.getUserId(),this.getDeviceId(),this.getClientId())&&deflatedSourceClientInfo.isEquivalent(this.getUserId(),this.getDeviceId(),this.getClientId())){fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("This client {0} has been kicked from channel {1}.",this.getClientId(),this.getId()));var onKick=this._onKick;fm.liveswitch.Global.equals(onKick,null)||onKick()}else{var equivalentRemoteClientInfo=this.getEquivalentRemoteClientInfo(info);if(!fm.liveswitch.Global.equals(equivalentRemoteClientInfo,null)){fm.liveswitch.HashExtensions.remove(this.__remoteClientInfos,equivalentRemoteClientInfo.getId());for(var _a=0,_b=this.getConnections().getValues();_a<_b.length;_a++){var connection=_b[_a];if(connection instanceof fm.liveswitch.PeerConnection){var connection2=connection;equivalentRemoteClientInfo.isEquivalent(connection2.getRemoteClientInfo())&&connection2.processMessage(fm.liveswitch.Message.createCloseMessage())}else if(connection instanceof fm.liveswitch.SfuDownstreamConnection){var connection3=connection,remoteConnectionInfo=connection3.getRemoteConnectionInfo();!fm.liveswitch.Global.equals(remoteConnectionInfo,null)&&equivalentRemoteClientInfo.isEquivalent(remoteConnectionInfo.createClientInfo())&&connection3.processMessage(fm.liveswitch.Message.createCloseMessage())}}var onRemoteClientLeave=this._onRemoteClientLeave;fm.liveswitch.Global.equals(onRemoteClientLeave,null)||onRemoteClientLeave(equivalentRemoteClientInfo)}}}},Channel.prototype.processNotifyUpstreamClose=function(deflatedRemoteConnectionInfos){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,deflatedRemoteConnectionInfos_1=deflatedRemoteConnectionInfos;_i<deflatedRemoteConnectionInfos_1.length;_i++){var info=deflatedRemoteConnectionInfos_1[_i],equivalentRemoteUpstreamConnectionInfo=this.getEquivalentRemoteUpstreamConnectionInfo(info);if(!fm.liveswitch.Global.equals(equivalentRemoteUpstreamConnectionInfo,null)){fm.liveswitch.HashExtensions.remove(this.__remoteUpstreamConnectionInfos,equivalentRemoteUpstreamConnectionInfo.getId());var byId=this.getConnections().getById(equivalentRemoteUpstreamConnectionInfo.getId());fm.liveswitch.Global.equals(byId,null)||byId.processMessage(fm.liveswitch.Message.createCloseMessage());var onRemoteUpstreamConnectionClose=this._onRemoteUpstreamConnectionClose;fm.liveswitch.Global.equals(onRemoteUpstreamConnectionClose,null)||onRemoteUpstreamConnectionClose(equivalentRemoteUpstreamConnectionInfo)}}},Channel.prototype.processNotifyUpstreamOpen=function(remoteConnectionInfos){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,remoteConnectionInfos_1=remoteConnectionInfos;_i<remoteConnectionInfos_1.length;_i++){var info=remoteConnectionInfos_1[_i];if(!info.createClientInfo().isEquivalent(this.getUserId(),this.getDeviceId(),this.getClientId())){var flag=!1;if(fm.liveswitch.HashExtensions.containsKey(this.__remoteUpstreamConnectionInfos,info.getId())||(flag=!0),this.__remoteUpstreamConnectionInfos[info.getId()]=info,flag){var onRemoteUpstreamConnectionOpen=this._onRemoteUpstreamConnectionOpen;fm.liveswitch.Global.equals(onRemoteUpstreamConnectionOpen,null)||onRemoteUpstreamConnectionOpen(info)}}}fm.liveswitch.Global.equals(this.__deferredLayout,null)||!fm.liveswitch.Global.equals(this.__deferredLayout,null)&&this.processVideoLayout(this.__deferredLayout,this.__deferredLayoutTimestamp)&&(this.__deferredLayout=null,this.__deferredLayoutTimestamp=-1)},Channel.prototype.processNotifyUpstreamUpdate=function(deflatedUpdatedRemoteConnectionInfo){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var rejectAction=null,equivalentRemoteUpstreamConnectionInfo=this.getEquivalentRemoteUpstreamConnectionInfo(deflatedUpdatedRemoteConnectionInfo);if(!fm.liveswitch.Global.equals(equivalentRemoteUpstreamConnectionInfo,null)){deflatedUpdatedRemoteConnectionInfo.inflate(equivalentRemoteUpstreamConnectionInfo.getUserAlias(),equivalentRemoteUpstreamConnectionInfo.getDeviceAlias(),equivalentRemoteUpstreamConnectionInfo.getClientTag(),equivalentRemoteUpstreamConnectionInfo.getClientRoles());for(var _i=0,_a=this.getConnections().getValues();_i<_a.length;_i++){var connection=_a[_i];if(fm.liveswitch.Global.equals(connection.getType(),fm.liveswitch.ConnectionType.getSfu())){var connection2=fm.liveswitch.Global.tryCast(connection,fm.liveswitch.SfuDownstreamConnection);if(!fm.liveswitch.Global.equals(connection2,null)){var remoteMediaId=connection2.getRemoteMediaId(),remoteConnectionInfo=connection2.getRemoteConnectionInfo();if(!fm.liveswitch.Global.equals(remoteConnectionInfo,null)&&remoteConnectionInfo.isEquivalent(equivalentRemoteUpstreamConnectionInfo)||!fm.liveswitch.Global.equals(remoteMediaId,null)&&fm.liveswitch.Global.equals(remoteMediaId,equivalentRemoteUpstreamConnectionInfo.getMediaId())){fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){fm.liveswitch.Channel.fm_liveswitch_Channel___log.error(fm.liveswitch.StringExtensions.format("Could not update SFU downstream connection {0}.",_this.getId()),ex)}),connection2.updateConnection(equivalentRemoteUpstreamConnectionInfo,deflatedUpdatedRemoteConnectionInfo).fail(rejectAction);break}}}}var onRemoteUpstreamConnectionUpdate=this._onRemoteUpstreamConnectionUpdate;fm.liveswitch.Global.equals(onRemoteUpstreamConnectionUpdate,null)||onRemoteUpstreamConnectionUpdate(equivalentRemoteUpstreamConnectionInfo,deflatedUpdatedRemoteConnectionInfo)}},Channel.prototype.processOffer=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(message.getConnectionId(),null)){if(!fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)){var remoteClientInfo=new fm.liveswitch.ClientInfo(message.getRemoteUserId(),null,message.getRemoteDeviceId(),null,message.getRemoteClientId(),null,null),equivalentRemoteClientInfo=this.getEquivalentRemoteClientInfo(remoteClientInfo);if(!fm.liveswitch.Global.equals(equivalentRemoteClientInfo,null)){var addValue=new fm.liveswitch.PeerConnectionOffer(this,equivalentRemoteClientInfo,message.getRemoteConnectionId(),message.getConnectionTag(),fm.liveswitch.SessionDescription.fromJson(message.getPayload()));this.__peerConnectionOffers.addOrUpdate(message.getRemoteConnectionId(),addValue);var onPeerConnectionOffer=this._onPeerConnectionOffer;fm.liveswitch.Global.equals(onPeerConnectionOffer,null)||onPeerConnectionOffer(addValue)}}}else{var byId=this.getConnections().getById(message.getConnectionId());fm.liveswitch.Global.equals(byId,null)||byId.processMessage(message)}},Channel.prototype.processReject=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getConnectionId(),null)?fm.liveswitch.Global.equals(message.getRemoteConnectionId(),null)?fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug(fm.liveswitch.StringExtensions.format("Discarding unrecognized '{0}' message. ({1})",message.getType(),message.toJson())):this.processMessageForRemoteConnection(message):this.processMessageForLocalConnection(message)},Channel.prototype.processVideoLayout=function(videoLayout,timestamp){if(2==arguments.length){if(timestamp=fm.liveswitch.Global.toInt(arguments[1]),!fm.liveswitch.Global.equals(this.__lastVideoLayoutTimestamp,-1)&&timestamp<this.__lastVideoLayoutTimestamp)return!1;this.__lastVideoLayoutTimestamp=timestamp;var flag=!1;if(fm.liveswitch.Global.equals(videoLayout,null)||(flag=videoLayout.inflate(this,new fm.liveswitch.ClientInfo(this.getUserId(),this.getUserAlias(),this.getDeviceId(),this.getDeviceAlias(),this.getClientId(),this.getClientTag(),this.getClientRoles()),this.getRemoteUpstreamConnectionInfos()))||(fm.liveswitch.Channel.fm_liveswitch_Channel___log.debug("Unable to inflate video layout due to delayed upstream notifications. Deferring until arrived."),this.__deferredLayout=videoLayout,this.__deferredLayoutTimestamp=timestamp),flag){var onMcuVideoLayout=this._onMcuVideoLayout;fm.liveswitch.Global.equals(onMcuVideoLayout,null)||onMcuVideoLayout(videoLayout)}return flag}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.rejectPeerConnection=function(peerConnectionOffer){if(1==arguments.length){var userId=peerConnectionOffer.getRemoteClientInfo().getUserId(),deviceId=peerConnectionOffer.getRemoteClientInfo().getDeviceId(),idValue=peerConnectionOffer.getRemoteClientInfo().getId(),remoteConnectionId=peerConnectionOffer.getRemoteConnectionId();return this.simpleSend(fm.liveswitch.Message.createPeerRejectMessage(userId,deviceId,idValue,remoteConnectionId))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.removeOnClaimUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onClaimUpdate,value)},Channel.prototype.removeOnClientMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onClientMessage,value)},Channel.prototype.removeOnDeviceMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onDeviceMessage,value)},Channel.prototype.removeOnKick=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onKick,value)},Channel.prototype.removeOnMcuVideoLayout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onMcuVideoLayout,value)},Channel.prototype.removeOnMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onMessage,value)},Channel.prototype.removeOnPeerConnectionOffer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onPeerConnectionOffer,value)},Channel.prototype.removeOnRemoteClientJoin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteClientJoin,value)},Channel.prototype.removeOnRemoteClientLeave=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteClientLeave,value)},Channel.prototype.removeOnRemoteClientUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteClientUpdate,value)},Channel.prototype.removeOnRemoteUpstreamConnectionClose=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteUpstreamConnectionClose,value)},Channel.prototype.removeOnRemoteUpstreamConnectionOpen=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteUpstreamConnectionOpen,value)},Channel.prototype.removeOnRemoteUpstreamConnectionUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteUpstreamConnectionUpdate,value)},Channel.prototype.removeOnUserMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onUserMessage,value)},Channel.prototype.send=function(message){if(1==arguments.length){if(message.setChannelId(this.getId()),fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getMessage())){var input=fm.liveswitch.JsonSerializer.deserializeString(message.getPayload());this.__messagesSent.increment(),this.__messageBytesSent.add(fm.liveswitch.Utf8.encode(input).length)}return this.__doSend(message)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.sendClientMessage=function(userId,deviceId,clientId,message){if(4==arguments.length)return fm.liveswitch.Global.equals(userId,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("User ID cannot be null.")):fm.liveswitch.Global.equals(deviceId,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Device ID cannot be null.")):fm.liveswitch.Global.equals(clientId,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Client ID cannot be null.")):fm.liveswitch.Global.equals(message,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Message cannot be null.")):this.simpleSend(fm.liveswitch.Message.createMessageMessage(message,userId,deviceId,clientId));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.sendDeviceMessage=function(userId,deviceId,message){if(3==arguments.length)return fm.liveswitch.Global.equals(userId,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("User ID cannot be null.")):fm.liveswitch.Global.equals(deviceId,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Device ID cannot be null.")):fm.liveswitch.Global.equals(message,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Message cannot be null.")):this.simpleSend(fm.liveswitch.Message.createMessageMessage(message,userId,deviceId));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.sendMessage=function(message){if(1==arguments.length)return fm.liveswitch.Global.equals(message,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Message cannot be null.")):this.simpleSend(fm.liveswitch.Message.createMessageMessage(message));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.sendUserMessage=function(userId,message){if(2==arguments.length)return fm.liveswitch.Global.equals(userId,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("User ID cannot be null.")):fm.liveswitch.Global.equals(message,null)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Message cannot be null.")):this.simpleSend(fm.liveswitch.Message.createMessageMessage(message,userId));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._applicationId=value},Channel.prototype.setClaim=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._claim=value},Channel.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},Channel.prototype.setClientRoles=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientRoles=value},Channel.prototype.setClientTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientTag=value},Channel.prototype.setConnections=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connections=value},Channel.prototype.setDeviceAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceAlias=value},Channel.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},Channel.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},Channel.prototype.setUserAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userAlias=value},Channel.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},Channel.prototype.simpleSend=function(message){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doSimpleSend(promise,message),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.update=function(newConfig){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doUpdate(promise,newConfig),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Channel.prototype.updateClientConfig=function(clientConfig){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setUserAlias(clientConfig.getUserAlias()),this.setDeviceAlias(clientConfig.getDeviceAlias()),this.setClientTag(clientConfig.getTag()),this.setClientRoles(clientConfig.getRoles())},Channel.fmliveswitchChannelInitialize=function(){fm.liveswitch.Channel.__fmliveswitchChannelInitialized||fm.liveswitch.Channel.__fmliveswitchChannelInitializing||(fm.liveswitch.Channel.__fmliveswitchChannelInitializing=!0,fm.liveswitch.Channel.fm_liveswitch_Channel___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.Channel]")),fm.liveswitch.Channel.__fmliveswitchChannelInitialized=!0,fm.liveswitch.Channel.__fmliveswitchChannelInitializing=!1)},Channel.__fmliveswitchChannelInitialized=!1,Channel.__fmliveswitchChannelInitializing=!1,Channel}(fm.liveswitch.Dynamic);liveswitch.Channel=Channel}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ChannelJoinInfo=function(){function ChannelJoinInfo(promise,channelId,token,timestamp){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var promise_2=__arguments[0],channelId_1=__arguments[1],token_1=__arguments[2],timestamp_2=__arguments[3];this.fmliveswitchChannelJoinInfoInit(),this.setPromise(promise_2),this.setChannelId(channelId_1),this.setToken(token_1),this.setTimestamp(timestamp_2)}return ChannelJoinInfo.prototype.getTypeString=function(){return"[fm.liveswitch.ChannelJoinInfo]"},ChannelJoinInfo.prototype.fmliveswitchChannelJoinInfoInit=function(){this._timestamp=0},ChannelJoinInfo.prototype.getChannelId=function(){if(0==arguments.length)return this._channelId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelJoinInfo.prototype.getPromise=function(){if(0==arguments.length)return this._promise;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelJoinInfo.prototype.getTimestamp=function(){if(0==arguments.length)return this._timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelJoinInfo.prototype.getToken=function(){if(0==arguments.length)return this._token;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelJoinInfo.prototype.setChannelId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channelId=value},ChannelJoinInfo.prototype.setPromise=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._promise=value},ChannelJoinInfo.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timestamp=fm.liveswitch.Global.toInt(value)},ChannelJoinInfo.prototype.setToken=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._token=value},ChannelJoinInfo}();liveswitch.ChannelJoinInfo=ChannelJoinInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Client=function(_super){function Client(){var _this=this;fm.liveswitch.Client.fmliveswitchClientInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(2==__arguments.length){var gatewayUrl=__arguments[0],applicationId=__arguments[1];(__arguments=new Array(3))[0]=gatewayUrl,__arguments[1]=applicationId,__arguments[2]=null;var gatewayUrl_1=__arguments[0],applicationId_2=__arguments[1],userId=__arguments[2];(__arguments=new Array(4))[0]=gatewayUrl_1,__arguments[1]=applicationId_2,__arguments[2]=userId,__arguments[3]=null;var gatewayUrl_2=__arguments[0],applicationId_3=__arguments[1],userId_2=__arguments[2],deviceId=__arguments[3];(__arguments=new Array(6))[0]=gatewayUrl_2,__arguments[1]=applicationId_3,__arguments[2]=userId_2,__arguments[3]=deviceId,__arguments[4]=null,__arguments[5]=null;var gatewayUrl_3=__arguments[0],applicationId_4=__arguments[1],userId_3=__arguments[2],deviceId_2=__arguments[3],clientId=__arguments[4],roles=__arguments[5];(__arguments=new Array(7))[0]=gatewayUrl_3,__arguments[1]=applicationId_4,__arguments[2]=userId_3,__arguments[3]=deviceId_2,__arguments[4]=clientId,__arguments[5]=roles,__arguments[6]=null;var gatewayUrl_4=__arguments[0],applicationId_5=__arguments[1],userId_4=__arguments[2],deviceId_3=__arguments[3],clientId_2=__arguments[4],roles_1=__arguments[5],region=__arguments[6];if((_this=_super.call(this)||this).fmliveswitchClientInit(),_this.__lock=new Object,_this.__registrationRateLimiter=new fm.liveswitch.RateLimiter,_this.__joinRateLimiters=new fm.liveswitch.ManagedConcurrentDictionary,_this.__joinBackoffTimers=new fm.liveswitch.ManagedConcurrentDictionary,_this.__stateMachine=new fm.liveswitch.ClientStateMachine,_this.__joining=new Array,_this.__leaving=new Array,_this.__earlyChannelMessages=new fm.liveswitch.ManagedConcurrentDictionary,fm.liveswitch.StringExtensions.isNullOrEmpty(gatewayUrl_4))throw new fm.liveswitch.Exception("Gateway URL cannot be null or empty.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(applicationId_5))throw new fm.liveswitch.Exception("Application ID cannot be null or empty.");_this.setGatewayUrl(gatewayUrl_4),_this.setApplicationId(applicationId_5),fm.liveswitch.Global.equals(clientId_2,null)||(_this.setExternalId(clientId_2),clientId_2=null,fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client IDs are automatically generated. The provided client ID '{0}' will be moved to the ExternalId property and replaced with a generated ID.",_this.getExternalId()))),_this.setUserId(fm.liveswitch.StringExtensions.nullCoalesce(userId_4,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setDeviceId(fm.liveswitch.StringExtensions.nullCoalesce(deviceId_3,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setId(fm.liveswitch.StringExtensions.nullCoalesce(clientId_2,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.__roles=roles_1,_this.__region=region,_this.__channels=new fm.liveswitch.ManagedConcurrentDictionary,(client=new fm.liveswitch.signalling.Client(_this.getGatewayUrl(),_this.__lock)).setDisableBinary(!0),client.setRequestMaxRetries(3),_this.__gatewayClient=client,_this.__sendQueue=new fm.liveswitch.SendQueue(new fm.liveswitch.SignallingSendQueueTransport(_this.__gatewayClient)),_this.__gatewayClient.addOnServerSubscribe(_this._gatewayClient_OnServerSubscribe.bind(_this)),_this.__gatewayClient.addOnStateChange(_this._gatewayClient_OnStateChange.bind(_this)),_this.__gatewayClient.addOnHttpRequestCreated(_this._gatewayClient_OnHttpRequestCreated.bind(_this)),_this.__gatewayClient.addOnHttpResponseReceived(_this._gatewayClient_OnHttpResponseReceived.bind(_this))}else if(3==__arguments.length){gatewayUrl=__arguments[0],applicationId=__arguments[1],userId=__arguments[2];(__arguments=new Array(4))[0]=gatewayUrl,__arguments[1]=applicationId,__arguments[2]=userId,__arguments[3]=null;var gatewayUrl_5=__arguments[0],applicationId_6=__arguments[1],userId_5=__arguments[2];deviceId=__arguments[3];(__arguments=new Array(6))[0]=gatewayUrl_5,__arguments[1]=applicationId_6,__arguments[2]=userId_5,__arguments[3]=deviceId,__arguments[4]=null,__arguments[5]=null;var gatewayUrl_6=__arguments[0],applicationId_7=__arguments[1],userId_6=__arguments[2],deviceId_4=__arguments[3];clientId=__arguments[4],roles=__arguments[5];(__arguments=new Array(7))[0]=gatewayUrl_6,__arguments[1]=applicationId_7,__arguments[2]=userId_6,__arguments[3]=deviceId_4,__arguments[4]=clientId,__arguments[5]=roles,__arguments[6]=null;var gatewayUrl_7=__arguments[0],applicationId_8=__arguments[1],userId_7=__arguments[2],deviceId_5=__arguments[3],clientId_3=__arguments[4],roles_2=__arguments[5];region=__arguments[6];if((_this=_super.call(this)||this).fmliveswitchClientInit(),_this.__lock=new Object,_this.__registrationRateLimiter=new fm.liveswitch.RateLimiter,_this.__joinRateLimiters=new fm.liveswitch.ManagedConcurrentDictionary,_this.__joinBackoffTimers=new fm.liveswitch.ManagedConcurrentDictionary,_this.__stateMachine=new fm.liveswitch.ClientStateMachine,_this.__joining=new Array,_this.__leaving=new Array,_this.__earlyChannelMessages=new fm.liveswitch.ManagedConcurrentDictionary,fm.liveswitch.StringExtensions.isNullOrEmpty(gatewayUrl_7))throw new fm.liveswitch.Exception("Gateway URL cannot be null or empty.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(applicationId_8))throw new fm.liveswitch.Exception("Application ID cannot be null or empty.");_this.setGatewayUrl(gatewayUrl_7),_this.setApplicationId(applicationId_8),fm.liveswitch.Global.equals(clientId_3,null)||(_this.setExternalId(clientId_3),clientId_3=null,fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client IDs are automatically generated. The provided client ID '{0}' will be moved to the ExternalId property and replaced with a generated ID.",_this.getExternalId()))),_this.setUserId(fm.liveswitch.StringExtensions.nullCoalesce(userId_7,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setDeviceId(fm.liveswitch.StringExtensions.nullCoalesce(deviceId_5,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setId(fm.liveswitch.StringExtensions.nullCoalesce(clientId_3,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.__roles=roles_2,_this.__region=region,_this.__channels=new fm.liveswitch.ManagedConcurrentDictionary,(client=new fm.liveswitch.signalling.Client(_this.getGatewayUrl(),_this.__lock)).setDisableBinary(!0),client.setRequestMaxRetries(3),_this.__gatewayClient=client,_this.__sendQueue=new fm.liveswitch.SendQueue(new fm.liveswitch.SignallingSendQueueTransport(_this.__gatewayClient)),_this.__gatewayClient.addOnServerSubscribe(_this._gatewayClient_OnServerSubscribe.bind(_this)),_this.__gatewayClient.addOnStateChange(_this._gatewayClient_OnStateChange.bind(_this)),_this.__gatewayClient.addOnHttpRequestCreated(_this._gatewayClient_OnHttpRequestCreated.bind(_this)),_this.__gatewayClient.addOnHttpResponseReceived(_this._gatewayClient_OnHttpResponseReceived.bind(_this))}else if(4==__arguments.length){gatewayUrl=__arguments[0],applicationId=__arguments[1],userId=__arguments[2],deviceId=__arguments[3];(__arguments=new Array(6))[0]=gatewayUrl,__arguments[1]=applicationId,__arguments[2]=userId,__arguments[3]=deviceId,__arguments[4]=null,__arguments[5]=null;var gatewayUrl_8=__arguments[0],applicationId_9=__arguments[1],userId_8=__arguments[2],deviceId_6=__arguments[3];clientId=__arguments[4],roles=__arguments[5];(__arguments=new Array(7))[0]=gatewayUrl_8,__arguments[1]=applicationId_9,__arguments[2]=userId_8,__arguments[3]=deviceId_6,__arguments[4]=clientId,__arguments[5]=roles,__arguments[6]=null;var gatewayUrl_9=__arguments[0],applicationId_10=__arguments[1],userId_9=__arguments[2],deviceId_7=__arguments[3],clientId_4=__arguments[4],roles_3=__arguments[5];region=__arguments[6];if((_this=_super.call(this)||this).fmliveswitchClientInit(),_this.__lock=new Object,_this.__registrationRateLimiter=new fm.liveswitch.RateLimiter,_this.__joinRateLimiters=new fm.liveswitch.ManagedConcurrentDictionary,_this.__joinBackoffTimers=new fm.liveswitch.ManagedConcurrentDictionary,_this.__stateMachine=new fm.liveswitch.ClientStateMachine,_this.__joining=new Array,_this.__leaving=new Array,_this.__earlyChannelMessages=new fm.liveswitch.ManagedConcurrentDictionary,fm.liveswitch.StringExtensions.isNullOrEmpty(gatewayUrl_9))throw new fm.liveswitch.Exception("Gateway URL cannot be null or empty.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(applicationId_10))throw new fm.liveswitch.Exception("Application ID cannot be null or empty.");_this.setGatewayUrl(gatewayUrl_9),_this.setApplicationId(applicationId_10),fm.liveswitch.Global.equals(clientId_4,null)||(_this.setExternalId(clientId_4),clientId_4=null,fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client IDs are automatically generated. The provided client ID '{0}' will be moved to the ExternalId property and replaced with a generated ID.",_this.getExternalId()))),_this.setUserId(fm.liveswitch.StringExtensions.nullCoalesce(userId_9,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setDeviceId(fm.liveswitch.StringExtensions.nullCoalesce(deviceId_7,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setId(fm.liveswitch.StringExtensions.nullCoalesce(clientId_4,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.__roles=roles_3,_this.__region=region,_this.__channels=new fm.liveswitch.ManagedConcurrentDictionary,(client=new fm.liveswitch.signalling.Client(_this.getGatewayUrl(),_this.__lock)).setDisableBinary(!0),client.setRequestMaxRetries(3),_this.__gatewayClient=client,_this.__sendQueue=new fm.liveswitch.SendQueue(new fm.liveswitch.SignallingSendQueueTransport(_this.__gatewayClient)),_this.__gatewayClient.addOnServerSubscribe(_this._gatewayClient_OnServerSubscribe.bind(_this)),_this.__gatewayClient.addOnStateChange(_this._gatewayClient_OnStateChange.bind(_this)),_this.__gatewayClient.addOnHttpRequestCreated(_this._gatewayClient_OnHttpRequestCreated.bind(_this)),_this.__gatewayClient.addOnHttpResponseReceived(_this._gatewayClient_OnHttpResponseReceived.bind(_this))}else if(5==__arguments.length){gatewayUrl=__arguments[0],applicationId=__arguments[1],userId=__arguments[2],deviceId=__arguments[3],clientId=__arguments[4];(__arguments=new Array(6))[0]=gatewayUrl,__arguments[1]=applicationId,__arguments[2]=userId,__arguments[3]=deviceId,__arguments[4]=clientId,__arguments[5]=null;var gatewayUrl_10=__arguments[0],applicationId_11=__arguments[1],userId_10=__arguments[2],deviceId_8=__arguments[3],clientId_5=__arguments[4];roles=__arguments[5];(__arguments=new Array(7))[0]=gatewayUrl_10,__arguments[1]=applicationId_11,__arguments[2]=userId_10,__arguments[3]=deviceId_8,__arguments[4]=clientId_5,__arguments[5]=roles,__arguments[6]=null;var gatewayUrl_11=__arguments[0],applicationId_12=__arguments[1],userId_11=__arguments[2],deviceId_9=__arguments[3],clientId_6=__arguments[4],roles_4=__arguments[5];region=__arguments[6];if((_this=_super.call(this)||this).fmliveswitchClientInit(),_this.__lock=new Object,_this.__registrationRateLimiter=new fm.liveswitch.RateLimiter,_this.__joinRateLimiters=new fm.liveswitch.ManagedConcurrentDictionary,_this.__joinBackoffTimers=new fm.liveswitch.ManagedConcurrentDictionary,_this.__stateMachine=new fm.liveswitch.ClientStateMachine,_this.__joining=new Array,_this.__leaving=new Array,_this.__earlyChannelMessages=new fm.liveswitch.ManagedConcurrentDictionary,fm.liveswitch.StringExtensions.isNullOrEmpty(gatewayUrl_11))throw new fm.liveswitch.Exception("Gateway URL cannot be null or empty.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(applicationId_12))throw new fm.liveswitch.Exception("Application ID cannot be null or empty.");_this.setGatewayUrl(gatewayUrl_11),_this.setApplicationId(applicationId_12),fm.liveswitch.Global.equals(clientId_6,null)||(_this.setExternalId(clientId_6),clientId_6=null,fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client IDs are automatically generated. The provided client ID '{0}' will be moved to the ExternalId property and replaced with a generated ID.",_this.getExternalId()))),_this.setUserId(fm.liveswitch.StringExtensions.nullCoalesce(userId_11,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setDeviceId(fm.liveswitch.StringExtensions.nullCoalesce(deviceId_9,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setId(fm.liveswitch.StringExtensions.nullCoalesce(clientId_6,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.__roles=roles_4,_this.__region=region,_this.__channels=new fm.liveswitch.ManagedConcurrentDictionary,(client=new fm.liveswitch.signalling.Client(_this.getGatewayUrl(),_this.__lock)).setDisableBinary(!0),client.setRequestMaxRetries(3),_this.__gatewayClient=client,_this.__sendQueue=new fm.liveswitch.SendQueue(new fm.liveswitch.SignallingSendQueueTransport(_this.__gatewayClient)),_this.__gatewayClient.addOnServerSubscribe(_this._gatewayClient_OnServerSubscribe.bind(_this)),_this.__gatewayClient.addOnStateChange(_this._gatewayClient_OnStateChange.bind(_this)),_this.__gatewayClient.addOnHttpRequestCreated(_this._gatewayClient_OnHttpRequestCreated.bind(_this)),_this.__gatewayClient.addOnHttpResponseReceived(_this._gatewayClient_OnHttpResponseReceived.bind(_this))}else if(6==__arguments.length){gatewayUrl=__arguments[0],applicationId=__arguments[1],userId=__arguments[2],deviceId=__arguments[3],clientId=__arguments[4],roles=__arguments[5];(__arguments=new Array(7))[0]=gatewayUrl,__arguments[1]=applicationId,__arguments[2]=userId,__arguments[3]=deviceId,__arguments[4]=clientId,__arguments[5]=roles,__arguments[6]=null;var gatewayUrl_12=__arguments[0],applicationId_13=__arguments[1],userId_12=__arguments[2],deviceId_10=__arguments[3],clientId_7=__arguments[4],roles_5=__arguments[5];region=__arguments[6];if((_this=_super.call(this)||this).fmliveswitchClientInit(),_this.__lock=new Object,_this.__registrationRateLimiter=new fm.liveswitch.RateLimiter,_this.__joinRateLimiters=new fm.liveswitch.ManagedConcurrentDictionary,_this.__joinBackoffTimers=new fm.liveswitch.ManagedConcurrentDictionary,_this.__stateMachine=new fm.liveswitch.ClientStateMachine,_this.__joining=new Array,_this.__leaving=new Array,_this.__earlyChannelMessages=new fm.liveswitch.ManagedConcurrentDictionary,fm.liveswitch.StringExtensions.isNullOrEmpty(gatewayUrl_12))throw new fm.liveswitch.Exception("Gateway URL cannot be null or empty.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(applicationId_13))throw new fm.liveswitch.Exception("Application ID cannot be null or empty.");_this.setGatewayUrl(gatewayUrl_12),_this.setApplicationId(applicationId_13),fm.liveswitch.Global.equals(clientId_7,null)||(_this.setExternalId(clientId_7),clientId_7=null,fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client IDs are automatically generated. The provided client ID '{0}' will be moved to the ExternalId property and replaced with a generated ID.",_this.getExternalId()))),_this.setUserId(fm.liveswitch.StringExtensions.nullCoalesce(userId_12,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setDeviceId(fm.liveswitch.StringExtensions.nullCoalesce(deviceId_10,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setId(fm.liveswitch.StringExtensions.nullCoalesce(clientId_7,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.__roles=roles_5,_this.__region=region,_this.__channels=new fm.liveswitch.ManagedConcurrentDictionary,(client=new fm.liveswitch.signalling.Client(_this.getGatewayUrl(),_this.__lock)).setDisableBinary(!0),client.setRequestMaxRetries(3),_this.__gatewayClient=client,_this.__sendQueue=new fm.liveswitch.SendQueue(new fm.liveswitch.SignallingSendQueueTransport(_this.__gatewayClient)),_this.__gatewayClient.addOnServerSubscribe(_this._gatewayClient_OnServerSubscribe.bind(_this)),_this.__gatewayClient.addOnStateChange(_this._gatewayClient_OnStateChange.bind(_this)),_this.__gatewayClient.addOnHttpRequestCreated(_this._gatewayClient_OnHttpRequestCreated.bind(_this)),_this.__gatewayClient.addOnHttpResponseReceived(_this._gatewayClient_OnHttpResponseReceived.bind(_this))}else{if(7!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var client;gatewayUrl=__arguments[0],applicationId=__arguments[1],userId=__arguments[2],deviceId=__arguments[3],clientId=__arguments[4],roles=__arguments[5],region=__arguments[6];if((_this=_super.call(this)||this).fmliveswitchClientInit(),_this.__lock=new Object,_this.__registrationRateLimiter=new fm.liveswitch.RateLimiter,_this.__joinRateLimiters=new fm.liveswitch.ManagedConcurrentDictionary,_this.__joinBackoffTimers=new fm.liveswitch.ManagedConcurrentDictionary,_this.__stateMachine=new fm.liveswitch.ClientStateMachine,_this.__joining=new Array,_this.__leaving=new Array,_this.__earlyChannelMessages=new fm.liveswitch.ManagedConcurrentDictionary,fm.liveswitch.StringExtensions.isNullOrEmpty(gatewayUrl))throw new fm.liveswitch.Exception("Gateway URL cannot be null or empty.");if(fm.liveswitch.StringExtensions.isNullOrEmpty(applicationId))throw new fm.liveswitch.Exception("Application ID cannot be null or empty.");_this.setGatewayUrl(gatewayUrl),_this.setApplicationId(applicationId),fm.liveswitch.Global.equals(clientId,null)||(_this.setExternalId(clientId),clientId=null,fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client IDs are automatically generated. The provided client ID '{0}' will be moved to the ExternalId property and replaced with a generated ID.",_this.getExternalId()))),_this.setUserId(fm.liveswitch.StringExtensions.nullCoalesce(userId,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setDeviceId(fm.liveswitch.StringExtensions.nullCoalesce(deviceId,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.setId(fm.liveswitch.StringExtensions.nullCoalesce(clientId,fm.liveswitch.StringExtensions.replace(fm.liveswitch.Guid.newGuid().toString(),"-",""))),_this.__roles=roles,_this.__region=region,_this.__channels=new fm.liveswitch.ManagedConcurrentDictionary,(client=new fm.liveswitch.signalling.Client(_this.getGatewayUrl(),_this.__lock)).setDisableBinary(!0),client.setRequestMaxRetries(3),_this.__gatewayClient=client,_this.__sendQueue=new fm.liveswitch.SendQueue(new fm.liveswitch.SignallingSendQueueTransport(_this.__gatewayClient)),_this.__gatewayClient.addOnServerSubscribe(_this._gatewayClient_OnServerSubscribe.bind(_this)),_this.__gatewayClient.addOnStateChange(_this._gatewayClient_OnStateChange.bind(_this)),_this.__gatewayClient.addOnHttpRequestCreated(_this._gatewayClient_OnHttpRequestCreated.bind(_this)),_this.__gatewayClient.addOnHttpResponseReceived(_this._gatewayClient_OnHttpResponseReceived.bind(_this))}return _this}return __extends(Client,_super),Client.prototype.getTypeString=function(){return"[fm.liveswitch.Client],"+_super.prototype.getTypeString.call(this)},Client.prototype.fmliveswitchClientInit=function(){var _this=this;this.__onHttpRequestCreated=[],this.__onHttpResponseReceived=[],this.__onRemoteUpdate=[],this.__onStateChange=[],this._onHttpRequestCreated=function(p0){for(var _i=0,_a=_this.__onHttpRequestCreated;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onHttpResponseReceived=function(p0){for(var _i=0,_a=_this.__onHttpResponseReceived;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onRemoteUpdate=function(p0,p1){for(var _i=0,_a=_this.__onRemoteUpdate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onStateChange=function(p0){for(var _i=0,_a=_this.__onStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}}},Client.prototype._gatewayClient_OnHttpRequestCreated=function(args){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onHttpRequestCreated=this._onHttpRequestCreated;fm.liveswitch.Global.equals(onHttpRequestCreated,null)||onHttpRequestCreated(args)},Client.prototype._gatewayClient_OnHttpResponseReceived=function(args){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onHttpResponseReceived=this._onHttpResponseReceived;fm.liveswitch.Global.equals(onHttpResponseReceived,null)||onHttpResponseReceived(args)},Client.prototype._gatewayClient_OnServerSubscribe=function(args){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");args.setOnReceive((function(e){_this.receive(fm.liveswitch.Message.fromJson(e.getDataJson()))}))},Client.prototype._gatewayClient_OnStateChange=function(client){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(client.getState(),fm.liveswitch.signalling.ClientState.Connected))this.setState(fm.liveswitch.ClientState.Registered),this.__sendQueue.trySendPending();else if(fm.liveswitch.Global.equals(client.getState(),fm.liveswitch.signalling.ClientState.Disconnecting))this.dispatchCloseAll(this.getChannels());else if(fm.liveswitch.Global.equals(client.getState(),fm.liveswitch.signalling.ClientState.Disconnected)){(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registered)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registering))&&this.setState(fm.liveswitch.ClientState.Unregistering),this.setState(fm.liveswitch.ClientState.Unregistered),this.dispatchCloseAll(this.getChannels()),fm.liveswitch.ArrayExtensions.clear(this.__joining),fm.liveswitch.ArrayExtensions.clear(this.__leaving),this.__sendQueue.clear();for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var channel=_a[_i];this.removeChannel(channel.getId())}}},Client.prototype.addChannel=function(channelId){if(1==arguments.length)return this.__channels.getOrAdd(channelId,this.createChannel.bind(this));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.addOnHttpRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onHttpRequestCreated,value)},Client.prototype.addOnHttpResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onHttpResponseReceived,value)},Client.prototype.addOnRemoteUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteUpdate,value)},Client.prototype.addOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStateChange,value)},Client.prototype.attachChannelEvents=function(channel,channelId){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");channel.addOnKick((function(){channel.closeAll(),_this.removeChannel(channelId)}))},Client.prototype.closeAll=function(){if(0==arguments.length)return this.doCloseAll(this.getChannels());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.createChannel=function(channelId){if(1==arguments.length){var channel=new fm.liveswitch.Channel(this.__lock,new fm.liveswitch.ConnectionFactory,this.getApplicationId(),this.getUserId(),this.getUserAlias(),this.getDeviceId(),this.getDeviceAlias(),this.getId(),this.getTag(),this.getRoles(),channelId,this.send.bind(this));return this.attachChannelEvents(channel,channelId),channel}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.delayJoin=function(info,backoff){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");backoff=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.ManagedThread.dispatch((function(){var timer=null,_var0=new fm.liveswitch.Holder(timer),_var1=_this.__joinBackoffTimers.tryGetValue(info.getChannelId(),_var0);timer=_var0.getValue(),_var1&&!fm.liveswitch.Global.equals(timer,null)&&timer.stop(),timer=new fm.liveswitch.TimeoutTimer(_this.tryJoin.bind(_this),info),_this.__joinBackoffTimers.addOrUpdate(info.getChannelId(),timer),timer.start(backoff)}))},Client.prototype.delayRegistration=function(backoff){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");backoff=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.ManagedThread.dispatch((function(){_this.__registrationBackoffTimer.start(backoff)}))},Client.prototype.dispatchCloseAll=function(channels){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ManagedThread.dispatch((function(){_this.doCloseAll(channels)}))},Client.prototype.doCloseAll=function(channels){if(1==arguments.length){fm.liveswitch.Client.fm_liveswitch_Client___log.debug(this.getId(),"Closing all connections.");for(var list=new Array,_i=0,channels_3=channels;_i<channels_3.length;_i++){var channel=channels_3[_i];fm.liveswitch.ArrayExtensions.add(list,channel.closeAll())}return fm.liveswitch.PromiseBase.all(fm.liveswitch.ArrayExtensions.toArray(list))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.doDisconnect=function(promise,timestamp,channelReports){var _this=this;if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");timestamp=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Client.fm_liveswitch_Client___log.debug(this.getId(),"Sending unregister request.");var disconnectArgs=new fm.liveswitch.signalling.DisconnectArgs;disconnectArgs.setMetaJson(fm.liveswitch.Message.createUnregisterMessage(channelReports).toJson()),disconnectArgs.setOnComplete((function(e){var num=fm.liveswitch.MathAssistant.floor((fm.liveswitch.ManagedStopwatch.getTimestamp()-timestamp)/fm.liveswitch.Constants.getTicksPerMillisecond());fm.liveswitch.Client.fm_liveswitch_Client___log.info(_this.getId(),fm.liveswitch.StringExtensions.format("Client {0} took {1}ms to unregister.",_this.getId(),fm.liveswitch.NumberExtensions.toString(num))),fm.liveswitch.Global.equals(e.getException(),null)||fm.liveswitch.Client.fm_liveswitch_Client___log.error(_this.getId(),"Could not send unregister message.",e.getException()),promise.resolve(null)})),this.__gatewayClient.disconnect(disconnectArgs)},Client.prototype.doJoin=function(promise,channelId,token,timestamp){var _this=this;if(4==arguments.length)return timestamp=fm.liveswitch.Global.toInt(arguments[3]),fm.liveswitch.Client.fm_liveswitch_Client___log.debug(this.getId(),"Sending join request."),this.send(fm.liveswitch.Message.createJoinMessage(channelId,token)).then((function(response){var num=fm.liveswitch.MathAssistant.floor((fm.liveswitch.ManagedStopwatch.getTimestamp()-timestamp)/fm.liveswitch.Constants.getTicksPerMillisecond());if(fm.liveswitch.Client.fm_liveswitch_Client___log.info(_this.getId(),fm.liveswitch.StringExtensions.format("Client {0} took {1}ms to join {2}.",_this.getId(),fm.liveswitch.NumberExtensions.toString(num),channelId)),!fm.liveswitch.Global.equals(response,null)&&fm.liveswitch.Global.equals(response.getType(),fm.liveswitch.MessageType.getError())){fm.liveswitch.ArrayExtensions.remove(_this.__joining,channelId);var str=null;fm.liveswitch.Global.equals(response.getPayload(),null)||(str=fm.liveswitch.JsonSerializer.deserializeString(response.getPayload())),fm.liveswitch.Global.equals(str,null)?promise.reject(new fm.liveswitch.Exception("Gateway declined join request.")):promise.reject(new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.concat("Gateway declined join request. ",str)))}else{var result=_this.addChannel(channelId);fm.liveswitch.ArrayExtensions.remove(_this.__joining,channelId);var limiter=null,_var0=new fm.liveswitch.Holder(limiter),_var1=_this.__joinRateLimiters.tryGetValue(channelId,_var0);limiter=_var0.getValue(),_var1&&limiter.reset(),fm.liveswitch.Global.equals(response,null)||(fm.liveswitch.Global.equals(response.getType(),fm.liveswitch.MessageType.getNotifyJoin())?result.processMessageSync(response):fm.liveswitch.Client.fm_liveswitch_Client___log.warn(_this.getId(),fm.liveswitch.StringExtensions.concat("Unexpected message in join response: ",response.toJson())));var list=null,_var2=new fm.liveswitch.Holder(list);_this.__earlyChannelMessages.tryRemove(channelId,_var2);if(list=_var2.getValue(),!fm.liveswitch.Global.equals(list,null))for(var _i=0,list_7=list;_i<list_7.length;_i++){var message=list_7[_i];result.processMessageAsync(message)}promise.resolve(result)}}),(function(ex){fm.liveswitch.Client.fm_liveswitch_Client___log.error(_this.getId(),"Could not send join message.",ex),fm.liveswitch.ArrayExtensions.remove(_this.__joining,channelId),promise.reject(ex)})),promise;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.doLeave=function(promise,channelId,timestamp){if(3==arguments.length){timestamp=fm.liveswitch.Global.toInt(arguments[2]),fm.liveswitch.Client.fm_liveswitch_Client___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Leaving channel {0}.",channelId));var channel=null;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistering))return promise.reject(new fm.liveswitch.Exception("Client is unregistering.")),promise;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.New)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistered))return promise.reject(new fm.liveswitch.Exception("Client is not registered.")),promise;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registering))return promise.reject(new fm.liveswitch.Exception("Client is registering.")),promise;var _var0=new fm.liveswitch.Holder(channel),_var1=this.__channels.tryGetValue(channelId,_var0);return channel=_var0.getValue(),_var1?fm.liveswitch.ArrayExtensions.contains(this.__leaving,channelId)?(promise.reject(new fm.liveswitch.Exception("Client is already leaving.")),promise):fm.liveswitch.ArrayExtensions.contains(this.__joining,channelId)?(promise.reject(new fm.liveswitch.Exception("Client is currently joining.")),promise):(fm.liveswitch.ArrayExtensions.add(this.__leaving,channelId),this.doLeaveChannel(promise,channelId,channel,timestamp),promise):(promise.resolve(null),promise)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.doLeaveChannel=function(promise,channelId,channel,timestamp){var _this=this;if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");timestamp=fm.liveswitch.Global.toInt(arguments[3]),fm.liveswitch.Client.fm_liveswitch_Client___log.debug(this.getId(),"Sending leave request."),this.send(fm.liveswitch.Message.createLeaveMessage(channelId,channel.getReport())).then((function(response){var num=fm.liveswitch.MathAssistant.floor((fm.liveswitch.ManagedStopwatch.getTimestamp()-timestamp)/fm.liveswitch.Constants.getTicksPerMillisecond());if(fm.liveswitch.Client.fm_liveswitch_Client___log.info(_this.getId(),fm.liveswitch.StringExtensions.format("Client {0} took {1}ms to leave {2}.",_this.getId(),fm.liveswitch.NumberExtensions.toString(num),channelId)),!fm.liveswitch.Global.equals(response,null)&&fm.liveswitch.Global.equals(response.getType(),fm.liveswitch.MessageType.getError())){fm.liveswitch.ArrayExtensions.remove(_this.__leaving,channelId);var str=null;fm.liveswitch.Global.equals(response.getPayload(),null)||(str=fm.liveswitch.JsonSerializer.deserializeString(response.getPayload())),fm.liveswitch.Global.equals(str,null)?promise.reject(new fm.liveswitch.Exception("Gateway declined leave request.")):promise.reject(new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.concat("Gateway declined leave request. ",str)))}else _this.removeChannel(channelId),fm.liveswitch.ArrayExtensions.remove(_this.__leaving,channelId),fm.liveswitch.Global.equals(channel,null)||channel.closeAll(),fm.liveswitch.Global.equals(response,null)||fm.liveswitch.Client.fm_liveswitch_Client___log.warn(_this.getId(),fm.liveswitch.StringExtensions.concat("Unexpected message in leave response: ",response.toJson())),promise.resolve(null)}),(function(ex){fm.liveswitch.Client.fm_liveswitch_Client___log.error(_this.getId(),"Could not send leave message.",ex),fm.liveswitch.ArrayExtensions.remove(_this.__leaving,channelId),promise.reject(ex)}))},Client.prototype.doRegister=function(promise,token,timestamp){var _this=this;if(3==arguments.length){timestamp=fm.liveswitch.Global.toInt(arguments[2]);var args2=new fm.liveswitch.signalling.ConnectArgs;args2.setMetaJson(fm.liveswitch.Message.createRegisterMessage(this.getApplicationId(),this.getUserId(),this.getUserAlias(),this.getDeviceId(),this.getDeviceAlias(),this.getId(),this.getTag(),this.getRoles(),this.getRegion(),token).toJson()),args2.setOnSuccess((function(e){var num=fm.liveswitch.MathAssistant.floor((fm.liveswitch.ManagedStopwatch.getTimestamp()-timestamp)/fm.liveswitch.Constants.getTicksPerMillisecond());fm.liveswitch.Client.fm_liveswitch_Client___log.info(_this.getId(),fm.liveswitch.StringExtensions.format("Client {0} took {1}ms to register.",_this.getId(),fm.liveswitch.NumberExtensions.toString(num))),_this.__registrationRateLimiter.reset();try{var token1=fm.liveswitch.Token.parse(token);fm.liveswitch.Global.equals(token1,null)||(fm.liveswitch.Global.equals(token1.getClientRoles(),null)||(_this.__roles=token1.getClientRoles()),fm.liveswitch.Global.equals(token1.getRegion(),null)||(_this.__region=token1.getRegion()))}catch(exception){fm.liveswitch.Client.fm_liveswitch_Client___log.error("Could not parse register token to extract roles/region.",exception)}if(!fm.liveswitch.Global.equals(e.getMetaJson(),null)){var messageArray=fm.liveswitch.Message.fromJsonArray(e.getMetaJson());if(fm.liveswitch.Global.equals(messageArray,null))fm.liveswitch.Client.fm_liveswitch_Client___log.error(_this.getId(),"Could not parse messages in register response.");else for(var _i=0,messageArray_1=messageArray;_i<messageArray_1.length;_i++){var message=messageArray_1[_i];fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getNotifyJoin())?_this.addChannel(message.getChannelId()).processMessageSync(message):fm.liveswitch.Client.fm_liveswitch_Client___log.warn(_this.getId(),fm.liveswitch.StringExtensions.concat("Unexpected message in register response: ",message.toJson()))}}promise.resolve(_this.getChannels())})),args2.setOnFailure((function(e){fm.liveswitch.Client.fm_liveswitch_Client___log.error(_this.getId(),"Could not send register message.",e.getException()),_this.setState(fm.liveswitch.ClientState.Unregistering),_this.setState(fm.liveswitch.ClientState.Unregistered),promise.reject(e.getException())}));var connectArgs=args2,info=this.getInfo();return fm.liveswitch.Global.equals(info.getArchitecture(),null)||connectArgs.setExtensionValueJson("architecture",fm.liveswitch.JsonSerializer.serializeString(info.getArchitecture())),fm.liveswitch.Global.equals(info.getCoreCount(),0)||connectArgs.setExtensionValueJson("coreCount",fm.liveswitch.JsonSerializer.serializeInteger(info.getCoreCount())),fm.liveswitch.Global.equals(info.getMachineName(),null)||connectArgs.setExtensionValueJson("machineName",fm.liveswitch.JsonSerializer.serializeString(info.getMachineName())),fm.liveswitch.Global.equals(info.getOperatingSystem(),null)||connectArgs.setExtensionValueJson("operatingSystem",fm.liveswitch.JsonSerializer.serializeString(info.getOperatingSystem())),fm.liveswitch.Global.equals(info.getOperatingSystemVersion(),null)||connectArgs.setExtensionValueJson("operatingSystemVersion",fm.liveswitch.JsonSerializer.serializeString(info.getOperatingSystemVersion())),fm.liveswitch.Global.equals(info.getPhysicalMemory(),0)||connectArgs.setExtensionValueJson("physicalMemory",fm.liveswitch.JsonSerializer.serializeLong(info.getPhysicalMemory())),fm.liveswitch.Global.equals(info.getSourceLanguage(),null)||connectArgs.setExtensionValueJson("sourceLanguage",fm.liveswitch.JsonSerializer.serializeString(info.getSourceLanguage())),fm.liveswitch.Client.fm_liveswitch_Client___log.debug(this.getId(),"Sending register request."),this.__gatewayClient.connect(connectArgs),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.doUnregister=function(){var _this=this;if(2==arguments.length){var promise=arguments[0],timestamp=fm.liveswitch.Global.toInt(arguments[1]);if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistering))return promise.reject(new fm.liveswitch.Exception("Client is already unregistering.")),promise;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registering))return promise.reject(new fm.liveswitch.Exception("Client is currently registering.")),promise;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistered)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.New))return promise.resolve(null),promise;this.setState(fm.liveswitch.ClientState.Unregistering),fm.liveswitch.Client.fm_liveswitch_Client___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Unregistering from application {0}.",this.getApplicationId()));for(var list=new Array,_i=0,_a=this.getChannels();_i<_a.length;_i++){var channel=_a[_i];fm.liveswitch.ArrayExtensions.add(list,channel.getReport())}return this.doUnregister(promise,timestamp,fm.liveswitch.ArrayExtensions.toArray(list)),promise}if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var promise_3=arguments[0],timestamp_3=fm.liveswitch.Global.toInt(arguments[1]),channelReports_1=arguments[2];this.closeAll().then((function(o){_this.doDisconnect(promise_3,timestamp_3,channelReports_1)}),(function(ex){fm.liveswitch.Client.fm_liveswitch_Client___log.warn("An exception was encountered while closing connections before unregistering.",ex),_this.doDisconnect(promise_3,timestamp_3,channelReports_1)}))},Client.prototype.getApplicationId=function(){if(0==arguments.length)return this._applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getAutoUnregister=function(){if(0==arguments.length)return this.__gatewayClient.getAutoDisconnect();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getChannels=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=this.__channels.getValues();_i<_a.length;_i++){var channel=_a[_i];fm.liveswitch.ArrayExtensions.add(list,channel)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getConfig=function(){if(0==arguments.length){var config=new fm.liveswitch.ClientConfig;return config.setUserAlias(this.getUserAlias()),config.setDeviceAlias(this.getDeviceAlias()),config.setTag(this.getTag()),config.setRoles(this.getRoles()),config}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDeviceAlias=function(){if(0==arguments.length)return this.__deviceAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDisableCors=function(){if(0==arguments.length)return this.__gatewayClient.getDisableCors();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDisableJsonp=function(){if(0==arguments.length)return this.__gatewayClient.getDisableJsonp();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDisablePostMessage=function(){if(0==arguments.length)return this.__gatewayClient.getDisablePostMessage();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDisableWebSockets=function(){if(0==arguments.length)return this.__gatewayClient.getDisableWebSockets();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getExternalId=function(){if(0==arguments.length)return this._externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getForceJsonp=function(){if(0==arguments.length)return this.__gatewayClient.getForceJsonp();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getGatewayUrl=function(){if(0==arguments.length)return this._gatewayUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getInfo=function(){if(0==arguments.length){var info=new fm.liveswitch.ClientInfo;return info.setApplicationId(this.getApplicationId()),info.setArchitecture(fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ArchitectureWrapper(fm.liveswitch.Platform.getInstance().getArchitecture()).toString())),info.setCoreCount(fm.liveswitch.Platform.getInstance().getCoreCount()),info.setDeviceAlias(this.getDeviceAlias()),info.setDeviceId(this.getDeviceId()),info.setExternalId(this.getExternalId()),info.setId(this.getId()),info.setMachineName(fm.liveswitch.Platform.getInstance().getMachineName()),info.setOperatingSystem(fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.OperatingSystemWrapper(fm.liveswitch.Platform.getInstance().getOperatingSystem()).toString())),info.setOperatingSystemVersion(fm.liveswitch.Platform.getInstance().getOperatingSystemVersion()),info.setPhysicalMemory(fm.liveswitch.Platform.getInstance().getPhysicalMemory()),info.setRegion(this.getRegion()),info.setRoles(this.getRoles()),info.setSourceLanguage(fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.SourceLanguageWrapper(fm.liveswitch.Platform.getInstance().getSourceLanguage()).toString())),info.setTag(this.getTag()),info.setUserAlias(this.getUserAlias()),info.setUserId(this.getUserId()),info.setVersion(fm.liveswitch.Build.getVersion()),info}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getRegion=function(){if(0==arguments.length)return this.__region;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getRequestMaxRetries=function(){if(0==arguments.length)return this.__gatewayClient.getRequestMaxRetries();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getRequestTimeout=function(){if(0==arguments.length)return this.__gatewayClient.getRequestTimeout();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getRoles=function(){if(0==arguments.length)return this.__roles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getState=function(){if(0==arguments.length)return this.__stateMachine.getState();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getTag=function(){if(0==arguments.length)return this.__tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getUnregisterException=function(){if(0==arguments.length)return this.__gatewayClient.getDisconnectException();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getUserAlias=function(){if(0==arguments.length)return this.__userAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.join=function(){if(2==arguments.length){var channelId=arguments[0],token=arguments[1],promise=new fm.liveswitch.Promise,message=null,channelClaim=null,_var0=new fm.liveswitch.Holder(channelClaim),_var1=new fm.liveswitch.Holder(message),_var2=this.validateJoinToken(token,_var0,_var1);if(channelClaim=_var0.getValue(),message=_var1.getValue(),!_var2)return promise.reject(new fm.liveswitch.Exception(message)),promise;if(!fm.liveswitch.Global.equals(channelId,null)&&!fm.liveswitch.Global.equals(channelId,channelClaim.getId()))return promise.reject(new fm.liveswitch.Exception("Token channel claim ID does not match channel ID.")),promise;channelId=channelClaim.getId();var info=new fm.liveswitch.ChannelJoinInfo(promise,channelId,token,fm.liveswitch.ManagedStopwatch.getTimestamp());return this.verifyChannelJoin(info)?fm.liveswitch.ArrayExtensions.contains(this.__joining,channelId)?(promise.reject(new fm.liveswitch.Exception("Client is already joining.")),promise):(fm.liveswitch.ArrayExtensions.add(this.__joining,channelId),fm.liveswitch.Client.fm_liveswitch_Client___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Joining channel {0}.",channelId)),this.tryJoin(info),promise):promise}if(1==arguments.length){token=arguments[0];return this.join(null,token)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.leave=function(channelId){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doLeave(promise,channelId,fm.liveswitch.ManagedStopwatch.getTimestamp()),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.logInvalidStateTransition=function(state){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Client.fm_liveswitch_Client___log.getIsDebugEnabled()&&fm.liveswitch.Client.fm_liveswitch_Client___log.debug(fm.liveswitch.StringExtensions.format("Client {0} state is currently {1}. Cannot transition to {2}.",this.getId(),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ClientStateWrapper(this.getState()).toString()),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ClientStateWrapper(state).toString())))},Client.prototype.processChannelMessage=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var channel=null,channelId=message.getChannelId(),_var0=new fm.liveswitch.Holder(channel),_var1=this.__channels.tryGetValue(channelId,_var0);channel=_var0.getValue(),_var1||fm.liveswitch.ArrayExtensions.add(this.__earlyChannelMessages.getOrAdd(channelId,(function(key){return new Array})),message),fm.liveswitch.Global.equals(channel,null)||channel.processMessageAsync(message)},Client.prototype.processMessage=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(message,null))throw new fm.liveswitch.Exception("Message is null.");if(fm.liveswitch.Global.equals(message.getChannelId(),null))if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getUpdate())){var clientConfig=fm.liveswitch.ClientConfig.fromJson(message.getPayload()),info=new fm.liveswitch.ClientInfo(this.getUserId(),this.getUserAlias(),this.getDeviceId(),this.getDeviceAlias(),this.getId(),this.getTag(),this.getRoles()),info2=new fm.liveswitch.ClientInfo(this.getUserId(),fm.liveswitch.StringExtensions.nullCoalesce(clientConfig.getUserAlias(),this.getUserAlias()),this.getDeviceId(),fm.liveswitch.StringExtensions.nullCoalesce(clientConfig.getDeviceAlias(),this.getDeviceAlias()),this.getId(),fm.liveswitch.StringExtensions.nullCoalesce(clientConfig.getTag(),this.getTag()),clientConfig.getRoles()||this.getRoles());this.__userAlias=info2.getUserAlias(),this.__deviceAlias=info2.getDeviceAlias(),this.__tag=info2.getTag(),this.__roles=info2.getRoles(),this.__region=info2.getRegion();for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var channel=_a[_i];channel.updateClientConfig(clientConfig)}var onRemoteUpdate=this._onRemoteUpdate;fm.liveswitch.Global.equals(onRemoteUpdate,null)||onRemoteUpdate(info,info2)}else fm.liveswitch.Client.fm_liveswitch_Client___log.error(this.getId(),fm.liveswitch.StringExtensions.concat("Unexpected message: ",message.toJson()));else this.processChannelMessage(message)},Client.prototype.receive=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{if(fm.liveswitch.Client.fm_liveswitch_Client___log.getIsDebugEnabled()){var str=void 0;str=fm.liveswitch.Global.equals(message.getPayload(),null)?fm.liveswitch.StringExtensions.format("Receiving {0} message for channel {1}.",message.getType(),message.getChannelId()):fm.liveswitch.StringExtensions.format("Receiving {0} message for channel {1}: {2}",message.getType(),message.getChannelId(),message.getPayload()),fm.liveswitch.Client.fm_liveswitch_Client___log.debug(this.getId(),str)}this.processMessage(message)}catch(exception){fm.liveswitch.Client.fm_liveswitch_Client___log.error(this.getId(),"Could not process message.",exception)}},Client.prototype.register=function(token){if(1==arguments.length){var promise=new fm.liveswitch.Promise,token2=fm.liveswitch.Token.parse(token);if(fm.liveswitch.Global.equals(token2,null))return promise.reject(new fm.liveswitch.Exception("Could not parse token.")),promise;var channelClaims=token2.getChannelClaims();if(!fm.liveswitch.Global.equals(channelClaims,null))for(var _i=0,channelClaims_1=channelClaims;_i<channelClaims_1.length;_i++){var claim=channelClaims_1[_i];if(fm.liveswitch.StringExtensions.isNullOrEmpty(claim.getId()))return promise.reject(new fm.liveswitch.Exception("Token channel claim is missing ID.")),promise}return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registered)?(promise.resolve(null),promise):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registering)?(promise.reject(new fm.liveswitch.Exception("Client is already registering.")),promise):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistering)?(promise.reject(new fm.liveswitch.Exception("Client is currently unregistering.")),promise):(this.setState(fm.liveswitch.ClientState.Registering),fm.liveswitch.Client.fm_liveswitch_Client___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Registering to application {0} at {1}.",this.getApplicationId(),this.getGatewayUrl())),this.tryRegister(new fm.liveswitch.ClientRegistrationInfo(promise,token,fm.liveswitch.ManagedStopwatch.getTimestamp())),promise)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.removeChannel=function(channelId){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var channel=null,_var0=new fm.liveswitch.Holder(channel),_var1=this.__channels.tryRemove(channelId,_var0);channel=_var0.getValue(),_var1&&channel.leave()},Client.prototype.removeOnHttpRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onHttpRequestCreated,value)},Client.prototype.removeOnHttpResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onHttpResponseReceived,value)},Client.prototype.removeOnRemoteUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteUpdate,value)},Client.prototype.removeOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStateChange,value)},Client.prototype.rolesAreEquivalent=function(roles1,roles2){if(2==arguments.length){if(!fm.liveswitch.Global.equals(roles1,null)||!fm.liveswitch.Global.equals(roles2,null)){if(fm.liveswitch.Global.equals(roles1,null)||fm.liveswitch.Global.equals(roles2,null))return!1;if(!fm.liveswitch.Global.equals(roles1.length,roles2.length))return!1;for(var i=0;i<roles1.length;i++)if(!fm.liveswitch.Global.equals(roles1[i],roles2[i]))return!1}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.send=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{if(message.setApplicationId(this.getApplicationId()),message.setUserId(this.getUserId()),message.setDeviceId(this.getDeviceId()),message.setClientId(this.getId()),fm.liveswitch.Client.fm_liveswitch_Client___log.getIsDebugEnabled()){var str=void 0;str=fm.liveswitch.Global.equals(message.getPayload(),null)?fm.liveswitch.StringExtensions.format("Sending {0} message.",message.getType()):fm.liveswitch.StringExtensions.format("Sending {0} message: {1}",message.getType(),message.getPayload());var flag=!1;fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getEvent())&&(flag=!0),flag?fm.liveswitch.Client.fm_liveswitch_Client___log.verbose(this.getId(),str):fm.liveswitch.Client.fm_liveswitch_Client___log.debug(this.getId(),str)}return this.__sendQueue.send(message)}catch(exception){var promise=new fm.liveswitch.Promise;return promise.reject(exception),promise}},Client.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._applicationId=value},Client.prototype.setAutoUnregister=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__gatewayClient.setAutoDisconnect(value)},Client.prototype.setDeviceAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registered))throw new fm.liveswitch.Exception("Please use the 'Update' method to update this property after registration.");this.__deviceAlias=value;for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var channel=_a[_i],clientConfig=new fm.liveswitch.ClientConfig;clientConfig.setDeviceAlias(value),channel.updateClientConfig(clientConfig)}},Client.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},Client.prototype.setDisableCors=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__gatewayClient.setDisableCors(value)},Client.prototype.setDisableJsonp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__gatewayClient.setDisableJsonp(value)},Client.prototype.setDisablePostMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__gatewayClient.setDisablePostMessage(value)},Client.prototype.setDisableWebSockets=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__gatewayClient.setDisableWebSockets(value)},Client.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._externalId=value},Client.prototype.setForceJsonp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__gatewayClient.setForceJsonp(value)},Client.prototype.setGatewayUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._gatewayUrl=value},Client.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},Client.prototype.setRequestMaxRetries=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__gatewayClient.setRequestMaxRetries(value)},Client.prototype.setRequestTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__gatewayClient.setRequestTimeout(value)},Client.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(this.__stateMachine.transition(value)){if(fm.liveswitch.Global.equals(value,fm.liveswitch.ClientState.Unregistering)){var timer=this.__registrationBackoffTimer;fm.liveswitch.Global.equals(timer,null)||timer.stop();for(var _i=0,_a=this.__joinBackoffTimers.getValues();_i<_a.length;_i++){var timer2=_a[_i];fm.liveswitch.Global.equals(timer2,null)||timer2.stop()}}fm.liveswitch.Client.fm_liveswitch_Client___log.getIsInfoEnabled()&&fm.liveswitch.Client.fm_liveswitch_Client___log.info(fm.liveswitch.StringExtensions.format("Setting client {0} state to {1}.",this.getId(),fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ClientStateWrapper(this.getState()).toString())),fm.liveswitch.Global.equals(value,fm.liveswitch.ClientState.Unregistering)||fm.liveswitch.Global.equals(value,fm.liveswitch.ClientState.Unregistered)?this.getUnregisterException():null);var onStateChange=this._onStateChange;fm.liveswitch.Global.equals(onStateChange,null)||onStateChange(this)}else fm.liveswitch.Global.equals(this.getState(),value)||this.logInvalidStateTransition(value)},Client.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registered))throw new fm.liveswitch.Exception("Please use the 'Update' method to update this property after registration.");this.__tag=value;for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var channel=_a[_i],clientConfig=new fm.liveswitch.ClientConfig;clientConfig.setTag(value),channel.updateClientConfig(clientConfig)}},Client.prototype.setUserAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registered))throw new fm.liveswitch.Exception("Please use the 'Update' method to update this property after registration.");this.__userAlias=value;for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var channel=_a[_i],clientConfig=new fm.liveswitch.ClientConfig;clientConfig.setUserAlias(value),channel.updateClientConfig(clientConfig)}},Client.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},Client.prototype.tryJoin=function(info){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var backoff=0,info2=fm.liveswitch.Global.tryCast(info,fm.liveswitch.ChannelJoinInfo);if(this.verifyChannelJoin(info2)){var limiter=null,_var0=new fm.liveswitch.Holder(limiter),_var1=this.__joinRateLimiters.tryGetValue(info2.getChannelId(),_var0);limiter=_var0.getValue(),_var1||(limiter=new fm.liveswitch.RateLimiter),(backoff=limiter.checkDelay(fm.liveswitch.ManagedStopwatch.getTimestamp()))>0?(fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client {0} is delaying joining channel {1} by {2} ms. Unsuccessful attempts to join on this channel occurred recently.",this.getId(),info2.getChannelId(),fm.liveswitch.NumberExtensions.toString(backoff))),this.delayJoin(info2,backoff)):this.doJoin(info2.getPromise(),info2.getChannelId(),info2.getToken(),info2.getTimestamp())}},Client.prototype.tryRegister=function(info){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var backoff=0,info2=fm.liveswitch.Global.tryCast(info,fm.liveswitch.ClientRegistrationInfo);fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistering)?info2.getPromise().reject(new fm.liveswitch.Exception("Client is currently unregistering.")):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistered)?info2.getPromise().reject(new fm.liveswitch.Exception("Client is unregistered.")):(backoff=this.__registrationRateLimiter.checkDelay(fm.liveswitch.ManagedStopwatch.getTimestamp()))>0?(fm.liveswitch.Client.fm_liveswitch_Client___log.warn(fm.liveswitch.StringExtensions.format("Client {0} is delaying registering by {1} ms. Unsuccessful attempts to register occurred recently.",this.getId(),fm.liveswitch.NumberExtensions.toString(backoff))),this.__registrationBackoffTimer=new fm.liveswitch.TimeoutTimer(this.tryRegister.bind(this),info),this.delayRegistration(backoff)):this.doRegister(info2.getPromise(),info2.getToken(),info2.getTimestamp())},Client.prototype.unregister=function(){if(0==arguments.length){var promise=new fm.liveswitch.Promise;return this.doUnregister(promise,fm.liveswitch.ManagedStopwatch.getTimestamp()),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.update=function(clientConfig){var _this=this;if(1==arguments.length){var resolveFunction=null,rejectAction=null;if(!this.rolesAreEquivalent(clientConfig.getRoles(),this.getRoles()))return fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("For security reasons, roles cannot be updated from the SDK. Roles can only be updated with the REST API."));var flag=!1;return fm.liveswitch.Global.equals(clientConfig.getUserAlias(),this.getUserAlias())||(flag=!0),fm.liveswitch.Global.equals(clientConfig.getDeviceAlias(),this.getDeviceAlias())||(flag=!0),fm.liveswitch.Global.equals(clientConfig.getTag(),this.getTag())||(flag=!0),flag?(fm.liveswitch.Global.equals(resolveFunction,null)&&(resolveFunction=function(msg){_this.__userAlias=clientConfig.getUserAlias(),_this.__deviceAlias=clientConfig.getDeviceAlias(),_this.__tag=clientConfig.getTag();for(var _i=0,_a=_this.getChannels();_i<_a.length;_i++){_a[_i].updateClientConfig(clientConfig)}return fm.liveswitch.PromiseBase.resolveNow(null)}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){fm.liveswitch.Client.fm_liveswitch_Client___log.error(_this.getId(),"Could not send update message.",ex)}),this.send(fm.liveswitch.Message.createUpdateMessage(clientConfig.toJson())).then(resolveFunction,rejectAction)):fm.liveswitch.PromiseBase.resolveNow(null)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.validateJoinToken=function(token,channelClaim,message){if(3==arguments.length){var token2=fm.liveswitch.Token.parse(token);return fm.liveswitch.Global.equals(token2,null)?(channelClaim.setValue(null),message.setValue("Could not parse token."),!1):(channelClaim.setValue(token2.getChannelClaim()),fm.liveswitch.Global.equals(channelClaim.getValue(),null)?(message.setValue("Token is missing channel claim."),!1):fm.liveswitch.StringExtensions.isNullOrEmpty(channelClaim.getValue().getId())?(message.setValue("Token channel claim is missing ID."),!1):(message.setValue(null),!0))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.verifyChannelJoin=function(info){if(1==arguments.length){var promise=info.getPromise(),channelId=info.getChannelId();if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Registering))return promise.reject(new fm.liveswitch.Exception("Client is registering.")),!1;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistering))return promise.reject(new fm.liveswitch.Exception("Client is unregistering.")),!1;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.New)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ClientState.Unregistered))return promise.reject(new fm.liveswitch.Exception("Client is not registered.")),!1;if(this.__channels.containsKey(channelId)){var channel=null,_var0=new fm.liveswitch.Holder(channel),_var1=this.__channels.tryGetValue(channelId,_var0);if(channel=_var0.getValue(),_var1)return promise.resolve(channel),!1}return!fm.liveswitch.ArrayExtensions.contains(this.__leaving,channelId)||(promise.reject(new fm.liveswitch.Exception("Client is currently leaving.")),!1)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.fmliveswitchClientInitialize=function(){fm.liveswitch.Client.__fmliveswitchClientInitialized||fm.liveswitch.Client.__fmliveswitchClientInitializing||(fm.liveswitch.Client.__fmliveswitchClientInitializing=!0,fm.liveswitch.Client.fm_liveswitch_Client___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.Client]")),fm.liveswitch.Client.__fmliveswitchClientInitialized=!0,fm.liveswitch.Client.__fmliveswitchClientInitializing=!1)},Client.__fmliveswitchClientInitialized=!1,Client.__fmliveswitchClientInitializing=!1,Client}(fm.liveswitch.Dynamic);liveswitch.Client=Client}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ClientRegistrationInfo=function(){function ClientRegistrationInfo(promise,token,timestamp){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var promise_4=__arguments[0],token_2=__arguments[1],timestamp_4=__arguments[2];this.fmliveswitchClientRegistrationInfoInit(),this.setPromise(promise_4),this.setToken(token_2),this.setTimestamp(timestamp_4)}return ClientRegistrationInfo.prototype.getTypeString=function(){return"[fm.liveswitch.ClientRegistrationInfo]"},ClientRegistrationInfo.prototype.fmliveswitchClientRegistrationInfoInit=function(){this._timestamp=0},ClientRegistrationInfo.prototype.getPromise=function(){if(0==arguments.length)return this._promise;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientRegistrationInfo.prototype.getTimestamp=function(){if(0==arguments.length)return this._timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientRegistrationInfo.prototype.getToken=function(){if(0==arguments.length)return this._token;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientRegistrationInfo.prototype.setPromise=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._promise=value},ClientRegistrationInfo.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timestamp=fm.liveswitch.Global.toInt(value)},ClientRegistrationInfo.prototype.setToken=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._token=value},ClientRegistrationInfo}();liveswitch.ClientRegistrationInfo=ClientRegistrationInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ClientStateMachine=function(_super){function ClientStateMachine(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _this=_super.call(this,fm.liveswitch.ClientState.New)||this,_super.prototype.addTransition.call(_this,fm.liveswitch.ClientState.New,fm.liveswitch.ClientState.Registering),_super.prototype.addTransition.call(_this,fm.liveswitch.ClientState.Registering,fm.liveswitch.ClientState.Registered),_super.prototype.addTransition.call(_this,fm.liveswitch.ClientState.Registering,fm.liveswitch.ClientState.Unregistered),_super.prototype.addTransition.call(_this,fm.liveswitch.ClientState.Registered,fm.liveswitch.ClientState.Unregistering),_super.prototype.addTransition.call(_this,fm.liveswitch.ClientState.Unregistering,fm.liveswitch.ClientState.Unregistered),_super.prototype.addTransition.call(_this,fm.liveswitch.ClientState.Unregistered,fm.liveswitch.ClientState.Registering),_this}return __extends(ClientStateMachine,_super),ClientStateMachine.prototype.getTypeString=function(){return"[fm.liveswitch.ClientStateMachine],"+_super.prototype.getTypeString.call(this)},ClientStateMachine.prototype.stateToValue=function(state){if(1==arguments.length)return state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientStateMachine.prototype.valueToState=function(value){if(1==arguments.length)return value=fm.liveswitch.Global.toInt(arguments[0]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientStateMachine}(fm.liveswitch.StateMachine);liveswitch.ClientStateMachine=ClientStateMachine}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionFactory=function(){function ConnectionFactory(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return ConnectionFactory.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionFactory]"},ConnectionFactory.prototype.createMcuConnection=function(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,mediaId){if(11==arguments.length)return new fm.liveswitch.McuConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,mediaId);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionFactory.prototype.createPeerConnection=function(){if(11==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.PeerConnectionOffer]"))){var sharedLock=arguments[0],applicationId=arguments[1],channelId=arguments[2],userId=arguments[3],deviceId=arguments[4],clientId=arguments[5],send=arguments[6],peerConnectionOffer=arguments[7],audioStream=arguments[8],videoStream=arguments[9],dataStream=arguments[10];return new fm.liveswitch.PeerConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,peerConnectionOffer,audioStream,videoStream,dataStream)}if(11==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.ClientInfo]"))){sharedLock=arguments[0],applicationId=arguments[1],channelId=arguments[2],userId=arguments[3],deviceId=arguments[4],clientId=arguments[5],send=arguments[6];var remoteClientInfo=arguments[7];audioStream=arguments[8],videoStream=arguments[9],dataStream=arguments[10];return new fm.liveswitch.PeerConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,remoteClientInfo,audioStream,videoStream,dataStream)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionFactory.prototype.createSfuDownstreamConnection=function(){if(11==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.ConnectionInfo]"))){var sharedLock=arguments[0],applicationId=arguments[1],channelId=arguments[2],userId=arguments[3],deviceId=arguments[4],clientId=arguments[5],send=arguments[6],remoteConnectionInfo=arguments[7],audioStream=arguments[8],videoStream=arguments[9],dataStream=arguments[10];return new fm.liveswitch.SfuDownstreamConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,remoteConnectionInfo,audioStream,videoStream,dataStream)}if(11==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isString(arguments[7]))){sharedLock=arguments[0],applicationId=arguments[1],channelId=arguments[2],userId=arguments[3],deviceId=arguments[4],clientId=arguments[5],send=arguments[6];var remoteMediaId=arguments[7];audioStream=arguments[8],videoStream=arguments[9],dataStream=arguments[10];return new fm.liveswitch.SfuDownstreamConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,remoteMediaId,audioStream,videoStream,dataStream)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionFactory.prototype.createSfuUpstreamConnection=function(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,mediaId){if(11==arguments.length)return new fm.liveswitch.SfuUpstreamConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,mediaId);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionFactory}();liveswitch.ConnectionFactory=ConnectionFactory}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Invitation=function(){function Invitation(channel,userId,protocol){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var channel_1=__arguments[0],userId_13=__arguments[1],protocol_1=__arguments[2];this.fmliveswitchInvitationInit(),this.__lock=new Object,this.__channel=channel_1,this.setUserId(userId_13),this.setProtocol(protocol_1),this.setState(fm.liveswitch.InvitationState.Pending)}return Invitation.prototype.getTypeString=function(){return"[fm.liveswitch.Invitation]"},Invitation.prototype.fmliveswitchInvitationInit=function(){var _this=this;this.__onStateChanging=[],this._onStateChanging=function(p0){for(var _i=0,_a=_this.__onStateChanging;_i<_a.length;_i++){(0,_a[_i])(p0)}}},Invitation.getInviteKey=function(channelId,userId,protocol){if(3==arguments.length)return fm.liveswitch.StringExtensions.format("{0}|{1}|{2}",channelId,userId,protocol);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.addOnStateChanging=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStateChanging,value)},Invitation.prototype.cancel=function(){var _this=this;if(0==arguments.length){var rejectAction=null;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.InvitationState.Pending)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.InvitationState.Proceeding)){this.setState(fm.liveswitch.InvitationState.Cancelling),this.onStateChange(this,this._onStateChanging),this.__cancelPromise=new fm.liveswitch.Promise;var message=fm.liveswitch.Message.createCancelInviteMessage(this.getUserId(),this.getProtocol());return fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){_this.__cancelPromise.reject(ex)}),this.__channel.send(message).fail(rejectAction),this.__cancelPromise}return fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.InvitationState.Cancelling)?fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("Already cancelling.")):fm.liveswitch.PromiseBase.rejectNow(new fm.liveswitch.Exception("The Invitation is in a state where it cannot be canceled."))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.getChannelId=function(){if(0==arguments.length)return this.__channel.getId();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.getInviteKey=function(){if(0==arguments.length)return fm.liveswitch.Invitation.getInviteKey(this.getChannelId(),this.getUserId(),this.getProtocol());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.getProtocol=function(){if(0==arguments.length)return this._protocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.getReason=function(){if(0==arguments.length)return this._reason;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.onStateChange=function(invitation,handler){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var action=null;fm.liveswitch.Global.equals(handler,null)||(fm.liveswitch.Global.equals(action,null)&&(action=function(){handler(invitation)}),fm.liveswitch.ManagedThread.dispatch(action))},Invitation.prototype.processFeedback=function(feedback){if(1==arguments.length)return this.setState(feedback.getState()),this.setReason(feedback.getReason()),fm.liveswitch.Global.equals(this.__cancelPromise,null)||(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.InvitationState.Cancelled)?this.__cancelPromise.resolve(null):fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.InvitationState.Cancelling)||this.__cancelPromise.reject(new fm.liveswitch.Exception("The invitation was acted upon before canceled."))),this.onStateChange(this,this._onStateChanging),fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.InvitationState.Proceeding)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.InvitationState.Cancelling);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Invitation.prototype.removeOnStateChanging=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStateChanging,value)},Invitation.prototype.setProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._protocol=value},Invitation.prototype.setReason=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._reason=value},Invitation.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},Invitation.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},Invitation}();liveswitch.Invitation=Invitation}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LateDiscardContext=function(){function LateDiscardContext(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.__lastMessageTimestamps={},this.__lock=new Object}return LateDiscardContext.prototype.getTypeString=function(){return"[fm.liveswitch.LateDiscardContext]"},LateDiscardContext.prototype.shouldDiscardMessage=function(key,timestamp){if(2==arguments.length){if(timestamp=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.HashExtensions.containsKey(this.__lastMessageTimestamps,key)){var num=this.__lastMessageTimestamps[key];if(num>timestamp)return!0}return this.__lastMessageTimestamps[key]=timestamp,!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LateDiscardContext}();liveswitch.LateDiscardContext=LateDiscardContext}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedConnectionCollection=function(_super){function ManagedConnectionCollection(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).__lookup={},_this.__remoteLookup={},_this.__lookupLock=new Object,_this}return __extends(ManagedConnectionCollection,_super),ManagedConnectionCollection.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedConnectionCollection],"+_super.prototype.getTypeString.call(this)},ManagedConnectionCollection.prototype.addSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.addSuccess.call(this,value),this.__lookup[value.getId()]=value,fm.liveswitch.Global.equals(value.getRemoteConnectionId(),null)||(this.__remoteLookup[value.getRemoteConnectionId()]=value)},ManagedConnectionCollection.prototype.arrayFromList=function(list){if(1==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(list);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnectionCollection.prototype.createCollection=function(){if(0==arguments.length)return new fm.liveswitch.ManagedConnectionCollection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnectionCollection.prototype.getById=function(idValue){if(1==arguments.length){if(!fm.liveswitch.Global.equals(idValue,null)){var connection=null,_var0=new fm.liveswitch.Holder(connection),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__lookup,idValue,_var0);if(connection=_var0.getValue(),_var1)return connection}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnectionCollection.prototype.getByRemoteId=function(idValue){if(1==arguments.length){if(!fm.liveswitch.Global.equals(idValue,null)){var connection=null,_var0=new fm.liveswitch.Holder(connection),_var1=fm.liveswitch.HashExtensions.tryGetValue(this.__remoteLookup,idValue,_var0);if(connection=_var0.getValue(),_var1)return connection}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnectionCollection.prototype.removeSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.removeSuccess.call(this,value),fm.liveswitch.HashExtensions.remove(this.__lookup,value.getId()),fm.liveswitch.Global.equals(value.getRemoteConnectionId(),null)||fm.liveswitch.HashExtensions.remove(this.__remoteLookup,value.getRemoteConnectionId())},ManagedConnectionCollection.prototype.tryGetById=function(idValue,connection){if(2==arguments.length){if(fm.liveswitch.Global.equals(idValue,null))return connection.setValue(null),!1;var _var0=fm.liveswitch.HashExtensions.tryGetValue(this.__lookup,idValue,connection);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnectionCollection.prototype.tryGetByRemoteId=function(idValue,connection){if(2==arguments.length){if(fm.liveswitch.Global.equals(idValue,null))return connection.setValue(null),!1;var _var0=fm.liveswitch.HashExtensions.tryGetValue(this.__remoteLookup,idValue,connection);return _var0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnectionCollection}(fm.liveswitch.Collection);liveswitch.ManagedConnectionCollection=ManagedConnectionCollection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ManagedConnection=function(_super){function ManagedConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,doSend,type,audioStream,videoStream,dataStream,mediaId){var _this=this;fm.liveswitch.ManagedConnection.fmliveswitchManagedConnectionInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(12!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var sharedLock_3=__arguments[0],applicationId_14=__arguments[1],channelId_2=__arguments[2],userId_14=__arguments[3],deviceId_11=__arguments[4],clientId_8=__arguments[5],doSend_2=__arguments[6],type_8=__arguments[7],audioStream_1=__arguments[8],videoStream_1=__arguments[9],dataStream_1=__arguments[10],mediaId_1=__arguments[11];return(_this=_super.call(this)||this).fmliveswitchManagedConnectionInit(),_this.__sendStatsLock=new Object,_this.__lastStatsLock=new Object,_this.__bitrateRequestLateDiscardContext=new fm.liveswitch.LateDiscardContext,_this.__bitrateNotificationLateDiscardContext=new fm.liveswitch.LateDiscardContext,_this.__messageQueue=new fm.liveswitch.DispatchQueue(_this.processQueuedMessage.bind(_this)),_this.__lock=sharedLock_3,_this.setApplicationId(applicationId_14),_this.setChannelId(channelId_2),_this.setUserId(userId_14),_this.setDeviceId(deviceId_11),_this.setClientId(clientId_8),_this.setMediaId(mediaId_1),_this.__doSend=doSend_2,_this.setType(type_8),_this.setAudioStream(audioStream_1),_this.setVideoStream(videoStream_1),_this.setDataStream(dataStream_1),fm.liveswitch.Global.equals(audioStream_1,null)||(audioStream_1.addOnDiscardOutboundDtmfTones(_this.audioStream_OnDiscardOutboundDtmfTones.bind(_this)),audioStream_1.addOnDiscardBitrateRequest(_this.mediaStream_OnDiscardBitrateRequest.bind(_this)),audioStream_1.addOnDiscardBitrateNotification(_this.mediaStream_OnDiscardBitrateNotification.bind(_this))),fm.liveswitch.Global.equals(videoStream_1,null)||(videoStream_1.addOnDiscardKeyFrameRequest(_this.videoStream_OnDiscardKeyFrameRequest.bind(_this)),videoStream_1.addOnDiscardBitrateRequest(_this.mediaStream_OnDiscardBitrateRequest.bind(_this)),videoStream_1.addOnDiscardBitrateNotification(_this.mediaStream_OnDiscardBitrateNotification.bind(_this))),_this.setDisableAutomaticIceServers(!1),_this.setStatsInterval(fm.liveswitch.ManagedConnection.getDefaultStatsInterval()),_this.setNoMediaServerTimeout(fm.liveswitch.ManagedConnection.getDefaultNoMediaServerTimeout()),_this.setInternalConnection(fm.liveswitch.ConnectionUtility.createConnection(_this.__lock,_this.getType(),_this.getAudioStream(),_this.getVideoStream(),_this.getDataStream())),_this.getInternalConnection().setLegacyTimeout(!0),_this.getInternalConnection().addOnStateChange(_this.onInternalConnectionStateChange.bind(_this)),_this.getInternalConnection().addOnSignallingStateChange(_this.onInternalConnectionSignallingStateChange.bind(_this)),_this.getInternalConnection().addOnIceConnectionStateChange(_this.onInternalConnectionIceConnectionStateChange.bind(_this)),_this.getInternalConnection().addOnGatheringStateChange(_this.onInternalConnectionGatheringStateChange.bind(_this)),_this.getInternalConnection().addOnLocalDescription(_this.onInternalConnectionLocalDescription.bind(_this)),_this.getInternalConnection().addOnRemoteDescription(_this.onInternalConnectionRemoteDescription.bind(_this)),_this}return __extends(ManagedConnection,_super),ManagedConnection.prototype.getTypeString=function(){return"[fm.liveswitch.ManagedConnection],"+_super.prototype.getTypeString.call(this)},ManagedConnection.prototype.fmliveswitchManagedConnectionInit=function(){var _this=this;this.__onAutomaticIceServers=[],this.__onGatheringStateChange=[],this.__onIceConnectionStateChange=[],this.__onLocalCandidate=[],this.__onLocalDescription=[],this.__onNoMediaServersAvailable=[],this.__onRemoteAudioEncodingSwitch=[],this.__onRemoteCandidate=[],this.__onRemoteDescription=[],this.__onRemoteUpdate=[],this.__onRemoteVideoEncodingSwitch=[],this.__onSignallingStateChange=[],this.__onStateChange=[],this.__onStats=[],this.__sendIceServersBackoff=0,this.__sendIceServersTimeout=0,this.__sendIceServersTimestamp=0,this.__sendStatsCancelled=!1,this._disableAutomaticIceServers=!1,this._noMediaServerTimeout=0,this._onAutomaticIceServers=function(p0,p1){for(var _i=0,_a=_this.__onAutomaticIceServers;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onGatheringStateChange=function(p0){for(var _i=0,_a=_this.__onGatheringStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onIceConnectionStateChange=function(p0){for(var _i=0,_a=_this.__onIceConnectionStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onLocalCandidate=function(p0,p1){for(var _i=0,_a=_this.__onLocalCandidate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onLocalDescription=function(p0,p1){for(var _i=0,_a=_this.__onLocalDescription;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onNoMediaServersAvailable=function(p0,p1){for(var _i=0,_a=_this.__onNoMediaServersAvailable;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteAudioEncodingSwitch=function(p0,p1){for(var _i=0,_a=_this.__onRemoteAudioEncodingSwitch;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteCandidate=function(p0,p1){for(var _i=0,_a=_this.__onRemoteCandidate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteDescription=function(p0,p1){for(var _i=0,_a=_this.__onRemoteDescription;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteUpdate=function(p0,p1){for(var _i=0,_a=_this.__onRemoteUpdate;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onRemoteVideoEncodingSwitch=function(p0,p1){for(var _i=0,_a=_this.__onRemoteVideoEncodingSwitch;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onSignallingStateChange=function(p0){for(var _i=0,_a=_this.__onSignallingStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onStateChange=function(p0){for(var _i=0,_a=_this.__onStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onStats=function(){for(var _i=0,_a=_this.__onStats;_i<_a.length;_i++){(0,_a[_i])()}},this._remoteClosed=!1,this._remoteFailed=!1,this._remoteRejected=!1,this._statsInterval=0},ManagedConnection.getDefaultNoMediaServerTimeout=function(){if(fm.liveswitch.ManagedConnection.fmliveswitchManagedConnectionInitialize(),0==arguments.length)return fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection__defaultNoMediaServerTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.getDefaultStatsInterval=function(){if(fm.liveswitch.ManagedConnection.fmliveswitchManagedConnectionInitialize(),0==arguments.length)return fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection__defaultStatsInterval;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.setDefaultNoMediaServerTimeout=function(value){if(fm.liveswitch.ManagedConnection.fmliveswitchManagedConnectionInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection__defaultNoMediaServerTimeout=fm.liveswitch.Global.toInt(value)},ManagedConnection.setDefaultStatsInterval=function(value){if(fm.liveswitch.ManagedConnection.fmliveswitchManagedConnectionInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection__defaultStatsInterval=fm.liveswitch.Global.toInt(value)},ManagedConnection.prototype.addOnAutomaticIceServers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onAutomaticIceServers,value)},ManagedConnection.prototype.addOnGatheringStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onGatheringStateChange,value)},ManagedConnection.prototype.addOnIceConnectionStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onIceConnectionStateChange,value)},ManagedConnection.prototype.addOnLocalCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onLocalCandidate,value)},ManagedConnection.prototype.addOnLocalDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onLocalDescription,value)},ManagedConnection.prototype.addOnNoMediaServersAvailable=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onNoMediaServersAvailable,value)},ManagedConnection.prototype.addOnRemoteAudioEncodingSwitch=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteAudioEncodingSwitch,value)},ManagedConnection.prototype.addOnRemoteCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteCandidate,value)},ManagedConnection.prototype.addOnRemoteDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteDescription,value)},ManagedConnection.prototype.addOnRemoteUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteUpdate,value)},ManagedConnection.prototype.addOnRemoteVideoEncodingSwitch=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRemoteVideoEncodingSwitch,value)},ManagedConnection.prototype.addOnSignallingStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onSignallingStateChange,value)},ManagedConnection.prototype.addOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStateChange,value)},ManagedConnection.prototype.addOnStats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStats,value)},ManagedConnection.prototype.audioStream_OnDiscardOutboundDtmfTones=function(dtmfTones){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.send(fm.liveswitch.Message.createDtmfTonesMessage(dtmfTones))},ManagedConnection.prototype.close=function(){if(0==arguments.length){var promise=new fm.liveswitch.Promise;return this.doClose(promise),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.createCandidateMessage=function(candidate){if(1==arguments.length)return this.doCreateCandidateMessage(candidate);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.createCloseMessage=function(){if(0==arguments.length)return this.doCreateCloseMessage();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.detachInternalEventHandlers=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().removeOnStateChange(this.onInternalConnectionStateChange.bind(this)),this.getInternalConnection().removeOnSignallingStateChange(this.onInternalConnectionSignallingStateChange.bind(this)),this.getInternalConnection().removeOnIceConnectionStateChange(this.onInternalConnectionIceConnectionStateChange.bind(this)),this.getInternalConnection().removeOnGatheringStateChange(this.onInternalConnectionGatheringStateChange.bind(this)),this.getInternalConnection().removeOnLocalDescription(this.onInternalConnectionLocalDescription.bind(this)),this.getInternalConnection().removeOnRemoteDescription(this.onInternalConnectionRemoteDescription.bind(this));var timer=this.__sendIceServersBackoffTimer;fm.liveswitch.Global.equals(timer,null)||timer.stop()},ManagedConnection.prototype.doClose=function(promise){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null;try{fm.liveswitch.Global.equals(this.getInternalConnection().getState(),fm.liveswitch.ConnectionState.Closing)||fm.liveswitch.Global.equals(this.getInternalConnection().getState(),fm.liveswitch.ConnectionState.Closed)||fm.liveswitch.Global.equals(this.getInternalConnection().getState(),fm.liveswitch.ConnectionState.Failing)||fm.liveswitch.Global.equals(this.getInternalConnection().getState(),fm.liveswitch.ConnectionState.Failed)?(this.__messageQueue.destroy(),promise.resolve(null)):(fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.debug(this.getId(),"Closing connection."),this.getInternalConnection().close()?(fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(response){_this.__messageQueue.destroy(),promise.resolve(null)}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.debug(_this.getId(),"Could not send close message.",ex),_this.__messageQueue.destroy(),promise.resolve(null)}),this.send(this.createCloseMessage()).then(resolveAction,rejectAction)):(this.__messageQueue.destroy(),promise.resolve(null)))}catch(exception){promise.reject(exception)}},ManagedConnection.prototype.doCreateUpdateMessage=function(config){if(1==arguments.length)return fm.liveswitch.Message.createUpdateMessage(config.toJson());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.doSelfNegotiate=function(answer,promise){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().createOffer().then((function(offer){_this.getInternalConnection().setLocalDescription(offer).then((function(localDescription){_this.getInternalConnection().setRemoteDescription(answer).then((function(remoteDescription){promise.resolve(null)}),(function(ex){promise.reject(ex)}))}),(function(ex){promise.reject(ex)}))}),(function(ex){promise.reject(ex)}))},ManagedConnection.prototype.doSendConnectionEvent=function(promise,eventInfo){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null;fm.liveswitch.Global.equals(eventInfo.getType(),"connection.stats")?(fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(stats){eventInfo.getConnection().populateInfo(stats,_this.__lastStats,eventInfo.getType()),_this.__lastStats=stats;var onStats=_this._onStats;fm.liveswitch.Global.equals(onStats,null)||onStats(),_this.sendConnectionEventMessage(promise,eventInfo)}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){promise.reject(ex)}),this.getInternalConnection().getStats().then(resolveAction,rejectAction)):this.sendConnectionEventMessage(promise,eventInfo)},ManagedConnection.prototype.doUpdate=function(config,promise){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null;if(!fm.liveswitch.Global.equals(this.getAudioStream(),null)&&!fm.liveswitch.Global.equals(config.getAudioDirection(),this.getAudioDirection())&&!this.isMediaDirectionAllowed(config.getAudioDirection())||!fm.liveswitch.Global.equals(this.getVideoStream(),null)&&!fm.liveswitch.Global.equals(config.getVideoDirection(),this.getVideoDirection())&&!this.isMediaDirectionAllowed(config.getVideoDirection()))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("{0} connection {1} does not allow the '{2}' direction.",fm.liveswitch.StringExtensions.toUpper(this.getType()),this.getId(),config.getAudioDirection()));var flag=!1,flag2=!1;if(fm.liveswitch.Global.equals(config.getTag(),this.getTag())||(flag=!0),fm.liveswitch.Global.equals(this.getAudioStream(),null)||(fm.liveswitch.Global.equals(config.getLocalAudioMuted(),this.getAudioStream().getInputMuted())||(flag=!0),fm.liveswitch.Global.equals(config.getAudioDirection(),this.getAudioDirection())||(flag2=!0),fm.liveswitch.Global.equals(config.getRemoteAudioEncoding(),this.getAudioStream().getRemoteEncoding())?config.setRemoteAudioEncoding(null):flag=!0),fm.liveswitch.Global.equals(this.getVideoStream(),null)||(fm.liveswitch.Global.equals(config.getLocalVideoMuted(),this.getVideoStream().getInputMuted())||(flag=!0),fm.liveswitch.Global.equals(config.getVideoDirection(),this.getVideoDirection())||(flag2=!0),fm.liveswitch.Global.equals(config.getRemoteVideoEncoding(),this.getVideoStream().getRemoteEncoding())?config.setRemoteVideoEncoding(null):flag=!0),flag||flag2){var future=null;future=flag2?this.selfRenegotiate(fm.liveswitch.StreamDirectionHelper.directionFromString(config.getAudioDirection()),fm.liveswitch.StreamDirectionHelper.directionFromString(config.getVideoDirection())):fm.liveswitch.PromiseBase.resolveNow(null),fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(r){_this.send(_this.doCreateUpdateMessage(config)).then((function(message){_this.setTag(config.getTag()),fm.liveswitch.Global.equals(_this.getAudioStream(),null)||(fm.liveswitch.Global.equals(config.getLocalAudioMuted(),_this.getAudioStream().getInputMuted())||_this.getAudioStream().setInputMuted(config.getLocalAudioMuted()),fm.liveswitch.Global.equals(config.getRemoteAudioEncoding(),_this.getAudioStream().getRemoteEncoding())||_this.getAudioStream().setRemoteEncoding(config.getRemoteAudioEncoding())),fm.liveswitch.Global.equals(_this.getVideoStream(),null)||(fm.liveswitch.Global.equals(config.getLocalVideoMuted(),_this.getVideoStream().getInputMuted())||_this.getVideoStream().setInputMuted(config.getLocalVideoMuted()),fm.liveswitch.Global.equals(config.getRemoteVideoEncoding(),_this.getVideoStream().getRemoteEncoding())||_this.getVideoStream().setRemoteEncoding(config.getRemoteVideoEncoding())),promise.resolve(null)}),(function(ex){promise.reject(ex)}))}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){promise.reject(ex)}),future.then(resolveAction,rejectAction)}else promise.resolve(null)},ManagedConnection.prototype.doUpdateConnection=function(oldInfo,newInfo,promise){var _this=this;if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var future=void 0,flag=!1;fm.liveswitch.Global.equals(this.getRemoteAudioMuted(),newInfo.getLocalAudioMuted())||(fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Remote connection {0} has {1} their audio stream.",oldInfo.getId(),newInfo.getLocalAudioMuted()?"muted":"unmuted")),this.setRemoteAudioMuted(newInfo.getLocalAudioMuted())),fm.liveswitch.Global.equals(this.getRemoteVideoMuted(),newInfo.getLocalVideoMuted())||(fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Remote connection {0} has {1} their video stream.",oldInfo.getId(),newInfo.getLocalVideoMuted()?"muted":"unmuted")),this.setRemoteVideoMuted(newInfo.getLocalVideoMuted()));var direction=fm.liveswitch.StreamDirectionHelper.directionFromString(this.getAudioDirection()),direction2=fm.liveswitch.StreamDirectionHelper.directionFromString(this.getVideoDirection());fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.ConnectionType.getPeer())&&(fm.liveswitch.Global.equals(fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getAudioDirection()),fm.liveswitch.StreamDirectionHelper.isSendDisabled(newInfo.getAudioDirection()))||(direction=fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(direction,fm.liveswitch.StreamDirectionHelper.isSendDisabled(newInfo.getAudioDirection())),fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Remote connection {0} has {1} their audio stream.",oldInfo.getId(),fm.liveswitch.StreamDirectionHelper.isSendDisabled(newInfo.getAudioDirection())?"disabled":"enabled")),flag=!0),fm.liveswitch.Global.equals(fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getVideoDirection()),fm.liveswitch.StreamDirectionHelper.isSendDisabled(newInfo.getVideoDirection()))||(direction2=fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(direction2,fm.liveswitch.StreamDirectionHelper.isSendDisabled(newInfo.getVideoDirection())),fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Remote connection {0} has {1} their video stream.",oldInfo.getId(),fm.liveswitch.StreamDirectionHelper.isSendDisabled(newInfo.getVideoDirection())?"disabled":"enabled")),flag=!0),fm.liveswitch.Global.equals(fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getAudioDirection()),fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(newInfo.getAudioDirection()))||(direction=fm.liveswitch.StreamDirectionHelper.setSendDisabled(direction,fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(newInfo.getAudioDirection())),fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Remote connection {0} has {1} your audio stream.",oldInfo.getId(),fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(newInfo.getAudioDirection())?"disabled":"enabled")),flag=!0),fm.liveswitch.Global.equals(fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getVideoDirection()),fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(newInfo.getVideoDirection()))||(direction2=fm.liveswitch.StreamDirectionHelper.setSendDisabled(direction2,fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(newInfo.getVideoDirection())),fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.info(this.getId(),fm.liveswitch.StringExtensions.format("Remote connection {0} has {1} your video stream.",oldInfo.getId(),fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(newInfo.getVideoDirection())?"disabled":"enabled")),flag=!0)),flag?(fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.debug(this.getId(),"Doing self-renegotiation."),future=this.selfRenegotiate(direction,direction2)):future=fm.liveswitch.PromiseBase.resolveNow(null),future.then((function(o){_this.raiseRemoteUpdate(oldInfo,newInfo),promise.resolve(null)}),(function(ex){promise.reject(ex)}))},ManagedConnection.prototype.getApplicationId=function(){if(0==arguments.length)return this._applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getAudioDirection=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getAudioStream(),null)?null:fm.liveswitch.StreamDirectionHelper.directionToString(this.getAudioStream().getDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getAudioStream=function(){if(0==arguments.length)return this._audioStream;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getBundlePolicy=function(){if(0==arguments.length)return this.getInternalConnection().getBundlePolicy();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getCanonicalName=function(){if(0==arguments.length)return this.getInternalConnection().getCanonicalName();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getChannelId=function(){if(0==arguments.length)return this._channelId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getConfig=function(){if(0==arguments.length){var config=new fm.liveswitch.ConnectionConfig;return config.setTag(this.getTag()),config.setLocalAudioMuted(this.getLocalAudioMuted()),config.setLocalVideoMuted(this.getLocalVideoMuted()),config.setLocalAudioDisabled(this.getLocalAudioDisabled()),config.setLocalVideoDisabled(this.getLocalVideoDisabled()),config.setRemoteAudioDisabled(this.getRemoteAudioDisabled()),config.setRemoteVideoDisabled(this.getRemoteVideoDisabled()),config.setRemoteAudioEncoding(this.getRemoteAudioEncoding()),config.setRemoteVideoEncoding(this.getRemoteVideoEncoding()),config}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getDataDirection=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getDataStream(),null)?null:fm.liveswitch.StreamDirectionHelper.directionToString(this.getDataStream().getDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getDataStream=function(){if(0==arguments.length)return this._dataStream;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getDisableAutomaticIceServers=function(){if(0==arguments.length)return this._disableAutomaticIceServers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getError=function(){if(0==arguments.length)return this.getInternalConnection().getError();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getExternalId=function(){if(0==arguments.length)return this.getInternalConnection().getExternalId();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getGatheringState=function(){if(0==arguments.length)return this.getInternalConnection().getGatheringState();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getHasAudio=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getAudioStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getHasData=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getHasVideo=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getVideoStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getIceConnectionState=function(){if(0==arguments.length)return this.getInternalConnection().getIceConnectionState();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getIceGatherPolicy=function(){if(0==arguments.length)return this.getInternalConnection().getIceGatherPolicy();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getIceServer=function(){if(0==arguments.length)return this.getInternalConnection().getIceServer();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getIceServers=function(){if(0==arguments.length)return this.getInternalConnection().getIceServers();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getId=function(){if(0==arguments.length)return this.getInternalConnection().getId();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getInfo=function(){if(0==arguments.length){var info2=new fm.liveswitch.ConnectionInfo;info2.setId(this.getId()),info2.setExternalId(this.getExternalId()),info2.setState(fm.liveswitch.StringExtensions.toLower(new fm.liveswitch.ConnectionStateWrapper(this.getState()).toString())),info2.setTag(this.getTag()),info2.setType(this.getType()),info2.setError(this.getError()),info2.setMediaId(this.getMediaId()),info2.setRemoteMediaId(this.getRemoteMediaId()),info2.setRemoteConnectionId(this.getRemoteConnectionId()),info2.setApplicationId(this.getApplicationId()),info2.setChannelId(this.getChannelId()),info2.setClientId(this.getClientId()),info2.setClientTag(null),info2.setClientRoles(null),info2.setUserId(this.getUserId()),info2.setUserAlias(null),info2.setDeviceId(this.getDeviceId()),info2.setDeviceAlias(null),info2.setRecording(!1),info2.setTransports(this.getTransportInfos());var info=info2;return fm.liveswitch.Global.equals(this.getAudioStream(),null)||info.setAudioStreams([this.getAudioStream().getInfo()]),fm.liveswitch.Global.equals(this.getVideoStream(),null)||info.setVideoStreams([this.getVideoStream().getInfo()]),fm.liveswitch.Global.equals(this.getDataStream(),null)||info.setDataStream(this.getDataStream().getInfo()),info}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getInternalConnection=function(){if(0==arguments.length)return this._internalConnection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLastStats=function(){if(0==arguments.length)return this.__lastStats;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalAudioDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getAudioDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalAudioFormats=function(){if(0==arguments.length)return this._localAudioFormats;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalAudioMuted=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getAudioStream(),null)&&this.getAudioStream().getInputMuted();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalDataDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getDataDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalDescription=function(){if(0==arguments.length)return this.getInternalConnection().getLocalDescription();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalVideoDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getVideoDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalVideoFormats=function(){if(0==arguments.length)return this._localVideoFormats;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getLocalVideoMuted=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getVideoStream(),null)&&this.getVideoStream().getInputMuted();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getMediaId=function(){if(0==arguments.length)return this._mediaId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getNoMediaServerTimeout=function(){if(0==arguments.length)return this._noMediaServerTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteAudioDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getAudioDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteAudioEncoding=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getAudioStream(),null)?null:this.getAudioStream().getRemoteEncoding();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteAudioFormats=function(){if(0==arguments.length)return this._remoteAudioFormats;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteAudioMuted=function(){if(0==arguments.length)return!!fm.liveswitch.Global.equals(this.getAudioStream(),null)||this.getAudioStream().getRemoteMuted();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteClosed=function(){if(0==arguments.length)return this._remoteClosed;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteConnectionId=function(){if(0==arguments.length)return this._remoteConnectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteDataDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getDataDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteDescription=function(){if(0==arguments.length)return this.getInternalConnection().getRemoteDescription();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteFailed=function(){if(0==arguments.length)return this._remoteFailed;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteMediaId=function(){if(0==arguments.length)return this._remoteMediaId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteRejected=function(){if(0==arguments.length)return this._remoteRejected;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteTag=function(){if(0==arguments.length)return this._remoteTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteVideoDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getVideoDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteVideoEncoding=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getVideoStream(),null)?null:this.getVideoStream().getRemoteEncoding();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteVideoFormats=function(){if(0==arguments.length)return this._remoteVideoFormats;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getRemoteVideoMuted=function(){if(0==arguments.length)return!!fm.liveswitch.Global.equals(this.getVideoStream(),null)||this.getVideoStream().getRemoteMuted();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getSignallingState=function(){if(0==arguments.length)return this.getInternalConnection().getSignallingState();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getState=function(){if(0==arguments.length){var failed=this.getInternalConnection().getState();if(this.getRemoteFailed()){var _var0=failed;do{if(_var0==fm.liveswitch.ConnectionState.Closing)return fm.liveswitch.ConnectionState.Failing;if(_var0==fm.liveswitch.ConnectionState.Closed){failed=fm.liveswitch.ConnectionState.Failed;break}}while(0)}return failed}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getStats=function(){if(0==arguments.length)return this.getInternalConnection().getStats();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getStatsInterval=function(){if(0==arguments.length)return this._statsInterval;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getTransportInfos=function(){if(0==arguments.length){var transportInfo=void 0,controlTransportInfo=void 0,list=new Array;return fm.liveswitch.Global.equals(this.getAudioStream(),null)||(transportInfo=this.getAudioStream().getTransportInfo(),fm.liveswitch.Global.equals(transportInfo,null)||fm.liveswitch.ArrayExtensions.contains(list,transportInfo)||fm.liveswitch.ArrayExtensions.add(list,transportInfo),controlTransportInfo=this.getAudioStream().getControlTransportInfo(),fm.liveswitch.Global.equals(controlTransportInfo,null)||fm.liveswitch.ArrayExtensions.contains(list,controlTransportInfo)||fm.liveswitch.ArrayExtensions.add(list,controlTransportInfo)),fm.liveswitch.Global.equals(this.getVideoStream(),null)||(transportInfo=this.getVideoStream().getTransportInfo(),fm.liveswitch.Global.equals(transportInfo,null)||fm.liveswitch.ArrayExtensions.contains(list,transportInfo)||fm.liveswitch.ArrayExtensions.add(list,transportInfo),controlTransportInfo=this.getVideoStream().getControlTransportInfo(),fm.liveswitch.Global.equals(controlTransportInfo,null)||fm.liveswitch.ArrayExtensions.contains(list,controlTransportInfo)||fm.liveswitch.ArrayExtensions.add(list,controlTransportInfo)),fm.liveswitch.Global.equals(this.getDataStream(),null)||(transportInfo=this.getDataStream().getTransportInfo(),fm.liveswitch.Global.equals(transportInfo,null)||fm.liveswitch.ArrayExtensions.contains(list,transportInfo)||fm.liveswitch.ArrayExtensions.add(list,transportInfo)),fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getTrickleIcePolicy=function(){if(0==arguments.length)return this.getInternalConnection().getTrickleIcePolicy();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getVideoDirection=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getVideoStream(),null)?null:fm.liveswitch.StreamDirectionHelper.directionToString(this.getVideoStream().getDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.getVideoStream=function(){if(0==arguments.length)return this._videoStream;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.mediaStream_OnDiscardBitrateNotification=function(bitrateNotification){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(bitrateNotification,null)||this.send(fm.liveswitch.Message.createBitrateNotificationMessage(bitrateNotification))},ManagedConnection.prototype.mediaStream_OnDiscardBitrateRequest=function(bitrateRequest){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(bitrateRequest,null)||this.send(fm.liveswitch.Message.createBitrateRequestMessage(bitrateRequest))},ManagedConnection.prototype.onInternalConnectionGatheringStateChange=function(internalConnection){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(internalConnection,null)){var onGatheringStateChange=this._onGatheringStateChange;fm.liveswitch.Global.equals(onGatheringStateChange,null)||onGatheringStateChange(this)}},ManagedConnection.prototype.onInternalConnectionIceConnectionStateChange=function(internalConnection){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(internalConnection,null)){var onIceConnectionStateChange=this._onIceConnectionStateChange;fm.liveswitch.Global.equals(onIceConnectionStateChange,null)||onIceConnectionStateChange(this)}},ManagedConnection.prototype.onInternalConnectionLocalDescription=function(internalConnection,localDescription){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(internalConnection,null)){var onLocalDescription=this._onLocalDescription;fm.liveswitch.Global.equals(onLocalDescription,null)||onLocalDescription(this,localDescription)}},ManagedConnection.prototype.onInternalConnectionRemoteDescription=function(internalConnection,remoteDescription){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(internalConnection,null)){var onRemoteDescription=this._onRemoteDescription;fm.liveswitch.Global.equals(onRemoteDescription,null)||onRemoteDescription(this,remoteDescription)}},ManagedConnection.prototype.onInternalConnectionSignallingStateChange=function(internalConnection){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(internalConnection,null)){var onSignallingStateChange=this._onSignallingStateChange;fm.liveswitch.Global.equals(onSignallingStateChange,null)||onSignallingStateChange(this)}},ManagedConnection.prototype.onInternalConnectionStateChange=function(internalConnection){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(this.processStateChangeEvent(internalConnection.getState()),!fm.liveswitch.Global.equals(this._openPromise,null)){var openPromise=void 0;fm.liveswitch.Global.equals(internalConnection.getState(),fm.liveswitch.ConnectionState.Connected)?(openPromise=this._openPromise,this._openPromise=null,openPromise.resolveAsync(null)):fm.liveswitch.Global.equals(internalConnection.getState(),fm.liveswitch.ConnectionState.Failed)?(openPromise=this._openPromise,this._openPromise=null,fm.liveswitch.Global.equals(internalConnection.getError(),null)?openPromise.rejectAsync(new fm.liveswitch.Exception("Connection failed.")):openPromise.rejectAsync(new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Connection failed. ({0})",internalConnection.getError().getDescription())))):fm.liveswitch.Global.equals(internalConnection.getState(),fm.liveswitch.ConnectionState.Closed)&&(openPromise=this._openPromise,this._openPromise=null,fm.liveswitch.Global.equals(internalConnection.getError(),null)?openPromise.rejectAsync(new fm.liveswitch.Exception("Connection closed.")):openPromise.rejectAsync(new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Connection closed. ({0})",internalConnection.getError().getDescription()))))}var onStateChange=this._onStateChange;fm.liveswitch.Global.equals(onStateChange,null)||onStateChange(this)},ManagedConnection.prototype.open=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{var promise=new fm.liveswitch.Promise;if(!fm.liveswitch.Global.equals(this._openPromise,null))throw new fm.liveswitch.Exception("Open can only be called once.");return this._openPromise=promise,fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.debug(this.getId(),"Opening connection."),this.getDisableAutomaticIceServers()?this.doOpen():(this.__sendIceServersBackoff=200,this.__sendIceServersTimeout=this.getNoMediaServerTimeout(),this.__sendIceServersTimestamp=fm.liveswitch.ManagedStopwatch.getTimestamp(),this.sendIceServers()),promise}catch(exception){var promise2=new fm.liveswitch.Promise;return promise2.reject(exception),promise2}},ManagedConnection.prototype.processBitrateNotification=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var notificationArray=fm.liveswitch.BitrateNotification.fromJsonArray(message.getPayload());if(fm.liveswitch.Global.equals(notificationArray,null))fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),"Received a malformed 'bitrateNotification' message.");else if(fm.liveswitch.Global.equals(notificationArray.length,0))fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),"Received a 'bitrateNotification' message with no bitrate notifications.");else for(var audioStream=this.getAudioStream(),videoStream=this.getVideoStream(),_i=0,notificationArray_1=notificationArray;_i<notificationArray_1.length;_i++){var notification=notificationArray_1[_i];this.__bitrateNotificationLateDiscardContext.shouldDiscardMessage(fm.liveswitch.NumberExtensions.toString(notification.getSynchronizationSource()),message.getTimestamp())||(!fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(notification.getMediaDescriptionId(),audioStream.getMediaDescriptionId())?this.raiseAudioBitrateNotification(audioStream,notification):!fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(notification.getMediaDescriptionId(),videoStream.getMediaDescriptionId())?this.raiseVideoBitrateNotification(videoStream,notification):!fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(notification.getMediaDescriptionId(),"audio")?this.raiseAudioBitrateNotification(audioStream,notification):!fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(notification.getMediaDescriptionId(),"video")||!fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(notification.getMediaDescriptionId(),null)?this.raiseVideoBitrateNotification(videoStream,notification):fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),fm.liveswitch.StringExtensions.format("Received a 'bitrateNotification' message with unexpected media description ID '{0}'.",notification.getMediaDescriptionId())))}},ManagedConnection.prototype.processBitrateRequest=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var requestArray=fm.liveswitch.BitrateRequest.fromJsonArray(message.getPayload());if(fm.liveswitch.Global.equals(requestArray,null))fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),"Received a malformed 'bitrateRequest' message.");else if(fm.liveswitch.Global.equals(requestArray.length,0))fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),"Received a 'bitrateRequest' message with no bitrate requests.");else for(var audioStream=this.getAudioStream(),videoStream=this.getVideoStream(),_i=0,requestArray_1=requestArray;_i<requestArray_1.length;_i++){var request=requestArray_1[_i];this.__bitrateRequestLateDiscardContext.shouldDiscardMessage(fm.liveswitch.NumberExtensions.toString(request.getSynchronizationSource()),message.getTimestamp())||(!fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(request.getMediaDescriptionId(),audioStream.getMediaDescriptionId())?this.raiseAudioBitrateRequest(audioStream,request):!fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(request.getMediaDescriptionId(),videoStream.getMediaDescriptionId())?this.raiseVideoBitrateRequest(videoStream,request):!fm.liveswitch.Global.equals(audioStream,null)&&fm.liveswitch.Global.equals(request.getMediaDescriptionId(),"audio")?this.raiseAudioBitrateRequest(audioStream,request):!fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(request.getMediaDescriptionId(),"video")||!fm.liveswitch.Global.equals(videoStream,null)&&fm.liveswitch.Global.equals(request.getMediaDescriptionId(),null)?this.raiseVideoBitrateRequest(videoStream,request):fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),fm.liveswitch.StringExtensions.format("Received a 'bitrateRequest' message with unexpected media description ID '{0}'.",request.getMediaDescriptionId())))}},ManagedConnection.prototype.processCandidate=function(message){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().addRemoteCandidate(fm.liveswitch.Candidate.fromJson(message.getPayload())).fail((function(ex){fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.error(_this.getId(),"Could not add remote candidate.",ex)}))},ManagedConnection.prototype.processClose=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setRemoteClosed(!0),this.getInternalConnection().close()},ManagedConnection.prototype.processError=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=fm.liveswitch.JsonSerializer.deserializeString(message.getPayload());fm.liveswitch.Global.equals(str,fm.liveswitch.ErrorType.getSfuInvalidUpstream())||fm.liveswitch.Global.equals(str,fm.liveswitch.ErrorType.getServerNoAudioCodecs())||fm.liveswitch.Global.equals(str,fm.liveswitch.ErrorType.getServerNoVideoCodecs())||fm.liveswitch.Global.equals(str,fm.liveswitch.ErrorType.getSdpStreamMismatch())||fm.liveswitch.Global.equals(str,fm.liveswitch.ErrorType.getSdpSimulcastMismatch())||fm.liveswitch.Global.equals(str,fm.liveswitch.ErrorType.getSdpCodecMismatch())?this.processRemoteError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionRemoteFailure,new fm.liveswitch.Exception(str))):this.processFail(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionRemoteFailure,new fm.liveswitch.Exception(str)))},ManagedConnection.prototype.processFail=function(error){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setRemoteFailed(!0),this.getInternalConnection().setError(error),this.getInternalConnection().close()},ManagedConnection.prototype.processIceServers=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var list=new Array,servers=new fm.liveswitch.IceServerCollection;if(servers.addMany(fm.liveswitch.IceServer.fromJsonArray(message.getPayload())),servers.getCount()>0){var onAutomaticIceServers=this._onAutomaticIceServers;fm.liveswitch.Global.equals(onAutomaticIceServers,null)||onAutomaticIceServers(this,servers),fm.liveswitch.ArrayExtensions.addRange(list,servers.getValues())}var iceServers=this.getIceServers();fm.liveswitch.Global.equals(iceServers,null)||fm.liveswitch.ArrayExtensions.addRange(list,iceServers),this.setIceServers(fm.liveswitch.ArrayExtensions.toArray(list))},ManagedConnection.prototype.processKeyFrameRequest=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var synchronizationSources=fm.liveswitch.JsonSerializer.deserializeLongArray(message.getPayload());if(fm.liveswitch.Global.equals(synchronizationSources,null))fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),"Received a malformed 'keyFrameRequest' message.");else if(fm.liveswitch.Global.equals(synchronizationSources.length,0))fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(this.getId(),"Received a 'keyFrameRequest' message with no sychronization sources.");else{var videoStream=this.getVideoStream();fm.liveswitch.Global.equals(videoStream,null)||videoStream.raiseKeyFrameRequest(synchronizationSources)}},ManagedConnection.prototype.processLocalError=function(error){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setRemoteClosed(!1),this.getInternalConnection().setError(error),this.getInternalConnection().close()},ManagedConnection.prototype.processMessage=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__messageQueue.enqueue(message)},ManagedConnection.prototype.processQueuedMessage=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getAnswer())?this.processAnswer(message):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getCandidate())?this.processCandidate(message):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getKeyFrameRequest())?this.processKeyFrameRequest(message):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getBitrateRequest())?this.processBitrateRequest(message):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getBitrateNotification())?this.processBitrateNotification(message):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getClose())?this.processClose():fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getFail())?this.processFail(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.ConnectionRemoteFailure,new fm.liveswitch.Exception("Media server is no longer available."))):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getReject())?this.processReject():fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getError())?this.processError(message):this.doProcessMessage(message)},ManagedConnection.prototype.processReject=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setRemoteRejected(!0),this.getInternalConnection().close()},ManagedConnection.prototype.processRemoteError=function(error){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setRemoteClosed(!0),this.getInternalConnection().setError(error),this.getInternalConnection().close()},ManagedConnection.prototype.processStateChangeEvent=function(state){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if((fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Closing)||fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Closed)||fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Failing)||fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Failed))&&this.tryCancelSendStats())try{this.sendConnectionEvent("connection.stats")}catch(exception){fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.debug(this.getId(),"Could not send final connection stats event.",exception)}(fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Closed)||fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Failed))&&this.detachInternalEventHandlers(),this.sendConnectionEvent(fm.liveswitch.EventType.fromConnectionState(state)).then((function(o){fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Connected)&&_this.scheduleSendStats()}),(function(ex){fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(_this.getId(),fm.liveswitch.StringExtensions.format("Could not send {0} event.",fm.liveswitch.EventType.fromConnectionState(state)),ex),fm.liveswitch.Global.equals(state,fm.liveswitch.ConnectionState.Connected)&&_this.scheduleSendStats()}))},ManagedConnection.prototype.raiseAudioBitrateNotification=function(audioStream,bitrateNotification){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");audioStream.raiseBitrateNotification(bitrateNotification)},ManagedConnection.prototype.raiseAudioBitrateRequest=function(audioStream,bitrateRequest){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");audioStream.raiseBitrateRequest(bitrateRequest)},ManagedConnection.prototype.raiseLocalCandidate=function(localCandidate){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onLocalCandidate=this._onLocalCandidate;fm.liveswitch.Global.equals(onLocalCandidate,null)||onLocalCandidate(this,localCandidate),this.send(this.createCandidateMessage(localCandidate)).fail((function(ex){fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.error(_this.getId(),"Could not send candidate message.",ex)}))},ManagedConnection.prototype.raiseNoMediaServersAvailable=function(args){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onNoMediaServersAvailable=this._onNoMediaServersAvailable;fm.liveswitch.Global.equals(onNoMediaServersAvailable,null)||onNoMediaServersAvailable(this,args)},ManagedConnection.prototype.raiseRemoteCandidate=function(remoteCandidate){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onRemoteCandidate=this._onRemoteCandidate;fm.liveswitch.Global.equals(onRemoteCandidate,null)||onRemoteCandidate(this,remoteCandidate)},ManagedConnection.prototype.raiseRemoteUpdate=function(oldConnectionInfo,newConnectionInfo){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onRemoteUpdate=this._onRemoteUpdate;fm.liveswitch.Global.equals(onRemoteUpdate,null)||onRemoteUpdate(oldConnectionInfo,newConnectionInfo)},ManagedConnection.prototype.raiseVideoBitrateNotification=function(videoStream,bitrateNotification){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");videoStream.raiseBitrateNotification(bitrateNotification)},ManagedConnection.prototype.raiseVideoBitrateRequest=function(videoStream,bitrateRequest){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");videoStream.raiseBitrateRequest(bitrateRequest)},ManagedConnection.prototype.removeOnAutomaticIceServers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onAutomaticIceServers,value)},ManagedConnection.prototype.removeOnGatheringStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onGatheringStateChange,value)},ManagedConnection.prototype.removeOnIceConnectionStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onIceConnectionStateChange,value)},ManagedConnection.prototype.removeOnLocalCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onLocalCandidate,value)},ManagedConnection.prototype.removeOnLocalDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onLocalDescription,value)},ManagedConnection.prototype.removeOnNoMediaServersAvailable=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onNoMediaServersAvailable,value)},ManagedConnection.prototype.removeOnRemoteAudioEncodingSwitch=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteAudioEncodingSwitch,value)},ManagedConnection.prototype.removeOnRemoteCandidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteCandidate,value)},ManagedConnection.prototype.removeOnRemoteDescription=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteDescription,value)},ManagedConnection.prototype.removeOnRemoteUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteUpdate,value)},ManagedConnection.prototype.removeOnRemoteVideoEncodingSwitch=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRemoteVideoEncodingSwitch,value)},ManagedConnection.prototype.removeOnSignallingStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onSignallingStateChange,value)},ManagedConnection.prototype.removeOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStateChange,value)},ManagedConnection.prototype.removeOnStats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStats,value)},ManagedConnection.prototype.retrySendIceServers=function(state){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Closing)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Closed)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Failing)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.ConnectionState.Failed)||(this.__sendIceServersBackoff=fm.liveswitch.MathAssistant.min(2*this.__sendIceServersBackoff,fm.liveswitch.MathAssistant.floor(this.__sendIceServersTimeout/2)),this.sendIceServers())},ManagedConnection.prototype.scheduleSendStats=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__sendStatsCancelled||this.__sendStatsCancelled||(this.__sendStatsTimer=new fm.liveswitch.TimeoutTimer(this.sendStats.bind(this),null),this.__sendStatsTimer.start(this.getStatsInterval()))},ManagedConnection.prototype.selfRenegotiate=function(localAudioDirection,localVideoDirection){if(2==arguments.length){var promise=new fm.liveswitch.Promise;try{fm.liveswitch.Global.equals(this.getAudioStream(),null)||fm.liveswitch.Global.equals(this.getAudioStream().getDirection(),localAudioDirection)||this.getAudioStream().changeDirection(localAudioDirection),fm.liveswitch.Global.equals(this.getVideoStream(),null)||fm.liveswitch.Global.equals(this.getVideoStream().getDirection(),localVideoDirection)||this.getVideoStream().changeDirection(localVideoDirection);var description3=new fm.liveswitch.SessionDescription;description3.setRenegotiation(!0),description3.setTieBreaker(fm.liveswitch.Guid.newGuid().toString()),description3.setType(fm.liveswitch.SessionDescriptionType.Answer);var answer=description3;answer.setSdpMessage(fm.liveswitch.sdp.Message.parse(this.getInternalConnection().getRemoteDescription().getSdpMessage().toString()));var origin_19=answer.getSdpMessage().getOrigin();origin_19.setSessionVersion(origin_19.getSessionVersion()+1);var direction=localAudioDirection;direction=fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.setSendDisabled(direction,fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(localAudioDirection)),fm.liveswitch.StreamDirectionHelper.isSendDisabled(localAudioDirection));var direction2=localVideoDirection;direction2=fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.setSendDisabled(direction2,fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(localVideoDirection)),fm.liveswitch.StreamDirectionHelper.isSendDisabled(localVideoDirection));for(var _i=0,_a=answer.getSdpMessage().getMediaDescriptions();_i<_a.length;_i++){var description2=_a[_i];description2.getIsAudio()?fm.liveswitch.Global.equals(description2.getStreamDirection(),direction)||description2.setStreamDirection(direction):description2.getIsVideo()&&!fm.liveswitch.Global.equals(description2.getStreamDirection(),direction2)&&description2.setStreamDirection(direction2)}this.doSelfNegotiate(answer,promise)}catch(exception){promise.reject(exception)}return promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.send=function(message){if(1==arguments.length)return message.setConnectionId(this.getId()),message.setConnectionType(this.getType()),message.setMediaId(this.getMediaId()),this.__doSend(message);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.sendConnectionEvent=function(eventType){if(1==arguments.length){var promise=new fm.liveswitch.Promise,eventInfo=new fm.liveswitch.EventInfo(eventType);return eventInfo.setConnection(this.getInfo()),this.doSendConnectionEvent(promise,eventInfo),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.sendConnectionEventMessage=function(promise,eventInfo){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(eventInfo.getConnection(),null)||eventInfo.getConnection().setSerializeLegacyProperties(!1),this.send(fm.liveswitch.Message.createEventMessage(eventInfo.toJson())).then((function(message){promise.resolve(null)}),(function(ex){promise.reject(ex)}))},ManagedConnection.prototype.sendIceServers=function(){var _this=this;if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.debug(this.getId(),"Getting ICE servers."),this.send(fm.liveswitch.Message.createIceServersMessage()).then((function(response){fm.liveswitch.Global.equals(response.getType(),fm.liveswitch.MessageType.getIceServers())?(_this.processIceServers(response),_this.doOpen()):response.isError(fm.liveswitch.ErrorType.getServerNoMediaServersAvailable())&&fm.liveswitch.ManagedStopwatch.getTimestamp()-_this.__sendIceServersTimestamp<_this.__sendIceServersTimeout*fm.liveswitch.Constants.getTicksPerMillisecond()?(_this.raiseNoMediaServersAvailable(new fm.liveswitch.NoMediaServersAvailableEventArgs(_this.__sendIceServersBackoff)),fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(_this.getId(),fm.liveswitch.StringExtensions.format("No Media Servers are available to get ICE servers. Trying again after {0} milliseconds...",fm.liveswitch.NumberExtensions.toString(_this.__sendIceServersBackoff))),_this.__sendIceServersBackoffTimer=new fm.liveswitch.TimeoutTimer(_this.retrySendIceServers.bind(_this),null),_this.__sendIceServersBackoffTimer.start(_this.__sendIceServersBackoff)):_this.processMessage(response)}),(function(ex){fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(_this.getId(),"Could not get ICE servers.",ex),_this.doOpen()}))},ManagedConnection.prototype.sendStats=function(state){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null;this.__sendStatsCancelled||(fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(o){_this.scheduleSendStats()}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log.warn(_this.getId(),fm.liveswitch.StringExtensions.format("Could not send {0} event.","connection.stats"),ex),_this.scheduleSendStats()}),this.sendConnectionEvent("connection.stats").then(resolveAction,rejectAction))},ManagedConnection.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._applicationId=value},ManagedConnection.prototype.setAudioStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._audioStream=value},ManagedConnection.prototype.setBundlePolicy=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().setBundlePolicy(value)},ManagedConnection.prototype.setChannelId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channelId=value},ManagedConnection.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},ManagedConnection.prototype.setDataStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataStream=value},ManagedConnection.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},ManagedConnection.prototype.setDisableAutomaticIceServers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableAutomaticIceServers=value},ManagedConnection.prototype.setIceGatherPolicy=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().setIceGatherPolicy(value)},ManagedConnection.prototype.setIceServer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().setIceServer(value)},ManagedConnection.prototype.setIceServers=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().setIceServers(value)},ManagedConnection.prototype.setInternalConnection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._internalConnection=value},ManagedConnection.prototype.setLocalAudioFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localAudioFormats=value},ManagedConnection.prototype.setLocalVideoFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localVideoFormats=value},ManagedConnection.prototype.setMediaId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaId=value},ManagedConnection.prototype.setNoMediaServerTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._noMediaServerTimeout=fm.liveswitch.Global.toInt(value)},ManagedConnection.prototype.setRemoteAudioEncoding=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioStream=this.getAudioStream();if(!fm.liveswitch.Global.equals(audioStream,null)){var remoteEncoding=audioStream.getRemoteEncoding();audioStream.setRemoteEncoding(value);var onRemoteAudioEncodingSwitch=this._onRemoteAudioEncodingSwitch;fm.liveswitch.Global.equals(onRemoteAudioEncodingSwitch,null)||onRemoteAudioEncodingSwitch(remoteEncoding,value)}},ManagedConnection.prototype.setRemoteAudioFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteAudioFormats=value},ManagedConnection.prototype.setRemoteAudioMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getAudioStream(),null)||this.getAudioStream().setRemoteMuted(value)},ManagedConnection.prototype.setRemoteClosed=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteClosed=value},ManagedConnection.prototype.setRemoteConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteConnectionId=value},ManagedConnection.prototype.setRemoteFailed=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteFailed=value},ManagedConnection.prototype.setRemoteMediaId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteMediaId=value},ManagedConnection.prototype.setRemoteRejected=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteRejected=value},ManagedConnection.prototype.setRemoteTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteTag=value},ManagedConnection.prototype.setRemoteVideoEncoding=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var videoStream=this.getVideoStream();if(!fm.liveswitch.Global.equals(videoStream,null)){var remoteEncoding=videoStream.getRemoteEncoding();videoStream.setRemoteEncoding(value);var onRemoteVideoEncodingSwitch=this._onRemoteVideoEncodingSwitch;fm.liveswitch.Global.equals(onRemoteVideoEncodingSwitch,null)||onRemoteVideoEncodingSwitch(remoteEncoding,value)}},ManagedConnection.prototype.setRemoteVideoFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteVideoFormats=value},ManagedConnection.prototype.setRemoteVideoMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getVideoStream(),null)||this.getVideoStream().setRemoteMuted(value)},ManagedConnection.prototype.setStatsInterval=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._statsInterval=fm.liveswitch.Global.toInt(value)},ManagedConnection.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},ManagedConnection.prototype.setTrickleIcePolicy=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.getInternalConnection().setTrickleIcePolicy(value)},ManagedConnection.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},ManagedConnection.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},ManagedConnection.prototype.setVideoStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._videoStream=value},ManagedConnection.prototype.tryCancelSendStats=function(){if(0==arguments.length)return!this.__sendStatsCancelled&&!this.__sendStatsCancelled&&(this.__sendStatsCancelled=!0,fm.liveswitch.Global.equals(this.__sendStatsTimer,null)||(this.__sendStatsTimer.stop(),this.__sendStatsTimer=null),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.update=function(config){if(1==arguments.length){var promise=new fm.liveswitch.Promise;try{this.doUpdate(config,promise)}catch(exception){promise.reject(exception)}return promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.updateConnection=function(oldInfo,newInfo){if(2==arguments.length){var promise=new fm.liveswitch.Promise;try{this.doUpdateConnection(oldInfo,newInfo,promise)}catch(exception){promise.reject(exception)}return promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ManagedConnection.prototype.videoStream_OnDiscardKeyFrameRequest=function(synchronizationSources){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");!fm.liveswitch.Global.equals(synchronizationSources,null)&&synchronizationSources.length>0&&this.send(fm.liveswitch.Message.createKeyFrameRequestMessage(synchronizationSources))},ManagedConnection.fmliveswitchManagedConnectionInitialize=function(){fm.liveswitch.ManagedConnection.__fmliveswitchManagedConnectionInitialized||fm.liveswitch.ManagedConnection.__fmliveswitchManagedConnectionInitializing||(fm.liveswitch.ManagedConnection.__fmliveswitchManagedConnectionInitializing=!0,ManagedConnection.fm_liveswitch_ManagedConnection__defaultNoMediaServerTimeout=0,ManagedConnection.fm_liveswitch_ManagedConnection__defaultStatsInterval=0,fm.liveswitch.ManagedConnection.fm_liveswitch_ManagedConnection___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.ManagedConnection]")),fm.liveswitch.ManagedConnection.setDefaultStatsInterval(1e4),fm.liveswitch.ManagedConnection.setDefaultNoMediaServerTimeout(12e4),fm.liveswitch.ManagedConnection.__fmliveswitchManagedConnectionInitialized=!0,fm.liveswitch.ManagedConnection.__fmliveswitchManagedConnectionInitializing=!1)},ManagedConnection.__fmliveswitchManagedConnectionInitialized=!1,ManagedConnection.__fmliveswitchManagedConnectionInitializing=!1,ManagedConnection}(fm.liveswitch.Dynamic);liveswitch.ManagedConnection=ManagedConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LayoutUtility=function(){function LayoutUtility(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return LayoutUtility.prototype.getTypeString=function(){return"[fm.liveswitch.LayoutUtility]"},LayoutUtility.floatLocalPreview=function(){if(3==arguments.length){var layout=arguments[0],videoLayout=arguments[1],localConnectionId=arguments[2],localFrame=null,remoteFrame=null;if(!fm.liveswitch.Global.equals(layout,null)){localFrame=layout.getLocalFrame();var remoteFrames=layout.getRemoteFrames();!fm.liveswitch.Global.equals(remoteFrames,null)&&remoteFrames.length>0&&(remoteFrame=remoteFrames[0])}return fm.liveswitch.LayoutUtility.floatLocalPreview(localFrame,remoteFrame,videoLayout,localConnectionId)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.Layout]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoLayout]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isString(arguments[2]))){layout=arguments[0],videoLayout=arguments[1],localConnectionId=arguments[2];var viewId=arguments[3];localFrame=null,remoteFrame=null;if(!fm.liveswitch.Global.equals(layout,null)){localFrame=layout.getLocalFrame();remoteFrames=layout.getRemoteFrames();if(!fm.liveswitch.Global.equals(remoteFrames,null)&&remoteFrames.length>0)for(var _i=0,remoteFrames_1=remoteFrames;_i<remoteFrames_1.length;_i++){var frame3=remoteFrames_1[_i],str=frame3.getViewId();!fm.liveswitch.Global.equals(str,null)&&fm.liveswitch.StringExtensions.isEqual(str,viewId)&&(remoteFrame=frame3)}}if(!fm.liveswitch.Global.equals(videoLayout,null))for(var _a=0,_b=fm.liveswitch.HashExtensions.getKeys(videoLayout.getFrames());_a<_b.length;_a++){var str2=_b[_a],frame=videoLayout.getFrames()[str2],frame5=videoLayout.getBounds()[str2];fm.liveswitch.LayoutPreset.transformFrame(frame,layout.getOrigin(),videoLayout.getWidth(),videoLayout.getHeight()),fm.liveswitch.LayoutPreset.transformFrame(frame5,layout.getOrigin(),frame.getWidth(),frame.getHeight())}return fm.liveswitch.LayoutUtility.floatLocalPreview(localFrame,remoteFrame,videoLayout,localConnectionId)}if(5==arguments.length){layout=arguments[0],videoLayout=arguments[1],localConnectionId=arguments[2],viewId=arguments[3];var localViewSink=arguments[4];return fm.liveswitch.Global.equals(localViewSink,null)||fm.liveswitch.Global.equals(videoLayout,null)||localViewSink.setViewScale(videoLayout.getCrop()?fm.liveswitch.LayoutScale.Cover:fm.liveswitch.LayoutScale.Contain),fm.liveswitch.LayoutUtility.floatLocalPreview(layout,videoLayout,localConnectionId,viewId)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.LayoutFrame]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.LayoutFrame]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[2])||fm.liveswitch.Util.isObjectType(arguments[2],"[fm.liveswitch.VideoLayout]"))){localFrame=arguments[0],remoteFrame=arguments[1],videoLayout=arguments[2],localConnectionId=arguments[3];if(fm.liveswitch.Global.equals(localFrame,null)||fm.liveswitch.Global.equals(remoteFrame,null))return!1;if(!fm.liveswitch.Global.equals(videoLayout,null)){var width=remoteFrame.getWidth(),height=remoteFrame.getHeight(),num3=width/height,num4=videoLayout.getWidth(),num5=videoLayout.getHeight(),num6=num4/num5,num7=width,num8=height,num9=0,num10=0;num3>num6?num9=(width-(num7=height*num6))/2:num10=(height-(num8=width/num6))/2;for(var frames_5=videoLayout.getFrames(),_c=0,_d=fm.liveswitch.HashExtensions.getKeys(frames_5);_c<_d.length;_c++){str=_d[_c];if(fm.liveswitch.Global.equals(str,localConnectionId)){frame=frames_5[str];return localFrame.setX(remoteFrame.getX()+(num9+frame.getX()/num4*num7)),localFrame.setY(remoteFrame.getY()+(num10+frame.getY()/num5*num8)),localFrame.setWidth(frame.getWidth()/num4*num7),localFrame.setHeight(frame.getHeight()/num5*num8),!0}}return!1}return localFrame.setX(remoteFrame.getX()),localFrame.setY(remoteFrame.getY()),localFrame.setWidth(remoteFrame.getWidth()),localFrame.setHeight(remoteFrame.getHeight()),!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LayoutUtility}();liveswitch.LayoutUtility=LayoutUtility}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ServerConnection=function(_super){function ServerConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,connectionType,audioStream,videoStream,dataStream,mediaId){var _this=this;fm.liveswitch.ServerConnection.fmliveswitchServerConnectionInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(12!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var sharedLock_4=__arguments[0],applicationId_15=__arguments[1],channelId_3=__arguments[2],userId_15=__arguments[3],deviceId_12=__arguments[4],clientId_9=__arguments[5],send_1=__arguments[6],connectionType_1=__arguments[7],audioStream_2=__arguments[8],videoStream_2=__arguments[9],dataStream_2=__arguments[10],mediaId_2=__arguments[11];return(_this=_super.call(this,sharedLock_4,applicationId_15,channelId_3,userId_15,deviceId_12,clientId_9,send_1,connectionType_1,audioStream_2,videoStream_2,dataStream_2,mediaId_2)||this).fmliveswitchServerConnectionInit(),_this.__inboundAudioBitrate=-1,_this.__inboundVideoBitrate=-1,_this.__heldLocalCandidates=new Array,_this.__heldLocalCandidatesLock=new Object,_this.__holdLocalCandidates=!0,_this.__lastUpdateTimestamp=-1,_super.prototype.setBundlePolicy.call(_this,fm.liveswitch.BundlePolicy.MaxBundle),_super.prototype.getInternalConnection.call(_this).addOnLocalCandidate(_this.onInternalConnectionLocalCandidate.bind(_this)),_super.prototype.getInternalConnection.call(_this).addOnRemoteCandidate(_this.onInternalConnectionRemoteCandidate.bind(_this)),_this}return __extends(ServerConnection,_super),ServerConnection.prototype.getTypeString=function(){return"[fm.liveswitch.ServerConnection],"+_super.prototype.getTypeString.call(this)},ServerConnection.prototype.fmliveswitchServerConnectionInit=function(){var _this=this;this.__holdLocalCandidates=!1,this.__inboundAudioBitrate=0,this.__inboundVideoBitrate=0,this.__lastUpdateTimestamp=0,this.__onInboundAudioBitrateChange=[],this.__onInboundVideoBitrateChange=[],this.__sendOfferBackoff=0,this.__sendOfferTimeout=0,this.__sendOfferTimestamp=0,this._onInboundAudioBitrateChange=function(p0,p1){for(var _i=0,_a=_this.__onInboundAudioBitrateChange;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}},this._onInboundVideoBitrateChange=function(p0,p1){for(var _i=0,_a=_this.__onInboundVideoBitrateChange;_i<_a.length;_i++){(0,_a[_i])(p0,p1)}}},ServerConnection.prototype.addOnInboundAudioBitrateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onInboundAudioBitrateChange,value)},ServerConnection.prototype.addOnInboundVideoBitrateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onInboundVideoBitrateChange,value)},ServerConnection.prototype.detachInternalEventHandlers=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.getInternalConnection.call(this).removeOnLocalCandidate(this.onInternalConnectionLocalCandidate.bind(this)),_super.prototype.getInternalConnection.call(this).removeOnRemoteCandidate(this.onInternalConnectionRemoteCandidate.bind(this));var timer=this.__sendOfferBackoffTimer;fm.liveswitch.Global.equals(timer,null)||timer.stop(),_super.prototype.detachInternalEventHandlers.call(this)},ServerConnection.prototype.doCreateCandidateMessage=function(candidate){if(1==arguments.length)return fm.liveswitch.Message.createCandidateMessage(candidate.toJson());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.prototype.doCreateCloseMessage=function(){if(0==arguments.length)return fm.liveswitch.Message.createCloseMessage();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.prototype.doOpen=function(){var _this=this;if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.getInternalConnection.call(this).createOffer().then((function(offer){_this.getInternalConnection().setLocalDescription(offer).then((function(localDescription){_super.prototype.setLocalAudioFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(localDescription.getSdpMessage().getAudioDescription())),_super.prototype.setLocalVideoFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(localDescription.getSdpMessage().getVideoDescription())),_this.__sendOfferBackoff=200,_this.__sendOfferTimeout=_super.prototype.getNoMediaServerTimeout.call(_this),_this.__sendOfferTimestamp=fm.liveswitch.ManagedStopwatch.getTimestamp(),_this.sendOffer(localDescription)}),(function(ex){fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log.error(_super.prototype.getId.call(_this),"Could not set local description.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.LocalDescriptionError,ex))}))}),(function(ex){fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log.error(_super.prototype.getId.call(_this),"Could not create offer.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.LocalDescriptionError,ex))}))},ServerConnection.prototype.doProcessMessage=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getUpdate())&&this.processUpdate(message)},ServerConnection.prototype.getInboundAudioBitrate=function(){if(0==arguments.length)return this.__inboundAudioBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.prototype.getInboundVideoBitrate=function(){if(0==arguments.length)return this.__inboundVideoBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.prototype.getMediaServerId=function(){if(0==arguments.length)return this._mediaServerId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.prototype.getPreferredMediaServerId=function(){if(0==arguments.length)return this._preferredMediaServerId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.prototype.onInternalConnectionLocalCandidate=function(internalConnection,localCandidate){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(internalConnection,null)||fm.liveswitch.Global.equals(localCandidate.getProtocol(),fm.liveswitch.ProtocolType.Tcp)||this.tryHoldLocalCandidate(localCandidate)||(_super.prototype.raiseLocalCandidate.call(this,localCandidate),this.send(fm.liveswitch.Message.createCandidateMessage(localCandidate.toJson())).fail((function(ex){fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log.error("Could not send candidate message.",ex)})))},ServerConnection.prototype.onInternalConnectionRemoteCandidate=function(internalConnection,remoteCandidate){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(internalConnection,null)||_super.prototype.raiseRemoteCandidate.call(this,remoteCandidate)},ServerConnection.prototype.processAnswer=function(message){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setMediaServerId(message.getMediaServerId()),this.releaseLocalCandidates(),_super.prototype.getInternalConnection.call(this).setRemoteDescription(fm.liveswitch.SessionDescription.fromJson(message.getPayload())).then((function(remoteDescription){_super.prototype.setRemoteAudioFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(remoteDescription.getSdpMessage().getAudioDescription())),_super.prototype.setRemoteVideoFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(remoteDescription.getSdpMessage().getVideoDescription()))}),(function(ex){fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log.error(_super.prototype.getId.call(_this),"Could not set remote description.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.RemoteDescriptionError,ex))}))},ServerConnection.prototype.processError=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var state=this.__sendOffer,str=fm.liveswitch.JsonSerializer.deserializeString(message.getPayload());fm.liveswitch.Global.equals(str,fm.liveswitch.ErrorType.getServerNoMediaServersAvailable())&&!fm.liveswitch.Global.equals(state,null)&&fm.liveswitch.ManagedStopwatch.getTimestamp()-this.__sendOfferTimestamp<this.__sendOfferTimeout*fm.liveswitch.Constants.getTicksPerMillisecond()?(this.raiseNoMediaServersAvailable(new fm.liveswitch.NoMediaServersAvailableEventArgs(this.__sendOfferBackoff)),fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log.warn(_super.prototype.getId.call(this),fm.liveswitch.StringExtensions.format("No Media Servers are available to process offer. Trying again in {0} milliseconds...",fm.liveswitch.NumberExtensions.toString(this.__sendOfferBackoff))),this.__sendOfferBackoffTimer=new fm.liveswitch.TimeoutTimer(this.retrySendOffer.bind(this),state),this.__sendOfferBackoffTimer.start(this.__sendOfferBackoff)):(fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log.error(_super.prototype.getId.call(this),fm.liveswitch.StringExtensions.format("Received an error from the Media Server: {0}.",str)),_super.prototype.processError.call(this,message))},ServerConnection.prototype.processIceServers=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setMediaServerId(message.getMediaServerId()),_super.prototype.processIceServers.call(this,message)},ServerConnection.prototype.processUpdate=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(this.__lastUpdateTimestamp,-1)||message.getTimestamp()>=this.__lastUpdateTimestamp){this.__lastUpdateTimestamp=message.getTimestamp();var config=fm.liveswitch.ConnectionConfig.fromJson(message.getPayload()),remoteAudioEncoding=_super.prototype.getRemoteAudioEncoding.call(this),encoding=config.getRemoteAudioEncoding();fm.liveswitch.Global.equals(encoding,null)||fm.liveswitch.Global.equals(remoteAudioEncoding,encoding)||!fm.liveswitch.Global.equals(remoteAudioEncoding,null)&&remoteAudioEncoding.isEquivalent(encoding)||_super.prototype.setRemoteAudioEncoding.call(this,encoding);var remoteVideoEncoding=_super.prototype.getRemoteVideoEncoding.call(this),info4=config.getRemoteVideoEncoding();fm.liveswitch.Global.equals(info4,null)||fm.liveswitch.Global.equals(remoteVideoEncoding,info4)||!fm.liveswitch.Global.equals(remoteVideoEncoding,null)&&remoteVideoEncoding.isEquivalent(info4)||_super.prototype.setRemoteVideoEncoding.call(this,info4)}},ServerConnection.prototype.raiseAudioBitrateNotification=function(audioStream,bitrateNotification){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.raiseAudioBitrateNotification.call(this,audioStream,bitrateNotification);var inboundAudioBitrate=this.getInboundAudioBitrate(),bitrate=bitrateNotification.getBitrate();fm.liveswitch.Global.equals(inboundAudioBitrate,bitrate)||this.setInboundAudioBitrate(bitrate)},ServerConnection.prototype.raiseVideoBitrateNotification=function(videoStream,bitrateNotification){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.raiseVideoBitrateNotification.call(this,videoStream,bitrateNotification);var inboundVideoBitrate=this.getInboundVideoBitrate(),bitrate=bitrateNotification.getBitrate();fm.liveswitch.Global.equals(inboundVideoBitrate,bitrate)||this.setInboundVideoBitrate(bitrate)},ServerConnection.prototype.releaseLocalCandidates=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__holdLocalCandidates=!0;for(var _i=0,_a=this.__heldLocalCandidates;_i<_a.length;_i++){var candidate=_a[_i];_super.prototype.raiseLocalCandidate.call(this,candidate)}},ServerConnection.prototype.removeOnInboundAudioBitrateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onInboundAudioBitrateChange,value)},ServerConnection.prototype.removeOnInboundVideoBitrateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onInboundVideoBitrateChange,value)},ServerConnection.prototype.retrySendOffer=function(state){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.ConnectionState.Closing)||fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.ConnectionState.Closed)||fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.ConnectionState.Failing)||fm.liveswitch.Global.equals(_super.prototype.getState.call(this),fm.liveswitch.ConnectionState.Failed)||(this.__sendOfferBackoff=fm.liveswitch.MathAssistant.min(2*this.__sendOfferBackoff,fm.liveswitch.MathAssistant.floor(this.__sendOfferTimeout/2)),this.sendOffer(state))},ServerConnection.prototype.send=function(message){if(1==arguments.length){message.setMediaServerId(this.getMediaServerId());var preferredMediaServerId=this.getPreferredMediaServerId();return!fm.liveswitch.Global.equals(preferredMediaServerId,null)&&fm.liveswitch.Global.equals(message.getMediaServerId(),null)&&message.setPreferredMediaServerId(preferredMediaServerId),_super.prototype.send.call(this,message)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.prototype.sendOffer=function(offer){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__sendOffer=offer,this.send(this.doCreateOfferMessage(offer)).then((function(response){fm.liveswitch.Global.equals(response,null)||_this.processMessage(response)}),(function(ex){fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log.error(_super.prototype.getId.call(_this),"Could not send offer.",ex)}))},ServerConnection.prototype.setInboundAudioBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]);var num=fm.liveswitch.Global.toInt(this.__inboundAudioBitrate);this.__inboundAudioBitrate=fm.liveswitch.Global.toInt(value);var onInboundAudioBitrateChange=this._onInboundAudioBitrateChange;fm.liveswitch.Global.equals(onInboundAudioBitrateChange,null)||onInboundAudioBitrateChange(num,value)},ServerConnection.prototype.setInboundVideoBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]);var num=fm.liveswitch.Global.toInt(this.__inboundVideoBitrate);this.__inboundVideoBitrate=fm.liveswitch.Global.toInt(value);var onInboundVideoBitrateChange=this._onInboundVideoBitrateChange;fm.liveswitch.Global.equals(onInboundVideoBitrateChange,null)||onInboundVideoBitrateChange(num,value)},ServerConnection.prototype.setMediaServerId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaServerId=value},ServerConnection.prototype.setPreferredMediaServerId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._preferredMediaServerId=value},ServerConnection.prototype.tryHoldLocalCandidate=function(localCandidate){if(1==arguments.length)return!!this.__holdLocalCandidates&&(fm.liveswitch.ArrayExtensions.add(this.__heldLocalCandidates,localCandidate),!0);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerConnection.fmliveswitchServerConnectionInitialize=function(){fm.liveswitch.ServerConnection.__fmliveswitchServerConnectionInitialized||fm.liveswitch.ServerConnection.__fmliveswitchServerConnectionInitializing||(fm.liveswitch.ServerConnection.__fmliveswitchServerConnectionInitializing=!0,fm.liveswitch.ServerConnection.fm_liveswitch_ServerConnection___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.ServerConnection]")),fm.liveswitch.ServerConnection.__fmliveswitchServerConnectionInitialized=!0,fm.liveswitch.ServerConnection.__fmliveswitchServerConnectionInitializing=!1)},ServerConnection.__fmliveswitchServerConnectionInitialized=!1,ServerConnection.__fmliveswitchServerConnectionInitializing=!1,ServerConnection}(fm.liveswitch.ManagedConnection);liveswitch.ServerConnection=ServerConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var McuConnection=function(_super){function McuConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,mediaId){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(11!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var sharedLock_5=__arguments[0],applicationId_16=__arguments[1],channelId_4=__arguments[2],userId_16=__arguments[3],deviceId_13=__arguments[4],clientId_10=__arguments[5],send_2=__arguments[6],audioStream_3=__arguments[7],videoStream_3=__arguments[8],dataStream_3=__arguments[9],mediaId_3=__arguments[10];return _super.call(this,sharedLock_5,applicationId_16,channelId_4,userId_16,deviceId_13,clientId_10,send_2,fm.liveswitch.ConnectionType.getMcu(),audioStream_3,videoStream_3,dataStream_3,mediaId_3)||this}return __extends(McuConnection,_super),McuConnection.prototype.getTypeString=function(){return"[fm.liveswitch.McuConnection],"+_super.prototype.getTypeString.call(this)},McuConnection.prototype.doCreateOfferMessage=function(offer){if(1==arguments.length)return fm.liveswitch.Message.createMcuOfferMessage(_super.prototype.getTag.call(this),offer.toJson());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},McuConnection.prototype.isMediaDirectionAllowed=function(direction){if(1==arguments.length)return!0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},McuConnection}(fm.liveswitch.ServerConnection);liveswitch.McuConnection=McuConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NoMediaServersAvailableEventArgs=function(){function NoMediaServersAvailableEventArgs(backoff){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var backoff_1=__arguments[0];this.fmliveswitchNoMediaServersAvailableEventArgsInit(),this.setBackoff(backoff_1)}return NoMediaServersAvailableEventArgs.prototype.getTypeString=function(){return"[fm.liveswitch.NoMediaServersAvailableEventArgs]"},NoMediaServersAvailableEventArgs.prototype.fmliveswitchNoMediaServersAvailableEventArgsInit=function(){this._backoff=0},NoMediaServersAvailableEventArgs.prototype.getBackoff=function(){if(0==arguments.length)return this._backoff;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NoMediaServersAvailableEventArgs.prototype.setBackoff=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._backoff=fm.liveswitch.Global.toInt(value)},NoMediaServersAvailableEventArgs}();liveswitch.NoMediaServersAvailableEventArgs=NoMediaServersAvailableEventArgs}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PeerConnection=function(_super){function PeerConnection(){var _this=this;fm.liveswitch.PeerConnection.fmliveswitchPeerConnectionInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(11==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.PeerConnectionOffer]"))){var sharedLock=__arguments[0],applicationId=__arguments[1],channelId=__arguments[2],userId=__arguments[3],deviceId=__arguments[4],clientId=__arguments[5],send=__arguments[6],peerConnectionOffer=__arguments[7],audioStream=__arguments[8],videoStream=__arguments[9],dataStream=__arguments[10];(_this=_super.call(this,sharedLock,applicationId,channelId,userId,deviceId,clientId,send,fm.liveswitch.ConnectionType.getPeer(),audioStream,videoStream,dataStream,null)||this).fmliveswitchPeerConnectionInit(),_this.__lastUpdateTimestamp=-1,_this.setRemoteClientInfo(peerConnectionOffer.getRemoteClientInfo()),_super.prototype.setRemoteConnectionId.call(_this,peerConnectionOffer.getRemoteConnectionId()),_super.prototype.setRemoteTag.call(_this,peerConnectionOffer.getConnectionTag()),_this.setRole(fm.liveswitch.PeerRole.Answerer),_this.__pendingRemoteDescription=peerConnectionOffer.getOffer(),_super.prototype.getInternalConnection.call(_this).addOnLocalCandidate(_this.onInternalConnectionLocalCandidate.bind(_this)),_super.prototype.getInternalConnection.call(_this).addOnRemoteCandidate(_this.onInternalConnectionRemoteCandidate.bind(_this))}else{if(11!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[7])&&!fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.ClientInfo]"))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");sharedLock=__arguments[0],applicationId=__arguments[1],channelId=__arguments[2],userId=__arguments[3],deviceId=__arguments[4],clientId=__arguments[5],send=__arguments[6];var remoteClientInfo=__arguments[7];audioStream=__arguments[8],videoStream=__arguments[9],dataStream=__arguments[10];(_this=_super.call(this,sharedLock,applicationId,channelId,userId,deviceId,clientId,send,fm.liveswitch.ConnectionType.getPeer(),audioStream,videoStream,dataStream,null)||this).fmliveswitchPeerConnectionInit(),_this.__lastUpdateTimestamp=-1,_this.setRemoteClientInfo(remoteClientInfo),_super.prototype.setRemoteConnectionId.call(_this,null),_super.prototype.setRemoteTag.call(_this,null),_this.setRole(fm.liveswitch.PeerRole.Offerer),_super.prototype.getInternalConnection.call(_this).addOnLocalCandidate(_this.onInternalConnectionLocalCandidate.bind(_this)),_super.prototype.getInternalConnection.call(_this).addOnRemoteCandidate(_this.onInternalConnectionRemoteCandidate.bind(_this))}return _this}return __extends(PeerConnection,_super),PeerConnection.prototype.getTypeString=function(){return"[fm.liveswitch.PeerConnection],"+_super.prototype.getTypeString.call(this)},PeerConnection.prototype.fmliveswitchPeerConnectionInit=function(){this.__lastUpdateTimestamp=0},PeerConnection.prototype.detachInternalEventHandlers=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.getInternalConnection.call(this).removeOnLocalCandidate(this.onInternalConnectionLocalCandidate.bind(this)),_super.prototype.getInternalConnection.call(this).removeOnRemoteCandidate(this.onInternalConnectionRemoteCandidate.bind(this)),_super.prototype.detachInternalEventHandlers.call(this)},PeerConnection.prototype.doCreateCandidateMessage=function(candidate){if(1==arguments.length)return fm.liveswitch.Message.createPeerCandidateMessage(candidate.toJson(),this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getId());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnection.prototype.doCreateCloseMessage=function(){if(0==arguments.length)return fm.liveswitch.Message.createPeerCloseMessage(this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getId());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnection.prototype.doCreateUpdateMessage=function(config){if(1==arguments.length)return fm.liveswitch.Message.createUpdateMessage(config.toJson(),this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getId());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnection.prototype.doOpen=function(){var _this=this;if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var resolveAction=null,rejectAction=null,action3=null,action4=null;fm.liveswitch.Global.equals(this.getRole(),fm.liveswitch.PeerRole.Offerer)?(fm.liveswitch.Global.equals(resolveAction,null)&&(resolveAction=function(offer){_this.getInternalConnection().setLocalDescription(offer).then((function(localDescription){_super.prototype.setLocalAudioFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(localDescription.getSdpMessage().getAudioDescription())),_super.prototype.setLocalVideoFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(localDescription.getSdpMessage().getVideoDescription())),_this.send(fm.liveswitch.Message.createPeerOfferMessage(_super.prototype.getTag.call(_this),localDescription.toJson(),_this.getRemoteClientInfo().getUserId(),_this.getRemoteClientInfo().getDeviceId(),_this.getRemoteClientInfo().getId())).fail((function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not send offer message.",ex)}))}),(function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not set local description.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.LocalDescriptionError,ex))}))}),fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not create offer.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.LocalDescriptionError,ex))}),_super.prototype.getInternalConnection.call(this).createOffer().then(resolveAction,rejectAction)):(_super.prototype.getInternalConnection.call(this).setExternalId(_super.prototype.getRemoteConnectionId.call(this)),fm.liveswitch.Global.equals(action3,null)&&(action3=function(remoteDescription){_super.prototype.setRemoteAudioFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(remoteDescription.getSdpMessage().getAudioDescription())),_super.prototype.setRemoteVideoFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(remoteDescription.getSdpMessage().getVideoDescription())),_this.getInternalConnection().createAnswer().then((function(answer){_this.getInternalConnection().setLocalDescription(answer).then((function(localDescription){_super.prototype.setLocalAudioFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(localDescription.getSdpMessage().getAudioDescription())),_super.prototype.setLocalVideoFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(localDescription.getSdpMessage().getVideoDescription())),_this.send(fm.liveswitch.Message.createPeerAnswerMessage(_super.prototype.getTag.call(_this),localDescription.toJson(),_this.getRemoteClientInfo().getUserId(),_this.getRemoteClientInfo().getDeviceId(),_this.getRemoteClientInfo().getId())).fail((function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not send answer message.",ex)}))}),(function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not set local description.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.LocalDescriptionError,ex)),_this.sendErrorToPeer(ex)}))}),(function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not create answer.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.LocalDescriptionError,ex)),_this.sendErrorToPeer(ex)}))}),fm.liveswitch.Global.equals(action4,null)&&(action4=function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not set remote description.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.RemoteDescriptionError,ex)),_this.sendErrorToPeer(ex)}),_super.prototype.getInternalConnection.call(this).setRemoteDescription(this.__pendingRemoteDescription).then(action3,action4))},PeerConnection.prototype.doProcessMessage=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getUpdate())&&this.processUpdate(message)},PeerConnection.prototype.getRemoteClientInfo=function(){if(0==arguments.length)return this._remoteClientInfo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnection.prototype.getRole=function(){if(0==arguments.length)return this._role;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnection.prototype.isMediaDirectionAllowed=function(direction){if(1==arguments.length)return!0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnection.prototype.onInternalConnectionLocalCandidate=function(internalConnection,localCandidate){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(internalConnection,null)||fm.liveswitch.Global.equals(localCandidate.getProtocol(),fm.liveswitch.ProtocolType.Tcp)||_super.prototype.raiseLocalCandidate.call(this,localCandidate)},PeerConnection.prototype.onInternalConnectionRemoteCandidate=function(internalConnection,remoteCandidate){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(internalConnection,null)||_super.prototype.raiseRemoteCandidate.call(this,remoteCandidate)},PeerConnection.prototype.processAnswer=function(message){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setRemoteConnectionId.call(this,message.getRemoteConnectionId()),_super.prototype.setRemoteTag.call(this,message.getConnectionTag()),_super.prototype.getInternalConnection.call(this).setExternalId(message.getRemoteConnectionId()),_super.prototype.getInternalConnection.call(this).setRemoteDescription(fm.liveswitch.SessionDescription.fromJson(message.getPayload())).then((function(remoteDescription){_super.prototype.setRemoteAudioFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(remoteDescription.getSdpMessage().getAudioDescription())),_super.prototype.setRemoteVideoFormats.call(_this,fm.liveswitch.FormatInfo.fromSdpMediaDescription(remoteDescription.getSdpMessage().getVideoDescription()))}),(function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not set remote description.",ex),_this.processLocalError(new fm.liveswitch.Error(fm.liveswitch.ErrorCode.RemoteDescriptionError,ex)),_this.sendErrorToPeer(ex)}))},PeerConnection.prototype.processError=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=fm.liveswitch.JsonSerializer.deserializeString(message.getPayload());fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(this),fm.liveswitch.StringExtensions.format("Received an error from the remote peer: {0}.",str)),_super.prototype.processError.call(this,message)},PeerConnection.prototype.processUpdate=function(message){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(this.__lastUpdateTimestamp,-1)||message.getTimestamp()>=this.__lastUpdateTimestamp){this.__lastUpdateTimestamp=message.getTimestamp();var config=fm.liveswitch.ConnectionConfig.fromJson(message.getPayload()),sendReceive=fm.liveswitch.StreamDirection.SendReceive;sendReceive=fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.setSendDisabled(sendReceive,_super.prototype.getRemoteAudioDisabled.call(this)),_super.prototype.getLocalAudioDisabled.call(this));var direction=fm.liveswitch.StreamDirection.SendReceive;direction=fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.setSendDisabled(direction,_super.prototype.getRemoteAudioDisabled.call(this)),_super.prototype.getLocalAudioDisabled.call(this));var direction3=fm.liveswitch.StreamDirection.SendReceive;direction3=fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(fm.liveswitch.StreamDirectionHelper.setSendDisabled(direction3,_super.prototype.getRemoteDataDisabled.call(this)),_super.prototype.getLocalDataDisabled.call(this));var oldInfo=new fm.liveswitch.ConnectionInfo(this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getUserAlias(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getDeviceAlias(),this.getRemoteClientInfo().getId(),this.getRemoteClientInfo().getTag(),this.getRemoteClientInfo().getRoles(),_super.prototype.getRemoteConnectionId.call(this),_super.prototype.getRemoteTag.call(this),_super.prototype.getType.call(this),_super.prototype.getRemoteMediaId.call(this),_super.prototype.getRemoteAudioMuted.call(this),_super.prototype.getRemoteVideoMuted.call(this),fm.liveswitch.StreamDirectionHelper.directionToString(sendReceive),fm.liveswitch.StreamDirectionHelper.directionToString(direction),fm.liveswitch.StreamDirectionHelper.directionToString(direction3),_super.prototype.getRemoteAudioFormats.call(this),_super.prototype.getRemoteVideoFormats.call(this));_super.prototype.setRemoteTag.call(this,config.getTag());var newInfo=new fm.liveswitch.ConnectionInfo(this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getUserAlias(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getDeviceAlias(),this.getRemoteClientInfo().getId(),this.getRemoteClientInfo().getTag(),this.getRemoteClientInfo().getRoles(),_super.prototype.getRemoteConnectionId.call(this),_super.prototype.getRemoteTag.call(this),_super.prototype.getType.call(this),_super.prototype.getRemoteMediaId.call(this),config.getLocalAudioMuted(),config.getLocalVideoMuted(),config.getAudioDirection(),config.getVideoDirection(),config.getDataDirection(),_super.prototype.getRemoteAudioFormats.call(this),_super.prototype.getRemoteVideoFormats.call(this));_super.prototype.updateConnection.call(this,oldInfo,newInfo).fail((function(ex){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(fm.liveswitch.StringExtensions.format("Could not update peer connection {0}.",_super.prototype.getId.call(_this)),ex)}))}},PeerConnection.prototype.send=function(message){if(1==arguments.length)return message.setRemoteConnectionId(_super.prototype.getRemoteConnectionId.call(this)),_super.prototype.send.call(this,message);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnection.prototype.sendErrorToPeer=function(ex){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var rejectAction=null,action2=null,action3=null,error=_super.prototype.getInternalConnection.call(this).getError();!fm.liveswitch.Global.equals(error,null)&&fm.liveswitch.Global.equals(error.getCode(),fm.liveswitch.ErrorCode.ConnectionInvalidArchitecture)?(fm.liveswitch.Global.equals(rejectAction,null)&&(rejectAction=function(ex2){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not send error message.",ex2)}),this.send(fm.liveswitch.Message.createErrorMessage(fm.liveswitch.ErrorType.getSdpStreamMismatch(),this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getId())).fail(rejectAction)):!fm.liveswitch.Global.equals(error,null)&&fm.liveswitch.Global.equals(error.getCode(),fm.liveswitch.ErrorCode.ConnectionSimulcastNotSupported)?(fm.liveswitch.Global.equals(action2,null)&&(action2=function(ex2){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not send error message.",ex2)}),this.send(fm.liveswitch.Message.createErrorMessage(fm.liveswitch.ErrorType.getSdpSimulcastMismatch(),this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getId())).fail(action2)):(fm.liveswitch.Global.equals(action3,null)&&(action3=function(ex2){fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log.error(_super.prototype.getId.call(_this),"Could not send error message.",ex2)}),this.send(fm.liveswitch.Message.createErrorMessage(fm.liveswitch.ErrorType.getSdpCodecMismatch(),this.getRemoteClientInfo().getUserId(),this.getRemoteClientInfo().getDeviceId(),this.getRemoteClientInfo().getId())).fail(action3))},PeerConnection.prototype.setRemoteClientInfo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteClientInfo=value},PeerConnection.prototype.setRole=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._role=value},PeerConnection.fmliveswitchPeerConnectionInitialize=function(){fm.liveswitch.PeerConnection.__fmliveswitchPeerConnectionInitialized||fm.liveswitch.PeerConnection.__fmliveswitchPeerConnectionInitializing||(fm.liveswitch.PeerConnection.__fmliveswitchPeerConnectionInitializing=!0,fm.liveswitch.PeerConnection.fm_liveswitch_PeerConnection___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.PeerConnection]")),fm.liveswitch.PeerConnection.__fmliveswitchPeerConnectionInitialized=!0,fm.liveswitch.PeerConnection.__fmliveswitchPeerConnectionInitializing=!1)},PeerConnection.__fmliveswitchPeerConnectionInitialized=!1,PeerConnection.__fmliveswitchPeerConnectionInitializing=!1,PeerConnection}(fm.liveswitch.ManagedConnection);liveswitch.PeerConnection=PeerConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PeerConnectionOffer=function(){function PeerConnectionOffer(channel,remoteClientInfo,remoteConnectionId,connectionTag,offer){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(5!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var channel_2=__arguments[0],remoteClientInfo_1=__arguments[1],remoteConnectionId_1=__arguments[2],connectionTag_1=__arguments[3],offer_1=__arguments[4];this.fmliveswitchPeerConnectionOfferInit(),this.__lock=new Object,this.__earlyCandidateMessages=new Array,this.setChannel(channel_2),this.setRemoteClientInfo(remoteClientInfo_1),this.setRemoteConnectionId(remoteConnectionId_1),this.setConnectionTag(connectionTag_1),this.setOffer(offer_1);for(var _i=0,_a=this.getOffer().getSdpMessage().getMediaDescriptions();_i<_a.length;_i++){var description=_a[_i];fm.liveswitch.Global.equals(description.getMedia().getMediaType(),fm.liveswitch.sdp.MediaType.getAudio())?this.setHasAudio(!0):fm.liveswitch.Global.equals(description.getMedia().getMediaType(),fm.liveswitch.sdp.MediaType.getVideo())?this.setHasVideo(!0):fm.liveswitch.Global.equals(description.getMedia().getMediaType(),fm.liveswitch.sdp.MediaType.getApplication())&&this.setHasData(!0)}}return PeerConnectionOffer.prototype.getTypeString=function(){return"[fm.liveswitch.PeerConnectionOffer]"},PeerConnectionOffer.prototype.fmliveswitchPeerConnectionOfferInit=function(){var _this=this;this.__onCancel=[],this._hasAudio=!1,this._hasData=!1,this._hasVideo=!1,this._onCancel=function(){for(var _i=0,_a=_this.__onCancel;_i<_a.length;_i++){(0,_a[_i])()}},this._remoteClosed=!1,this._remoteFailed=!1},PeerConnectionOffer.prototype.accept=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))){var audioStream=arguments[0];return this.getChannel().createPeerConnection(this,audioStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){audioStream=arguments[0];var dataStream=arguments[1];return this.getChannel().createPeerConnection(this,audioStream,dataStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.AudioStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.VideoStream]"))){audioStream=arguments[0];var videoStream=arguments[1];return this.getChannel().createPeerConnection(this,audioStream,videoStream)}if(3==arguments.length){audioStream=arguments[0],videoStream=arguments[1],dataStream=arguments[2];return this.getChannel().createPeerConnection(this,audioStream,videoStream,dataStream)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.DataStream]"))){dataStream=arguments[0];return this.getChannel().createPeerConnection(this,dataStream)}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))){videoStream=arguments[0];return this.getChannel().createPeerConnection(this,videoStream)}if(2==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.VideoStream]"))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.DataStream]"))){videoStream=arguments[0],dataStream=arguments[1];return this.getChannel().createPeerConnection(this,videoStream,dataStream)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.addOnCancel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onCancel,value)},PeerConnectionOffer.prototype.getChannel=function(){if(0==arguments.length)return this._channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getConnectionTag=function(){if(0==arguments.length)return this._connectionTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getEarlyCandidateMessages=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__earlyCandidateMessages);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getHasAudio=function(){if(0==arguments.length)return this._hasAudio;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getHasData=function(){if(0==arguments.length)return this._hasData;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getHasVideo=function(){if(0==arguments.length)return this._hasVideo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getOffer=function(){if(0==arguments.length)return this._offer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getRemoteClientInfo=function(){if(0==arguments.length)return this._remoteClientInfo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getRemoteClosed=function(){if(0==arguments.length)return this._remoteClosed;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getRemoteConnectionId=function(){if(0==arguments.length)return this._remoteConnectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.getRemoteFailed=function(){if(0==arguments.length)return this._remoteFailed;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.processMessage=function(message){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getCandidate()))fm.liveswitch.ArrayExtensions.add(this.__earlyCandidateMessages,message);else{var onCancel=void 0;fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getClose())?(this.setRemoteClosed(!0),onCancel=this._onCancel,fm.liveswitch.Global.equals(onCancel,null)||onCancel()):fm.liveswitch.Global.equals(message.getType(),fm.liveswitch.MessageType.getFail())&&(this.setRemoteFailed(!0),onCancel=this._onCancel,fm.liveswitch.Global.equals(onCancel,null)||onCancel())}},PeerConnectionOffer.prototype.reject=function(){if(0==arguments.length)return this.getChannel().rejectPeerConnection(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerConnectionOffer.prototype.removeOnCancel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onCancel,value)},PeerConnectionOffer.prototype.setChannel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channel=value},PeerConnectionOffer.prototype.setConnectionTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionTag=value},PeerConnectionOffer.prototype.setHasAudio=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._hasAudio=value},PeerConnectionOffer.prototype.setHasData=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._hasData=value},PeerConnectionOffer.prototype.setHasVideo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._hasVideo=value},PeerConnectionOffer.prototype.setOffer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._offer=value},PeerConnectionOffer.prototype.setRemoteClientInfo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteClientInfo=value},PeerConnectionOffer.prototype.setRemoteClosed=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteClosed=value},PeerConnectionOffer.prototype.setRemoteConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteConnectionId=value},PeerConnectionOffer.prototype.setRemoteFailed=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteFailed=value},PeerConnectionOffer}();liveswitch.PeerConnectionOffer=PeerConnectionOffer}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var PeerRoleWrapper=function(){function PeerRoleWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_64=__arguments[0];this._value=value_64}return PeerRoleWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.PeerRoleWrapper]"},PeerRoleWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.PeerRole.Offerer?"Offerer":this._value==fm.liveswitch.PeerRole.Answerer?"Answerer":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},PeerRoleWrapper}();liveswitch.PeerRoleWrapper=PeerRoleWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SfuConnection=function(_super){function SfuConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,mediaId){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(11!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var sharedLock_6=__arguments[0],applicationId_17=__arguments[1],channelId_5=__arguments[2],userId_17=__arguments[3],deviceId_14=__arguments[4],clientId_11=__arguments[5],send_3=__arguments[6],audioStream_4=__arguments[7],videoStream_4=__arguments[8],dataStream_4=__arguments[9],mediaId_4=__arguments[10];return _super.call(this,sharedLock_6,applicationId_17,channelId_5,userId_17,deviceId_14,clientId_11,send_3,fm.liveswitch.ConnectionType.getSfu(),audioStream_4,videoStream_4,dataStream_4,mediaId_4)||this}return __extends(SfuConnection,_super),SfuConnection.prototype.getTypeString=function(){return"[fm.liveswitch.SfuConnection],"+_super.prototype.getTypeString.call(this)},SfuConnection}(fm.liveswitch.ServerConnection);liveswitch.SfuConnection=SfuConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SfuDownstreamConnection=function(_super){function SfuDownstreamConnection(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(11==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.ConnectionInfo]"))){var sharedLock=__arguments[0],applicationId=__arguments[1],channelId=__arguments[2],userId=__arguments[3],deviceId=__arguments[4],clientId=__arguments[5],send=__arguments[6],remoteConnectionInfo=__arguments[7],audioStream=__arguments[8],videoStream=__arguments[9],dataStream=__arguments[10];(_this=_super.call(this,sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,null)||this).setRemoteConnectionInfo(remoteConnectionInfo),fm.liveswitch.Global.equals(remoteConnectionInfo,null)||(_super.prototype.setRemoteConnectionId.call(_this,remoteConnectionInfo.getId()),fm.liveswitch.Global.equals(audioStream,null)||audioStream.setRemoteMuted(remoteConnectionInfo.getLocalAudioMuted()),fm.liveswitch.Global.equals(videoStream,null)||videoStream.setRemoteMuted(remoteConnectionInfo.getLocalVideoMuted())),_this.initialize(audioStream,videoStream,dataStream)}else{if(11!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[7])&&!fm.liveswitch.Util.isString(arguments[7]))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");sharedLock=__arguments[0],applicationId=__arguments[1],channelId=__arguments[2],userId=__arguments[3],deviceId=__arguments[4],clientId=__arguments[5],send=__arguments[6];var remoteMediaId=__arguments[7];audioStream=__arguments[8],videoStream=__arguments[9],dataStream=__arguments[10];_this=_super.call(this,sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,null)||this,_super.prototype.setRemoteMediaId.call(_this,remoteMediaId),_this.initialize(audioStream,videoStream,dataStream)}return _this}return __extends(SfuDownstreamConnection,_super),SfuDownstreamConnection.prototype.getTypeString=function(){return"[fm.liveswitch.SfuDownstreamConnection],"+_super.prototype.getTypeString.call(this)},SfuDownstreamConnection.prototype.doCreateOfferMessage=function(offer){if(1==arguments.length)return fm.liveswitch.Global.equals(this.getRemoteConnectionInfo(),null)?fm.liveswitch.Global.equals(_super.prototype.getRemoteMediaId.call(this),null)?null:fm.liveswitch.Message.createSfuOfferMessage(_super.prototype.getTag.call(this),offer.toJson(),_super.prototype.getRemoteMediaId.call(this)):fm.liveswitch.Message.createSfuOfferMessage(_super.prototype.getTag.call(this),offer.toJson(),this.getRemoteConnectionInfo().getUserId(),this.getRemoteConnectionInfo().getDeviceId(),this.getRemoteConnectionInfo().getClientId(),this.getRemoteConnectionInfo().getId());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SfuDownstreamConnection.prototype.getRemoteConnectionInfo=function(){if(0==arguments.length)return this._remoteConnectionInfo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SfuDownstreamConnection.prototype.initialize=function(audioStream,videoStream,dataStream){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setMediaId.call(this,null),fm.liveswitch.Global.equals(audioStream,null)||(fm.liveswitch.Global.equals(audioStream.getLocalDirection(),fm.liveswitch.StreamDirection.SendReceive)?audioStream.setLocalDirection(fm.liveswitch.StreamDirection.ReceiveOnly):fm.liveswitch.Global.equals(audioStream.getLocalDirection(),fm.liveswitch.StreamDirection.SendOnly)&&audioStream.setLocalDirection(fm.liveswitch.StreamDirection.Inactive)),fm.liveswitch.Global.equals(videoStream,null)||(fm.liveswitch.Global.equals(videoStream.getLocalDirection(),fm.liveswitch.StreamDirection.SendReceive)?videoStream.setLocalDirection(fm.liveswitch.StreamDirection.ReceiveOnly):fm.liveswitch.Global.equals(videoStream.getLocalDirection(),fm.liveswitch.StreamDirection.SendOnly)&&videoStream.setLocalDirection(fm.liveswitch.StreamDirection.Inactive)),fm.liveswitch.Global.equals(dataStream,null)},SfuDownstreamConnection.prototype.isMediaDirectionAllowed=function(direction){if(1==arguments.length)return fm.liveswitch.StreamDirectionHelper.isSendDisabled(direction);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SfuDownstreamConnection.prototype.setRemoteConnectionInfo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteConnectionInfo=value},SfuDownstreamConnection}(fm.liveswitch.SfuConnection);liveswitch.SfuDownstreamConnection=SfuDownstreamConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SfuUpstreamConnection=function(_super){function SfuUpstreamConnection(sharedLock,applicationId,channelId,userId,deviceId,clientId,send,audioStream,videoStream,dataStream,mediaId){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(11!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var sharedLock_7=__arguments[0],applicationId_18=__arguments[1],channelId_6=__arguments[2],userId_18=__arguments[3],deviceId_15=__arguments[4],clientId_12=__arguments[5],send_4=__arguments[6],audioStream_5=__arguments[7],videoStream_5=__arguments[8],dataStream_5=__arguments[9],mediaId_5=__arguments[10];return _this=_super.call(this,sharedLock_7,applicationId_18,channelId_6,userId_18,deviceId_15,clientId_12,send_4,audioStream_5,videoStream_5,dataStream_5,mediaId_5)||this,fm.liveswitch.Global.equals(audioStream_5,null)||(fm.liveswitch.Global.equals(audioStream_5.getLocalDirection(),fm.liveswitch.StreamDirection.SendReceive)?audioStream_5.setLocalDirection(fm.liveswitch.StreamDirection.SendOnly):fm.liveswitch.Global.equals(audioStream_5.getLocalDirection(),fm.liveswitch.StreamDirection.ReceiveOnly)&&audioStream_5.setLocalDirection(fm.liveswitch.StreamDirection.Inactive)),fm.liveswitch.Global.equals(videoStream_5,null)||(fm.liveswitch.Global.equals(videoStream_5.getLocalDirection(),fm.liveswitch.StreamDirection.SendReceive)?videoStream_5.setLocalDirection(fm.liveswitch.StreamDirection.SendOnly):fm.liveswitch.Global.equals(videoStream_5.getLocalDirection(),fm.liveswitch.StreamDirection.ReceiveOnly)&&videoStream_5.setLocalDirection(fm.liveswitch.StreamDirection.Inactive)),fm.liveswitch.Global.equals(dataStream_5,null),_this}return __extends(SfuUpstreamConnection,_super),SfuUpstreamConnection.prototype.getTypeString=function(){return"[fm.liveswitch.SfuUpstreamConnection],"+_super.prototype.getTypeString.call(this)},SfuUpstreamConnection.prototype.doCreateOfferMessage=function(offer){if(1==arguments.length)return fm.liveswitch.Message.createSfuOfferMessage(_super.prototype.getTag.call(this),offer.toJson());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SfuUpstreamConnection.prototype.isMediaDirectionAllowed=function(direction){if(1==arguments.length)return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(direction);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SfuUpstreamConnection}(fm.liveswitch.SfuConnection);liveswitch.SfuUpstreamConnection=SfuUpstreamConnection}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ChannelConfig=function(){function ChannelConfig(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchChannelConfigInit()}return ChannelConfig.prototype.getTypeString=function(){return"[fm.liveswitch.ChannelConfig]"},ChannelConfig.prototype.fmliveswitchChannelConfigInit=function(){this._recording=!1},ChannelConfig.fromJson=function(clientConfigJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(clientConfigJson,(function(){return new fm.liveswitch.ChannelConfig}),(function(config,key,value){var str=key;!fm.liveswitch.Global.equals(str,null)&&fm.liveswitch.Global.equals(str,"recording")&&config.setRecording(fm.liveswitch.JsonSerializer.deserializeBoolean(value))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelConfig.toJson=function(clientConfig){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(clientConfig,(function(config,dict){null!=config.getRecording()&&(dict.recording=fm.liveswitch.JsonSerializer.serializeBoolean(config.getRecording()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelConfig.prototype.getRecording=function(){if(0==arguments.length)return this._recording;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelConfig.prototype.setRecording=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._recording=value},ChannelConfig.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ChannelConfig.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelConfig}();liveswitch.ChannelConfig=ChannelConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var FailureSourceWrapper=function(){function FailureSourceWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_65=__arguments[0];this._value=value_65}return FailureSourceWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.FailureSourceWrapper]"},FailureSourceWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.FailureSource.None?"None":this._value==fm.liveswitch.FailureSource.Network?"Network":this._value==fm.liveswitch.FailureSource.Message?"Message":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FailureSourceWrapper}();liveswitch.FailureSourceWrapper=FailureSourceWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SendItem=function(){function SendItem(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchSendItemInit()}return SendItem.prototype.getTypeString=function(){return"[fm.liveswitch.SendItem]"},SendItem.prototype.fmliveswitchSendItemInit=function(){this._lastInBatch=!1,this._resendIndex=0,this._retry=!1,this._sendBackoff=0,this._sendCounter=0},SendItem.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getLastInBatch=function(){if(0==arguments.length)return this._lastInBatch;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getPromise=function(){if(0==arguments.length)return this._promise;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getRequest=function(){if(0==arguments.length)return this._request;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getResendIndex=function(){if(0==arguments.length)return this._resendIndex;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getResponse=function(){if(0==arguments.length)return this._response;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getRetry=function(){if(0==arguments.length)return this._retry;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getSendBackoff=function(){if(0==arguments.length)return this._sendBackoff;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.getSendCounter=function(){if(0==arguments.length)return this._sendCounter;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendItem.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},SendItem.prototype.setLastInBatch=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._lastInBatch=value},SendItem.prototype.setPromise=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._promise=value},SendItem.prototype.setRequest=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._request=value},SendItem.prototype.setResendIndex=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._resendIndex=fm.liveswitch.Global.toInt(value)},SendItem.prototype.setResponse=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._response=value},SendItem.prototype.setRetry=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._retry=value},SendItem.prototype.setSendBackoff=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sendBackoff=fm.liveswitch.Global.toInt(value)},SendItem.prototype.setSendCounter=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._sendCounter=fm.liveswitch.Global.toInt(value)},SendItem}();liveswitch.SendItem=SendItem}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SendQueue=function(){function SendQueue(transport){fm.liveswitch.SendQueue.fmliveswitchSendQueueInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var transport_1=__arguments[0];this.__pending=new Array,this.__sending=new Array,this.__lock=new Object,this.__sendQueueTransport=transport_1}return SendQueue.prototype.getTypeString=function(){return"[fm.liveswitch.SendQueue]"},SendQueue.getSendQueueBatchSizeInCharacters=function(){if(fm.liveswitch.SendQueue.fmliveswitchSendQueueInitialize(),0==arguments.length)return fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___sendQueueBatchSizeInCharacters;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendQueue.setSendQueueBatchSizeInCharacters=function(value){if(fm.liveswitch.SendQueue.fmliveswitchSendQueueInitialize(),1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___sendQueueBatchSizeInCharacters=fm.liveswitch.Global.toInt(value)},SendQueue.takePending=function(sending,pending){if(fm.liveswitch.SendQueue.fmliveswitchSendQueueInitialize(),2==arguments.length){for(var num=0,count=fm.liveswitch.ArrayExtensions.getCount(pending),i=0;i<count;i++){var item=pending[0],request=item.getRequest();if(!fm.liveswitch.Global.equals(request,null)){var length_49=fm.liveswitch.StringExtensions.getLength(request.toJson());if(i>0&&num+length_49>fm.liveswitch.SendQueue.getSendQueueBatchSizeInCharacters())return fm.liveswitch.ArrayExtensions.toArray(sending);fm.liveswitch.ArrayExtensions.add(sending,item),fm.liveswitch.ArrayExtensions.removeAt(pending,0),num+=length_49}}return fm.liveswitch.ArrayExtensions.toArray(sending)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendQueue.prototype.clear=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var list=new Array;fm.liveswitch.ArrayExtensions.addRange(list,this.__sending),fm.liveswitch.ArrayExtensions.addRange(list,this.__pending),fm.liveswitch.ArrayExtensions.clear(this.__sending),fm.liveswitch.ArrayExtensions.clear(this.__pending);for(var _i=0,list_8=list;_i<list_8.length;_i++){var item=list_8[_i];item.getPromise().reject(new fm.liveswitch.Exception("Request cancelled."))}},SendQueue.prototype.doSend=function(item){var _this=this;if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__sendQueueTransport.send(item).then((function(i){i.getRetry()?item.getSendCounter()<=50?_this.processSendTemporaryFailure(i):_this.processSendPermanentFailure(item,item.getException()):_this.processSendSuccess(i)}),(function(ex){_this.processSendPermanentFailure(item,ex)}))},SendQueue.prototype.getPendingItems=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__pending);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendQueue.prototype.getSendingItems=function(){if(0==arguments.length)return fm.liveswitch.ArrayExtensions.toArray(this.__sending);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendQueue.prototype.processSendComplete=function(item,backoff){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var callback=null;if(item.getLastInBatch())if(backoff){var sendBackoff=item.getSendBackoff();item.setSendBackoff(fm.liveswitch.MathAssistant.min(1e3,2*item.getSendBackoff())),fm.liveswitch.Global.equals(callback,null)&&(callback=function(state){_this.trySendPending()});var timer=new fm.liveswitch.TimeoutTimer(callback,null);try{timer.start(sendBackoff)}catch(exception){fm.liveswitch.Log.error("Could not start SendQueue deferrer timer.",exception)}}else this.trySendPending()},SendQueue.prototype.processSendPermanentFailure=function(item,ex){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.removeFirstSendingItem(),fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___log.debug("An unrecoverable exception was encountered while sending a message. Will abandon message.",ex),item.getPromise().reject(ex),this.processSendComplete(item,!1)},SendQueue.prototype.processSendSuccess=function(item){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.removeFirstSendingItem(),item.getPromise().resolve(item.getResponse()),this.processSendComplete(item,!1)},SendQueue.prototype.processSendTemporaryFailure=function(item){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.replaceFirstSendingItem(item),this.processSendComplete(item,!0)},SendQueue.prototype.removeFirstSendingItem=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.removeAt(this.__sending,0);for(var _i=0,_a=this.__sending;_i<_a.length;_i++){var item=_a[_i],resendIndex=item.getResendIndex();item.setResendIndex(resendIndex-1)}},SendQueue.prototype.replaceFirstSendingItem=function(item){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.removeAt(this.__sending,0),fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___log.debug("A recoverable exception was encountered while sending a message. Will attempt to resend after reconnection.",item.getException()),fm.liveswitch.ArrayExtensions.insert(this.__pending,item.getResendIndex(),item)},SendQueue.prototype.send=function(message){if(1==arguments.length){var item2=new fm.liveswitch.SendItem;item2.setRequest(message),item2.setPromise(new fm.liveswitch.Promise),item2.setSendBackoff(100);var item=item2;return fm.liveswitch.ArrayExtensions.add(this.__pending,item),this.trySendPending(),item.getPromise()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendQueue.prototype.trySendPending=function(){if(0==arguments.length){var length_50,itemArray=void 0;if(!this.__sendQueueTransport.getIsConnected())return!1;if(fm.liveswitch.ArrayExtensions.getCount(this.__sending)>0||fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(this.__pending),0))return!1;itemArray=fm.liveswitch.SendQueue.takePending(this.__sending,this.__pending),fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___log.getIsVerboseEnabled()&&(length_50=itemArray.length,fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___log.verbose(fm.liveswitch.StringExtensions.format("Starting flush of send queue with {0} items.",fm.liveswitch.NumberExtensions.toString(length_50)))),this.__sendQueueTransport.startBatch();for(var i=0;i<itemArray.length;i++){var item=itemArray[i];item.setResendIndex(i),item.setLastInBatch(fm.liveswitch.Global.equals(i,itemArray.length-1));var sendCounter=item.getSendCounter();item.setSendCounter(sendCounter+1),this.doSend(item)}return this.__sendQueueTransport.endBatch(),fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___log.getIsVerboseEnabled()&&(length_50=itemArray.length,fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___log.verbose(fm.liveswitch.StringExtensions.format("Finished flush of send queue with {0} items.",fm.liveswitch.NumberExtensions.toString(length_50)))),!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SendQueue.fmliveswitchSendQueueInitialize=function(){fm.liveswitch.SendQueue.__fmliveswitchSendQueueInitialized||fm.liveswitch.SendQueue.__fmliveswitchSendQueueInitializing||(fm.liveswitch.SendQueue.__fmliveswitchSendQueueInitializing=!0,SendQueue.fm_liveswitch_SendQueue___sendQueueBatchSizeInCharacters=0,fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.SendQueue]")),fm.liveswitch.SendQueue.fm_liveswitch_SendQueue___sendQueueBatchSizeInCharacters=5e5,fm.liveswitch.SendQueue.__fmliveswitchSendQueueInitialized=!0,fm.liveswitch.SendQueue.__fmliveswitchSendQueueInitializing=!1)},SendQueue.__fmliveswitchSendQueueInitialized=!1,SendQueue.__fmliveswitchSendQueueInitializing=!1,SendQueue}();liveswitch.SendQueue=SendQueue}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ClientConfig=function(){function ClientConfig(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return ClientConfig.prototype.getTypeString=function(){return"[fm.liveswitch.ClientConfig]"},ClientConfig.fromJson=function(clientConfigJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(clientConfigJson,(function(){return new fm.liveswitch.ClientConfig}),(function(config,key,value){var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"userAlias")?config.setUserAlias(fm.liveswitch.JsonSerializer.deserializeString(value)):fm.liveswitch.Global.equals(str,"deviceAlias")?config.setDeviceAlias(fm.liveswitch.JsonSerializer.deserializeString(value)):fm.liveswitch.Global.equals(str,"tag")?config.setTag(fm.liveswitch.JsonSerializer.deserializeString(value)):fm.liveswitch.Global.equals(str,"roles")&&config.setRoles(fm.liveswitch.JsonSerializer.deserializeStringArray(value)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientConfig.toJson=function(clientConfig){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(clientConfig,(function(config,dict){fm.liveswitch.Global.equals(config.getUserAlias(),null)||(dict.userAlias=fm.liveswitch.JsonSerializer.serializeString(config.getUserAlias())),fm.liveswitch.Global.equals(config.getDeviceAlias(),null)||(dict.deviceAlias=fm.liveswitch.JsonSerializer.serializeString(config.getDeviceAlias())),fm.liveswitch.Global.equals(config.getTag(),null)||(dict.tag=fm.liveswitch.JsonSerializer.serializeString(config.getTag())),fm.liveswitch.Global.equals(config.getRoles(),null)||(dict.roles=fm.liveswitch.JsonSerializer.serializeStringArray(config.getRoles()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientConfig.prototype.getDeviceAlias=function(){if(0==arguments.length)return this._deviceAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientConfig.prototype.getRoles=function(){if(0==arguments.length)return this._roles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientConfig.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientConfig.prototype.getUserAlias=function(){if(0==arguments.length)return this._userAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientConfig.prototype.setDeviceAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceAlias=value},ClientConfig.prototype.setRoles=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._roles=value},ClientConfig.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},ClientConfig.prototype.setUserAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userAlias=value},ClientConfig.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ClientConfig.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientConfig}();liveswitch.ClientConfig=ClientConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionConfig=function(){function ConnectionConfig(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchConnectionConfigInit(),this.setAudioDirection("sendrecv"),this.setVideoDirection("sendrecv"),this.setDataDirection("sendrecv")}return ConnectionConfig.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionConfig]"},ConnectionConfig.prototype.fmliveswitchConnectionConfigInit=function(){this._localAudioMuted=!1,this._localVideoMuted=!1},ConnectionConfig.fromJson=function(connectionConfigJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(connectionConfigJson,(function(){return new fm.liveswitch.ConnectionConfig}),(function(config,key,value){var _var0=key;do{if("localAudioMuted"==_var0){config.setLocalAudioMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(value));break}if("localVideoMuted"==_var0){config.setLocalVideoMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(value));break}if("audioDirection"==_var0){config.setAudioDirection(fm.liveswitch.JsonSerializer.deserializeString(value));break}if("videoDirection"==_var0){config.setVideoDirection(fm.liveswitch.JsonSerializer.deserializeString(value));break}if("dataDirection"==_var0){config.setDataDirection(fm.liveswitch.JsonSerializer.deserializeString(value));break}if("tag"==_var0){config.setTag(fm.liveswitch.JsonSerializer.deserializeString(value));break}if("remoteAudioEncoding"==_var0){config.setRemoteAudioEncoding(fm.liveswitch.EncodingInfo.fromJson(value));break}if("remoteVideoEncoding"==_var0){config.setRemoteVideoEncoding(fm.liveswitch.EncodingInfo.fromJson(value));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.toJson=function(connectionConfig){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(connectionConfig,(function(config,dict){config.getLocalAudioMuted()&&(dict.localAudioMuted=fm.liveswitch.JsonSerializer.serializeBoolean(config.getLocalAudioMuted())),config.getLocalVideoMuted()&&(dict.localVideoMuted=fm.liveswitch.JsonSerializer.serializeBoolean(config.getLocalVideoMuted())),fm.liveswitch.Global.equals(config.getAudioDirection(),null)||(dict.audioDirection=fm.liveswitch.JsonSerializer.serializeString(config.getAudioDirection())),fm.liveswitch.Global.equals(config.getVideoDirection(),null)||(dict.videoDirection=fm.liveswitch.JsonSerializer.serializeString(config.getVideoDirection())),fm.liveswitch.Global.equals(config.getDataDirection(),null)||(dict.dataDirection=fm.liveswitch.JsonSerializer.serializeString(config.getDataDirection())),fm.liveswitch.Global.equals(config.getTag(),null)||(dict.tag=fm.liveswitch.JsonSerializer.serializeString(config.getTag())),fm.liveswitch.Global.equals(config.getRemoteAudioEncoding(),null)||(dict.remoteAudioEncoding=fm.liveswitch.EncodingInfo.toJson(config.getRemoteAudioEncoding())),fm.liveswitch.Global.equals(config.getRemoteVideoEncoding(),null)||(dict.remoteVideoEncoding=fm.liveswitch.EncodingInfo.toJson(config.getRemoteVideoEncoding()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getAudioDirection=function(){if(0==arguments.length)return this._audioDirection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getDataDirection=function(){if(0==arguments.length)return this._dataDirection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getLocalAudioDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getAudioDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getLocalAudioMuted=function(){if(0==arguments.length)return this._localAudioMuted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getLocalDataDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getDataDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getLocalVideoDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isSendDisabled(this.getVideoDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getLocalVideoMuted=function(){if(0==arguments.length)return this._localVideoMuted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getRemoteAudioDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getAudioDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getRemoteAudioEncoding=function(){if(0==arguments.length)return this._remoteAudioEncoding;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getRemoteDataDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getDataDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getRemoteVideoDisabled=function(){if(0==arguments.length)return fm.liveswitch.StreamDirectionHelper.isReceiveDisabled(this.getVideoDirection());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getRemoteVideoEncoding=function(){if(0==arguments.length)return this._remoteVideoEncoding;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.getVideoDirection=function(){if(0==arguments.length)return this._videoDirection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig.prototype.setAudioDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._audioDirection=value},ConnectionConfig.prototype.setDataDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataDirection=value},ConnectionConfig.prototype.setLocalAudioDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setAudioDirection(fm.liveswitch.StreamDirectionHelper.setSendDisabled(this.getAudioDirection(),value))},ConnectionConfig.prototype.setLocalAudioMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localAudioMuted=value},ConnectionConfig.prototype.setLocalDataDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setDataDirection(fm.liveswitch.StreamDirectionHelper.setSendDisabled(this.getDataDirection(),value))},ConnectionConfig.prototype.setLocalVideoDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setVideoDirection(fm.liveswitch.StreamDirectionHelper.setSendDisabled(this.getVideoDirection(),value))},ConnectionConfig.prototype.setLocalVideoMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._localVideoMuted=value},ConnectionConfig.prototype.setRemoteAudioDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setAudioDirection(fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(this.getAudioDirection(),value))},ConnectionConfig.prototype.setRemoteAudioEncoding=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteAudioEncoding=value},ConnectionConfig.prototype.setRemoteDataDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setDataDirection(fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(this.getDataDirection(),value))},ConnectionConfig.prototype.setRemoteVideoDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setVideoDirection(fm.liveswitch.StreamDirectionHelper.setReceiveDisabled(this.getVideoDirection(),value))},ConnectionConfig.prototype.setRemoteVideoEncoding=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteVideoEncoding=value},ConnectionConfig.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},ConnectionConfig.prototype.setVideoDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._videoDirection=value},ConnectionConfig.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ConnectionConfig.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionConfig}();liveswitch.ConnectionConfig=ConnectionConfig}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var SignallingSendQueueTransport=function(){function SignallingSendQueueTransport(client){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var client_1=__arguments[0];this.__client=client_1}return SignallingSendQueueTransport.prototype.getTypeString=function(){return"[fm.liveswitch.SignallingSendQueueTransport]"},SignallingSendQueueTransport.prototype.doSend=function(item,promise){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var action=null,action2=null,client=this.__client;if(!fm.liveswitch.Global.equals(client,null)&&!fm.liveswitch.Global.equals(item,null)){var request=item.getRequest();if(!fm.liveswitch.Global.equals(request,null)){var serviceArgs=new fm.liveswitch.signalling.ServiceArgs;serviceArgs.setChannel("/message"),serviceArgs.setDataJson(request.toJson()),fm.liveswitch.Global.equals(action,null)&&(action=function(e){item.setRetry(!1),item.setException(null);var messageJson=e.getDataJson();item.setResponse(fm.liveswitch.Global.equals(messageJson,null)?null:fm.liveswitch.Message.fromJson(messageJson)),promise.resolve(item)}),serviceArgs.setOnSuccess(action),fm.liveswitch.Global.equals(action2,null)&&(action2=function(e){item.setException(e.getException()),fm.liveswitch.Global.equals(e.getSource(),fm.liveswitch.FailureSource.Network)?(item.setRetry(!0),promise.resolve(item)):promise.reject(e.getException())}),serviceArgs.setOnFailure(action2),client.service(serviceArgs)}}},SignallingSendQueueTransport.prototype.endBatch=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__client.endBatch()},SignallingSendQueueTransport.prototype.getIsConnected=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__client.getState(),fm.liveswitch.signalling.ClientState.Connected);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SignallingSendQueueTransport.prototype.send=function(item){if(1==arguments.length){var promise=new fm.liveswitch.Promise;return this.doSend(item,promise),promise}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SignallingSendQueueTransport.prototype.startBatch=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__client.startBatch()},SignallingSendQueueTransport}();liveswitch.SignallingSendQueueTransport=SignallingSendQueueTransport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ApplicationInfo=function(_super){function ApplicationInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ApplicationInfo,_super),ApplicationInfo.prototype.getTypeString=function(){return"[fm.liveswitch.ApplicationInfo],"+_super.prototype.getTypeString.call(this)},ApplicationInfo.fromJson=function(applicationInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(applicationInfoJson,(function(){return new fm.liveswitch.ApplicationInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ApplicationInfo.toJson=function(application){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(application,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ApplicationInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson)},ApplicationInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject)},ApplicationInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ApplicationInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ApplicationInfo}(fm.liveswitch.Info);liveswitch.ApplicationInfo=ApplicationInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Report=function(){function Report(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Report.prototype.getTypeString=function(){return"[fm.liveswitch.Report]"},Report.processArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!newValues[i].isEquivalent(oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processBoolean=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processBooleanArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processDouble=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processFloat=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processFloatArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processInteger=function(newValue,oldValue){if(2==arguments.length)return newValue=fm.liveswitch.Global.toInt(arguments[0]),oldValue=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processIntegerArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processLong=function(newValue,oldValue){if(2==arguments.length)return newValue=fm.liveswitch.Global.toInt(arguments[0]),oldValue=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processLongArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processObject=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:fm.liveswitch.Global.equals(newValue,null)||fm.liveswitch.Global.equals(oldValue,null)||!newValue.isEquivalent(oldValue)?newValue:null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processShort=function(newValue,oldValue){if(2==arguments.length)return newValue=fm.liveswitch.Global.toInt(arguments[0]),oldValue=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processShortArray=function(newValues,oldValues){if(2==arguments.length){if(fm.liveswitch.Global.equals(newValues,oldValues))return null;if(!fm.liveswitch.Global.equals(newValues,null)&&!fm.liveswitch.Global.equals(oldValues,null)&&fm.liveswitch.Global.equals(oldValues.length,newValues.length)){for(var i=0;i<newValues.length;i++)if(!fm.liveswitch.Global.equals(newValues[i],oldValues[i]))return newValues;return null}return newValues}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.processString=function(newValue,oldValue){if(2==arguments.length)return fm.liveswitch.Global.equals(newValue,oldValue)?null:newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Report}();liveswitch.Report=Report}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var CandidatePairReport=function(_super){function CandidatePairReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchCandidatePairReportInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchCandidatePairReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setBytesSent(fm.liveswitch.Report.processLong(stats.getBytesSent(),flag?0:lastStats.getBytesSent())),_this.setBytesReceived(fm.liveswitch.Report.processLong(stats.getBytesReceived(),flag?0:lastStats.getBytesReceived())),_this.setRequestsSent(fm.liveswitch.Report.processLong(stats.getRequestsSent(),flag?0:lastStats.getRequestsSent())),_this.setRequestsReceived(fm.liveswitch.Report.processLong(stats.getRequestsReceived(),flag?0:lastStats.getRequestsReceived())),_this.setResponsesSent(fm.liveswitch.Report.processLong(stats.getResponsesSent(),flag?0:lastStats.getResponsesSent())),_this.setResponsesReceived(fm.liveswitch.Report.processLong(stats.getResponsesReceived(),flag?0:lastStats.getResponsesReceived())),_this.setConsentRequestsSent(fm.liveswitch.Report.processLong(stats.getConsentRequestsSent(),flag?0:lastStats.getConsentRequestsSent())),_this.setConsentRequestsReceived(fm.liveswitch.Report.processLong(stats.getConsentRequestsReceived(),flag?0:lastStats.getConsentRequestsReceived())),_this.setConsentResponsesSent(fm.liveswitch.Report.processLong(stats.getConsentResponsesSent(),flag?0:lastStats.getConsentResponsesSent())),_this.setConsentResponsesReceived(fm.liveswitch.Report.processLong(stats.getConsentResponsesReceived(),flag?0:lastStats.getConsentResponsesReceived())),_this.setTotalRoundTripTime(fm.liveswitch.Report.processInteger(stats.getTotalRoundTripTime(),flag?0:lastStats.getTotalRoundTripTime())),_this.setCurrentRoundTripTime(fm.liveswitch.Report.processInteger(stats.getCurrentRoundTripTime(),flag?0:lastStats.getCurrentRoundTripTime()))}return _this}return __extends(CandidatePairReport,_super),CandidatePairReport.prototype.getTypeString=function(){return"[fm.liveswitch.CandidatePairReport],"+_super.prototype.getTypeString.call(this)},CandidatePairReport.prototype.fmliveswitchCandidatePairReportInit=function(){this._bytesReceived=0,this._bytesSent=0,this._consentRequestsReceived=0,this._consentRequestsSent=0,this._consentResponsesReceived=0,this._consentResponsesSent=0,this._currentRoundTripTime=0,this._requestsReceived=0,this._requestsSent=0,this._responsesReceived=0,this._responsesSent=0,this._totalRoundTripTime=0},CandidatePairReport.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.CandidatePairReport}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.fromJsonArray=function(arrayJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(arrayJson,fm.liveswitch.CandidatePairReport.fromJson.bind(fm.liveswitch.CandidatePairReport));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.toJsonArray=function(array){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(array,fm.liveswitch.CandidatePairReport.toJson.bind(fm.liveswitch.CandidatePairReport));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("bytesSent"==_var0){this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("bytesReceived"==_var0){this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("requestsSent"==_var0){this.setRequestsSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("requestsReceived"==_var0){this.setRequestsReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("responsesSent"==_var0){this.setResponsesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("responsesReceived"==_var0){this.setResponsesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentRequestsSent"==_var0){this.setConsentRequestsSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentRequestsReceived"==_var0){this.setConsentRequestsReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentResponsesSent"==_var0){this.setConsentResponsesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("consentResponsesReceived"==_var0){this.setConsentResponsesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("totalRoundTripTime"==_var0){this.setTotalRoundTripTime(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("currentRoundTripTime"==_var0){this.setCurrentRoundTripTime(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}}while(0)},CandidatePairReport.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getConsentRequestsReceived=function(){if(0==arguments.length)return this._consentRequestsReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getConsentRequestsSent=function(){if(0==arguments.length)return this._consentRequestsSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getConsentResponsesReceived=function(){if(0==arguments.length)return this._consentResponsesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getConsentResponsesSent=function(){if(0==arguments.length)return this._consentResponsesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getCurrentRoundTripTime=function(){if(0==arguments.length)return this._currentRoundTripTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getRequestsReceived=function(){if(0==arguments.length)return this._requestsReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getRequestsSent=function(){if(0==arguments.length)return this._requestsSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getResponsesReceived=function(){if(0==arguments.length)return this._responsesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getResponsesSent=function(){if(0==arguments.length)return this._responsesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.getTotalRoundTripTime=function(){if(0==arguments.length)return this._totalRoundTripTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getBytesSent()&&(jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent())),null!=this.getBytesReceived()&&(jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived())),null!=this.getRequestsSent()&&(jsonObject.requestsSent=fm.liveswitch.JsonSerializer.serializeLong(this.getRequestsSent())),null!=this.getRequestsReceived()&&(jsonObject.requestsReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getRequestsReceived())),null!=this.getResponsesSent()&&(jsonObject.responsesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getResponsesSent())),null!=this.getResponsesReceived()&&(jsonObject.responsesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getResponsesReceived())),null!=this.getConsentRequestsSent()&&(jsonObject.consentRequestsSent=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentRequestsSent())),null!=this.getConsentRequestsReceived()&&(jsonObject.consentRequestsReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentRequestsReceived())),null!=this.getConsentResponsesSent()&&(jsonObject.consentResponsesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentResponsesSent())),null!=this.getConsentResponsesReceived()&&(jsonObject.consentResponsesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getConsentResponsesReceived())),null!=this.getTotalRoundTripTime()&&(jsonObject.totalRoundTripTime=fm.liveswitch.JsonSerializer.serializeInteger(this.getTotalRoundTripTime())),null!=this.getCurrentRoundTripTime()&&(jsonObject.currentRoundTripTime=fm.liveswitch.JsonSerializer.serializeInteger(this.getCurrentRoundTripTime()))},CandidatePairReport.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesReceived=value},CandidatePairReport.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesSent=value},CandidatePairReport.prototype.setConsentRequestsReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._consentRequestsReceived=value},CandidatePairReport.prototype.setConsentRequestsSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._consentRequestsSent=value},CandidatePairReport.prototype.setConsentResponsesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._consentResponsesReceived=value},CandidatePairReport.prototype.setConsentResponsesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._consentResponsesSent=value},CandidatePairReport.prototype.setCurrentRoundTripTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._currentRoundTripTime=value},CandidatePairReport.prototype.setRequestsReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestsReceived=value},CandidatePairReport.prototype.setRequestsSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestsSent=value},CandidatePairReport.prototype.setResponsesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._responsesReceived=value},CandidatePairReport.prototype.setResponsesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._responsesSent=value},CandidatePairReport.prototype.setTotalRoundTripTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._totalRoundTripTime=value},CandidatePairReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.CandidatePairReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},CandidatePairReport}(fm.liveswitch.Report);liveswitch.CandidatePairReport=CandidatePairReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ChannelReport=function(_super){function ChannelReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchChannelReportInit(),_this}return __extends(ChannelReport,_super),ChannelReport.prototype.getTypeString=function(){return"[fm.liveswitch.ChannelReport],"+_super.prototype.getTypeString.call(this)},ChannelReport.prototype.fmliveswitchChannelReportInit=function(){this._messageBytesReceived=0,this._messageBytesSent=0,this._messagesReceived=0,this._messagesSent=0},ChannelReport.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.ChannelReport}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.fromJsonArray=function(arrayJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(arrayJson,fm.liveswitch.ChannelReport.fromJson.bind(fm.liveswitch.ChannelReport));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.toJsonArray=function(array){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(array,fm.liveswitch.ChannelReport.toJson.bind(fm.liveswitch.ChannelReport));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"id")?this.setId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"messagesSent")?this.setMessagesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"messageBytesSent")?this.setMessageBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"messagesReceived")?this.setMessagesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"messageBytesReceived")&&this.setMessageBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},ChannelReport.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.prototype.getMessageBytesReceived=function(){if(0==arguments.length)return this._messageBytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.prototype.getMessageBytesSent=function(){if(0==arguments.length)return this._messageBytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.prototype.getMessagesReceived=function(){if(0==arguments.length)return this._messagesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.prototype.getMessagesSent=function(){if(0==arguments.length)return this._messagesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.prototype.isEquivalent=function(otherReport){if(1==arguments.length)return!!fm.liveswitch.Global.equals(this.getId(),otherReport.getId())&&(!!fm.liveswitch.Global.equals(this.getMessagesSent(),otherReport.getMessagesSent())&&(!!fm.liveswitch.Global.equals(this.getMessageBytesSent(),otherReport.getMessageBytesSent())&&(!!fm.liveswitch.Global.equals(this.getMessagesReceived(),otherReport.getMessagesReceived())&&!!fm.liveswitch.Global.equals(this.getMessageBytesReceived(),otherReport.getMessageBytesReceived()))));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getId(),null)||(jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(this.getId())),null!=this.getMessagesSent()&&(jsonObject.messagesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesSent())),null!=this.getMessageBytesSent()&&(jsonObject.messageBytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getMessageBytesSent())),null!=this.getMessagesReceived()&&(jsonObject.messagesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesReceived())),null!=this.getMessageBytesReceived()&&(jsonObject.messageBytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getMessageBytesReceived()))},ChannelReport.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},ChannelReport.prototype.setMessageBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messageBytesReceived=value},ChannelReport.prototype.setMessageBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messageBytesSent=value},ChannelReport.prototype.setMessagesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messagesReceived=value},ChannelReport.prototype.setMessagesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messagesSent=value},ChannelReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ChannelReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelReport}(fm.liveswitch.Report);liveswitch.ChannelReport=ChannelReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataStreamReport=function(_super){function DataStreamReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchDataStreamReportInit();else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];__arguments[2];(_this=_super.call(this)||this).fmliveswitchDataStreamReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setMessagesSent(fm.liveswitch.Report.processLong(stats.getMessagesSent(),flag?0:lastStats.getMessagesSent())),_this.setBytesSent(fm.liveswitch.Report.processLong(stats.getBytesSent(),flag?0:lastStats.getBytesSent())),_this.setMessagesReceived(fm.liveswitch.Report.processLong(stats.getMessagesReceived(),flag?0:lastStats.getMessagesReceived())),_this.setBytesReceived(fm.liveswitch.Report.processLong(stats.getBytesReceived(),flag?0:lastStats.getBytesReceived()))}return _this}return __extends(DataStreamReport,_super),DataStreamReport.prototype.getTypeString=function(){return"[fm.liveswitch.DataStreamReport],"+_super.prototype.getTypeString.call(this)},DataStreamReport.prototype.fmliveswitchDataStreamReportInit=function(){this._bytesReceived=0,this._bytesSent=0,this._messagesReceived=0,this._messagesSent=0},DataStreamReport.fromJson=function(dataStreamReportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dataStreamReportJson,(function(){return new fm.liveswitch.DataStreamReport}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamReport.toJson=function(dataStreamReport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dataStreamReport,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"messagesSent")?this.setMessagesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesSent")?this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"messagesReceived")?this.setMessagesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesReceived")&&this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},DataStreamReport.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamReport.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamReport.prototype.getMessagesReceived=function(){if(0==arguments.length)return this._messagesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamReport.prototype.getMessagesSent=function(){if(0==arguments.length)return this._messagesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getMessagesSent()&&(jsonObject.messagesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesSent())),null!=this.getBytesSent()&&(jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent())),null!=this.getMessagesReceived()&&(jsonObject.messagesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesReceived())),null!=this.getBytesReceived()&&(jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived()))},DataStreamReport.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesReceived=value},DataStreamReport.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesSent=value},DataStreamReport.prototype.setMessagesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messagesReceived=value},DataStreamReport.prototype.setMessagesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messagesSent=value},DataStreamReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.DataStreamReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataStreamReport}(fm.liveswitch.Report);liveswitch.DataStreamReport=DataStreamReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EventBatch=function(){function EventBatch(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return EventBatch.prototype.getTypeString=function(){return"[fm.liveswitch.EventBatch]"},EventBatch.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.EventBatch}),(function(obj,key,valueJson){obj.deserializeProperty(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventBatch.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventBatch.prototype.deserializeProperty=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;!fm.liveswitch.Global.equals(str,null)&&fm.liveswitch.Global.equals(str,"batch")&&this.setEvents(fm.liveswitch.EventInfo.fromJsonArray(valueJson))},EventBatch.prototype.getEvents=function(){if(0==arguments.length)return this._events;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventBatch.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getEvents(),null)||(jsonObject.batch=fm.liveswitch.EventInfo.toJsonArray(this.getEvents()))},EventBatch.prototype.setEvents=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._events=value},EventBatch.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.EventBatch.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventBatch}();liveswitch.EventBatch=EventBatch}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EventType=function(){function EventType(){}return EventType.prototype.getTypeString=function(){return"[fm.liveswitch.EventType]"},EventType.fromConnectionState=function(connectionState){if(1==arguments.length){var _var0=connectionState;return _var0==fm.liveswitch.ConnectionState.Initializing?"connection.initializing":_var0==fm.liveswitch.ConnectionState.Connecting?"connection.connecting":_var0==fm.liveswitch.ConnectionState.Connected?"connection.connected":_var0==fm.liveswitch.ConnectionState.Failing?"connection.failing":_var0==fm.liveswitch.ConnectionState.Failed?"connection.failed":_var0==fm.liveswitch.ConnectionState.Closing?"connection.closing":_var0==fm.liveswitch.ConnectionState.Closed?"connection.closed":null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventType.ChannelActivated="channel.activated",EventType.ChannelClientJoined="channel.client.joined",EventType.ChannelClientLeft="channel.client.left",EventType.ChannelDeactivated="channel.deactivated",EventType.ClientRegistered="client.registered",EventType.ClientStats="client.stats",EventType.ClientUnregistered="client.unregistered",EventType.ClientUpdated="client.updated",EventType.ConnectionClosed="connection.closed",EventType.ConnectionClosing="connection.closing",EventType.ConnectionConnected="connection.connected",EventType.ConnectionConnecting="connection.connecting",EventType.ConnectionFailed="connection.failed",EventType.ConnectionFailing="connection.failing",EventType.ConnectionInitializing="connection.initializing",EventType.ConnectionStats="connection.stats",EventType.ConnectionUpdated="connection.updated",EventType.GatewayStarted="gateway.started",EventType.GatewayStats="gateway.stats",EventType.GatewayStopped="gateway.stopped",EventType.MediaServerRegistered="mediaserver.registered",EventType.MediaServerStarted="mediaserver.started",EventType.MediaServerStats="mediaserver.stats",EventType.MediaServerStopped="mediaserver.stopped",EventType.MediaServerUnregistered="mediaserver.unregistered",EventType.SipConnectorRegistered="sipconnector.registered",EventType.SipConnectorStarted="sipconnector.started",EventType.SipConnectorStats="sipconnector.stats",EventType.SipConnectorStopped="sipconnector.stopped",EventType.SipConnectorUnregistered="sipconnector.unregistered",EventType}();liveswitch.EventType=EventType}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaComponentReport=function(_super){function MediaComponentReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaComponentReportInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchMediaComponentReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setNackCount(fm.liveswitch.Report.processLong(stats.getNackCount(),flag?0:lastStats.getNackCount())),_this.setPliCount(fm.liveswitch.Report.processLong(stats.getPliCount(),flag?0:lastStats.getPliCount())),_this.setFirCount(fm.liveswitch.Report.processLong(stats.getFirCount(),flag?0:lastStats.getFirCount())),_this.setSliCount(fm.liveswitch.Report.processLong(stats.getSliCount(),flag?0:lastStats.getSliCount())),_this.setLrrCount(fm.liveswitch.Report.processLong(stats.getLrrCount(),flag?0:lastStats.getLrrCount()))}return _this}return __extends(MediaComponentReport,_super),MediaComponentReport.prototype.getTypeString=function(){return"[fm.liveswitch.MediaComponentReport],"+_super.prototype.getTypeString.call(this)},MediaComponentReport.prototype.fmliveswitchMediaComponentReportInit=function(){this._firCount=0,this._lrrCount=0,this._nackCount=0,this._pliCount=0,this._sliCount=0},MediaComponentReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"nackCount")?this.setNackCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"pliCount")?this.setPliCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"firCount")?this.setFirCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"lrrCount")?this.setLrrCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"sliCount")&&this.setSliCount(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},MediaComponentReport.prototype.getFirCount=function(){if(0==arguments.length)return this._firCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentReport.prototype.getLrrCount=function(){if(0==arguments.length)return this._lrrCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentReport.prototype.getNackCount=function(){if(0==arguments.length)return this._nackCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentReport.prototype.getPliCount=function(){if(0==arguments.length)return this._pliCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentReport.prototype.getSliCount=function(){if(0==arguments.length)return this._sliCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaComponentReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getNackCount()&&(jsonObject.nackCount=fm.liveswitch.JsonSerializer.serializeLong(this.getNackCount())),null!=this.getPliCount()&&(jsonObject.pliCount=fm.liveswitch.JsonSerializer.serializeLong(this.getPliCount())),null!=this.getFirCount()&&(jsonObject.firCount=fm.liveswitch.JsonSerializer.serializeLong(this.getFirCount())),null!=this.getLrrCount()&&(jsonObject.lrrCount=fm.liveswitch.JsonSerializer.serializeLong(this.getLrrCount())),null!=this.getSliCount()&&(jsonObject.sliCount=fm.liveswitch.JsonSerializer.serializeLong(this.getSliCount()))},MediaComponentReport.prototype.setFirCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._firCount=value},MediaComponentReport.prototype.setLrrCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._lrrCount=value},MediaComponentReport.prototype.setNackCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._nackCount=value},MediaComponentReport.prototype.setPliCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._pliCount=value},MediaComponentReport.prototype.setSliCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sliCount=value},MediaComponentReport}(fm.liveswitch.Report);liveswitch.MediaComponentReport=MediaComponentReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaTrackReport=function(_super){function MediaTrackReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaTrackReportInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchMediaTrackReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setMinBitrate(fm.liveswitch.Report.processInteger(stats.getMinBitrate(),flag?0:lastStats.getMinBitrate())),_this.setMaxBitrate(fm.liveswitch.Report.processInteger(stats.getMaxBitrate(),flag?0:lastStats.getMaxBitrate())),_this.setBitrate(fm.liveswitch.Report.processInteger(stats.getBitrate(),flag?0:lastStats.getBitrate())),_this.setFramesCorrupted(fm.liveswitch.Report.processLong(stats.getFramesCorrupted(),flag?0:lastStats.getFramesCorrupted())),_this.setFramesDecoded(fm.liveswitch.Report.processLong(stats.getFramesDecoded(),flag?0:lastStats.getFramesDecoded())),_this.setFramesDropped(fm.liveswitch.Report.processLong(stats.getFramesDropped(),flag?0:lastStats.getFramesDropped())),_this.setFramesEncoded(fm.liveswitch.Report.processLong(stats.getFramesEncoded(),flag?0:lastStats.getFramesEncoded())),_this.setFrameHeight(fm.liveswitch.Report.processInteger(stats.getFrameHeight(),flag?0:lastStats.getFrameHeight())),_this.setFrameRate(fm.liveswitch.Report.processDouble(stats.getFrameRate(),flag?0:lastStats.getFrameRate())),_this.setFramesReceived(fm.liveswitch.Report.processLong(stats.getFramesReceived(),flag?0:lastStats.getFramesReceived())),_this.setFramesSent(fm.liveswitch.Report.processLong(stats.getFramesSent(),flag?0:lastStats.getFramesSent())),_this.setFrameWidth(fm.liveswitch.Report.processInteger(stats.getFrameWidth(),flag?0:lastStats.getFrameWidth()))}return _this}return __extends(MediaTrackReport,_super),MediaTrackReport.prototype.getTypeString=function(){return"[fm.liveswitch.MediaTrackReport],"+_super.prototype.getTypeString.call(this)},MediaTrackReport.prototype.fmliveswitchMediaTrackReportInit=function(){this._bitrate=0,this._frameHeight=0,this._frameRate=0,this._framesCorrupted=0,this._framesDecoded=0,this._framesDropped=0,this._framesEncoded=0,this._framesReceived=0,this._framesSent=0,this._frameWidth=0,this._maxBitrate=0,this._minBitrate=0},MediaTrackReport.fromJson=function(instanceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(instanceJson,(function(){return new fm.liveswitch.MediaTrackReport}),(function(obj,key,valueJson){obj.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.fromJsonArray=function(arrayJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(arrayJson,fm.liveswitch.MediaTrackReport.fromJson.bind(fm.liveswitch.MediaTrackReport));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.toJson=function(instance){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(instance,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.toJsonArray=function(array){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(array,fm.liveswitch.MediaTrackReport.toJson.bind(fm.liveswitch.MediaTrackReport));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("minBitrate"==_var0){this.setMinBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("maxBitrate"==_var0){this.setMaxBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("bitrate"==_var0){this.setBitrate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("frameWidth"==_var0){this.setFrameWidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("frameHeight"==_var0){this.setFrameHeight(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("frameRate"==_var0){this.setFrameRate(fm.liveswitch.JsonSerializer.deserializeDouble(valueJson));break}if("framesSent"==_var0){this.setFramesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesReceived"==_var0){this.setFramesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesDecoded"==_var0){this.setFramesDecoded(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesDropped"==_var0){this.setFramesDropped(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesCorrupted"==_var0){this.setFramesCorrupted(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("framesEncoded"==_var0){this.setFramesEncoded(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},MediaTrackReport.prototype.getBitrate=function(){if(0==arguments.length)return this._bitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFrameHeight=function(){if(0==arguments.length)return this._frameHeight;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFrameRate=function(){if(0==arguments.length)return this._frameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFramesCorrupted=function(){if(0==arguments.length)return this._framesCorrupted;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFramesDecoded=function(){if(0==arguments.length)return this._framesDecoded;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFramesDropped=function(){if(0==arguments.length)return this._framesDropped;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFramesEncoded=function(){if(0==arguments.length)return this._framesEncoded;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFramesReceived=function(){if(0==arguments.length)return this._framesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFramesSent=function(){if(0==arguments.length)return this._framesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getFrameWidth=function(){if(0==arguments.length)return this._frameWidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getMaxBitrate=function(){if(0==arguments.length)return this._maxBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.getMinBitrate=function(){if(0==arguments.length)return this._minBitrate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getMinBitrate()&&(jsonObject.minBitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getMinBitrate())),null!=this.getMaxBitrate()&&(jsonObject.maxBitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getMaxBitrate())),null!=this.getBitrate()&&(jsonObject.bitrate=fm.liveswitch.JsonSerializer.serializeInteger(this.getBitrate())),null!=this.getFrameWidth()&&(jsonObject.frameWidth=fm.liveswitch.JsonSerializer.serializeInteger(this.getFrameWidth())),null!=this.getFrameHeight()&&(jsonObject.frameHeight=fm.liveswitch.JsonSerializer.serializeInteger(this.getFrameHeight())),null!=this.getFrameRate()&&(jsonObject.frameRate=fm.liveswitch.JsonSerializer.serializeDouble(this.getFrameRate())),null!=this.getFramesSent()&&(jsonObject.framesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesSent())),null!=this.getFramesReceived()&&(jsonObject.framesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesReceived())),null!=this.getFramesDecoded()&&(jsonObject.framesDecoded=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesDecoded())),null!=this.getFramesDropped()&&(jsonObject.framesDropped=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesDropped())),null!=this.getFramesCorrupted()&&(jsonObject.framesCorrupted=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesCorrupted())),null!=this.getFramesEncoded()&&(jsonObject.framesEncoded=fm.liveswitch.JsonSerializer.serializeLong(this.getFramesEncoded()))},MediaTrackReport.prototype.setBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bitrate=value},MediaTrackReport.prototype.setFrameHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frameHeight=value},MediaTrackReport.prototype.setFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frameRate=value},MediaTrackReport.prototype.setFramesCorrupted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._framesCorrupted=value},MediaTrackReport.prototype.setFramesDecoded=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._framesDecoded=value},MediaTrackReport.prototype.setFramesDropped=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._framesDropped=value},MediaTrackReport.prototype.setFramesEncoded=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._framesEncoded=value},MediaTrackReport.prototype.setFramesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._framesReceived=value},MediaTrackReport.prototype.setFramesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._framesSent=value},MediaTrackReport.prototype.setFrameWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frameWidth=value},MediaTrackReport.prototype.setMaxBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._maxBitrate=value},MediaTrackReport.prototype.setMinBitrate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._minBitrate=value},MediaTrackReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaTrackReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaTrackReport}(fm.liveswitch.Report);liveswitch.MediaTrackReport=MediaTrackReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ChannelClaim=function(){function ChannelClaim(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchChannelClaimInit(),this.setAction("join");else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var idValue=__arguments[0];if(__arguments=new Array(0),this.fmliveswitchChannelClaimInit(),this.setAction("join"),fm.liveswitch.Global.equals(idValue,null))throw new fm.liveswitch.Exception("Channel ID must not be null.");this.setId(idValue)}}return ChannelClaim.prototype.getTypeString=function(){return"[fm.liveswitch.ChannelClaim]"},ChannelClaim.prototype.fmliveswitchChannelClaimInit=function(){this._broadcast=!1,this._canKick=!1,this._canUpdate=!1,this._disableMcu=!1,this._disablePeer=!1,this._disableRemoteClientEvents=!1,this._disableRemoteUpstreamConnectionEvents=!1,this._disableSendAudio=!1,this._disableSendData=!1,this._disableSendMessage=!1,this._disableSendVideo=!1,this._disableSfu=!1},ChannelClaim.fromJson=function(channelClaimJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(channelClaimJson,(function(){return new fm.liveswitch.ChannelClaim}),(function(obj,key,valueJson){var _var0=key;do{if("id"==_var0){obj.setId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("disableSendMessage"==_var0){obj.setDisableSendMessage(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disablePeer"==_var0){obj.setDisablePeer(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disableMcu"==_var0){obj.setDisableMcu(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disableSfu"==_var0){obj.setDisableSfu(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disableSendAudio"==_var0){obj.setDisableSendAudio(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disableSendVideo"==_var0){obj.setDisableSendVideo(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disableSendData"==_var0){obj.setDisableSendData(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disableRemoteClientEvents"==_var0){obj.setDisableRemoteClientEvents(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("disableRemoteUpstreamConnectionEvents"==_var0){obj.setDisableRemoteUpstreamConnectionEvents(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("audioReceiveWhitelist"==_var0){obj.setAudioReceiveWhitelist(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("videoReceiveWhitelist"==_var0){obj.setVideoReceiveWhitelist(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("dataReceiveWhitelist"==_var0){obj.setDataReceiveWhitelist(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("action"==_var0){obj.setAction(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("canKick"==_var0){obj.setCanKick(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("canUpdate"==_var0){obj.setCanUpdate(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.fromJsonArray=function(channelClaimsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(channelClaimsJson,fm.liveswitch.ChannelClaim.fromJson.bind(fm.liveswitch.ChannelClaim));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.toJson=function(channelClaim){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(channelClaim,(function(obj,jsonObject){jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(channelClaim.getId()),channelClaim.getDisableSendMessage()&&(jsonObject.disableSendMessage=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableSendMessage())),channelClaim.getDisablePeer()&&(jsonObject.disablePeer=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisablePeer())),channelClaim.getDisableSfu()&&(jsonObject.disableSfu=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableSfu())),channelClaim.getDisableMcu()&&(jsonObject.disableMcu=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableMcu())),channelClaim.getDisableSendAudio()&&(jsonObject.disableSendAudio=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableSendAudio())),channelClaim.getDisableSendVideo()&&(jsonObject.disableSendVideo=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableSendVideo())),channelClaim.getDisableSendData()&&(jsonObject.disableSendData=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableSendData())),channelClaim.getDisableRemoteClientEvents()&&(jsonObject.disableRemoteClientEvents=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableRemoteClientEvents())),channelClaim.getDisableRemoteUpstreamConnectionEvents()&&(jsonObject.disableRemoteUpstreamConnectionEvents=fm.liveswitch.JsonSerializer.serializeBoolean(channelClaim.getDisableRemoteUpstreamConnectionEvents())),fm.liveswitch.Global.equals(obj.getAudioReceiveWhitelist(),null)||(jsonObject.audioReceiveWhitelist=fm.liveswitch.JsonSerializer.serializeStringArray(obj.getAudioReceiveWhitelist())),fm.liveswitch.Global.equals(obj.getVideoReceiveWhitelist(),null)||(jsonObject.videoReceiveWhitelist=fm.liveswitch.JsonSerializer.serializeStringArray(obj.getVideoReceiveWhitelist())),fm.liveswitch.Global.equals(obj.getDataReceiveWhitelist(),null)||(jsonObject.dataReceiveWhitelist=fm.liveswitch.JsonSerializer.serializeStringArray(obj.getDataReceiveWhitelist())),fm.liveswitch.Global.equals(obj.getAction(),null)||(jsonObject.action=fm.liveswitch.JsonSerializer.serializeString(obj.getAction())),obj.getCanKick()&&(jsonObject.canKick=fm.liveswitch.JsonSerializer.serializeBoolean(obj.getCanKick())),obj.getCanUpdate()&&(jsonObject.canUpdate=fm.liveswitch.JsonSerializer.serializeBoolean(obj.getCanUpdate()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.toJsonArray=function(channelClaims){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(channelClaims,fm.liveswitch.ChannelClaim.toJson.bind(fm.liveswitch.ChannelClaim));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getAction=function(){if(0==arguments.length)return this._action;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getAudioReceiveWhitelist=function(){if(0==arguments.length)return this._audioReceiveWhitelist;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getBroadcast=function(){if(0==arguments.length)return this._broadcast;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getCanKick=function(){if(0==arguments.length)return this._canKick;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getCanUpdate=function(){if(0==arguments.length)return this._canUpdate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDataReceiveWhitelist=function(){if(0==arguments.length)return this._dataReceiveWhitelist;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableMcu=function(){if(0==arguments.length)return this._disableMcu;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisablePeer=function(){if(0==arguments.length)return this._disablePeer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableRemoteClientEvents=function(){if(0==arguments.length)return this._disableRemoteClientEvents;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableRemoteUpstreamConnectionEvents=function(){if(0==arguments.length)return this._disableRemoteUpstreamConnectionEvents;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableSendAudio=function(){if(0==arguments.length)return this._disableSendAudio;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableSendData=function(){if(0==arguments.length)return this._disableSendData;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableSendMessage=function(){if(0==arguments.length)return this._disableSendMessage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableSendVideo=function(){if(0==arguments.length)return this._disableSendVideo;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getDisableSfu=function(){if(0==arguments.length)return this._disableSfu;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getId=function(){if(0==arguments.length)return this._id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.getVideoReceiveWhitelist=function(){if(0==arguments.length)return this._videoReceiveWhitelist;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim.prototype.setAction=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._action=value},ChannelClaim.prototype.setAudioReceiveWhitelist=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._audioReceiveWhitelist=value},ChannelClaim.prototype.setBroadcast=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._broadcast=value},ChannelClaim.prototype.setCanKick=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._canKick=value},ChannelClaim.prototype.setCanUpdate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._canUpdate=value},ChannelClaim.prototype.setDataReceiveWhitelist=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataReceiveWhitelist=value},ChannelClaim.prototype.setDisableMcu=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableMcu=value},ChannelClaim.prototype.setDisablePeer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disablePeer=value},ChannelClaim.prototype.setDisableRemoteClientEvents=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableRemoteClientEvents=value},ChannelClaim.prototype.setDisableRemoteUpstreamConnectionEvents=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableRemoteUpstreamConnectionEvents=value},ChannelClaim.prototype.setDisableSendAudio=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableSendAudio=value},ChannelClaim.prototype.setDisableSendData=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableSendData=value},ChannelClaim.prototype.setDisableSendMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableSendMessage=value},ChannelClaim.prototype.setDisableSendVideo=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableSendVideo=value},ChannelClaim.prototype.setDisableSfu=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableSfu=value},ChannelClaim.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._id=value},ChannelClaim.prototype.setVideoReceiveWhitelist=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._videoReceiveWhitelist=value},ChannelClaim.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ChannelClaim.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelClaim}();liveswitch.ChannelClaim=ChannelClaim}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ChannelInfo=function(_super){function ChannelInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchChannelInfoInit(),_this}return __extends(ChannelInfo,_super),ChannelInfo.prototype.getTypeString=function(){return"[fm.liveswitch.ChannelInfo],"+_super.prototype.getTypeString.call(this)},ChannelInfo.prototype.fmliveswitchChannelInfoInit=function(){this._recording=!1},ChannelInfo.fromJson=function(channelInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(channelInfoJson,(function(){return new fm.liveswitch.ChannelInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelInfo.toJson=function(channel){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(channel,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"applicationId")?this.setApplicationId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"recording")?this.setRecording(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"report")&&this.setReport(fm.liveswitch.ChannelReport.fromJson(valueJson)))},ChannelInfo.prototype.getApplicationId=function(){if(0==arguments.length)return this._applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelInfo.prototype.getRecording=function(){if(0==arguments.length)return this._recording;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelInfo.prototype.getReport=function(){if(0==arguments.length)return this._report;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getApplicationId(),null)||(jsonObject.applicationId=fm.liveswitch.JsonSerializer.serializeString(this.getApplicationId())),this.getRecording()&&(jsonObject.recording=fm.liveswitch.JsonSerializer.serializeBoolean(!0)),fm.liveswitch.Global.equals(this.getReport(),null)||(jsonObject.report=fm.liveswitch.ChannelReport.toJson(this.getReport()))},ChannelInfo.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._applicationId=value},ChannelInfo.prototype.setRecording=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._recording=value},ChannelInfo.prototype.setReport=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._report=value},ChannelInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ChannelInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ChannelInfo}(fm.liveswitch.Info);liveswitch.ChannelInfo=ChannelInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ClientInfo=function(_super){function ClientInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchClientInfoInit();else if(3==__arguments.length){var userId=__arguments[0],deviceId=__arguments[1],idValue=__arguments[2];(__arguments=new Array(7))[0]=userId,__arguments[1]=null,__arguments[2]=deviceId,__arguments[3]=null,__arguments[4]=idValue,__arguments[5]=null,__arguments[6]=null;var userId_19=__arguments[0],userAlias=__arguments[1],deviceId_16=__arguments[2],deviceAlias=__arguments[3],idValue_10=__arguments[4],tag=__arguments[5],roles=__arguments[6];(__arguments=new Array(8))[0]=userId_19,__arguments[1]=userAlias,__arguments[2]=deviceId_16,__arguments[3]=deviceAlias,__arguments[4]=idValue_10,__arguments[5]=tag,__arguments[6]=roles,__arguments[7]=null;var userId_20=__arguments[0],userAlias_2=__arguments[1],deviceId_17=__arguments[2],deviceAlias_2=__arguments[3],idValue_11=__arguments[4],tag_5=__arguments[5],roles_6=__arguments[6],region=__arguments[7];(_this=_super.call(this)||this).fmliveswitchClientInfoInit(),_this.setUserId(userId_20),_this.setUserAlias(userAlias_2),_this.setDeviceId(deviceId_17),_this.setDeviceAlias(deviceAlias_2),_super.prototype.setId.call(_this,idValue_11),_this.setTag(tag_5),_this.setRoles(roles_6),_this.setRegion(region)}else if(7==__arguments.length){userId=__arguments[0],userAlias=__arguments[1],deviceId=__arguments[2],deviceAlias=__arguments[3],idValue=__arguments[4],tag=__arguments[5],roles=__arguments[6];(__arguments=new Array(8))[0]=userId,__arguments[1]=userAlias,__arguments[2]=deviceId,__arguments[3]=deviceAlias,__arguments[4]=idValue,__arguments[5]=tag,__arguments[6]=roles,__arguments[7]=null;var userId_21=__arguments[0],userAlias_3=__arguments[1],deviceId_18=__arguments[2],deviceAlias_3=__arguments[3],idValue_12=__arguments[4],tag_6=__arguments[5],roles_7=__arguments[6];region=__arguments[7];(_this=_super.call(this)||this).fmliveswitchClientInfoInit(),_this.setUserId(userId_21),_this.setUserAlias(userAlias_3),_this.setDeviceId(deviceId_18),_this.setDeviceAlias(deviceAlias_3),_super.prototype.setId.call(_this,idValue_12),_this.setTag(tag_6),_this.setRoles(roles_7),_this.setRegion(region)}else{if(8!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");userId=__arguments[0],userAlias=__arguments[1],deviceId=__arguments[2],deviceAlias=__arguments[3],idValue=__arguments[4],tag=__arguments[5],roles=__arguments[6],region=__arguments[7];(_this=_super.call(this)||this).fmliveswitchClientInfoInit(),_this.setUserId(userId),_this.setUserAlias(userAlias),_this.setDeviceId(deviceId),_this.setDeviceAlias(deviceAlias),_super.prototype.setId.call(_this,idValue),_this.setTag(tag),_this.setRoles(roles),_this.setRegion(region)}return _this}return __extends(ClientInfo,_super),ClientInfo.prototype.getTypeString=function(){return"[fm.liveswitch.ClientInfo],"+_super.prototype.getTypeString.call(this)},ClientInfo.prototype.fmliveswitchClientInfoInit=function(){this._coreCount=0,this._physicalMemory=0},ClientInfo.fromJson=function(clientInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(clientInfoJson,(function(){return new fm.liveswitch.ClientInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.fromJsonArray=function(clientInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(clientInfosJson,fm.liveswitch.ClientInfo.fromJson.bind(fm.liveswitch.ClientInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.toJson=function(clientInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(clientInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.toJsonArray=function(clientInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(clientInfos,fm.liveswitch.ClientInfo.toJson.bind(fm.liveswitch.ClientInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.deflate=function(){if(0==arguments.length){var info=new fm.liveswitch.ClientInfo;return info.setUserId(this.getUserId()),info.setDeviceId(this.getDeviceId()),info.setId(_super.prototype.getId.call(this)),info}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("version"==_var0){this.setVersion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("applicationId"==_var0){this.setApplicationId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("userId"==_var0){this.setUserId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("userAlias"==_var0){this.setUserAlias(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("deviceId"==_var0){this.setDeviceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("deviceAlias"==_var0){this.setDeviceAlias(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("externalId"==_var0){this.setExternalId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("tag"==_var0){this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("region"==_var0){this.setRegion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("roles"==_var0){this.setRoles(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("sourceLanguage"==_var0){this.setSourceLanguage(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("machineName"==_var0){this.setMachineName(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("coreCount"==_var0){this.setCoreCount(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson));break}if("physicalMemory"==_var0){this.setPhysicalMemory(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("operatingSystem"==_var0){this.setOperatingSystem(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("operatingSystemVersion"==_var0){this.setOperatingSystemVersion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("architecture"==_var0){this.setArchitecture(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}}while(0)},ClientInfo.prototype.getApplicationId=function(){if(0==arguments.length)return this._applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getArchitecture=function(){if(0==arguments.length)return this._architecture;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getCoreCount=function(){if(0==arguments.length)return this._coreCount;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getDeviceAlias=function(){if(0==arguments.length)return this._deviceAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getExternalId=function(){if(0==arguments.length)return this._externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getMachineName=function(){if(0==arguments.length)return this._machineName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getOperatingSystem=function(){if(0==arguments.length)return this._operatingSystem;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getOperatingSystemVersion=function(){if(0==arguments.length)return this._operatingSystemVersion;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getPhysicalMemory=function(){if(0==arguments.length)return this._physicalMemory;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getRegion=function(){if(0==arguments.length)return this._region;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getRoles=function(){if(0==arguments.length)return this._roles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getSourceLanguage=function(){if(0==arguments.length)return this._sourceLanguage;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getUserAlias=function(){if(0==arguments.length)return this._userAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.getVersion=function(){if(0==arguments.length)return this._version;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.inflate=function(userAlias,deviceAlias,tag,roles){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setUserAlias(userAlias),this.setDeviceAlias(deviceAlias),this.setTag(tag),this.setRoles(roles)},ClientInfo.prototype.isEquivalent=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ClientInfo]"))){var clientInfo=arguments[0];return!fm.liveswitch.Global.equals(clientInfo,null)&&this.isEquivalent(clientInfo.getUserId(),clientInfo.getDeviceId(),clientInfo.getId())}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.ConnectionInfo]"))){var connectionInfo=arguments[0];return!fm.liveswitch.Global.equals(connectionInfo,null)&&this.isEquivalent(connectionInfo.getUserId(),connectionInfo.getDeviceId(),connectionInfo.getClientId())}if(3==arguments.length){var userId=arguments[0],deviceId=arguments[1],idValue=arguments[2];return fm.liveswitch.Global.equals(userId,this.getUserId())&&fm.liveswitch.Global.equals(deviceId,this.getDeviceId())&&fm.liveswitch.Global.equals(idValue,_super.prototype.getId.call(this))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getVersion(),null)||(jsonObject.version=fm.liveswitch.JsonSerializer.serializeString(this.getVersion())),fm.liveswitch.Global.equals(this.getApplicationId(),null)||(jsonObject.applicationId=fm.liveswitch.JsonSerializer.serializeString(this.getApplicationId())),fm.liveswitch.Global.equals(this.getUserId(),null)||(jsonObject.userId=fm.liveswitch.JsonSerializer.serializeString(this.getUserId())),fm.liveswitch.Global.equals(this.getUserAlias(),null)||(jsonObject.userAlias=fm.liveswitch.JsonSerializer.serializeString(this.getUserAlias())),fm.liveswitch.Global.equals(this.getDeviceId(),null)||(jsonObject.deviceId=fm.liveswitch.JsonSerializer.serializeString(this.getDeviceId())),fm.liveswitch.Global.equals(this.getDeviceAlias(),null)||(jsonObject.deviceAlias=fm.liveswitch.JsonSerializer.serializeString(this.getDeviceAlias())),fm.liveswitch.Global.equals(this.getExternalId(),null)||(jsonObject.externalId=fm.liveswitch.JsonSerializer.serializeString(this.getExternalId())),fm.liveswitch.Global.equals(this.getTag(),null)||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.Global.equals(this.getRegion(),null)||(jsonObject.region=fm.liveswitch.JsonSerializer.serializeString(this.getRegion())),fm.liveswitch.Global.equals(this.getRoles(),null)||(jsonObject.roles=fm.liveswitch.JsonSerializer.serializeStringArray(this.getRoles())),fm.liveswitch.Global.equals(this.getSourceLanguage(),null)||(jsonObject.sourceLanguage=fm.liveswitch.JsonSerializer.serializeString(this.getSourceLanguage())),fm.liveswitch.Global.equals(this.getMachineName(),null)||(jsonObject.machineName=fm.liveswitch.JsonSerializer.serializeString(this.getMachineName())),fm.liveswitch.Global.equals(this.getCoreCount(),0)||(jsonObject.coreCount=fm.liveswitch.JsonSerializer.serializeInteger(this.getCoreCount())),fm.liveswitch.Global.equals(this.getPhysicalMemory(),0)||(jsonObject.physicalMemory=fm.liveswitch.JsonSerializer.serializeLong(this.getPhysicalMemory())),fm.liveswitch.Global.equals(this.getOperatingSystem(),null)||(jsonObject.operatingSystem=fm.liveswitch.JsonSerializer.serializeString(this.getOperatingSystem())),fm.liveswitch.Global.equals(this.getOperatingSystemVersion(),null)||(jsonObject.operatingSystemVersion=fm.liveswitch.JsonSerializer.serializeString(this.getOperatingSystemVersion())),fm.liveswitch.Global.equals(this.getArchitecture(),null)||(jsonObject.architecture=fm.liveswitch.JsonSerializer.serializeString(this.getArchitecture()))},ClientInfo.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._applicationId=value},ClientInfo.prototype.setArchitecture=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._architecture=value},ClientInfo.prototype.setCoreCount=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._coreCount=fm.liveswitch.Global.toInt(value)},ClientInfo.prototype.setDeviceAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceAlias=value},ClientInfo.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},ClientInfo.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._externalId=value},ClientInfo.prototype.setMachineName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._machineName=value},ClientInfo.prototype.setOperatingSystem=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._operatingSystem=value},ClientInfo.prototype.setOperatingSystemVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._operatingSystemVersion=value},ClientInfo.prototype.setPhysicalMemory=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._physicalMemory=fm.liveswitch.Global.toInt(value)},ClientInfo.prototype.setRegion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._region=value},ClientInfo.prototype.setRoles=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._roles=value},ClientInfo.prototype.setSourceLanguage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sourceLanguage=value},ClientInfo.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},ClientInfo.prototype.setUserAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userAlias=value},ClientInfo.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},ClientInfo.prototype.setVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._version=value},ClientInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ClientInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientInfo}(fm.liveswitch.Info);liveswitch.ClientInfo=ClientInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ClientStateWrapper=function(){function ClientStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_66=__arguments[0];this._value=value_66}return ClientStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.ClientStateWrapper]"},ClientStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.ClientState.New?"New":this._value==fm.liveswitch.ClientState.Registering?"Registering":this._value==fm.liveswitch.ClientState.Registered?"Registered":this._value==fm.liveswitch.ClientState.Unregistering?"Unregistering":this._value==fm.liveswitch.ClientState.Unregistered?"Unregistered":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientStateWrapper}();liveswitch.ClientStateWrapper=ClientStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionInfo=function(_super){function ConnectionInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchConnectionInfoInit(),_this.__serializeLegacyProperties=!0;else if(6==__arguments.length){var idValue=__arguments[0],applicationId=__arguments[1],channelId=__arguments[2],userId=__arguments[3],deviceId=__arguments[4],clientId=__arguments[5];(_this=_super.call(this)||this).fmliveswitchConnectionInfoInit(),_this.__serializeLegacyProperties=!0,_super.prototype.setId.call(_this,idValue),_this.setApplicationId(applicationId),_this.setChannelId(channelId),_this.setUserId(userId),_this.setDeviceId(deviceId),_this.setClientId(clientId)}else if(14==__arguments.length){userId=__arguments[0],deviceId=__arguments[1],clientId=__arguments[2],idValue=__arguments[3];var tag=__arguments[4],type=__arguments[5],mediaId=__arguments[6],localAudioMuted=__arguments[7],localVideoMuted=__arguments[8],audioDirection=__arguments[9],videoDirection=__arguments[10],dataDirection=__arguments[11],audioFormats=__arguments[12],videoFormats=__arguments[13];(_this=_super.call(this)||this).fmliveswitchConnectionInfoInit(),_this.__serializeLegacyProperties=!0,_this.setUserId(userId),_this.setDeviceId(deviceId),_this.setClientId(clientId),_super.prototype.setId.call(_this,idValue),_this.setTag(tag),_this.setType(type),_this.setMediaId(mediaId),fm.liveswitch.Global.equals(audioDirection,null)||_this.setAudioDirection(audioDirection),fm.liveswitch.Global.equals(videoDirection,null)||_this.setVideoDirection(videoDirection),fm.liveswitch.Global.equals(dataDirection,null)||_this.setDataDirection(dataDirection),localAudioMuted&&_this.setLocalAudioMuted(localAudioMuted),localVideoMuted&&_this.setLocalVideoMuted(localVideoMuted),fm.liveswitch.Global.equals(audioFormats,null)||_this.setAudioFormats(audioFormats),fm.liveswitch.Global.equals(videoFormats,null)||_this.setVideoFormats(videoFormats)}else{if(18!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");userId=__arguments[0];var userAlias=__arguments[1],deviceAlias=(deviceId=__arguments[2],__arguments[3]),clientTag=(clientId=__arguments[4],__arguments[5]),clientRoles=__arguments[6];idValue=__arguments[7],tag=__arguments[8],type=__arguments[9],mediaId=__arguments[10],localAudioMuted=__arguments[11],localVideoMuted=__arguments[12],audioDirection=__arguments[13],videoDirection=__arguments[14],dataDirection=__arguments[15],audioFormats=__arguments[16],videoFormats=__arguments[17];(_this=_super.call(this)||this).fmliveswitchConnectionInfoInit(),_this.__serializeLegacyProperties=!0,_this.setUserId(userId),_this.setUserAlias(userAlias),_this.setDeviceId(deviceId),_this.setDeviceAlias(deviceAlias),_this.setClientId(clientId),_this.setClientTag(clientTag),_this.setClientRoles(clientRoles),_super.prototype.setId.call(_this,idValue),_this.setTag(tag),_this.setType(type),_this.setMediaId(mediaId),fm.liveswitch.Global.equals(audioDirection,null)||_this.setAudioDirection(audioDirection),fm.liveswitch.Global.equals(videoDirection,null)||_this.setVideoDirection(videoDirection),fm.liveswitch.Global.equals(dataDirection,null)||_this.setDataDirection(dataDirection),localAudioMuted&&_this.setLocalAudioMuted(localAudioMuted),localVideoMuted&&_this.setLocalVideoMuted(localVideoMuted),fm.liveswitch.Global.equals(audioFormats,null)||_this.setAudioFormats(audioFormats),fm.liveswitch.Global.equals(videoFormats,null)||_this.setVideoFormats(videoFormats)}return _this}return __extends(ConnectionInfo,_super),ConnectionInfo.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionInfo],"+_super.prototype.getTypeString.call(this)},ConnectionInfo.prototype.fmliveswitchConnectionInfoInit=function(){this.__serializeLegacyProperties=!1,this._recording=!1},ConnectionInfo.fromJson=function(connectionInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(connectionInfoJson,(function(){return new fm.liveswitch.ConnectionInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.fromJsonArray=function(connectionInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(connectionInfosJson,fm.liveswitch.ConnectionInfo.fromJson.bind(fm.liveswitch.ConnectionInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.toJson=function(connectionInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(connectionInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.toJsonArray=function(connectionInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(connectionInfos,fm.liveswitch.ConnectionInfo.toJson.bind(fm.liveswitch.ConnectionInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.createClientInfo=function(){if(0==arguments.length)return new fm.liveswitch.ClientInfo(this.getUserId(),this.getUserAlias(),this.getDeviceId(),this.getDeviceAlias(),this.getClientId(),this.getClientTag(),this.getClientRoles());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("applicationId"==_var0){this.setApplicationId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("channelId"==_var0){this.setChannelId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("userId"==_var0){this.setUserId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("userAlias"==_var0){this.setUserAlias(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("deviceId"==_var0){this.setDeviceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("deviceAlias"==_var0){this.setDeviceAlias(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientId"==_var0){this.setClientId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientRoles"==_var0){this.setClientRoles(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("clientTag"==_var0){this.setClientTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("externalId"==_var0){this.setExternalId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("state"==_var0){this.setState(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("tag"==_var0){this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("type"==_var0){this.setType(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("recording"==_var0){this.setRecording(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("error"==_var0){this.setError(fm.liveswitch.Error.fromJson(valueJson));break}if("mediaId"==_var0){this.setMediaId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteConnectionId"==_var0){this.setRemoteConnectionId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteMediaId"==_var0){this.setRemoteMediaId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("audioStreams"==_var0){this.setAudioStreams(fm.liveswitch.MediaStreamInfo.fromJsonArray(valueJson));break}if("videoStreams"==_var0){this.setVideoStreams(fm.liveswitch.MediaStreamInfo.fromJsonArray(valueJson));break}if("dataStream"==_var0){this.setDataStream(fm.liveswitch.DataStreamInfo.fromJson(valueJson));break}if("transports"==_var0){this.setTransports(fm.liveswitch.TransportInfo.fromJsonArray(valueJson));break}if("localAudioMuted"==_var0){this.setLocalAudioMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("localVideoMuted"==_var0){this.setLocalVideoMuted(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("audioDirection"==_var0){this.setAudioDirection(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("videoDirection"==_var0){this.setVideoDirection(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("dataDirection"==_var0){this.setDataDirection(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("audioFormats"==_var0){this.setAudioFormats(fm.liveswitch.FormatInfo.fromJsonArray(valueJson));break}if("videoFormats"==_var0){this.setVideoFormats(fm.liveswitch.FormatInfo.fromJsonArray(valueJson));break}}while(0)},ConnectionInfo.prototype.getApplicationId=function(){if(0==arguments.length)return this._applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getAudioDirection=function(){if(0==arguments.length){var audioStream=this.getAudioStream();return fm.liveswitch.Global.equals(audioStream,null)?null:fm.liveswitch.StringExtensions.nullCoalesce(audioStream.getDirection(),"sendrecv")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getAudioFormats=function(){if(0==arguments.length){var flag=void 0,audioStream=this.getAudioStream();if(fm.liveswitch.Global.equals(audioStream,null))return null;var list=new Array,sendFormats=audioStream.getSendFormats();if(!fm.liveswitch.Global.equals(sendFormats,null))for(var _i=0,sendFormats_1=sendFormats;_i<sendFormats_1.length;_i++){var info2=sendFormats_1[_i];flag=!1;for(var _a=0,list_9=list;_a<list_9.length;_a++){var info3=list_9[_a];if(info2.isEquivalent(info3)){flag=!0;break}}flag||fm.liveswitch.ArrayExtensions.add(list,info2)}var receiveFormats=audioStream.getReceiveFormats();if(!fm.liveswitch.Global.equals(receiveFormats,null))for(var _b=0,receiveFormats_1=receiveFormats;_b<receiveFormats_1.length;_b++){var info4=receiveFormats_1[_b];flag=!1;for(var _c=0,list_10=list;_c<list_10.length;_c++){info3=list_10[_c];if(info4.isEquivalent(info3)){flag=!0;break}}flag||fm.liveswitch.ArrayExtensions.add(list,info4)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getAudioStream=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getAudioStreams());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getAudioStreams=function(){if(0==arguments.length)return this._audioStreams;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getChannelId=function(){if(0==arguments.length)return this._channelId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getClientRoles=function(){if(0==arguments.length)return this._clientRoles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getClientTag=function(){if(0==arguments.length)return this._clientTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getDataDirection=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getDataStream(),null)?null:"sendrecv";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getDataStream=function(){if(0==arguments.length)return this._dataStream;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getDeviceAlias=function(){if(0==arguments.length)return this._deviceAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getError=function(){if(0==arguments.length)return this._error;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getExternalId=function(){if(0==arguments.length)return this._externalId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getHasAudio=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getAudioStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getHasData=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getHasVideo=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getVideoStream(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getLocalAudioDisabled=function(){if(0==arguments.length){var audioStream=this.getAudioStream();return!fm.liveswitch.Global.equals(audioStream,null)&&audioStream.getSendDisabled()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getLocalAudioMuted=function(){if(0==arguments.length){var audioStream=this.getAudioStream();return!fm.liveswitch.Global.equals(audioStream,null)&&audioStream.getSendMuted()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getLocalVideoDisabled=function(){if(0==arguments.length){var videoStream=this.getVideoStream();return!fm.liveswitch.Global.equals(videoStream,null)&&videoStream.getSendDisabled()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getLocalVideoMuted=function(){if(0==arguments.length){var videoStream=this.getVideoStream();return!fm.liveswitch.Global.equals(videoStream,null)&&videoStream.getSendMuted()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getMediaId=function(){if(0==arguments.length)return this._mediaId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getRecording=function(){if(0==arguments.length)return this._recording;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getRemoteAudioDisabled=function(){if(0==arguments.length){var audioStream=this.getAudioStream();return!fm.liveswitch.Global.equals(audioStream,null)&&audioStream.getReceiveDisabled()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getRemoteConnectionId=function(){if(0==arguments.length)return this._remoteConnectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getRemoteMediaId=function(){if(0==arguments.length)return this._remoteMediaId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getRemoteVideoDisabled=function(){if(0==arguments.length){var videoStream=this.getVideoStream();return!fm.liveswitch.Global.equals(videoStream,null)&&videoStream.getReceiveDisabled()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getSerializeLegacyProperties=function(){if(0==arguments.length)return this.__serializeLegacyProperties;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getTransports=function(){if(0==arguments.length)return this._transports;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getUserAlias=function(){if(0==arguments.length)return this._userAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getVideoDirection=function(){if(0==arguments.length){var videoStream=this.getVideoStream();return fm.liveswitch.Global.equals(videoStream,null)?null:fm.liveswitch.StringExtensions.nullCoalesce(videoStream.getDirection(),"sendrecv")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getVideoFormats=function(){if(0==arguments.length){var flag=void 0,videoStream=this.getVideoStream();if(fm.liveswitch.Global.equals(videoStream,null))return null;var list=new Array,sendFormats=videoStream.getSendFormats();if(!fm.liveswitch.Global.equals(sendFormats,null))for(var _i=0,sendFormats_2=sendFormats;_i<sendFormats_2.length;_i++){var info2=sendFormats_2[_i];flag=!1;for(var _a=0,list_11=list;_a<list_11.length;_a++){var info3=list_11[_a];if(info2.isEquivalent(info3)){flag=!0;break}}flag||fm.liveswitch.ArrayExtensions.add(list,info2)}var receiveFormats=videoStream.getReceiveFormats();if(!fm.liveswitch.Global.equals(receiveFormats,null))for(var _b=0,receiveFormats_2=receiveFormats;_b<receiveFormats_2.length;_b++){var info4=receiveFormats_2[_b];flag=!1;for(var _c=0,list_12=list;_c<list_12.length;_c++){info3=list_12[_c];if(info4.isEquivalent(info3)){flag=!0;break}}flag||fm.liveswitch.ArrayExtensions.add(list,info4)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getVideoStream=function(){if(0==arguments.length)return fm.liveswitch.Utility.firstOrDefault(this.getVideoStreams());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.getVideoStreams=function(){if(0==arguments.length)return this._videoStreams;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.inflate=function(userAlias,deviceAlias,clientTag,clientRoles){if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(userAlias,null)||this.setUserAlias(userAlias),fm.liveswitch.Global.equals(deviceAlias,null)||this.setDeviceAlias(deviceAlias),fm.liveswitch.Global.equals(clientTag,null)||this.setClientTag(clientTag),fm.liveswitch.Global.equals(clientRoles,null)||this.setClientRoles(clientRoles)},ConnectionInfo.prototype.isEquivalent=function(){if(1==arguments.length){var connectionInfo=arguments[0];return!fm.liveswitch.Global.equals(connectionInfo,null)&&this.isEquivalent(connectionInfo.getUserId(),connectionInfo.getDeviceId(),connectionInfo.getClientId(),connectionInfo.getId())}if(4==arguments.length){var userId=arguments[0],deviceId=arguments[1],clientId=arguments[2],idValue=arguments[3];return fm.liveswitch.Global.equals(userId,this.getUserId())&&fm.liveswitch.Global.equals(deviceId,this.getDeviceId())&&fm.liveswitch.Global.equals(clientId,this.getClientId())&&fm.liveswitch.Global.equals(idValue,_super.prototype.getId.call(this))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.populateInfo=function(stats,lastStats,eventType){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(this.setSerializeLegacyProperties(!1),this.shouldIncludeReport(eventType)){var num=void 0;if(!fm.liveswitch.Global.equals(this.getAudioStreams(),null)){var audioStreams=stats.getAudioStreams();if(!fm.liveswitch.Global.equals(audioStreams,null)){var statsArray2=fm.liveswitch.Global.equals(lastStats,null)?null:lastStats.getAudioStreams();for(num=0;num<fm.liveswitch.MathAssistant.min(audioStreams.length,this.getAudioStreams().length);num++){var stats2=!fm.liveswitch.Global.equals(statsArray2,null)&&statsArray2.length>num?statsArray2[num]:null;this.getAudioStreams()[num].populateInfos(audioStreams[num],stats2),this.scrubTransport(audioStreams[num].getTransport(),fm.liveswitch.Global.equals(stats2,null)?null:stats2.getTransport()),fm.liveswitch.Global.equals(eventType,"connection.stats")&&(this.getAudioStreams()[num].setId(null),this.getAudioStreams()[num].setSendDisabled(!1),this.getAudioStreams()[num].setReceiveDisabled(!1),this.getAudioStreams()[num].setSendFormats(null),this.getAudioStreams()[num].setReceiveFormats(null),this.getAudioStreams()[num].setSendEncodings(null),this.getAudioStreams()[num].setReceiveEncodings(null))}}}if(!fm.liveswitch.Global.equals(this.getVideoStreams(),null)){var videoStreams=stats.getVideoStreams();if(!fm.liveswitch.Global.equals(videoStreams,null)){var statsArray4=fm.liveswitch.Global.equals(lastStats,null)?null:lastStats.getVideoStreams();for(num=0;num<fm.liveswitch.MathAssistant.min(videoStreams.length,this.getVideoStreams().length);num++){var stats3=!fm.liveswitch.Global.equals(statsArray4,null)&&statsArray4.length>num?statsArray4[num]:null;this.getVideoStreams()[num].populateInfos(videoStreams[num],stats3),this.scrubTransport(videoStreams[num].getTransport(),fm.liveswitch.Global.equals(stats3,null)?null:stats3.getTransport()),fm.liveswitch.Global.equals(eventType,"connection.stats")&&(this.getVideoStreams()[num].setId(null),this.getVideoStreams()[num].setSendDisabled(!1),this.getVideoStreams()[num].setReceiveDisabled(!1),this.getVideoStreams()[num].setSendFormats(null),this.getVideoStreams()[num].setReceiveFormats(null),this.getVideoStreams()[num].setSendEncodings(null),this.getVideoStreams()[num].setReceiveEncodings(null))}}}if(!fm.liveswitch.Global.equals(this.getDataStream(),null)){var dataStream=stats.getDataStream();if(!fm.liveswitch.Global.equals(dataStream,null)){var stats5=fm.liveswitch.Global.equals(lastStats,null)?null:lastStats.getDataStream();this.getDataStream().populateInfos(dataStream,stats5,eventType),this.scrubTransport(dataStream.getTransport(),fm.liveswitch.Global.equals(stats5,null)?null:stats5.getTransport()),fm.liveswitch.Global.equals(eventType,"connection.stats")&&this.getDataStream().setId(null)}}}},ConnectionInfo.prototype.scrubTransport=function(transportStats,lastTransportStats){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var i=0;i<this.getTransports().length;i++){var info=this.getTransports()[i];fm.liveswitch.Global.equals(info,null)||fm.liveswitch.Global.equals(transportStats,null)||!fm.liveswitch.Global.equals(info.getId(),transportStats.getId())||(this.getTransports()[i]=new fm.liveswitch.TransportInfo(transportStats,lastTransportStats))}},ConnectionInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getApplicationId(),null)||(jsonObject.applicationId=fm.liveswitch.JsonSerializer.serializeString(this.getApplicationId())),fm.liveswitch.Global.equals(this.getChannelId(),null)||(jsonObject.channelId=fm.liveswitch.JsonSerializer.serializeString(this.getChannelId())),fm.liveswitch.Global.equals(this.getUserId(),null)||(jsonObject.userId=fm.liveswitch.JsonSerializer.serializeString(this.getUserId())),fm.liveswitch.Global.equals(this.getUserAlias(),null)||(jsonObject.userAlias=fm.liveswitch.JsonSerializer.serializeString(this.getUserAlias())),fm.liveswitch.Global.equals(this.getDeviceId(),null)||(jsonObject.deviceId=fm.liveswitch.JsonSerializer.serializeString(this.getDeviceId())),fm.liveswitch.Global.equals(this.getDeviceAlias(),null)||(jsonObject.deviceAlias=fm.liveswitch.JsonSerializer.serializeString(this.getDeviceAlias())),fm.liveswitch.Global.equals(this.getClientId(),null)||(jsonObject.clientId=fm.liveswitch.JsonSerializer.serializeString(this.getClientId())),fm.liveswitch.Global.equals(this.getClientRoles(),null)||(jsonObject.clientRoles=fm.liveswitch.JsonSerializer.serializeStringArray(this.getClientRoles())),fm.liveswitch.Global.equals(this.getClientTag(),null)||(jsonObject.clientTag=fm.liveswitch.JsonSerializer.serializeString(this.getClientTag())),fm.liveswitch.Global.equals(this.getExternalId(),null)||(jsonObject.externalId=fm.liveswitch.JsonSerializer.serializeString(this.getExternalId())),fm.liveswitch.Global.equals(this.getState(),null)||(jsonObject.state=fm.liveswitch.JsonSerializer.serializeString(this.getState())),fm.liveswitch.Global.equals(this.getTag(),null)||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.Global.equals(this.getType(),null)||(jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(this.getType())),this.getRecording()&&(jsonObject.recording=fm.liveswitch.JsonSerializer.serializeBoolean(this.getRecording())),fm.liveswitch.Global.equals(this.getError(),null)||(jsonObject.error=fm.liveswitch.Error.toJson(this.getError())),fm.liveswitch.Global.equals(this.getMediaId(),null)||(jsonObject.mediaId=fm.liveswitch.JsonSerializer.serializeString(this.getMediaId())),fm.liveswitch.Global.equals(this.getRemoteConnectionId(),null)||(jsonObject.remoteConnectionId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteConnectionId())),fm.liveswitch.Global.equals(this.getRemoteMediaId(),null)||(jsonObject.remoteMediaId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteMediaId())),fm.liveswitch.Global.equals(this.getAudioStreams(),null)||(jsonObject.audioStreams=fm.liveswitch.MediaStreamInfo.toJsonArray(this.getAudioStreams())),fm.liveswitch.Global.equals(this.getVideoStreams(),null)||(jsonObject.videoStreams=fm.liveswitch.MediaStreamInfo.toJsonArray(this.getVideoStreams())),fm.liveswitch.Global.equals(this.getDataStream(),null)||(jsonObject.dataStream=fm.liveswitch.DataStreamInfo.toJson(this.getDataStream())),fm.liveswitch.Global.equals(this.getTransports(),null)||(jsonObject.transports=fm.liveswitch.TransportInfo.toJsonArray(this.getTransports())),this.getSerializeLegacyProperties()&&(this.getLocalAudioMuted()&&(jsonObject.localAudioMuted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getLocalAudioMuted())),this.getLocalVideoMuted()&&(jsonObject.localVideoMuted=fm.liveswitch.JsonSerializer.serializeBoolean(this.getLocalVideoMuted())),fm.liveswitch.Global.equals(this.getAudioDirection(),null)||(jsonObject.audioDirection=fm.liveswitch.JsonSerializer.serializeString(this.getAudioDirection())),fm.liveswitch.Global.equals(this.getVideoDirection(),null)||(jsonObject.videoDirection=fm.liveswitch.JsonSerializer.serializeString(this.getVideoDirection())),fm.liveswitch.Global.equals(this.getDataDirection(),null)||(jsonObject.dataDirection=fm.liveswitch.JsonSerializer.serializeString(this.getDataDirection())),fm.liveswitch.Global.equals(this.getAudioFormats(),null)||(jsonObject.audioFormats=fm.liveswitch.FormatInfo.toJsonArray(this.getAudioFormats())),fm.liveswitch.Global.equals(this.getVideoFormats(),null)||(jsonObject.videoFormats=fm.liveswitch.FormatInfo.toJsonArray(this.getVideoFormats())))},ConnectionInfo.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._applicationId=value},ConnectionInfo.prototype.setAudioDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))this.setAudioStream(null);else{var audioStream=this.getAudioStream();fm.liveswitch.Global.equals(audioStream,null)&&(audioStream=new fm.liveswitch.MediaStreamInfo,this.setAudioStream(audioStream)),audioStream.setDirection(value)}},ConnectionInfo.prototype.setAudioFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioStream=this.getAudioStream();fm.liveswitch.Global.equals(audioStream,null)&&(this.setAudioStream(new fm.liveswitch.MediaStreamInfo),audioStream=this.getAudioStream()),audioStream.setSendFormats(value),audioStream.setReceiveFormats(value)},ConnectionInfo.prototype.setAudioStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setAudioStreams(fm.liveswitch.Global.equals(value,null)?null:[value])},ConnectionInfo.prototype.setAudioStreams=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._audioStreams=value},ConnectionInfo.prototype.setChannelId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channelId=value},ConnectionInfo.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},ConnectionInfo.prototype.setClientRoles=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientRoles=value},ConnectionInfo.prototype.setClientTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientTag=value},ConnectionInfo.prototype.setDataDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))this.setDataStream(null);else if(fm.liveswitch.Global.equals(this.getDataStream(),null)){var info=new fm.liveswitch.DataStreamInfo;this.setDataStream(info)}},ConnectionInfo.prototype.setDataStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._dataStream=value},ConnectionInfo.prototype.setDeviceAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceAlias=value},ConnectionInfo.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},ConnectionInfo.prototype.setError=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._error=value},ConnectionInfo.prototype.setExternalId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._externalId=value},ConnectionInfo.prototype.setLocalAudioDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioStream=this.getAudioStream();fm.liveswitch.Global.equals(audioStream,null)&&(this.setAudioStream(new fm.liveswitch.MediaStreamInfo),audioStream=this.getAudioStream()),audioStream.setSendDisabled(value)},ConnectionInfo.prototype.setLocalAudioMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioStream=this.getAudioStream();fm.liveswitch.Global.equals(audioStream,null)&&(this.setAudioStream(new fm.liveswitch.MediaStreamInfo),audioStream=this.getAudioStream()),audioStream.setSendMuted(value)},ConnectionInfo.prototype.setLocalVideoDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var videoStream=this.getVideoStream();fm.liveswitch.Global.equals(videoStream,null)&&(this.setVideoStream(new fm.liveswitch.MediaStreamInfo),videoStream=this.getVideoStream()),videoStream.setSendDisabled(value)},ConnectionInfo.prototype.setLocalVideoMuted=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var videoStream=this.getVideoStream();fm.liveswitch.Global.equals(videoStream,null)&&(this.setVideoStream(new fm.liveswitch.MediaStreamInfo),videoStream=this.getVideoStream()),videoStream.setSendMuted(value)},ConnectionInfo.prototype.setMediaId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaId=value},ConnectionInfo.prototype.setRecording=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._recording=value},ConnectionInfo.prototype.setRemoteAudioDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var audioStream=this.getAudioStream();fm.liveswitch.Global.equals(audioStream,null)&&(this.setAudioStream(new fm.liveswitch.MediaStreamInfo),audioStream=this.getAudioStream()),audioStream.setReceiveDisabled(value)},ConnectionInfo.prototype.setRemoteConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteConnectionId=value},ConnectionInfo.prototype.setRemoteMediaId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._remoteMediaId=value},ConnectionInfo.prototype.setRemoteVideoDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var videoStream=this.getVideoStream();fm.liveswitch.Global.equals(videoStream,null)&&(this.setVideoStream(new fm.liveswitch.MediaStreamInfo),videoStream=this.getVideoStream()),videoStream.setReceiveDisabled(value)},ConnectionInfo.prototype.setSerializeLegacyProperties=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__serializeLegacyProperties=value},ConnectionInfo.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},ConnectionInfo.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},ConnectionInfo.prototype.setTransports=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._transports=value},ConnectionInfo.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},ConnectionInfo.prototype.setUserAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userAlias=value},ConnectionInfo.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},ConnectionInfo.prototype.setVideoDirection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))this.setVideoStream(null);else{var videoStream=this.getVideoStream();fm.liveswitch.Global.equals(videoStream,null)&&(videoStream=new fm.liveswitch.MediaStreamInfo,this.setVideoStream(videoStream)),videoStream.setDirection(value)}},ConnectionInfo.prototype.setVideoFormats=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var videoStream=this.getVideoStream();fm.liveswitch.Global.equals(videoStream,null)&&(this.setVideoStream(new fm.liveswitch.MediaStreamInfo),videoStream=this.getVideoStream()),videoStream.setSendFormats(value),videoStream.setReceiveFormats(value)},ConnectionInfo.prototype.setVideoStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setVideoStreams(fm.liveswitch.Global.equals(value,null)?null:[value])},ConnectionInfo.prototype.setVideoStreams=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._videoStreams=value},ConnectionInfo.prototype.shouldIncludeReport=function(eventType){if(1==arguments.length)return fm.liveswitch.Global.equals(eventType,"connection.stats")||fm.liveswitch.Global.equals(eventType,"connection.closed")||fm.liveswitch.Global.equals(eventType,"connection.failed");throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.shouldSerializeAudioDirection=function(){if(0==arguments.length)return this.getSerializeLegacyProperties();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.shouldSerializeAudioFormats=function(){if(0==arguments.length)return this.getSerializeLegacyProperties();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.shouldSerializeDataDirection=function(){if(0==arguments.length)return this.getSerializeLegacyProperties();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.shouldSerializeLocalAudioMuted=function(){if(0==arguments.length)return this.getSerializeLegacyProperties();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.shouldSerializeLocalVideoMuted=function(){if(0==arguments.length)return this.getSerializeLegacyProperties();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.shouldSerializeVideoDirection=function(){if(0==arguments.length)return this.getSerializeLegacyProperties();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.shouldSerializeVideoFormats=function(){if(0==arguments.length)return this.getSerializeLegacyProperties();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.ConnectionInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionInfo}(fm.liveswitch.Info);liveswitch.ConnectionInfo=ConnectionInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionType=function(){function ConnectionType(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return ConnectionType.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionType]"},ConnectionType.getMcu=function(){if(0==arguments.length)return"mcu";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionType.getPeer=function(){if(0==arguments.length)return"peer";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionType.getSfu=function(){if(0==arguments.length)return"sfu";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionType}();liveswitch.ConnectionType=ConnectionType}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var DataChannelReport=function(_super){function DataChannelReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchDataChannelReportInit();else{if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];__arguments[2];(_this=_super.call(this)||this).fmliveswitchDataChannelReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setMessagesSent(fm.liveswitch.Report.processLong(stats.getMessagesSent(),flag?0:lastStats.getMessagesSent())),_this.setBytesSent(fm.liveswitch.Report.processLong(stats.getBytesSent(),flag?0:lastStats.getBytesSent())),_this.setMessagesReceived(fm.liveswitch.Report.processLong(stats.getMessagesReceived(),flag?0:lastStats.getMessagesReceived())),_this.setBytesReceived(fm.liveswitch.Report.processLong(stats.getBytesReceived(),flag?0:lastStats.getBytesReceived()))}return _this}return __extends(DataChannelReport,_super),DataChannelReport.prototype.getTypeString=function(){return"[fm.liveswitch.DataChannelReport],"+_super.prototype.getTypeString.call(this)},DataChannelReport.prototype.fmliveswitchDataChannelReportInit=function(){this._bytesReceived=0,this._bytesSent=0,this._messagesReceived=0,this._messagesSent=0},DataChannelReport.fromJson=function(dataChannelReportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(dataChannelReportJson,(function(){return new fm.liveswitch.DataChannelReport}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReport.toJson=function(dataChannelReport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(dataChannelReport,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"messagesSent")?this.setMessagesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesSent")?this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"messagesReceived")?this.setMessagesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesReceived")&&this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},DataChannelReport.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReport.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReport.prototype.getMessagesReceived=function(){if(0==arguments.length)return this._messagesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReport.prototype.getMessagesSent=function(){if(0==arguments.length)return this._messagesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getMessagesSent()&&(jsonObject.messagesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesSent())),null!=this.getBytesSent()&&(jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent())),null!=this.getMessagesReceived()&&(jsonObject.messagesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getMessagesReceived())),null!=this.getBytesReceived()&&(jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived()))},DataChannelReport.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesReceived=value},DataChannelReport.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesSent=value},DataChannelReport.prototype.setMessagesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messagesReceived=value},DataChannelReport.prototype.setMessagesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messagesSent=value},DataChannelReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.DataChannelReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DataChannelReport}(fm.liveswitch.Report);liveswitch.DataChannelReport=DataChannelReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ErrorType=function(){function ErrorType(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return ErrorType.prototype.getTypeString=function(){return"[fm.liveswitch.ErrorType]"},ErrorType.getAccessChannelClaimDenied=function(){if(0==arguments.length)return"accessChannelClaimDenied";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getAccessMessageBlocked=function(){if(0==arguments.length)return"accessMessageBlocked";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getClientInvalidId=function(){if(0==arguments.length)return"clientInvalidId";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getMessageParseFailure=function(){if(0==arguments.length)return"messageParseFailure";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getMessageRegisterExpected=function(){if(0==arguments.length)return"messageRegisterExpected";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getMessageRegisterUnexpected=function(){if(0==arguments.length)return"messageRegisterUnexpected";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getMessageUnregisterUnexpected=function(){if(0==arguments.length)return"messageUnregisterUnexpected";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getSdpCodecMismatch=function(){if(0==arguments.length)return"sdpCodecMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getSdpSimulcastMismatch=function(){if(0==arguments.length)return"sdpSimulcastMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getSdpStreamMismatch=function(){if(0==arguments.length)return"sdpStreamMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getServerLicenseInvalid=function(){if(0==arguments.length)return"serverLicenseInvalid";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getServerLicenseMissing=function(){if(0==arguments.length)return"serverLicenseMissing";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getServerNoAudioCodecs=function(){if(0==arguments.length)return"serverNoAudioCodecs";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getServerNoMediaServersAvailable=function(){if(0==arguments.length)return"serverNoMediaServersAvailable";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getServerNoVideoCodecs=function(){if(0==arguments.length)return"serverNoVideoCodecs";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getServerUnknownError=function(){if(0==arguments.length)return"serverUnknownError";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getServerUpgradeRequired=function(){if(0==arguments.length)return"serverUpgradeRequired";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getSfuInvalidUpstream=function(){if(0==arguments.length)return"sfuInvalidUpstream";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenApplicationMismatch=function(){if(0==arguments.length)return"tokenApplicationMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenAuthFailure=function(){if(0==arguments.length)return"tokenAuthFailure";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenClientMismatch=function(){if(0==arguments.length)return"tokenClientMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenClientRoleMismatch=function(){if(0==arguments.length)return"tokenClientRoleMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenDeviceMismatch=function(){if(0==arguments.length)return"tokenDeviceMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenExpired=function(){if(0==arguments.length)return"tokenExpired";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenMissing=function(){if(0==arguments.length)return"tokenMissing";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenMissingChannelClaim=function(){if(0==arguments.length)return"tokenMissingChannelClaim";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenParseFailure=function(){if(0==arguments.length)return"tokenParseFailure";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenRegionMismatch=function(){if(0==arguments.length)return"tokenRegionMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType.getTokenUserMismatch=function(){if(0==arguments.length)return"tokenUserMismatch";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ErrorType}();liveswitch.ErrorType=ErrorType}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EventInfo=function(_super){function EventInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchEventInfoInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type=__arguments[0];if((_this=_super.call(this)||this).fmliveswitchEventInfoInit(),fm.liveswitch.Global.equals(type,null))throw new fm.liveswitch.Exception("Type cannot be null.");_this.setTimestamp(fm.liveswitch.UnixTimestamp.getUtcNowMillis()),_this.setOrigin(fm.liveswitch.EventOrigin.getClient()),_this.setType(type)}return _this}return __extends(EventInfo,_super),EventInfo.prototype.getTypeString=function(){return"[fm.liveswitch.EventInfo],"+_super.prototype.getTypeString.call(this)},EventInfo.prototype.fmliveswitchEventInfoInit=function(){this._forced=!1,this._timestamp=0},EventInfo.fromJson=function(eventJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(eventJson,(function(){return new fm.liveswitch.EventInfo}),(function(evt,key,valueJson){evt.deserializeProperties(key,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.fromJsonArray=function(eventJsons){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(eventJsons,fm.liveswitch.EventInfo.fromJson.bind(fm.liveswitch.EventInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.toJson=function(evt){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(evt,(function(obj,jsonObject){obj.serializeProperties(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.toJsonArray=function(events){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(events,fm.liveswitch.EventInfo.toJson.bind(fm.liveswitch.EventInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("id"==_var0){_super.prototype.setId.call(this,fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("timestamp"==_var0){this.setTimestamp(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("origin"==_var0){this.setOrigin(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("type"==_var0){this.setType(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("forced"==_var0){this.setForced(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson));break}if("channel"==_var0){this.setChannel(fm.liveswitch.ChannelInfo.fromJson(valueJson));break}if("client"==_var0){this.setClient(fm.liveswitch.ClientInfo.fromJson(valueJson));break}if("connection"==_var0){this.setConnection(fm.liveswitch.ConnectionInfo.fromJson(valueJson));break}}while(0)},EventInfo.prototype.getChannel=function(){if(0==arguments.length)return this._channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.getClient=function(){if(0==arguments.length)return this._client;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.getConnection=function(){if(0==arguments.length)return this._connection;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.getForced=function(){if(0==arguments.length)return this._forced;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.getOrigin=function(){if(0==arguments.length)return this._origin;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.getTimestamp=function(){if(0==arguments.length)return this._timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(_super.prototype.getId.call(this),null)||(jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(_super.prototype.getId.call(this))),fm.liveswitch.Global.equals(this.getTimestamp(),0)||(jsonObject.timestamp=fm.liveswitch.JsonSerializer.serializeLong(this.getTimestamp())),fm.liveswitch.Global.equals(this.getOrigin(),null)||(jsonObject.origin=fm.liveswitch.JsonSerializer.serializeString(this.getOrigin())),fm.liveswitch.Global.equals(this.getType(),null)||(jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(this.getType())),this.getForced()&&(jsonObject.forced=fm.liveswitch.JsonSerializer.serializeBoolean(this.getForced())),fm.liveswitch.Global.equals(this.getChannel(),null)||(jsonObject.channel=fm.liveswitch.ChannelInfo.toJson(this.getChannel())),fm.liveswitch.Global.equals(this.getClient(),null)||(jsonObject.client=fm.liveswitch.ClientInfo.toJson(this.getClient())),fm.liveswitch.Global.equals(this.getConnection(),null)||(jsonObject.connection=fm.liveswitch.ConnectionInfo.toJson(this.getConnection()))},EventInfo.prototype.setChannel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channel=value},EventInfo.prototype.setClient=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._client=value},EventInfo.prototype.setConnection=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connection=value},EventInfo.prototype.setForced=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._forced=value},EventInfo.prototype.setOrigin=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._origin=value},EventInfo.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timestamp=fm.liveswitch.Global.toInt(value)},EventInfo.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},EventInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.EventInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventInfo}(fm.liveswitch.Info);liveswitch.EventInfo=EventInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var EventOrigin=function(){function EventOrigin(){}return EventOrigin.prototype.getTypeString=function(){return"[fm.liveswitch.EventOrigin]"},EventOrigin.getClient=function(){if(0==arguments.length)return"client";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventOrigin.getGateway=function(){if(0==arguments.length)return"gateway";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventOrigin.getMediaServer=function(){if(0==arguments.length)return"mediaserver";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventOrigin.getSipConnector=function(){if(0==arguments.length)return"sipconnector";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},EventOrigin}();liveswitch.EventOrigin=EventOrigin}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NetworkInfo=function(){function NetworkInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return NetworkInfo.prototype.getTypeString=function(){return"[fm.liveswitch.NetworkInfo]"},NetworkInfo.fromJson=function(networkInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(networkInfoJson,(function(){return new fm.liveswitch.NetworkInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInfo.toJson=function(networkInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(networkInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"iPAddresses")?this.setIPAddresses(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson)):fm.liveswitch.Global.equals(str,"ports")&&this.setPorts(fm.liveswitch.JsonSerializer.deserializeIntegerArray(valueJson)))},NetworkInfo.prototype.getIPAddresses=function(){if(0==arguments.length)return this._ipAddresses;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInfo.prototype.getPorts=function(){if(0==arguments.length)return this._ports;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getIPAddresses(),null)||(jsonObject.iPAddresses=fm.liveswitch.JsonSerializer.serializeStringArray(this.getIPAddresses())),fm.liveswitch.Global.equals(this.getPorts(),null)||(jsonObject.ports=fm.liveswitch.JsonSerializer.serializeIntegerArray(this.getPorts()))},NetworkInfo.prototype.setIPAddresses=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ipAddresses=value},NetworkInfo.prototype.setPorts=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ports=value},NetworkInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.NetworkInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInfo}();liveswitch.NetworkInfo=NetworkInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ExternalNetworkInfo=function(_super){function ExternalNetworkInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ExternalNetworkInfo,_super),ExternalNetworkInfo.prototype.getTypeString=function(){return"[fm.liveswitch.ExternalNetworkInfo],"+_super.prototype.getTypeString.call(this)},ExternalNetworkInfo.fromJson=function(networkInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(networkInfoJson,(function(){return new fm.liveswitch.ExternalNetworkInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExternalNetworkInfo.toJson=function(networkInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(networkInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExternalNetworkInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"publicIPAddress")?this.setPublicIPAddress(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"publicHostname")&&this.setPublicHostname(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))},ExternalNetworkInfo.prototype.getPublicHostname=function(){if(0==arguments.length)return this._publicHostname;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExternalNetworkInfo.prototype.getPublicIPAddress=function(){if(0==arguments.length)return this._publicIPAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ExternalNetworkInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getPublicIPAddress(),null)||(jsonObject.publicIPAddress=fm.liveswitch.JsonSerializer.serializeString(this.getPublicIPAddress())),fm.liveswitch.Global.equals(this.getPublicHostname(),null)||(jsonObject.publicHostname=fm.liveswitch.JsonSerializer.serializeString(this.getPublicHostname()))},ExternalNetworkInfo.prototype.setPublicHostname=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._publicHostname=value},ExternalNetworkInfo.prototype.setPublicIPAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._publicIPAddress=value},ExternalNetworkInfo}(fm.liveswitch.NetworkInfo);liveswitch.ExternalNetworkInfo=ExternalNetworkInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var InternalNetworkInfo=function(_super){function InternalNetworkInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(InternalNetworkInfo,_super),InternalNetworkInfo.prototype.getTypeString=function(){return"[fm.liveswitch.InternalNetworkInfo],"+_super.prototype.getTypeString.call(this)},InternalNetworkInfo.fromJson=function(networkInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(networkInfoJson,(function(){return new fm.liveswitch.InternalNetworkInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalNetworkInfo.toJson=function(networkInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(networkInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InternalNetworkInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson)},InternalNetworkInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject)},InternalNetworkInfo}(fm.liveswitch.NetworkInfo);liveswitch.InternalNetworkInfo=InternalNetworkInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var InvitationStateWrapper=function(){function InvitationStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_67=__arguments[0];this._value=value_67}return InvitationStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.InvitationStateWrapper]"},InvitationStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.InvitationState.Unknown?"Unknown":this._value==fm.liveswitch.InvitationState.Pending?"Pending":this._value==fm.liveswitch.InvitationState.Proceeding?"Proceeding":this._value==fm.liveswitch.InvitationState.Sent?"Sent":this._value==fm.liveswitch.InvitationState.Cancelled?"Cancelled":this._value==fm.liveswitch.InvitationState.Cancelling?"Cancelling":this._value==fm.liveswitch.InvitationState.Rejected?"Rejected":this._value==fm.liveswitch.InvitationState.Accepted?"Accepted":this._value==fm.liveswitch.InvitationState.NotFound?"NotFound":this._value==fm.liveswitch.InvitationState.Busy?"Busy":this._value==fm.liveswitch.InvitationState.NoResponse?"NoResponse":this._value==fm.liveswitch.InvitationState.Invalid?"Invalid":this._value==fm.liveswitch.InvitationState.AlreadyInvited?"AlreadyInvited":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InvitationStateWrapper}();liveswitch.InvitationStateWrapper=InvitationStateWrapper}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var InviteFeedback=function(){function InviteFeedback(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length);else{if(4!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var userId=__arguments[0],protocol=__arguments[1],state=__arguments[2],reason=__arguments[3];this.setUserId(userId),this.setProtocol(protocol),this.setState(state),this.setReason(reason)}}return InviteFeedback.prototype.getTypeString=function(){return"[fm.liveswitch.InviteFeedback]"},InviteFeedback.deserializeState=function(state){if(1==arguments.length){var _var0=state;return"pending"==_var0?fm.liveswitch.InvitationState.Pending:"proceeding"==_var0?fm.liveswitch.InvitationState.Proceeding:"sent"==_var0?fm.liveswitch.InvitationState.Sent:"cancelled"==_var0?fm.liveswitch.InvitationState.Cancelled:"cancelling"==_var0?fm.liveswitch.InvitationState.Cancelling:"rejected"==_var0?fm.liveswitch.InvitationState.Rejected:"accepted"==_var0?fm.liveswitch.InvitationState.Accepted:"notFound"==_var0?fm.liveswitch.InvitationState.NotFound:"busy"==_var0?fm.liveswitch.InvitationState.Busy:"noResponse"==_var0?fm.liveswitch.InvitationState.NoResponse:"invalid"==_var0?fm.liveswitch.InvitationState.Invalid:"alreadyInvited"==_var0?fm.liveswitch.InvitationState.AlreadyInvited:fm.liveswitch.InvitationState.Unknown}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.fromJson=function(feedbackJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(feedbackJson,(function(){return new fm.liveswitch.InviteFeedback}),(function(feedback,key,value){var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"protocol")?feedback.setProtocol(fm.liveswitch.JsonSerializer.deserializeString(value)):fm.liveswitch.Global.equals(str,"userId")?feedback.setUserId(fm.liveswitch.JsonSerializer.deserializeString(value)):fm.liveswitch.Global.equals(str,"state")?feedback.setState(fm.liveswitch.InviteFeedback.deserializeState(fm.liveswitch.JsonSerializer.deserializeString(value))):fm.liveswitch.Global.equals(str,"reason")&&feedback.setReason(fm.liveswitch.JsonSerializer.deserializeString(value)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.serializeState=function(state){if(1==arguments.length){var _var0=state;return _var0==fm.liveswitch.InvitationState.Pending?"pending":_var0==fm.liveswitch.InvitationState.Proceeding?"proceeding":_var0==fm.liveswitch.InvitationState.Sent?"sent":_var0==fm.liveswitch.InvitationState.Cancelled?"cancelled":_var0==fm.liveswitch.InvitationState.Cancelling?"cancelling":_var0==fm.liveswitch.InvitationState.Rejected?"rejected":_var0==fm.liveswitch.InvitationState.Accepted?"accepted":_var0==fm.liveswitch.InvitationState.NotFound?"notFound":_var0==fm.liveswitch.InvitationState.Busy?"busy":_var0==fm.liveswitch.InvitationState.NoResponse?"noResponse":_var0==fm.liveswitch.InvitationState.Invalid?"invalid":_var0==fm.liveswitch.InvitationState.AlreadyInvited?"alreadyInvited":"unknown"}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.toJson=function(feedback){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(feedback,(function(config,dict){fm.liveswitch.Global.equals(config.getProtocol(),null)||(dict.protocol=fm.liveswitch.JsonSerializer.serializeString(config.getProtocol())),fm.liveswitch.Global.equals(config.getUserId(),null)||(dict.userId=fm.liveswitch.JsonSerializer.serializeString(config.getUserId())),fm.liveswitch.Global.equals(config.getReason(),null)||(dict.reason=fm.liveswitch.JsonSerializer.serializeString(config.getReason())),dict.state=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.InviteFeedback.serializeState(config.getState()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.prototype.getProtocol=function(){if(0==arguments.length)return this._protocol;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.prototype.getReason=function(){if(0==arguments.length)return this._reason;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.prototype.getState=function(){if(0==arguments.length)return this._state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback.prototype.setProtocol=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._protocol=value},InviteFeedback.prototype.setReason=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._reason=value},InviteFeedback.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._state=value},InviteFeedback.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},InviteFeedback.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.InviteFeedback.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InviteFeedback}();liveswitch.InviteFeedback=InviteFeedback}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var LogEventInfo=function(_super){function LogEventInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchLogEventInfoInit(),_this}return __extends(LogEventInfo,_super),LogEventInfo.prototype.getTypeString=function(){return"[fm.liveswitch.LogEventInfo],"+_super.prototype.getTypeString.call(this)},LogEventInfo.prototype.fmliveswitchLogEventInfoInit=function(){this._threadId=0},LogEventInfo.fromJson=function(logEventInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(logEventInfoJson,(function(){return new fm.liveswitch.LogEventInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.toJson=function(logEventInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(logEventInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"level")?this.setLevel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"tag")?this.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"scope")?this.setScope(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"message")?this.setMessage(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"exception")?this.setException(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"threadId")&&this.setThreadId(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},LogEventInfo.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.prototype.getLevel=function(){if(0==arguments.length)return this._level;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.prototype.getMessage=function(){if(0==arguments.length)return this._message;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.prototype.getScope=function(){if(0==arguments.length)return this._scope;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.prototype.getTag=function(){if(0==arguments.length)return this._tag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.prototype.getThreadId=function(){if(0==arguments.length)return this._threadId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getLevel(),null)||(jsonObject.level=fm.liveswitch.JsonSerializer.serializeString(this.getLevel())),fm.liveswitch.Global.equals(this.getTag(),null)||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(this.getTag())),fm.liveswitch.Global.equals(this.getScope(),null)||(jsonObject.scope=fm.liveswitch.JsonSerializer.serializeString(this.getScope())),fm.liveswitch.Global.equals(this.getMessage(),null)||(jsonObject.message=fm.liveswitch.JsonSerializer.serializeString(this.getMessage())),fm.liveswitch.Global.equals(this.getException(),null)||(jsonObject.exception=fm.liveswitch.JsonSerializer.serializeString(this.getException())),fm.liveswitch.Global.equals(this.getThreadId(),0)||(jsonObject.threadId=fm.liveswitch.JsonSerializer.serializeLong(this.getThreadId()))},LogEventInfo.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},LogEventInfo.prototype.setLevel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._level=value},LogEventInfo.prototype.setMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._message=value},LogEventInfo.prototype.setScope=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._scope=value},LogEventInfo.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._tag=value},LogEventInfo.prototype.setThreadId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._threadId=fm.liveswitch.Global.toInt(value)},LogEventInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.LogEventInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},LogEventInfo}(fm.liveswitch.Info);liveswitch.LogEventInfo=LogEventInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaInfo=function(_super){function MediaInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(MediaInfo,_super),MediaInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MediaInfo],"+_super.prototype.getTypeString.call(this)},MediaInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson)},MediaInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject)},MediaInfo}(fm.liveswitch.Info);liveswitch.MediaInfo=MediaInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaReceiverReport=function(_super){function MediaReceiverReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaReceiverReportInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this,stats,lastStats)||this).fmliveswitchMediaReceiverReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setBytesReceived(fm.liveswitch.Report.processLong(stats.getBytesReceived(),flag?0:lastStats.getBytesReceived())),_this.setPacketsReceived(fm.liveswitch.Report.processLong(stats.getPacketsReceived(),flag?0:lastStats.getPacketsReceived())),_this.setPacketsDiscarded(fm.liveswitch.Report.processLong(stats.getPacketsDiscarded(),flag?0:lastStats.getPacketsDiscarded())),_this.setPacketsDuplicated(fm.liveswitch.Report.processLong(stats.getPacketsDuplicated(),flag?0:lastStats.getPacketsDuplicated())),_this.setPacketsRepaired(fm.liveswitch.Report.processLong(stats.getPacketsRepaired(),flag?0:lastStats.getPacketsRepaired())),_this.setPacketsLost(fm.liveswitch.Report.processLong(stats.getPacketsLost(),flag?0:lastStats.getPacketsLost())),_this.setJitter(fm.liveswitch.Report.processLong(stats.getJitter(),flag?0:lastStats.getJitter()))}return _this}return __extends(MediaReceiverReport,_super),MediaReceiverReport.prototype.getTypeString=function(){return"[fm.liveswitch.MediaReceiverReport],"+_super.prototype.getTypeString.call(this)},MediaReceiverReport.prototype.fmliveswitchMediaReceiverReportInit=function(){this._bytesReceived=0,this._jitter=0,this._packetsDiscarded=0,this._packetsDuplicated=0,this._packetsLost=0,this._packetsReceived=0,this._packetsRepaired=0},MediaReceiverReport.fromJson=function(mediaReceiverReportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaReceiverReportJson,(function(){return new fm.liveswitch.MediaReceiverReport}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.fromJsonArray=function(mediaReceiverReportsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaReceiverReportsJson,fm.liveswitch.MediaReceiverReport.fromJson.bind(fm.liveswitch.MediaReceiverReport));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.toJson=function(mediaReceiverReport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaReceiverReport,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.toJsonArray=function(mediaReceiverReports){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaReceiverReports,fm.liveswitch.MediaReceiverReport.toJson.bind(fm.liveswitch.MediaReceiverReport));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var _var0=key;do{if("bytesReceived"==_var0){this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsReceived"==_var0){this.setPacketsReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsDiscarded"==_var0){this.setPacketsDiscarded(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsDuplicated"==_var0){this.setPacketsDuplicated(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsRepaired"==_var0){this.setPacketsRepaired(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("packetsLost"==_var0){this.setPacketsLost(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}if("jitter"==_var0){this.setJitter(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},MediaReceiverReport.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.getJitter=function(){if(0==arguments.length)return this._jitter;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.getPacketsDiscarded=function(){if(0==arguments.length)return this._packetsDiscarded;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.getPacketsDuplicated=function(){if(0==arguments.length)return this._packetsDuplicated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.getPacketsLost=function(){if(0==arguments.length)return this._packetsLost;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.getPacketsReceived=function(){if(0==arguments.length)return this._packetsReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.getPacketsRepaired=function(){if(0==arguments.length)return this._packetsRepaired;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getBytesReceived()&&(jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived())),null!=this.getPacketsReceived()&&(jsonObject.packetsReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsReceived())),null!=this.getPacketsDiscarded()&&(jsonObject.packetsDiscarded=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsDiscarded())),null!=this.getPacketsDuplicated()&&(jsonObject.packetsDuplicated=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsDuplicated())),null!=this.getPacketsRepaired()&&(jsonObject.packetsRepaired=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsRepaired())),null!=this.getPacketsLost()&&(jsonObject.packetsLost=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsLost())),null!=this.getJitter()&&(jsonObject.jitter=fm.liveswitch.JsonSerializer.serializeLong(this.getJitter()))},MediaReceiverReport.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesReceived=value},MediaReceiverReport.prototype.setJitter=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._jitter=value},MediaReceiverReport.prototype.setPacketsDiscarded=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._packetsDiscarded=value},MediaReceiverReport.prototype.setPacketsDuplicated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._packetsDuplicated=value},MediaReceiverReport.prototype.setPacketsLost=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._packetsLost=value},MediaReceiverReport.prototype.setPacketsReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._packetsReceived=value},MediaReceiverReport.prototype.setPacketsRepaired=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._packetsRepaired=value},MediaReceiverReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaReceiverReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaReceiverReport}(fm.liveswitch.MediaComponentReport);liveswitch.MediaReceiverReport=MediaReceiverReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MediaSenderReport=function(_super){function MediaSenderReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMediaSenderReportInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this,stats,lastStats)||this).fmliveswitchMediaSenderReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setBytesSent(fm.liveswitch.Report.processLong(stats.getBytesSent(),flag?0:lastStats.getBytesSent())),_this.setPacketsSent(fm.liveswitch.Report.processLong(stats.getPacketsSent(),flag?0:lastStats.getPacketsSent())),_this.setRoundTripTime(fm.liveswitch.Report.processInteger(stats.getRoundTripTime(),flag?0:lastStats.getRoundTripTime()))}return _this}return __extends(MediaSenderReport,_super),MediaSenderReport.prototype.getTypeString=function(){return"[fm.liveswitch.MediaSenderReport],"+_super.prototype.getTypeString.call(this)},MediaSenderReport.prototype.fmliveswitchMediaSenderReportInit=function(){this._bytesSent=0,this._packetsSent=0,this._roundTripTime=0},MediaSenderReport.fromJson=function(mediaSenderReportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(mediaSenderReportJson,(function(){return new fm.liveswitch.MediaSenderReport}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport.fromJsonArray=function(mediaSenderReportsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(mediaSenderReportsJson,fm.liveswitch.MediaSenderReport.fromJson.bind(fm.liveswitch.MediaSenderReport));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport.toJson=function(mediaSenderReport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(mediaSenderReport,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport.toJsonArray=function(mediaSenderReports){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(mediaSenderReports,fm.liveswitch.MediaSenderReport.toJson.bind(fm.liveswitch.MediaSenderReport));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"bytesSent")?this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"packetsSent")?this.setPacketsSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"roundTripTime")&&this.setRoundTripTime(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))},MediaSenderReport.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport.prototype.getPacketsSent=function(){if(0==arguments.length)return this._packetsSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport.prototype.getRoundTripTime=function(){if(0==arguments.length)return this._roundTripTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getBytesSent()&&(jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent())),null!=this.getPacketsSent()&&(jsonObject.packetsSent=fm.liveswitch.JsonSerializer.serializeLong(this.getPacketsSent())),null!=this.getRoundTripTime()&&(jsonObject.roundTripTime=fm.liveswitch.JsonSerializer.serializeInteger(this.getRoundTripTime()))},MediaSenderReport.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesSent=value},MediaSenderReport.prototype.setPacketsSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._packetsSent=value},MediaSenderReport.prototype.setRoundTripTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._roundTripTime=value},MediaSenderReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MediaSenderReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MediaSenderReport}(fm.liveswitch.MediaComponentReport);liveswitch.MediaSenderReport=MediaSenderReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Message=function(_super){function Message(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchMessageInit();else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var type=__arguments[0];(_this=_super.call(this)||this).fmliveswitchMessageInit(),_this.setType(type),_this.setApiVersion(fm.liveswitch.Build.getVersion())}return _this}return __extends(Message,_super),Message.prototype.getTypeString=function(){return"[fm.liveswitch.Message],"+_super.prototype.getTypeString.call(this)},Message.prototype.fmliveswitchMessageInit=function(){this.__timestamp=0},Message.createBitrateNotificationMessage=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.BitrateNotification]"))){var bitrateNotification=arguments[0];return fm.liveswitch.Message.createBitrateNotificationMessage([bitrateNotification])}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.BitrateNotification]")))){var bitrateNotifications=arguments[0],message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getBitrateNotification());return message.setPayload(fm.liveswitch.BitrateNotification.toJsonArray(bitrateNotifications)),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createBitrateRequestMessage=function(){if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isObjectType(arguments[0],"[fm.liveswitch.BitrateRequest]"))){var bitrateRequest=arguments[0];return fm.liveswitch.Message.createBitrateRequestMessage([bitrateRequest])}if(1==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isArray(arguments[0])&&(0==arguments[0].length||fm.liveswitch.Util.isNullOrUndefined(arguments[0][0])||fm.liveswitch.Util.isObjectType(arguments[0][0],"[fm.liveswitch.BitrateRequest]")))){var bitrateRequests=arguments[0],message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getBitrateRequest());return message.setPayload(fm.liveswitch.BitrateRequest.toJsonArray(bitrateRequests)),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createCancelInviteMessage=function(userId,protocol){if(2==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getCancelInvite());return message.setRemoteUserId(userId),message.setPayload(protocol),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createCandidateMessage=function(candidateJson){if(1==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getCandidate());return message.setPayload(candidateJson),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createCloseMessage=function(){if(0==arguments.length)return new fm.liveswitch.Message(fm.liveswitch.MessageType.getClose());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createDtmfTonesMessage=function(dtmfTones){if(1==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getDtmfTones());return message.setPayload(fm.liveswitch.dtmf.Tone.toJsonArray(dtmfTones)),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createErrorMessage=function(){if(1==arguments.length){var error=arguments[0];return(message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getError())).setPayload(fm.liveswitch.JsonSerializer.serializeString(error)),message}if(4==arguments.length){error=arguments[0];var message,remoteUserId=arguments[1],remoteDeviceId=arguments[2],remoteClientId=arguments[3];return(message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getError())).setPayload(fm.liveswitch.JsonSerializer.serializeString(error)),message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createEventMessage=function(eventInfoJson){if(1==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getEvent());return message.setPayload(eventInfoJson),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createIceServersMessage=function(){if(0==arguments.length)return new fm.liveswitch.Message(fm.liveswitch.MessageType.getIceServers());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createInviteMessage=function(userId,protocol){if(2==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getInvite());return message.setRemoteUserId(userId),message.setPayload(protocol),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createJoinMessage=function(channelId,token){if(2==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getJoin());return message.setChannelId(channelId),message.setToken(token),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createKeyFrameRequestMessage=function(synchronizationSources){if(1==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getKeyFrameRequest());return message.setPayload(fm.liveswitch.JsonSerializer.serializeLongArray(synchronizationSources)),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createKickMessage=function(channelId,clientId){if(2==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getKick());return message.setChannelId(channelId),message.setRemoteClientId(clientId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createLeaveMessage=function(channelId,channelReport){if(2==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getLeave());return message.setChannelId(channelId),message.setChannelReports(fm.liveswitch.Global.equals(channelReport,null)?null:[channelReport]),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createMcuOfferMessage=function(tag,offerJson){if(2==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getOffer());return message.setConnectionType(fm.liveswitch.ConnectionType.getMcu()),message.setConnectionTag(tag),message.setPayload(offerJson),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createMessageMessage=function(){if(1==arguments.length){var message=arguments[0];return fm.liveswitch.Message.createMessageMessage(message,null)}if(2==arguments.length){message=arguments[0];var remoteUserId=arguments[1];return fm.liveswitch.Message.createMessageMessage(message,remoteUserId,null)}if(3==arguments.length){message=arguments[0],remoteUserId=arguments[1];var remoteDeviceId=arguments[2];return fm.liveswitch.Message.createMessageMessage(message,remoteUserId,remoteDeviceId,null)}if(4==arguments.length){message=arguments[0],remoteUserId=arguments[1],remoteDeviceId=arguments[2];var remoteClientId=arguments[3],message2=new fm.liveswitch.Message(fm.liveswitch.MessageType.getMessage());return message2.setPayload(fm.liveswitch.JsonSerializer.serializeString(message)),message2.setRemoteUserId(remoteUserId),message2.setRemoteDeviceId(remoteDeviceId),message2.setRemoteClientId(remoteClientId),message2}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createPeerAnswerMessage=function(tag,answerJson,remoteUserId,remoteDeviceId,remoteClientId){if(5==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getAnswer());return message.setConnectionType(fm.liveswitch.ConnectionType.getPeer()),message.setConnectionTag(tag),message.setPayload(answerJson),message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createPeerCandidateMessage=function(candidateJson,remoteUserId,remoteDeviceId,remoteClientId){if(4==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getCandidate());return message.setPayload(candidateJson),message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createPeerCloseMessage=function(remoteUserId,remoteDeviceId,remoteClientId){if(3==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getClose());return message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createPeerOfferMessage=function(tag,offerJson,remoteUserId,remoteDeviceId,remoteClientId){if(5==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getOffer());return message.setConnectionType(fm.liveswitch.ConnectionType.getPeer()),message.setConnectionTag(tag),message.setPayload(offerJson),message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createPeerRejectMessage=function(remoteUserId,remoteDeviceId,remoteClientId,remoteConnectionId){if(4==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getReject());return message.setConnectionType(fm.liveswitch.ConnectionType.getPeer()),message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message.setRemoteConnectionId(remoteConnectionId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createRegisterMessage=function(applicationId,userId,userAlias,deviceId,deviceAlias,clientId,clientTag,clientRoles,region,token){if(10==arguments.length){var message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getRegister());return message.setApplicationId(applicationId),message.setUserId(userId),message.setUserAlias(userAlias),message.setDeviceId(deviceId),message.setDeviceAlias(deviceAlias),message.setClientId(clientId),message.setClientTag(clientTag),message.setClientRoles(clientRoles),message.setRegion(region),message.setToken(token),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createSfuOfferMessage=function(){if(2==arguments.length){var tag=arguments[0],offerJson=arguments[1];return(message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getOffer())).setConnectionType(fm.liveswitch.ConnectionType.getSfu()),message.setConnectionTag(tag),message.setPayload(offerJson),message}if(3==arguments.length){tag=arguments[0],offerJson=arguments[1];var remoteMediaId=arguments[2];return(message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getOffer())).setConnectionType(fm.liveswitch.ConnectionType.getSfu()),message.setConnectionTag(tag),message.setPayload(offerJson),message.setRemoteMediaId(remoteMediaId),message}if(6==arguments.length){tag=arguments[0],offerJson=arguments[1];var message,remoteUserId=arguments[2],remoteDeviceId=arguments[3],remoteClientId=arguments[4],remoteConnectionId=arguments[5];return(message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getOffer())).setConnectionType(fm.liveswitch.ConnectionType.getSfu()),message.setConnectionTag(tag),message.setPayload(offerJson),message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message.setRemoteConnectionId(remoteConnectionId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createUnregisterMessage=function(){if(0==arguments.length)return new fm.liveswitch.Message(fm.liveswitch.MessageType.getUnregister());if(1==arguments.length){var channelReports=arguments[0],message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getUnregister());return message.setChannelReports(channelReports),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.createUpdateMessage=function(){if(1==arguments.length){var configJson=arguments[0];return fm.liveswitch.Message.createUpdateMessage(configJson,null,null,null)}if(4==arguments.length){configJson=arguments[0];var remoteUserId=arguments[1],remoteDeviceId=arguments[2],remoteClientId=arguments[3],message=new fm.liveswitch.Message(fm.liveswitch.MessageType.getUpdate());return message.setPayload(configJson),message.setRemoteUserId(remoteUserId),message.setRemoteDeviceId(remoteDeviceId),message.setRemoteClientId(remoteClientId),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.fromJson=function(messageJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(messageJson,(function(){return new fm.liveswitch.Message(null)}),(function(message,name,valueJson){message.propertyFromJson(name,valueJson)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.fromJsonArray=function(messagesJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(messagesJson,fm.liveswitch.Message.fromJson.bind(fm.liveswitch.Message));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.toJson=function(message){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(message,(function(m,jsonObject){m.propertiesToJson(jsonObject)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.toJsonArray=function(messages){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(messages,fm.liveswitch.Message.toJson.bind(fm.liveswitch.Message));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.clone=function(){if(0==arguments.length){var clientRoles=this.getClientRoles(),strArray2=null;if(!fm.liveswitch.Global.equals(clientRoles,null)){strArray2=new Array(clientRoles.length);for(var i=0;i<strArray2.length;i++)strArray2[i]=clientRoles[i]}var message=new fm.liveswitch.Message;return message.setApiVersion(this.getApiVersion()),message.setApplicationId(this.getApplicationId()),message.setChannelId(this.getChannelId()),message.setClientId(this.getClientId()),message.setClientTag(this.getClientTag()),message.setClientRoles(strArray2),message.setConnectionId(this.getConnectionId()),message.setConnectionTag(this.getConnectionTag()),message.setConnectionType(this.getConnectionType()),message.setConnectorId(this.getConnectorId()),message.setDeviceAlias(this.getDeviceAlias()),message.setDeviceId(this.getDeviceId()),message.setTimestamp(this.getTimestamp()),message.setMediaServerId(this.getMediaServerId()),message.setPreferredMediaServerId(this.getPreferredMediaServerId()),message.setMediaId(this.getMediaId()),message.setPayload(this.getPayload()),message.setRemoteClientId(this.getRemoteClientId()),message.setRemoteConnectionId(this.getRemoteConnectionId()),message.setRemoteDeviceId(this.getRemoteDeviceId()),message.setRemoteMediaId(this.getRemoteMediaId()),message.setRemoteUserId(this.getRemoteUserId()),message.setRegion(this.getRegion()),message.setToken(this.getToken()),message.setType(this.getType()),message.setUserAlias(this.getUserAlias()),message.setUserId(this.getUserId()),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getApiServiceId=function(){if(0==arguments.length)return this.__apiServiceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getApiVersion=function(){if(0==arguments.length)return this.__apiVersion;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getApplicationId=function(){if(0==arguments.length)return this.__applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getChannelId=function(){if(0==arguments.length)return this.__channelId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getChannelReports=function(){if(0==arguments.length)return this.__channelReports;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getClientId=function(){if(0==arguments.length)return this.__clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getClientRoles=function(){if(0==arguments.length)return this.__clientRoles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getClientTag=function(){if(0==arguments.length)return this.__clientTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getConnectionId=function(){if(0==arguments.length)return this.__connectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getConnectionTag=function(){if(0==arguments.length)return this.__connectionTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getConnectionType=function(){if(0==arguments.length)return this.__connectionType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getConnectorId=function(){if(0==arguments.length)return this.__connectorId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getDeviceAlias=function(){if(0==arguments.length)return this.__deviceAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getDeviceId=function(){if(0==arguments.length)return this.__deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getMediaId=function(){if(0==arguments.length)return this.__mediaId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getMediaServerId=function(){if(0==arguments.length)return this.__mediaServerId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getPayload=function(){if(0==arguments.length)return this.__payload;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getPreferredMediaServerId=function(){if(0==arguments.length)return this.__preferredMediaServerId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getRegion=function(){if(0==arguments.length)return this.__region;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getRemoteClientId=function(){if(0==arguments.length)return this.__remoteClientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getRemoteConnectionId=function(){if(0==arguments.length)return this.__remoteConnectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getRemoteDeviceId=function(){if(0==arguments.length)return this.__remoteDeviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getRemoteMediaId=function(){if(0==arguments.length)return this.__remoteMediaId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getRemoteUserId=function(){if(0==arguments.length)return this.__remoteUserId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getTimestamp=function(){if(0==arguments.length)return this.__timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getToken=function(){if(0==arguments.length)return this.__token;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getTransactionId=function(){if(0==arguments.length)return this.__transactionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getType=function(){if(0==arguments.length)return this.__type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getUserAlias=function(){if(0==arguments.length)return this.__userAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getUserId=function(){if(0==arguments.length)return this.__userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isError=function(errorType){if(1==arguments.length)return!!fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.MessageType.getError())&&fm.liveswitch.Global.equals(fm.liveswitch.JsonSerializer.deserializeString(this.getPayload()),errorType);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.propertiesToJson=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(this.getTransactionId(),null)||(jsonObject.transactionId=fm.liveswitch.JsonSerializer.serializeString(this.getTransactionId())),fm.liveswitch.Global.equals(this.getApiServiceId(),null)||(jsonObject.apiServiceId=fm.liveswitch.JsonSerializer.serializeString(this.getApiServiceId())),fm.liveswitch.Global.equals(this.getMediaServerId(),null)||(jsonObject.mediaServerId=fm.liveswitch.JsonSerializer.serializeString(this.getMediaServerId())),fm.liveswitch.Global.equals(this.getPreferredMediaServerId(),null)||(jsonObject.preferredMediaServerId=fm.liveswitch.JsonSerializer.serializeString(this.getPreferredMediaServerId())),fm.liveswitch.Global.equals(this.getConnectorId(),null)||(jsonObject.connectorId=fm.liveswitch.JsonSerializer.serializeString(this.getConnectorId())),fm.liveswitch.Global.equals(this.getApplicationId(),null)||(jsonObject.applicationId=fm.liveswitch.JsonSerializer.serializeString(this.getApplicationId())),fm.liveswitch.Global.equals(this.getChannelId(),null)||(jsonObject.channelId=fm.liveswitch.JsonSerializer.serializeString(this.getChannelId())),fm.liveswitch.Global.equals(this.getChannelReports(),null)||(jsonObject.channelReports=fm.liveswitch.ChannelReport.toJsonArray(this.getChannelReports())),fm.liveswitch.Global.equals(this.getUserId(),null)||(jsonObject.userId=fm.liveswitch.JsonSerializer.serializeString(this.getUserId())),fm.liveswitch.Global.equals(this.getUserAlias(),null)||(jsonObject.userAlias=fm.liveswitch.JsonSerializer.serializeString(this.getUserAlias())),fm.liveswitch.Global.equals(this.getDeviceId(),null)||(jsonObject.deviceId=fm.liveswitch.JsonSerializer.serializeString(this.getDeviceId())),fm.liveswitch.Global.equals(this.getDeviceAlias(),null)||(jsonObject.deviceAlias=fm.liveswitch.JsonSerializer.serializeString(this.getDeviceAlias())),fm.liveswitch.Global.equals(this.getClientId(),null)||(jsonObject.clientId=fm.liveswitch.JsonSerializer.serializeString(this.getClientId())),fm.liveswitch.Global.equals(this.getClientTag(),null)||(jsonObject.clientTag=fm.liveswitch.JsonSerializer.serializeString(this.getClientTag())),fm.liveswitch.Global.equals(this.getClientRoles(),null)||(jsonObject.clientRoles=fm.liveswitch.JsonSerializer.serializeStringArray(this.getClientRoles())),fm.liveswitch.Global.equals(this.getConnectionId(),null)||(jsonObject.connectionId=fm.liveswitch.JsonSerializer.serializeString(this.getConnectionId())),fm.liveswitch.Global.equals(this.getConnectionTag(),null)||(jsonObject.connectionTag=fm.liveswitch.JsonSerializer.serializeString(this.getConnectionTag())),fm.liveswitch.Global.equals(this.getConnectionType(),null)||(jsonObject.connectionType=fm.liveswitch.JsonSerializer.serializeString(this.getConnectionType())),fm.liveswitch.Global.equals(this.getMediaId(),null)||(jsonObject.mediaId=fm.liveswitch.JsonSerializer.serializeString(this.getMediaId())),fm.liveswitch.Global.equals(this.getToken(),null)||(jsonObject.token=fm.liveswitch.JsonSerializer.serializeString(this.getToken())),fm.liveswitch.Global.equals(this.getType(),null)||(jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(this.getType())),fm.liveswitch.Global.equals(this.getPayload(),null)||(jsonObject.payload=fm.liveswitch.JsonSerializer.serializeString(this.getPayload())),fm.liveswitch.Global.equals(this.getRemoteUserId(),null)||(jsonObject.remoteUserId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteUserId())),fm.liveswitch.Global.equals(this.getRemoteDeviceId(),null)||(jsonObject.remoteDeviceId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteDeviceId())),fm.liveswitch.Global.equals(this.getRemoteClientId(),null)||(jsonObject.remoteClientId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteClientId())),fm.liveswitch.Global.equals(this.getRemoteConnectionId(),null)||(jsonObject.remoteConnectionId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteConnectionId())),fm.liveswitch.Global.equals(this.getRemoteMediaId(),null)||(jsonObject.remoteMediaId=fm.liveswitch.JsonSerializer.serializeString(this.getRemoteMediaId())),fm.liveswitch.Global.equals(this.getRegion(),null)||(jsonObject.region=fm.liveswitch.JsonSerializer.serializeString(this.getRegion())),fm.liveswitch.Global.equals(this.getApiVersion(),null)||(jsonObject.apiVersion=fm.liveswitch.JsonSerializer.serializeString(this.getApiVersion()))},Message.prototype.propertyFromJson=function(name,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var _var0=name;do{if("transactionId"==_var0){this.setTransactionId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("apiServiceId"==_var0){this.setApiServiceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("mediaServerId"==_var0){this.setMediaServerId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("preferredMediaServerId"==_var0){this.setPreferredMediaServerId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("connectorId"==_var0){this.setConnectorId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("applicationId"==_var0){this.setApplicationId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("channelId"==_var0){this.setChannelId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("channelReports"==_var0){this.setChannelReports(fm.liveswitch.ChannelReport.fromJsonArray(valueJson));break}if("userId"==_var0){this.setUserId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("userAlias"==_var0){this.setUserAlias(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("deviceId"==_var0){this.setDeviceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("deviceAlias"==_var0){this.setDeviceAlias(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientId"==_var0){this.setClientId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientTag"==_var0){this.setClientTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientRoles"==_var0){this.setClientRoles(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("connectionId"==_var0){this.setConnectionId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("connectionTag"==_var0){this.setConnectionTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("connectionType"==_var0){this.setConnectionType(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("mediaId"==_var0){this.setMediaId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("token"==_var0){this.setToken(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("type"==_var0){this.setType(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("payload"==_var0){this.setPayload(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteUserId"==_var0){this.setRemoteUserId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteDeviceId"==_var0){this.setRemoteDeviceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteClientId"==_var0){this.setRemoteClientId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteConnectionId"==_var0){this.setRemoteConnectionId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("remoteMediaId"==_var0){this.setRemoteMediaId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("region"==_var0){this.setRegion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("apiVersion"==_var0){this.setApiVersion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("timestamp"==_var0){this.setTimestamp(fm.liveswitch.JsonSerializer.deserializeLong(valueJson));break}}while(0)},Message.prototype.setApiServiceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__apiServiceId=this.updateString(this.__apiServiceId,value)},Message.prototype.setApiVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__apiVersion=this.updateString(this.__apiVersion,value)},Message.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__applicationId=this.updateString(this.__applicationId,value)},Message.prototype.setChannelId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__channelId=this.updateString(this.__channelId,value)},Message.prototype.setChannelReports=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__channelReports=this.updateChannelReportArray(this.__channelReports,value)},Message.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__clientId=this.updateString(this.__clientId,value)},Message.prototype.setClientRoles=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__clientRoles=this.updateStringArray(this.__clientRoles,value)},Message.prototype.setClientTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__clientTag=this.updateString(this.__clientTag,value)},Message.prototype.setConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__connectionId=this.updateString(this.__connectionId,value)},Message.prototype.setConnectionTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__connectionTag=this.updateString(this.__connectionTag,value)},Message.prototype.setConnectionType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__connectionType=this.updateString(this.__connectionType,value)},Message.prototype.setConnectorId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__connectorId=this.updateString(this.__connectorId,value)},Message.prototype.setDeviceAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__deviceAlias=this.updateString(this.__deviceAlias,value)},Message.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__deviceId=this.updateString(this.__deviceId,value)},Message.prototype.setMediaId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__mediaId=this.updateString(this.__mediaId,value)},Message.prototype.setMediaServerId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__mediaServerId=this.updateString(this.__mediaServerId,value)},Message.prototype.setPayload=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__payload=this.updateString(this.__payload,value)},Message.prototype.setPreferredMediaServerId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__preferredMediaServerId=this.updateString(this.__preferredMediaServerId,value)},Message.prototype.setRegion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__region=this.updateString(this.__region,value)},Message.prototype.setRemoteClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__remoteClientId=this.updateString(this.__remoteClientId,value)},Message.prototype.setRemoteConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__remoteConnectionId=this.updateString(this.__remoteConnectionId,value)},Message.prototype.setRemoteDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__remoteDeviceId=this.updateString(this.__remoteDeviceId,value)},Message.prototype.setRemoteMediaId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__remoteMediaId=this.updateString(this.__remoteMediaId,value)},Message.prototype.setRemoteUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__remoteUserId=this.updateString(this.__remoteUserId,value)},Message.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this.__timestamp=fm.liveswitch.Global.toInt(this.updateLong(this.__timestamp,value))},Message.prototype.setToken=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__token=this.updateString(this.__token,value)},Message.prototype.setTransactionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__transactionId=this.updateString(this.__transactionId,value)},Message.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__type=this.updateString(this.__type,value)},Message.prototype.setUserAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__userAlias=this.updateString(this.__userAlias,value)},Message.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__userId=this.updateString(this.__userId,value)},Message.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__json,null)&&(this.__json=fm.liveswitch.Message.toJson(this)),this.__json;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.updateChannelReportArray=function(oldValue,newValue){if(2==arguments.length){if(!fm.liveswitch.Global.equals(oldValue,null)||!fm.liveswitch.Global.equals(newValue,null))if(fm.liveswitch.Global.equals(oldValue,null)&&!fm.liveswitch.Global.equals(newValue,null)||!fm.liveswitch.Global.equals(oldValue,null)&&!fm.liveswitch.Global.equals(newValue,null))this.__json=null;else if(fm.liveswitch.Global.equals(oldValue.length,newValue.length)){for(var i=0;i<oldValue.length;i++)if(fm.liveswitch.Global.equals(oldValue[i],null)||fm.liveswitch.Global.equals(newValue[i],null)||!oldValue[i].isEquivalent(newValue[i]))return this.__json=null,newValue}else this.__json=null;return newValue}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.updateLong=function(oldValue,newValue){if(2==arguments.length)return oldValue=fm.liveswitch.Global.toInt(arguments[0]),newValue=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(oldValue,newValue)||(this.__json=null),newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.updateNullableDouble=function(oldValue,newValue,precision){if(3==arguments.length)return precision=fm.liveswitch.Global.toInt(arguments[2]),null==oldValue&&null==newValue||(null==oldValue&&null!=newValue||null!=oldValue&&null==newValue||fm.liveswitch.MathAssistant.abs(oldValue-newValue)>fm.liveswitch.MathAssistant.pow(10,-1*precision))&&(this.__json=null),newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.updateObject=function(oldValue,newValue){if(2==arguments.length)return fm.liveswitch.Global.equals(oldValue,newValue)||(this.__json=null),newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.updateString=function(oldValue,newValue){if(2==arguments.length)return fm.liveswitch.Global.equals(oldValue,newValue)||(this.__json=null),newValue;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.updateStringArray=function(oldValue,newValue){if(2==arguments.length){if(!fm.liveswitch.Global.equals(oldValue,null)||!fm.liveswitch.Global.equals(newValue,null))if(fm.liveswitch.Global.equals(oldValue,null)&&!fm.liveswitch.Global.equals(newValue,null)||!fm.liveswitch.Global.equals(oldValue,null)&&!fm.liveswitch.Global.equals(newValue,null))this.__json=null;else if(fm.liveswitch.Global.equals(oldValue.length,newValue.length)){for(var i=0;i<oldValue.length;i++)if(fm.liveswitch.Global.equals(oldValue[i],null)||fm.liveswitch.Global.equals(newValue[i],null)||!fm.liveswitch.Global.equals(oldValue[i],newValue[i]))return this.__json=null,newValue}else this.__json=null;return newValue}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message}(fm.liveswitch.Dynamic);liveswitch.Message=Message}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MessageInfo=function(_super){function MessageInfo(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(MessageInfo,_super),MessageInfo.prototype.getTypeString=function(){return"[fm.liveswitch.MessageInfo],"+_super.prototype.getTypeString.call(this)},MessageInfo.fromJson=function(messageInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(messageInfoJson,(function(){return new fm.liveswitch.MessageInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageInfo.toJson=function(messageInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(messageInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"userId")?this.setUserId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"deviceId")?this.setDeviceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"clientId")?this.setClientId(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"message")&&this.setMessage(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))},MessageInfo.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageInfo.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageInfo.prototype.getMessage=function(){if(0==arguments.length)return this._message;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageInfo.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getUserId(),null)||(jsonObject.userId=fm.liveswitch.JsonSerializer.serializeString(this.getUserId())),fm.liveswitch.Global.equals(this.getDeviceId(),null)||(jsonObject.deviceId=fm.liveswitch.JsonSerializer.serializeString(this.getDeviceId())),fm.liveswitch.Global.equals(this.getClientId(),null)||(jsonObject.clientId=fm.liveswitch.JsonSerializer.serializeString(this.getClientId())),fm.liveswitch.Global.equals(this.getMessage(),null)||(jsonObject.message=fm.liveswitch.JsonSerializer.serializeString(this.getMessage()))},MessageInfo.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},MessageInfo.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},MessageInfo.prototype.setMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._message=value},MessageInfo.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},MessageInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.MessageInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageInfo}(fm.liveswitch.Info);liveswitch.MessageInfo=MessageInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MessageType=function(){function MessageType(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return MessageType.prototype.getTypeString=function(){return"[fm.liveswitch.MessageType]"},MessageType.getAnswer=function(){if(0==arguments.length)return"answer";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getBitrateNotification=function(){if(0==arguments.length)return"bitrateNotification";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getBitrateRequest=function(){if(0==arguments.length)return"bitrateRequest";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getCancelInvite=function(){if(0==arguments.length)return"cancelInvite";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getCandidate=function(){if(0==arguments.length)return"candidate";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getClose=function(){if(0==arguments.length)return"close";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getDtmfTones=function(){if(0==arguments.length)return"dtmfTones";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getError=function(){if(0==arguments.length)return"error";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getEvent=function(){if(0==arguments.length)return"event";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getFail=function(){if(0==arguments.length)return"fail";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getIceServers=function(){if(0==arguments.length)return"iceServers";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getInvite=function(){if(0==arguments.length)return"invite";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getInviteFeedback=function(){if(0==arguments.length)return"inviteFeedback";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getJoin=function(){if(0==arguments.length)return"join";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getKeyFrameRequest=function(){if(0==arguments.length)return"keyFrameRequest";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getKick=function(){if(0==arguments.length)return"kick";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getLeave=function(){if(0==arguments.length)return"leave";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getMcuVideoLayout=function(){if(0==arguments.length)return"mcuVideoLayout";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getMessage=function(){if(0==arguments.length)return"message";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getNotifyJoin=function(){if(0==arguments.length)return"notifyJoin";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getNotifyLeave=function(){if(0==arguments.length)return"notifyLeave";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getNotifyUpstreamClose=function(){if(0==arguments.length)return"notifyUpstreamClose";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getNotifyUpstreamOpen=function(){if(0==arguments.length)return"notifyUpstreamOpen";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getNotifyUpstreamUpdate=function(){if(0==arguments.length)return"notifyUpstreamUpdate";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getOffer=function(){if(0==arguments.length)return"offer";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getRecord=function(){if(0==arguments.length)return"record";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getRegister=function(){if(0==arguments.length)return"register";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getReject=function(){if(0==arguments.length)return"reject";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getUnregister=function(){if(0==arguments.length)return"unregister";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType.getUpdate=function(){if(0==arguments.length)return"update";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageType}();liveswitch.MessageType=MessageType}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var MixerReport=function(_super){function MixerReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchMixerReportInit(),_this}return __extends(MixerReport,_super),MixerReport.prototype.getTypeString=function(){return"[fm.liveswitch.MixerReport],"+_super.prototype.getTypeString.call(this)},MixerReport.prototype.fmliveswitchMixerReportInit=function(){this._disabled=!1,this._outputFrameRate=0,this._outputHeight=0,this._outputWidth=0},MixerReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"disabled")?this.setDisabled(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)):fm.liveswitch.Global.equals(str,"inputFormat")?this.setInputFormat(fm.liveswitch.FormatInfo.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"outputFormat")?this.setOutputFormat(fm.liveswitch.FormatInfo.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"outputWidth")?this.setOutputWidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"outputHeight")?this.setOutputHeight(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"outputFrameRate")&&this.setOutputFrameRate(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))},MixerReport.prototype.getDisabled=function(){if(0==arguments.length)return this._disabled;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MixerReport.prototype.getInputFormat=function(){if(0==arguments.length)return this._inputFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MixerReport.prototype.getOutputFormat=function(){if(0==arguments.length)return this._outputFormat;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MixerReport.prototype.getOutputFrameRate=function(){if(0==arguments.length)return this._outputFrameRate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MixerReport.prototype.getOutputHeight=function(){if(0==arguments.length)return this._outputHeight;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MixerReport.prototype.getOutputWidth=function(){if(0==arguments.length)return this._outputWidth;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MixerReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getDisabled()&&(jsonObject.disabled=fm.liveswitch.JsonSerializer.serializeBoolean(this.getDisabled())),fm.liveswitch.Global.equals(this.getInputFormat(),null)||(jsonObject.inputFormat=fm.liveswitch.FormatInfo.toJson(this.getInputFormat())),fm.liveswitch.Global.equals(this.getOutputFormat(),null)||(jsonObject.outputFormat=fm.liveswitch.FormatInfo.toJson(this.getOutputFormat())),null!=this.getOutputWidth()&&(jsonObject.outputWidth=fm.liveswitch.JsonSerializer.serializeInteger(this.getOutputWidth())),null!=this.getOutputHeight()&&(jsonObject.outputHeight=fm.liveswitch.JsonSerializer.serializeInteger(this.getOutputHeight())),null!=this.getOutputFrameRate()&&(jsonObject.outputFrameRate=fm.liveswitch.JsonSerializer.serializeInteger(this.getOutputFrameRate()))},MixerReport.prototype.setDisabled=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disabled=value},MixerReport.prototype.setInputFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._inputFormat=value},MixerReport.prototype.setOutputFormat=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputFormat=value},MixerReport.prototype.setOutputFrameRate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputFrameRate=value},MixerReport.prototype.setOutputHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputHeight=value},MixerReport.prototype.setOutputWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._outputWidth=value},MixerReport}(fm.liveswitch.Info);liveswitch.MixerReport=MixerReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var NetworkInterfaceInfo=function(_super){function NetworkInterfaceInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchNetworkInterfaceInfoInit(),_this}return __extends(NetworkInterfaceInfo,_super),NetworkInterfaceInfo.prototype.getTypeString=function(){return"[fm.liveswitch.NetworkInterfaceInfo],"+_super.prototype.getTypeString.call(this)},NetworkInterfaceInfo.prototype.fmliveswitchNetworkInterfaceInfoInit=function(){this._adapterSpeed=0},NetworkInterfaceInfo.fromJson=function(networkInterfaceInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(networkInterfaceInfoJson,(function(){return new fm.liveswitch.NetworkInterfaceInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.fromJsonArray=function(networkInterfaceInfosJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(networkInterfaceInfosJson,fm.liveswitch.NetworkInterfaceInfo.fromJson.bind(fm.liveswitch.NetworkInterfaceInfo));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.toJson=function(client){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(client,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.toJsonArray=function(networkInterfaceInfos){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(networkInterfaceInfos,fm.liveswitch.NetworkInterfaceInfo.toJson.bind(fm.liveswitch.NetworkInterfaceInfo));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"type")?this.setType(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"ipAddress")?this.setIPAddress(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"mask")?this.setMask(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"adapterSpeed")&&this.setAdapterSpeed(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},NetworkInterfaceInfo.prototype.getAdapterSpeed=function(){if(0==arguments.length)return this._adapterSpeed;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.prototype.getIPAddress=function(){if(0==arguments.length)return this._ipAddress;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.prototype.getMask=function(){if(0==arguments.length)return this._mask;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getType(),null)||(jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(this.getType())),fm.liveswitch.Global.equals(this.getIPAddress(),null)||(jsonObject.ipAddress=fm.liveswitch.JsonSerializer.serializeString(this.getIPAddress())),fm.liveswitch.Global.equals(this.getMask(),null)||(jsonObject.mask=fm.liveswitch.JsonSerializer.serializeString(this.getMask())),fm.liveswitch.Global.equals(this.getAdapterSpeed(),0)||(jsonObject.adapterSpeed=fm.liveswitch.JsonSerializer.serializeLong(this.getAdapterSpeed()))},NetworkInterfaceInfo.prototype.setAdapterSpeed=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._adapterSpeed=fm.liveswitch.Global.toInt(value)},NetworkInterfaceInfo.prototype.setIPAddress=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._ipAddress=value},NetworkInterfaceInfo.prototype.setMask=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mask=value},NetworkInterfaceInfo.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},NetworkInterfaceInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.NetworkInterfaceInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},NetworkInterfaceInfo}(fm.liveswitch.Info);liveswitch.NetworkInterfaceInfo=NetworkInterfaceInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var Token=function(){function Token(){fm.liveswitch.Token.fmliveswitchTokenInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.setIssuedAt(fm.liveswitch.DateTime.getUtcNow()),this.setExpirationTime(this.getIssuedAt().addSeconds(fm.liveswitch.Token.getDefaultExpiry()))}return Token.prototype.getTypeString=function(){return"[fm.liveswitch.Token]"},Token.generateClientJoinToken=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),6==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[4])||fm.liveswitch.Util.isObjectType(arguments[4],"[fm.liveswitch.ChannelClaim]"))){var applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],channelClaim=arguments[4],sharedSecret=arguments[5];return fm.liveswitch.Token.getClientJoinToken(applicationId,userId,deviceId,clientId,channelClaim).sign(sharedSecret)}if(7==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[4])||fm.liveswitch.Util.isObjectType(arguments[4],"[fm.liveswitch.ChannelClaim]"))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],channelClaim=arguments[4],sharedSecret=arguments[5];var expirationTime=arguments[6];return(token=fm.liveswitch.Token.getClientJoinToken(applicationId,userId,deviceId,clientId,channelClaim)).setExpirationTime(expirationTime),token.sign(sharedSecret)}if(6==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[4])||fm.liveswitch.Util.isString(arguments[4]))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3];var channelId=arguments[4];sharedSecret=arguments[5];return fm.liveswitch.Token.getClientJoinToken(applicationId,userId,deviceId,clientId,channelId).sign(sharedSecret)}if(7==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[4])||fm.liveswitch.Util.isString(arguments[4]))){var token;applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],channelId=arguments[4],sharedSecret=arguments[5],expirationTime=arguments[6];return(token=fm.liveswitch.Token.getClientJoinToken(applicationId,userId,deviceId,clientId,channelId)).setExpirationTime(expirationTime),token.sign(sharedSecret)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.ChannelClaim]"))){var client=arguments[0];channelClaim=arguments[1],sharedSecret=arguments[2];return fm.liveswitch.Token.generateClientJoinToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),channelClaim,sharedSecret)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isObjectType(arguments[1],"[fm.liveswitch.ChannelClaim]"))){client=arguments[0],channelClaim=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3];return fm.liveswitch.Token.generateClientJoinToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),channelClaim,sharedSecret,expirationTime)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){client=arguments[0],channelId=arguments[1],sharedSecret=arguments[2];return fm.liveswitch.Token.generateClientJoinToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),channelId,sharedSecret)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){client=arguments[0],channelId=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3];return fm.liveswitch.Token.generateClientJoinToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),channelId,sharedSecret,expirationTime)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.generateClientRegisterToken=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),7==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isObjectType(arguments[5][0],"[fm.liveswitch.ChannelClaim]")))){var applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelClaims=arguments[5],sharedSecret=arguments[6];return fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelClaims).sign(sharedSecret)}if(8==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isObjectType(arguments[5][0],"[fm.liveswitch.ChannelClaim]")))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.DateTime]"))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelClaims=arguments[5],sharedSecret=arguments[6];var expirationTime=arguments[7];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelClaims)).setExpirationTime(expirationTime),token.sign(sharedSecret)}if(9==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isObjectType(arguments[5][0],"[fm.liveswitch.ChannelClaim]")))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelClaims=arguments[5],sharedSecret=arguments[6],expirationTime=arguments[7];var region=arguments[8];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelClaims)).setRegion(region),token.setExpirationTime(expirationTime),token.sign(sharedSecret)}if(8==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isObjectType(arguments[5][0],"[fm.liveswitch.ChannelClaim]")))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isString(arguments[7]))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelClaims=arguments[5],sharedSecret=arguments[6],region=arguments[7];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelClaims)).setRegion(region),token.sign(sharedSecret)}if(7==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isString(arguments[5]))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4];var channelId=arguments[5];sharedSecret=arguments[6];return fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelId).sign(sharedSecret)}if(8==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isString(arguments[5]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.DateTime]"))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelId=arguments[5],sharedSecret=arguments[6],expirationTime=arguments[7];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelId)).setExpirationTime(expirationTime),token.sign(sharedSecret)}if(9==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isString(arguments[5]))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelId=arguments[5],sharedSecret=arguments[6],expirationTime=arguments[7],region=arguments[8];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelId)).setRegion(region),token.setExpirationTime(expirationTime),token.sign(sharedSecret)}if(8==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isString(arguments[5]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isString(arguments[7]))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelId=arguments[5],sharedSecret=arguments[6],region=arguments[7];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelId)).setRegion(region),token.sign(sharedSecret)}if(7==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isString(arguments[5][0])))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4];var channelIds=arguments[5];sharedSecret=arguments[6];return fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelIds).sign(sharedSecret)}if(8==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isString(arguments[5][0])))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isObjectType(arguments[7],"[fm.liveswitch.DateTime]"))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelIds=arguments[5],sharedSecret=arguments[6],expirationTime=arguments[7];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelIds)).setExpirationTime(expirationTime),token.sign(sharedSecret)}if(9==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isString(arguments[5][0])))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelIds=arguments[5],sharedSecret=arguments[6],expirationTime=arguments[7],region=arguments[8];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelIds)).setRegion(region),token.setExpirationTime(expirationTime),token.sign(sharedSecret)}if(8==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isString(arguments[5][0])))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[7])||fm.liveswitch.Util.isString(arguments[7]))){var token;applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelIds=arguments[5],sharedSecret=arguments[6],region=arguments[7];return(token=fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelIds)).setRegion(region),token.sign(sharedSecret)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isObjectType(arguments[1][0],"[fm.liveswitch.ChannelClaim]")))){var client=arguments[0];channelClaims=arguments[1],sharedSecret=arguments[2];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelClaims,sharedSecret)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isObjectType(arguments[1][0],"[fm.liveswitch.ChannelClaim]")))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isObjectType(arguments[3],"[fm.liveswitch.DateTime]"))){client=arguments[0],channelClaims=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelClaims,sharedSecret,expirationTime)}if(5==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isObjectType(arguments[1][0],"[fm.liveswitch.ChannelClaim]")))){client=arguments[0],channelClaims=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3],region=arguments[4];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelClaims,sharedSecret,expirationTime,region)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isObjectType(arguments[1][0],"[fm.liveswitch.ChannelClaim]")))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isString(arguments[3]))){client=arguments[0],channelClaims=arguments[1],sharedSecret=arguments[2],region=arguments[3];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelClaims,sharedSecret,region)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){client=arguments[0],channelId=arguments[1],sharedSecret=arguments[2];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelId,sharedSecret)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isObjectType(arguments[3],"[fm.liveswitch.DateTime]"))){client=arguments[0],channelId=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelId,sharedSecret,expirationTime)}if(5==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){client=arguments[0],channelId=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3],region=arguments[4];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelId,sharedSecret,expirationTime,region)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isString(arguments[3]))){client=arguments[0],channelId=arguments[1],sharedSecret=arguments[2],region=arguments[3];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelId,sharedSecret,region)}if(3==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isString(arguments[1][0])))){client=arguments[0],channelIds=arguments[1],sharedSecret=arguments[2];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelIds,sharedSecret)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isString(arguments[1][0])))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isObjectType(arguments[3],"[fm.liveswitch.DateTime]"))){client=arguments[0],channelIds=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelIds,sharedSecret,expirationTime)}if(5==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isString(arguments[1][0])))){client=arguments[0],channelIds=arguments[1],sharedSecret=arguments[2],expirationTime=arguments[3],region=arguments[4];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelIds,sharedSecret,expirationTime,region)}if(4==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isArray(arguments[1])&&(0==arguments[1].length||fm.liveswitch.Util.isNullOrUndefined(arguments[1][0])||fm.liveswitch.Util.isString(arguments[1][0])))&&(fm.liveswitch.Util.isNullOrUndefined(arguments[3])||fm.liveswitch.Util.isString(arguments[3]))){client=arguments[0],channelIds=arguments[1],sharedSecret=arguments[2],region=arguments[3];return fm.liveswitch.Token.generateClientRegisterToken(client.getApplicationId(),client.getUserId(),client.getDeviceId(),client.getId(),client.getRoles(),channelIds,sharedSecret,region)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.generateEventToken=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),2==arguments.length){var applicationId=arguments[0],sharedSecret=arguments[1];return fm.liveswitch.Token.getEventToken(applicationId).sign(sharedSecret)}if(3==arguments.length){applicationId=arguments[0],sharedSecret=arguments[1];var expirationTime=arguments[2],eventToken=fm.liveswitch.Token.getEventToken(applicationId);return eventToken.setExpirationTime(expirationTime),eventToken.sign(sharedSecret)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.getClientJoinToken=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),5==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[4])||fm.liveswitch.Util.isObjectType(arguments[4],"[fm.liveswitch.ChannelClaim]"))){var applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],channelClaim=arguments[4],token=new fm.liveswitch.Token;return token.setType(fm.liveswitch.TokenType.getJoin()),token.setApplicationId(applicationId),token.setUserId(userId),token.setDeviceId(deviceId),token.setClientId(clientId),token.setChannelClaims(fm.liveswitch.Global.equals(channelClaim,null)?null:[channelClaim]),token}if(5==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[4])||fm.liveswitch.Util.isString(arguments[4]))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3];var channelId=arguments[4];return fm.liveswitch.Token.getClientJoinToken(applicationId,userId,deviceId,clientId,fm.liveswitch.Global.equals(channelId,null)?null:new fm.liveswitch.ChannelClaim(channelId))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.getClientRegisterToken=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),6==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isObjectType(arguments[5][0],"[fm.liveswitch.ChannelClaim]")))){var applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4],channelClaims=arguments[5],token=new fm.liveswitch.Token;return token.setType(fm.liveswitch.TokenType.getRegister()),token.setApplicationId(applicationId),token.setUserId(userId),token.setDeviceId(deviceId),token.setClientId(clientId),token.setClientRoles(clientRoles),token.setChannelClaims(channelClaims),token}if(6==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isString(arguments[5]))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4];var channelId=arguments[5];return fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,fm.liveswitch.Global.equals(channelId,null)?new Array(0):[new fm.liveswitch.ChannelClaim(channelId)])}if(6==arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[5])||fm.liveswitch.Util.isArray(arguments[5])&&(0==arguments[5].length||fm.liveswitch.Util.isNullOrUndefined(arguments[5][0])||fm.liveswitch.Util.isString(arguments[5][0])))){applicationId=arguments[0],userId=arguments[1],deviceId=arguments[2],clientId=arguments[3],clientRoles=arguments[4];var channelIds=arguments[5];channelClaims=null;if(!fm.liveswitch.Global.equals(channelIds,null)){for(var list=new Array,_i=0,channelIds_1=channelIds;_i<channelIds_1.length;_i++){var str=channelIds_1[_i];fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.ChannelClaim(str))}channelClaims=fm.liveswitch.ArrayExtensions.toArray(list)}return fm.liveswitch.Token.getClientRegisterToken(applicationId,userId,deviceId,clientId,clientRoles,channelClaims)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.getDefaultExpiry=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),0==arguments.length)return 120;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.getEventToken=function(applicationId){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length){var token=new fm.liveswitch.Token;return token.setType(fm.liveswitch.TokenType.getEvent()),token.setApplicationId(applicationId),token}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.getHmacSha256Algorithm=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),0==arguments.length)return"HS256";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.getRsaSha256Algorithm=function(){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),0==arguments.length)return"RS256";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.headerFromBase64=function(headerBase64){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length)return fm.liveswitch.Token.headerFromJson(fm.liveswitch.Utf8.decode(fm.liveswitch.Base64.decode(headerBase64)));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.headerFromJson=function(headerJson){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length){var dictionary=fm.liveswitch.JsonSerializer.deserializeDictionary(headerJson,(function(){return{}}),(function(valueJson){return fm.liveswitch.JsonSerializer.deserializeString(valueJson)}));if(!fm.liveswitch.HashExtensions.containsKey(dictionary,"alg"))throw new fm.liveswitch.Exception("Token header is missing 'alg'.");if(!fm.liveswitch.HashExtensions.containsKey(dictionary,"typ"))throw new fm.liveswitch.Exception("Token header is missing 'typ'.");var str=dictionary.alg;if(!fm.liveswitch.Global.equals(str,fm.liveswitch.Token.getHmacSha256Algorithm())&&!fm.liveswitch.Global.equals(str,fm.liveswitch.Token.getRsaSha256Algorithm()))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Token header contains unrecognized 'alg' ({0}).",str));var str2=dictionary.typ;if(!fm.liveswitch.Global.equals(str2,"JWT"))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Token header contains unrecognized 'typ' ({0}).",str2));return str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.headerToBase64=function(algorithm){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length)return fm.liveswitch.Base64.encode(fm.liveswitch.Utf8.encode(fm.liveswitch.Token.headerToJson(algorithm)));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.headerToJson=function(algorithm){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length){var dictionary={};return dictionary.alg=algorithm,dictionary.typ="JWT",fm.liveswitch.JsonSerializer.serializeDictionary(dictionary,(function(value){return fm.liveswitch.JsonSerializer.serializeString(value)}))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.parse=function(tokenString){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length){var strArray=fm.liveswitch.StringExtensions.split(tokenString,[46]);if(!fm.liveswitch.Global.equals(strArray.length,3))return fm.liveswitch.Token.fm_liveswitch_Token___log.error("Invalid token."),null;var str=fm.liveswitch.Token.headerFromBase64(strArray[0]),token=fm.liveswitch.Token.payloadFromBase64(strArray[1]);return token.setAlgorithm(str),token.__headerBase64=fm.liveswitch.StringExtensions.replace(fm.liveswitch.StringExtensions.replace(strArray[0],"\r",""),"\n",""),token.__payloadBase64=fm.liveswitch.StringExtensions.replace(fm.liveswitch.StringExtensions.replace(strArray[1],"\r",""),"\n",""),token.__signatureBase64=strArray[2],token}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.payloadFromBase64=function(payloadBase64){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length){var input=fm.liveswitch.Base64.decode(payloadBase64);if(fm.liveswitch.Global.equals(input,null))throw new fm.liveswitch.Exception("Unable to decode base64.");return fm.liveswitch.Token.payloadFromJson(fm.liveswitch.Utf8.decode(input))}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.payloadFromJson=function(payloadJson){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(payloadJson,(function(){return new fm.liveswitch.Token}),(function(obj,key,valueJson){var _var0=key;do{if("iat"==_var0){var nullable=fm.liveswitch.JsonSerializer.deserializeLong(valueJson);if(null==nullable){obj.setIssuedAt(new fm.liveswitch.DateTime(0));break}obj.setIssuedAt(fm.liveswitch.UnixTimestamp.unixToDateTime(nullable));break}if("exp"==_var0){var nullable2=fm.liveswitch.JsonSerializer.deserializeLong(valueJson);null!=nullable2&&obj.setExpirationTime(fm.liveswitch.UnixTimestamp.unixToDateTime(nullable2));break}if("type"==_var0){obj.setType(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("connectorId"==_var0){obj.setConnectorId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("mediaServerId"==_var0){obj.setMediaServerId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("apiServiceId"==_var0){obj.setApiServiceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("applicationId"==_var0){obj.setApplicationId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("userId"==_var0){obj.setUserId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("deviceId"==_var0){obj.setDeviceId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("region"==_var0){obj.setRegion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientId"==_var0){obj.setClientId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientRoles"==_var0){obj.setClientRoles(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("channels"==_var0){obj.setChannelClaims(fm.liveswitch.ChannelClaim.fromJsonArray(valueJson));break}}while(0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.payloadToBase64=function(token){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length)return fm.liveswitch.Base64.encode(fm.liveswitch.Utf8.encode(fm.liveswitch.Token.payloadToJson(token)));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.payloadToJson=function(token){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(token,(function(obj,jsonObject){jsonObject.iat=fm.liveswitch.JsonSerializer.serializeLong(fm.liveswitch.UnixTimestamp.dateTimeToUnix(token.getIssuedAt())),null!=token.getExpirationTime()&&(jsonObject.exp=fm.liveswitch.JsonSerializer.serializeLong(fm.liveswitch.UnixTimestamp.dateTimeToUnix(token.getExpirationTime()))),fm.liveswitch.Global.equals(token.getType(),null)||(jsonObject.type=fm.liveswitch.JsonSerializer.serializeString(token.getType())),fm.liveswitch.Global.equals(token.getConnectorId(),null)||(jsonObject.connectorId=fm.liveswitch.JsonSerializer.serializeString(token.getConnectorId())),fm.liveswitch.Global.equals(token.getMediaServerId(),null)||(jsonObject.mediaServerId=fm.liveswitch.JsonSerializer.serializeString(token.getMediaServerId())),fm.liveswitch.Global.equals(token.getApiServiceId(),null)||(jsonObject.apiServiceId=fm.liveswitch.JsonSerializer.serializeString(token.getApiServiceId())),fm.liveswitch.Global.equals(token.getApplicationId(),null)||(jsonObject.applicationId=fm.liveswitch.JsonSerializer.serializeString(token.getApplicationId())),fm.liveswitch.Global.equals(token.getUserId(),null)||(jsonObject.userId=fm.liveswitch.JsonSerializer.serializeString(token.getUserId())),fm.liveswitch.Global.equals(token.getDeviceId(),null)||(jsonObject.deviceId=fm.liveswitch.JsonSerializer.serializeString(token.getDeviceId())),fm.liveswitch.Global.equals(token.getClientId(),null)||(jsonObject.clientId=fm.liveswitch.JsonSerializer.serializeString(token.getClientId())),fm.liveswitch.Global.equals(token.getRegion(),null)||(jsonObject.region=fm.liveswitch.JsonSerializer.serializeString(token.getRegion())),fm.liveswitch.Global.equals(token.getClientRoles(),null)||(jsonObject.clientRoles=fm.liveswitch.JsonSerializer.serializeStringArray(token.getClientRoles())),fm.liveswitch.Global.equals(token.getChannelClaims(),null)||(jsonObject.channels=fm.liveswitch.ChannelClaim.toJsonArray(token.getChannelClaims()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.verify=function(tokenString,sharedSecret){if(fm.liveswitch.Token.fmliveswitchTokenInitialize(),2==arguments.length){var token=fm.liveswitch.Token.parse(tokenString);return!fm.liveswitch.Global.equals(token,null)&&token.verify(sharedSecret)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.computeSignature=function(headerBase64,payloadBase64,sharedSecret){if(3==arguments.length)return fm.liveswitch.MacContextBase.compute(fm.liveswitch.MacType.HmacSha256,fm.liveswitch.DataBuffer.wrap(fm.liveswitch.Utf8.encode(sharedSecret)),fm.liveswitch.DataBuffer.wrap(fm.liveswitch.Utf8.encode(fm.liveswitch.StringExtensions.format("{0}.{1}",headerBase64,payloadBase64))));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getAlgorithm=function(){if(0==arguments.length)return this._algorithm;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getApiServiceId=function(){if(0==arguments.length)return this._apiServiceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getApplicationId=function(){if(0==arguments.length)return this._applicationId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getChannelClaim=function(){if(0==arguments.length){var channelClaims=this.getChannelClaims();return fm.liveswitch.Global.equals(channelClaims,null)||fm.liveswitch.Global.equals(channelClaims.length,0)?null:channelClaims[0]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getChannelClaims=function(){if(0==arguments.length)return this._channelClaims;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getClientRoles=function(){if(0==arguments.length)return this._clientRoles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getConnectorId=function(){if(0==arguments.length)return this._connectorId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getExpirationTime=function(){if(0==arguments.length)return this._expirationTime;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getIssuedAt=function(){if(0==arguments.length)return this._issuedAt;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getMediaServerId=function(){if(0==arguments.length)return this._mediaServerId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getRegion=function(){if(0==arguments.length)return this._region;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getType=function(){if(0==arguments.length)return this._type;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.headerToBase64=function(){if(0==arguments.length)return fm.liveswitch.Token.headerToBase64(this.getAlgorithm());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.headerToJson=function(){if(0==arguments.length)return fm.liveswitch.Token.headerToJson(this.getAlgorithm());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.payloadToBase64=function(){if(0==arguments.length)return fm.liveswitch.Token.payloadToBase64(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.payloadToJson=function(){if(0==arguments.length)return fm.liveswitch.Token.payloadToJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.setAlgorithm=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._algorithm=value},Token.prototype.setApiServiceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._apiServiceId=value},Token.prototype.setApplicationId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._applicationId=value},Token.prototype.setChannelClaims=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._channelClaims=value},Token.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},Token.prototype.setClientRoles=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientRoles=value},Token.prototype.setConnectorId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectorId=value},Token.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},Token.prototype.setExpirationTime=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._expirationTime=value},Token.prototype.setIssuedAt=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._issuedAt=value},Token.prototype.setMediaServerId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._mediaServerId=value},Token.prototype.setRegion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._region=value},Token.prototype.setType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._type=value},Token.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},Token.prototype.sign=function(sharedSecret){if(1==arguments.length){this.setAlgorithm(fm.liveswitch.Token.getHmacSha256Algorithm());var str=this.headerToBase64(),str2=this.payloadToBase64(),str3=this.signBase64(str,str2,sharedSecret);return fm.liveswitch.StringExtensions.format("{0}.{1}.{2}",str,str2,str3)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.signBase64=function(headerBase64,payloadBase64,sharedSecret){if(3==arguments.length)return fm.liveswitch.StringExtensions.trimEnd(fm.liveswitch.Base64.encodeBuffer(this.computeSignature(headerBase64,payloadBase64,sharedSecret)),[61]);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.verify=function(sharedSecret){if(1==arguments.length)return fm.liveswitch.Global.equals(this.getAlgorithm(),fm.liveswitch.Token.getHmacSha256Algorithm())?this.verifyBase64(this.__signatureBase64,this.__headerBase64,this.__payloadBase64,sharedSecret):(fm.liveswitch.Token.fm_liveswitch_Token___log.error("Cannot verify an RS256 token with a shared secret."),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.prototype.verifyBase64=function(signatureBase64,headerBase64,payloadBase64,sharedSecret){if(4==arguments.length){for(var buffer=fm.liveswitch.Base64.decode(signatureBase64),buffer2=this.computeSignature(headerBase64,payloadBase64,sharedSecret),i=0;i<buffer.length;i++)if(!fm.liveswitch.Global.equals(buffer[i],buffer2.read8(i)))return!1;return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Token.fmliveswitchTokenInitialize=function(){fm.liveswitch.Token.__fmliveswitchTokenInitialized||fm.liveswitch.Token.__fmliveswitchTokenInitializing||(fm.liveswitch.Token.__fmliveswitchTokenInitializing=!0,fm.liveswitch.Token.fm_liveswitch_Token___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.Token]")),fm.liveswitch.Token.__fmliveswitchTokenInitialized=!0,fm.liveswitch.Token.__fmliveswitchTokenInitializing=!1)},Token.__fmliveswitchTokenInitialized=!1,Token.__fmliveswitchTokenInitializing=!1,Token}();liveswitch.Token=Token}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ClaimAction=function(){function ClaimAction(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return ClaimAction.prototype.getTypeString=function(){return"[fm.liveswitch.ClaimAction]"},ClaimAction.Claim="claim",ClaimAction.Drop="drop",ClaimAction.Join="join",ClaimAction}();liveswitch.ClaimAction=ClaimAction}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TokenType=function(){function TokenType(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return TokenType.prototype.getTypeString=function(){return"[fm.liveswitch.TokenType]"},TokenType.getEvent=function(){if(0==arguments.length)return"event";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TokenType.getJoin=function(){if(0==arguments.length)return"join";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TokenType.getRegister=function(){if(0==arguments.length)return"register";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TokenType}();liveswitch.TokenType=TokenType}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var TransportReport=function(_super){function TransportReport(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchTransportReportInit();else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var stats=__arguments[0],lastStats=__arguments[1];(_this=_super.call(this)||this).fmliveswitchTransportReportInit();var flag=fm.liveswitch.Global.equals(lastStats,null);_this.setBytesReceived(fm.liveswitch.Report.processLong(stats.getBytesReceived(),flag?0:lastStats.getBytesReceived())),_this.setBytesSent(fm.liveswitch.Report.processLong(stats.getBytesSent(),flag?0:lastStats.getBytesSent()))}return _this}return __extends(TransportReport,_super),TransportReport.prototype.getTypeString=function(){return"[fm.liveswitch.TransportReport],"+_super.prototype.getTypeString.call(this)},TransportReport.prototype.fmliveswitchTransportReportInit=function(){this._bytesReceived=0,this._bytesSent=0},TransportReport.fromJson=function(transportReportJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(transportReportJson,(function(){return new fm.liveswitch.TransportReport}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportReport.toJson=function(transportReport){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(transportReport,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportReport.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"bytesSent")?this.setBytesSent(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)):fm.liveswitch.Global.equals(str,"bytesReceived")&&this.setBytesReceived(fm.liveswitch.JsonSerializer.deserializeLong(valueJson)))},TransportReport.prototype.getBytesReceived=function(){if(0==arguments.length)return this._bytesReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportReport.prototype.getBytesSent=function(){if(0==arguments.length)return this._bytesSent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportReport.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),null!=this.getBytesReceived()&&(jsonObject.bytesReceived=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesReceived())),null!=this.getBytesSent()&&(jsonObject.bytesSent=fm.liveswitch.JsonSerializer.serializeLong(this.getBytesSent()))},TransportReport.prototype.setBytesReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesReceived=value},TransportReport.prototype.setBytesSent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bytesSent=value},TransportReport.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.TransportReport.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},TransportReport}(fm.liveswitch.Report);liveswitch.TransportReport=TransportReport}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoLayout=function(){function VideoLayout(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)this.fmliveswitchVideoLayoutInit();else if(2==__arguments.length){var width=__arguments[0],height=__arguments[1];(__arguments=new Array(4))[0]=width,__arguments[1]=height,__arguments[2]=null,__arguments[3]=null;var width_1=__arguments[0],height_1=__arguments[1],frames_6=__arguments[2],bounds=__arguments[3];(__arguments=new Array(5))[0]=width_1,__arguments[1]=height_1,__arguments[2]=frames_6,__arguments[3]=bounds,__arguments[4]=!1;var width_2=__arguments[0],height_2=__arguments[1],frames_7=__arguments[2],bounds_1=__arguments[3],crop=__arguments[4];this.fmliveswitchVideoLayoutInit(),this.setWidth(width_2),this.setHeight(height_2),this.setFrames(frames_7||{}),this.setBounds(bounds_1||{}),this.setCrop(crop)}else if(3==__arguments.length){width=__arguments[0],height=__arguments[1],crop=__arguments[2];(__arguments=new Array(5))[0]=width,__arguments[1]=height,__arguments[2]=null,__arguments[3]=null,__arguments[4]=crop;var width_3=__arguments[0],height_3=__arguments[1],frames_8=__arguments[2],crop_1=(bounds=__arguments[3],__arguments[4]);this.fmliveswitchVideoLayoutInit(),this.setWidth(width_3),this.setHeight(height_3),this.setFrames(frames_8||{}),this.setBounds(bounds||{}),this.setCrop(crop_1)}else if(4==__arguments.length){width=__arguments[0],height=__arguments[1];var frames_9=__arguments[2];bounds=__arguments[3];(__arguments=new Array(5))[0]=width,__arguments[1]=height,__arguments[2]=frames_9,__arguments[3]=bounds,__arguments[4]=!1;var width_4=__arguments[0],height_4=__arguments[1],frames_10=__arguments[2],bounds_2=__arguments[3];crop=__arguments[4];this.fmliveswitchVideoLayoutInit(),this.setWidth(width_4),this.setHeight(height_4),this.setFrames(frames_10||{}),this.setBounds(bounds_2||{}),this.setCrop(crop)}else{if(5!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");width=__arguments[0],height=__arguments[1];var frames_11=__arguments[2];bounds=__arguments[3],crop=__arguments[4];this.fmliveswitchVideoLayoutInit(),this.setWidth(width),this.setHeight(height),this.setFrames(frames_11||{}),this.setBounds(bounds||{}),this.setCrop(crop)}}return VideoLayout.prototype.getTypeString=function(){return"[fm.liveswitch.VideoLayout]"},VideoLayout.prototype.fmliveswitchVideoLayoutInit=function(){this._crop=!1,this._height=0,this._width=0},VideoLayout.createLayoutFrameDictionary=function(){if(0==arguments.length)return{};throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.fromJson=function(videoLayoutJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(videoLayoutJson,(function(){return new fm.liveswitch.VideoLayout}),(function(videoLayout,key,valueJson){var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"w")?videoLayout.setWidth(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"h")?videoLayout.setHeight(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"f")?videoLayout.setFrames(fm.liveswitch.JsonSerializer.deserializeDictionary(valueJson,fm.liveswitch.VideoLayout.createLayoutFrameDictionary.bind(fm.liveswitch.VideoLayout),fm.liveswitch.LayoutFrame.fromJson.bind(fm.liveswitch.LayoutFrame))):fm.liveswitch.Global.equals(str,"b")?videoLayout.setBounds(fm.liveswitch.JsonSerializer.deserializeDictionary(valueJson,fm.liveswitch.VideoLayout.createLayoutFrameDictionary.bind(fm.liveswitch.VideoLayout),fm.liveswitch.LayoutFrame.fromJson.bind(fm.liveswitch.LayoutFrame))):fm.liveswitch.Global.equals(str,"c")&&videoLayout.setCrop(fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.toJson=function(videoLayout){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(videoLayout,(function(vl,jsonObject){jsonObject.w=fm.liveswitch.JsonSerializer.serializeInteger(vl.getWidth()),jsonObject.h=fm.liveswitch.JsonSerializer.serializeInteger(vl.getHeight()),jsonObject.f=fm.liveswitch.JsonSerializer.serializeDictionary(vl.getFrames(),fm.liveswitch.LayoutFrame.toJson.bind(fm.liveswitch.LayoutFrame)),jsonObject.b=fm.liveswitch.JsonSerializer.serializeDictionary(vl.getBounds(),fm.liveswitch.LayoutFrame.toJson.bind(fm.liveswitch.LayoutFrame)),jsonObject.c=fm.liveswitch.JsonSerializer.serializeBoolean(vl.getCrop())}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.getBounds=function(){if(0==arguments.length)return this._bounds;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.getClientKey=function(userId,deviceId,clientId){if(3==arguments.length)return fm.liveswitch.StringExtensions.format("/u/{0}/d/{1}/c/{2}",userId,deviceId,clientId);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.getCrop=function(){if(0==arguments.length)return this._crop;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.getFrames=function(){if(0==arguments.length)return this._frames;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.getHeight=function(){if(0==arguments.length)return this._height;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.getRegions=function(){if(0==arguments.length)return this._regions;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.getWidth=function(){if(0==arguments.length)return this._width;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.inflate=function(channel,localClientInfo,remoteConnectionInfos){if(3==arguments.length){for(var dictionary={},_i=0,remoteConnectionInfos_2=remoteConnectionInfos;_i<remoteConnectionInfos_2.length;_i++){var info=remoteConnectionInfos_2[_i];dictionary[info.getId()]=info}for(var list=new Array,_a=0,_b=fm.liveswitch.HashExtensions.getKeys(this.getFrames());_a<_b.length;_a++){var str=_b[_a],frame=this.getFrames()[str],bounds=this.getBounds()[str],userId=frame.getUserId(),deviceId=frame.getDeviceId(),clientId=frame.getClientId(),userAlias=null,deviceAlias=null,clientTag=null,clientRoles=new Array(0),connectionTag=null,info2=null,_var0=new fm.liveswitch.Holder(info2),_var1=fm.liveswitch.HashExtensions.tryGetValue(dictionary,str,_var0);if(info2=_var0.getValue(),_var1)userId=info2.getUserId(),userAlias=info2.getUserAlias(),deviceId=info2.getDeviceId(),deviceAlias=info2.getDeviceAlias(),clientId=info2.getClientId(),clientTag=info2.getClientTag(),clientRoles=info2.getClientRoles(),connectionTag=info2.getTag();else{if(!(fm.liveswitch.Global.equals(localClientInfo.getUserId(),frame.getUserId())&&fm.liveswitch.Global.equals(localClientInfo.getDeviceId(),frame.getDeviceId())&&fm.liveswitch.Global.equals(localClientInfo.getId(),frame.getClientId())))return!1;userId=localClientInfo.getUserId(),userAlias=localClientInfo.getUserAlias(),deviceId=localClientInfo.getDeviceId(),deviceAlias=localClientInfo.getDeviceAlias(),clientId=localClientInfo.getId(),clientTag=localClientInfo.getTag(),clientRoles=localClientInfo.getRoles(),connectionTag=null}bounds.setUserId(userId),bounds.setDeviceId(deviceId),bounds.setClientId(clientId),fm.liveswitch.ArrayExtensions.add(list,new fm.liveswitch.VideoLayoutRegion(frame,bounds,userId,userAlias,deviceId,deviceAlias,clientId,clientTag,clientRoles,str,connectionTag))}return this.setRegions(fm.liveswitch.ArrayExtensions.toArray(list)),!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.isEquivalent=function(videoLayout){if(1==arguments.length){if(!(fm.liveswitch.Global.equals(this.getWidth(),videoLayout.getWidth())&&fm.liveswitch.Global.equals(this.getHeight(),videoLayout.getHeight())&&fm.liveswitch.Global.equals(this.getCrop(),videoLayout.getCrop())&&fm.liveswitch.Global.equals(fm.liveswitch.HashExtensions.getCount(this.getFrames()),fm.liveswitch.HashExtensions.getCount(videoLayout.getFrames()))&&fm.liveswitch.Global.equals(fm.liveswitch.HashExtensions.getCount(this.getBounds()),fm.liveswitch.HashExtensions.getCount(videoLayout.getBounds()))))return!1;for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(this.getFrames());_i<_a.length;_i++){var str=_a[_i],frame=null,_var0=new fm.liveswitch.Holder(frame),_var1=fm.liveswitch.HashExtensions.tryGetValue(videoLayout.getFrames(),str,_var0);if(frame=_var0.getValue(),!_var1)return!1;if(!this.getFrames()[str].isEquivalent(frame))return!1}for(var _b=0,_c=fm.liveswitch.HashExtensions.getKeys(this.getBounds());_b<_c.length;_b++){str=_c[_b];var frame2=null,_var2=new fm.liveswitch.Holder(frame2),_var3=fm.liveswitch.HashExtensions.tryGetValue(videoLayout.getBounds(),str,_var2);if(frame2=_var2.getValue(),!_var3)return!1;if(!this.getBounds()[str].isEquivalent(frame2))return!1}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout.prototype.setBounds=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bounds=value},VideoLayout.prototype.setCrop=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._crop=value},VideoLayout.prototype.setFrames=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frames=value},VideoLayout.prototype.setHeight=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._height=fm.liveswitch.Global.toInt(value)},VideoLayout.prototype.setRegions=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._regions=value},VideoLayout.prototype.setWidth=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._width=fm.liveswitch.Global.toInt(value)},VideoLayout.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.VideoLayout.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayout}();liveswitch.VideoLayout=VideoLayout}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var VideoLayoutRegion=function(){function VideoLayoutRegion(frame,bounds,userId,userAlias,deviceId,deviceAlias,clientId,clientTag,clientRoles,connectionId,connectionTag){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(11!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var frame_2=__arguments[0],bounds_3=__arguments[1],userId_22=__arguments[2],userAlias_4=__arguments[3],deviceId_19=__arguments[4],deviceAlias_4=__arguments[5],clientId_13=__arguments[6],clientTag_2=__arguments[7],clientRoles_2=__arguments[8],connectionId_1=__arguments[9],connectionTag_2=__arguments[10];this.setFrame(frame_2),this.setBounds(bounds_3),this.setUserId(userId_22),this.setUserAlias(userAlias_4),this.setDeviceId(deviceId_19),this.setDeviceAlias(deviceAlias_4),this.setClientId(clientId_13),this.setClientTag(clientTag_2),this.setClientRoles(clientRoles_2),this.setConnectionId(connectionId_1),this.setConnectionTag(connectionTag_2)}return VideoLayoutRegion.prototype.getTypeString=function(){return"[fm.liveswitch.VideoLayoutRegion]"},VideoLayoutRegion.prototype.getBounds=function(){if(0==arguments.length)return this._bounds;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getClientRoles=function(){if(0==arguments.length)return this._clientRoles;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getClientTag=function(){if(0==arguments.length)return this._clientTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getConnectionId=function(){if(0==arguments.length)return this._connectionId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getConnectionTag=function(){if(0==arguments.length)return this._connectionTag;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getDeviceAlias=function(){if(0==arguments.length)return this._deviceAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getDeviceId=function(){if(0==arguments.length)return this._deviceId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getFrame=function(){if(0==arguments.length)return this._frame;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getUserAlias=function(){if(0==arguments.length)return this._userAlias;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.getUserId=function(){if(0==arguments.length)return this._userId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},VideoLayoutRegion.prototype.setBounds=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._bounds=value},VideoLayoutRegion.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},VideoLayoutRegion.prototype.setClientRoles=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientRoles=value},VideoLayoutRegion.prototype.setClientTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientTag=value},VideoLayoutRegion.prototype.setConnectionId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionId=value},VideoLayoutRegion.prototype.setConnectionTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionTag=value},VideoLayoutRegion.prototype.setDeviceAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceAlias=value},VideoLayoutRegion.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._deviceId=value},VideoLayoutRegion.prototype.setFrame=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._frame=value},VideoLayoutRegion.prototype.setUserAlias=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userAlias=value},VideoLayoutRegion.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._userId=value},VideoLayoutRegion}();liveswitch.VideoLayoutRegion=VideoLayoutRegion}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var WebhookInfo=function(_super){function WebhookInfo(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchWebhookInfoInit(),_this}return __extends(WebhookInfo,_super),WebhookInfo.prototype.getTypeString=function(){return"[fm.liveswitch.WebhookInfo],"+_super.prototype.getTypeString.call(this)},WebhookInfo.prototype.fmliveswitchWebhookInfoInit=function(){this._result=0},WebhookInfo.fromJson=function(webhookInfoJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObject(webhookInfoJson,(function(){return new fm.liveswitch.WebhookInfo}),(function(info,key,value){info.deserializeProperties(key,value)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebhookInfo.toJson=function(webhookInfo){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(webhookInfo,(function(info,dict){info.serializeProperties(dict)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebhookInfo.prototype.deserializeProperties=function(key,valueJson){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.deserializeProperties.call(this,key,valueJson);var str=key;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"url")?this.setUrl(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"result")&&this.setResult(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)))},WebhookInfo.prototype.getResult=function(){if(0==arguments.length)return this._result;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebhookInfo.prototype.getUrl=function(){if(0==arguments.length)return this._url;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebhookInfo.prototype.serializeProperties=function(jsonObject){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.serializeProperties.call(this,jsonObject),fm.liveswitch.Global.equals(this.getUrl(),null)||(jsonObject.url=fm.liveswitch.JsonSerializer.serializeString(this.getUrl())),fm.liveswitch.Global.equals(this.getResult(),0)||(jsonObject.result=fm.liveswitch.JsonSerializer.serializeInteger(this.getResult()))},WebhookInfo.prototype.setResult=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._result=fm.liveswitch.Global.toInt(value)},WebhookInfo.prototype.setUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._url=value},WebhookInfo.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.WebhookInfo.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebhookInfo}(fm.liveswitch.Info);liveswitch.WebhookInfo=WebhookInfo}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var BaseAdvice=function(_super){function BaseAdvice(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchsignallingBaseAdviceInit(),_this.__reconnect=fm.liveswitch.signalling.Reconnect.NotSet,_this}return __extends(BaseAdvice,_super),BaseAdvice.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.BaseAdvice],"+_super.prototype.getTypeString.call(this)},BaseAdvice.prototype.fmliveswitchsignallingBaseAdviceInit=function(){this.__interval=0},BaseAdvice.deserializeReconnect=function(reconnectJson){if(1==arguments.length){var _var0=fm.liveswitch.JsonSerializer.deserializeString(reconnectJson);return"retry"==_var0?fm.liveswitch.signalling.Reconnect.Retry:"handshake"==_var0?fm.liveswitch.signalling.Reconnect.Handshake:"none"==_var0?fm.liveswitch.signalling.Reconnect.None:fm.liveswitch.signalling.Reconnect.NotSet}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice.fromJson=function(baseAdviceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObjectFast(baseAdviceJson,(function(){return new fm.liveswitch.signalling.BaseAdvice}),(function(obj,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"hosts")?obj.setHosts(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson)):fm.liveswitch.Global.equals(str,"interval")?obj.setInterval(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"reconnect")&&obj.setReconnect(fm.liveswitch.signalling.BaseAdvice.deserializeReconnect(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice.serializeReconnect=function(reconnect){if(1==arguments.length){var str=null,_var0=reconnect;do{if(_var0==fm.liveswitch.signalling.Reconnect.Retry){str="retry";break}if(_var0==fm.liveswitch.signalling.Reconnect.Handshake){str="handshake";break}if(_var0==fm.liveswitch.signalling.Reconnect.None){str="none";break}}while(0);return fm.liveswitch.JsonSerializer.serializeString(str)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice.toJson=function(baseAdvice){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectFast(baseAdvice,(function(obj,jsonObject){fm.liveswitch.Global.equals(obj.getHosts(),null)||(jsonObject.hosts=fm.liveswitch.JsonSerializer.serializeStringArray(obj.getHosts())),null!=obj.getInterval()&&(jsonObject.interval=fm.liveswitch.JsonSerializer.serializeInteger(obj.getInterval())),fm.liveswitch.Global.equals(obj.getReconnect(),fm.liveswitch.signalling.Reconnect.NotSet)||(jsonObject.reconnect=fm.liveswitch.signalling.BaseAdvice.serializeReconnect(obj.getReconnect()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice.prototype.getHosts=function(){if(0==arguments.length)return this.__hosts;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice.prototype.getInterval=function(){if(0==arguments.length)return this.__interval;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice.prototype.getReconnect=function(){if(0==arguments.length)return this.__reconnect;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice.prototype.setHosts=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__hosts=value,_super.prototype.setIsDirty.call(this,!0)},BaseAdvice.prototype.setInterval=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__interval=value,_super.prototype.setIsDirty.call(this,!0)},BaseAdvice.prototype.setReconnect=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__reconnect=value,_super.prototype.setIsDirty.call(this,!0)},BaseAdvice.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.signalling.BaseAdvice.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},BaseAdvice}(fm.liveswitch.Serializable);signalling.BaseAdvice=BaseAdvice}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Advice=function(_super){function Advice(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(Advice,_super),Advice.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Advice],"+_super.prototype.getTypeString.call(this)},Advice.fromJson=function(adviceJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObjectFast(adviceJson,(function(){return new fm.liveswitch.signalling.Advice}),(function(obj,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"hosts")?obj.setHosts(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson)):fm.liveswitch.Global.equals(str,"interval")?obj.setInterval(fm.liveswitch.JsonSerializer.deserializeInteger(valueJson)):fm.liveswitch.Global.equals(str,"reconnect")?obj.setReconnect(fm.liveswitch.signalling.BaseAdvice.deserializeReconnect(valueJson)):fm.liveswitch.Global.equals(str,"websocket")?obj.setWebSocket(fm.liveswitch.signalling.BaseAdvice.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"long-polling")?obj.setLongPolling(fm.liveswitch.signalling.BaseAdvice.fromJson(valueJson)):fm.liveswitch.Global.equals(str,"callback-polling")&&obj.setCallbackPolling(fm.liveswitch.signalling.BaseAdvice.fromJson(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Advice.toJson=function(advice){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectFast(advice,(function(obj,jsonObject){fm.liveswitch.Global.equals(obj.getHosts(),null)||(jsonObject.hosts=fm.liveswitch.JsonSerializer.serializeStringArray(obj.getHosts())),null!=obj.getInterval()&&(jsonObject.interval=fm.liveswitch.JsonSerializer.serializeInteger(obj.getInterval())),fm.liveswitch.Global.equals(obj.getReconnect(),fm.liveswitch.signalling.Reconnect.NotSet)||(jsonObject.reconnect=fm.liveswitch.signalling.BaseAdvice.serializeReconnect(obj.getReconnect())),fm.liveswitch.Global.equals(obj.getWebSocket(),null)||(jsonObject.websocket=fm.liveswitch.signalling.BaseAdvice.toJson(obj.getWebSocket())),fm.liveswitch.Global.equals(obj.getLongPolling(),null)||(jsonObject["long-polling"]=fm.liveswitch.signalling.BaseAdvice.toJson(obj.getLongPolling())),fm.liveswitch.Global.equals(obj.getCallbackPolling(),null)||(jsonObject["callback-polling"]=fm.liveswitch.signalling.BaseAdvice.toJson(obj.getCallbackPolling()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Advice.prototype.getCallbackPolling=function(){if(0==arguments.length)return this._callbackPolling;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Advice.prototype.getLongPolling=function(){if(0==arguments.length)return this._longPolling;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Advice.prototype.getWebSocket=function(){if(0==arguments.length)return this._webSocket;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Advice.prototype.setCallbackPolling=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._callbackPolling=value},Advice.prototype.setLongPolling=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._longPolling=value},Advice.prototype.setWebSocket=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocket=value},Advice.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.signalling.Advice.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Advice}(fm.liveswitch.signalling.BaseAdvice);signalling.Advice=Advice}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ClientBase=function(_super){function ClientBase(){var _this=this;fm.liveswitch.signalling.ClientBase.fmliveswitchsignallingClientBaseInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchsignallingClientBaseInit(),_this.setRequestTimeout(15e3),_this.setDomainKey(fm.liveswitch.signalling.Defaults.getDomainKey()),_this.setDomainName(fm.liveswitch.signalling.Defaults.getDomainName()),_this.setConcurrencyMode(fm.liveswitch.signalling.ConcurrencyMode.Low),_this}return __extends(ClientBase,_super),ClientBase.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ClientBase],"+_super.prototype.getTypeString.call(this)},ClientBase.prototype.fmliveswitchsignallingClientBaseInit=function(){var _this=this;this.__onCreateHeaders=[],this.__onHttpRequestCreated=[],this.__onHttpResponseReceived=[],this.__onRequestCreated=[],this.__onResponseReceived=[],this.__onUnhandledException=[],this._autoDisconnect=!1,this._disableBinary=!1,this._onCreateHeaders=function(p0){for(var _i=0,_a=_this.__onCreateHeaders;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onHttpRequestCreated=function(p0){for(var _i=0,_a=_this.__onHttpRequestCreated;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onHttpResponseReceived=function(p0){for(var _i=0,_a=_this.__onHttpResponseReceived;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onRequestCreated=function(p0){for(var _i=0,_a=_this.__onRequestCreated;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onResponseReceived=function(p0){for(var _i=0,_a=_this.__onResponseReceived;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onUnhandledException=function(p0){for(var _i=0,_a=_this.__onUnhandledException;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._requestMaxRetries=0,this._requestTimeout=0},ClientBase.sanitizeDomainName=function(domainName){if(fm.liveswitch.signalling.ClientBase.fmliveswitchsignallingClientBaseInitialize(),1==arguments.length){fm.liveswitch.StringExtensions.startsWith(domainName,"http://",fm.liveswitch.StringComparison.Ordinal)?domainName=domainName.substring(fm.liveswitch.StringExtensions.getLength("http://")):fm.liveswitch.StringExtensions.startsWith(domainName,"https://",fm.liveswitch.StringComparison.Ordinal)&&(domainName=domainName.substring(fm.liveswitch.StringExtensions.getLength("https://")));var index=fm.liveswitch.StringExtensions.indexOf(domainName,"/",fm.liveswitch.StringComparison.InvariantCulture);return fm.liveswitch.Global.equals(index,-1)||(domainName=fm.liveswitch.StringExtensions.substring(domainName,0,index)),domainName}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.addOnCreateHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onCreateHeaders,value)},ClientBase.prototype.addOnHttpRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onHttpRequestCreated,value)},ClientBase.prototype.addOnHttpResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onHttpResponseReceived,value)},ClientBase.prototype.addOnRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onRequestCreated,value)},ClientBase.prototype.addOnResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onResponseReceived,value)},ClientBase.prototype.addOnUnhandledException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onUnhandledException,value)},ClientBase.prototype.createHeaders=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getConcurrencyMode(),fm.liveswitch.signalling.ConcurrencyMode.High)?(fm.liveswitch.Global.equals(fm.liveswitch.signalling.ClientBase.fm_liveswitch_signalling_ClientBase__headers,null)&&(fm.liveswitch.signalling.ClientBase.fm_liveswitch_signalling_ClientBase__headers=this.createHeadersNoCache()),fm.liveswitch.signalling.ClientBase.fm_liveswitch_signalling_ClientBase__headers):this.createHeadersNoCache();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.createHeadersNoCache=function(){if(0==arguments.length){var headers=new fm.liveswitch.NameValueCollection;return fm.liveswitch.Global.equals(this.getDomainName(),fm.liveswitch.signalling.Defaults.getDomainName())||headers.set("X-FM-DomainName",this.getDomainName()),fm.liveswitch.Global.equals(this.getDomainKey(),fm.liveswitch.signalling.Defaults.getDomainKey())||headers.set("X-FM-DomainKey",this.getDomainKey()),this.internalOnCreateHeaders(new fm.liveswitch.signalling.MessageRequestArgs(headers)),headers}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getAutoDisconnect=function(){if(0==arguments.length)return this._autoDisconnect;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getAutoDisconnectArgs=function(){if(0==arguments.length)return this._autoDisconnectArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getConcurrencyMode=function(){if(0==arguments.length)return this._concurrencyMode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getDisableBinary=function(){if(0==arguments.length)return this._disableBinary;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getDomainKey=function(){if(0==arguments.length)return this._domainKey;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getDomainName=function(){if(0==arguments.length)return this.__domainName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getEmptyResponseMessage=function(responseArgs){if(1==arguments.length){var str=fm.liveswitch.StringExtensions.format("Empty response received from the server with status code {0}.",fm.liveswitch.NumberExtensions.toString(responseArgs.getStatusCode()));return fm.liveswitch.Global.equals(responseArgs.getTextContent(),null)?(fm.liveswitch.Global.equals(responseArgs.getBinaryContent(),null)||(str=fm.liveswitch.StringExtensions.format("{0} Response body (binary): {1}",str,fm.liveswitch.BitAssistant.getHexString(responseArgs.getBinaryContent()))),str):fm.liveswitch.StringExtensions.format("{0} Response body (text): {1}",str,responseArgs.getTextContent())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getInvalidResponseMessage=function(responseArgs){if(1==arguments.length){var str=fm.liveswitch.StringExtensions.format("Invalid response received from the server with status code {0}.",fm.liveswitch.NumberExtensions.toString(responseArgs.getStatusCode()));return fm.liveswitch.Global.equals(responseArgs.getTextContent(),null)?(fm.liveswitch.Global.equals(responseArgs.getBinaryContent(),null)||(str=fm.liveswitch.StringExtensions.format("{0} Response body (binary): {1}",str,fm.liveswitch.BitAssistant.getHexString(responseArgs.getBinaryContent()))),str):fm.liveswitch.StringExtensions.format("{0} Response body (text): {1}",str,responseArgs.getTextContent())}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getRequestMaxRetries=function(){if(0==arguments.length)return this._requestMaxRetries;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getRequestTimeout=function(){if(0==arguments.length)return this._requestTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.getRequestUrl=function(){if(0==arguments.length)return this.__requestUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.internalOnCreateHeaders=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.raiseBaseEvent(this._onCreateHeaders,e,"OnCreateHeaders")},ClientBase.prototype.internalOnHttpRequestCreated=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.raiseBaseEvent(this._onHttpRequestCreated,e,"OnHttpRequestCreated")},ClientBase.prototype.internalOnHttpResponseReceived=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.raiseBaseEvent(this._onHttpResponseReceived,e,"OnHttpResponseReceived")},ClientBase.prototype.internalOnRequestCreated=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.raiseBaseEvent(this._onRequestCreated,e,"OnRequestCreated")},ClientBase.prototype.internalOnResponseReceived=function(e){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.raiseBaseEvent(this._onResponseReceived,e,"OnResponseReceived")},ClientBase.prototype.raiseBaseEvent=function(eventMethod,args,eventName){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(eventMethod,null))try{eventMethod(args)}catch(exception){this.raiseUnhandledException(exception)||fm.liveswitch.Unhandled.logException(exception,fm.liveswitch.StringExtensions.format("BaseClient -> {0}",eventName))}},ClientBase.prototype.raiseUnhandledException=function(exception){if(1==arguments.length){var onUnhandledException=this._onUnhandledException;if(!fm.liveswitch.Global.equals(onUnhandledException,null)){var p=new fm.liveswitch.UnhandledExceptionArgs(exception);try{onUnhandledException(p)}catch(exception2){fm.liveswitch.Unhandled.logException(exception2,"BaseClient -> OnUnhandledException")}return p.getHandled()}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientBase.prototype.removeOnCreateHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onCreateHeaders,value)},ClientBase.prototype.removeOnHttpRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onHttpRequestCreated,value)},ClientBase.prototype.removeOnHttpResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onHttpResponseReceived,value)},ClientBase.prototype.removeOnRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onRequestCreated,value)},ClientBase.prototype.removeOnResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onResponseReceived,value)},ClientBase.prototype.removeOnUnhandledException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onUnhandledException,value)},ClientBase.prototype.setAutoDisconnect=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._autoDisconnect=value},ClientBase.prototype.setAutoDisconnectArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._autoDisconnectArgs=value},ClientBase.prototype.setConcurrencyMode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._concurrencyMode=value},ClientBase.prototype.setDisableBinary=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableBinary=value},ClientBase.prototype.setDomainKey=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._domainKey=value},ClientBase.prototype.setDomainName=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(value,null)&&(value=fm.liveswitch.signalling.Defaults.getDomainName()),this.__domainName=fm.liveswitch.signalling.ClientBase.sanitizeDomainName(value)},ClientBase.prototype.setRequestMaxRetries=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._requestMaxRetries=fm.liveswitch.Global.toInt(value)},ClientBase.prototype.setRequestTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._requestTimeout=fm.liveswitch.Global.toInt(value)},ClientBase.prototype.setRequestUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Request URL cannot be null.");this.__requestUrl=fm.liveswitch.HttpTransfer.replaceWildcards(value)},ClientBase.fmliveswitchsignallingClientBaseInitialize=function(){fm.liveswitch.signalling.ClientBase.__fmliveswitchsignallingClientBaseInitialized||fm.liveswitch.signalling.ClientBase.__fmliveswitchsignallingClientBaseInitializing||(fm.liveswitch.signalling.ClientBase.__fmliveswitchsignallingClientBaseInitializing=!0,fm.liveswitch.signalling.ClientBase.fm_liveswitch_signalling_ClientBase__headers=null,fm.liveswitch.signalling.ClientBase.__fmliveswitchsignallingClientBaseInitialized=!0,fm.liveswitch.signalling.ClientBase.__fmliveswitchsignallingClientBaseInitializing=!1)},ClientBase.__fmliveswitchsignallingClientBaseInitialized=!1,ClientBase.__fmliveswitchsignallingClientBaseInitializing=!1,ClientBase}(fm.liveswitch.HttpWebRequestSender);signalling.ClientBase=ClientBase}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Client=function(_super){function Client(){var _this=this;fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[0])||fm.liveswitch.Util.isString(arguments[0]))){var requestUrl=__arguments[0];(__arguments=new Array(2))[0]=requestUrl,__arguments[1]=null;var requestUrl_1=__arguments[0],sharedLock=__arguments[1];(__arguments=new Array(3))[0]=requestUrl_1,__arguments[1]=requestUrl_1,__arguments[2]=sharedLock;var requestUrl_2=__arguments[0],streamRequestUrl=__arguments[1],sharedLock_8=__arguments[2];(__arguments=new Array(1))[0]=sharedLock_8;var sharedLock_9=__arguments[0];(_this=_super.call(this)||this).fmliveswitchsignallingClientInit(),_this.__state=fm.liveswitch.signalling.ClientState.New,_this._lastReconnect=fm.liveswitch.signalling.Reconnect.NotSet,_this._subscribedChannelsLock=new Object,_this._subscribedChannels={},_this._subscribedOnReceivesLock=new Object,_this._subscribedOnReceives={},_this._subscribedOnReceivesDynamicProperties={},_this._pendingReceives={},_this._requestQueue={},_this._supportedConnectionTypes=new Array(0),_this._connectionType=fm.liveswitch.signalling.ConnectionType.LongPolling,_this._batchCounterLock=new Object,_this._userId=fm.liveswitch.StringExtensions.empty,_this._deviceId=fm.liveswitch.StringExtensions.empty,_this._counterLock=new Object,_this.__stateLock=sharedLock_9||new Object,_this.setSynchronous(!1),_this.setToken(fm.liveswitch.signalling.Client.generateToken()),fm.liveswitch.Global.equals(fm.liveswitch.Platform.getInstance().getSourceLanguage(),fm.liveswitch.SourceLanguage.TypeScript)||_this.setDisableWebSockets(!0),_super.prototype.setRequestUrl.call(_this,requestUrl_2),_this.setStreamRequestUrl(streamRequestUrl)}else if(2==__arguments.length){requestUrl=__arguments[0],sharedLock=__arguments[1];(__arguments=new Array(3))[0]=requestUrl,__arguments[1]=requestUrl,__arguments[2]=sharedLock;var requestUrl_3=__arguments[0],sharedLock_10=(streamRequestUrl=__arguments[1],__arguments[2]);(__arguments=new Array(1))[0]=sharedLock_10;var sharedLock_11=__arguments[0];(_this=_super.call(this)||this).fmliveswitchsignallingClientInit(),_this.__state=fm.liveswitch.signalling.ClientState.New,_this._lastReconnect=fm.liveswitch.signalling.Reconnect.NotSet,_this._subscribedChannelsLock=new Object,_this._subscribedChannels={},_this._subscribedOnReceivesLock=new Object,_this._subscribedOnReceives={},_this._subscribedOnReceivesDynamicProperties={},_this._pendingReceives={},_this._requestQueue={},_this._supportedConnectionTypes=new Array(0),_this._connectionType=fm.liveswitch.signalling.ConnectionType.LongPolling,_this._batchCounterLock=new Object,_this._userId=fm.liveswitch.StringExtensions.empty,_this._deviceId=fm.liveswitch.StringExtensions.empty,_this._counterLock=new Object,_this.__stateLock=sharedLock_11||new Object,_this.setSynchronous(!1),_this.setToken(fm.liveswitch.signalling.Client.generateToken()),fm.liveswitch.Global.equals(fm.liveswitch.Platform.getInstance().getSourceLanguage(),fm.liveswitch.SourceLanguage.TypeScript)||_this.setDisableWebSockets(!0),_super.prototype.setRequestUrl.call(_this,requestUrl_3),_this.setStreamRequestUrl(streamRequestUrl)}else if(3==__arguments.length){requestUrl=__arguments[0],streamRequestUrl=__arguments[1],sharedLock=__arguments[2];(__arguments=new Array(1))[0]=sharedLock;var sharedLock_12=__arguments[0];(_this=_super.call(this)||this).fmliveswitchsignallingClientInit(),_this.__state=fm.liveswitch.signalling.ClientState.New,_this._lastReconnect=fm.liveswitch.signalling.Reconnect.NotSet,_this._subscribedChannelsLock=new Object,_this._subscribedChannels={},_this._subscribedOnReceivesLock=new Object,_this._subscribedOnReceives={},_this._subscribedOnReceivesDynamicProperties={},_this._pendingReceives={},_this._requestQueue={},_this._supportedConnectionTypes=new Array(0),_this._connectionType=fm.liveswitch.signalling.ConnectionType.LongPolling,_this._batchCounterLock=new Object,_this._userId=fm.liveswitch.StringExtensions.empty,_this._deviceId=fm.liveswitch.StringExtensions.empty,_this._counterLock=new Object,_this.__stateLock=sharedLock_12||new Object,_this.setSynchronous(!1),_this.setToken(fm.liveswitch.signalling.Client.generateToken()),fm.liveswitch.Global.equals(fm.liveswitch.Platform.getInstance().getSourceLanguage(),fm.liveswitch.SourceLanguage.TypeScript)||_this.setDisableWebSockets(!0),_super.prototype.setRequestUrl.call(_this,requestUrl),_this.setStreamRequestUrl(streamRequestUrl)}else{if(1!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[0])&&!fm.liveswitch.Util.isObject(arguments[0]))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");sharedLock=__arguments[0];(_this=_super.call(this)||this).fmliveswitchsignallingClientInit(),_this.__state=fm.liveswitch.signalling.ClientState.New,_this._lastReconnect=fm.liveswitch.signalling.Reconnect.NotSet,_this._subscribedChannelsLock=new Object,_this._subscribedChannels={},_this._subscribedOnReceivesLock=new Object,_this._subscribedOnReceives={},_this._subscribedOnReceivesDynamicProperties={},_this._pendingReceives={},_this._requestQueue={},_this._supportedConnectionTypes=new Array(0),_this._connectionType=fm.liveswitch.signalling.ConnectionType.LongPolling,_this._batchCounterLock=new Object,_this._userId=fm.liveswitch.StringExtensions.empty,_this._deviceId=fm.liveswitch.StringExtensions.empty,_this._counterLock=new Object,_this.__stateLock=sharedLock||new Object,_this.setSynchronous(!1),_this.setToken(fm.liveswitch.signalling.Client.generateToken()),fm.liveswitch.Global.equals(fm.liveswitch.Platform.getInstance().getSourceLanguage(),fm.liveswitch.SourceLanguage.TypeScript)||_this.setDisableWebSockets(!0)}return _this}return __extends(Client,_super),Client.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Client],"+_super.prototype.getTypeString.call(this)},Client.prototype.fmliveswitchsignallingClientInit=function(){var _this=this;this.__onClientChannelReceive=[],this.__onConnectFailure=[],this.__onConnectSuccess=[],this.__onDisconnectComplete=[],this.__onServerSubscribe=[],this.__onServerUnsubscribe=[],this.__onServiceFailure=[],this.__onServiceSuccess=[],this.__onStateChange=[],this.__receivedMessages=!1,this.__webSocketOpened=!1,this._batchCounter=0,this._counter=0,this._disableWebSockets=!1,this._lastInterval=0,this._onClientChannelReceive=function(p0){for(var _i=0,_a=_this.__onClientChannelReceive;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onConnectFailure=function(p0){for(var _i=0,_a=_this.__onConnectFailure;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onConnectSuccess=function(p0){for(var _i=0,_a=_this.__onConnectSuccess;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onDisconnectComplete=function(p0){for(var _i=0,_a=_this.__onDisconnectComplete;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onServerSubscribe=function(p0){for(var _i=0,_a=_this.__onServerSubscribe;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onServerUnsubscribe=function(p0){for(var _i=0,_a=_this.__onServerUnsubscribe;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onServiceFailure=function(p0){for(var _i=0,_a=_this.__onServiceFailure;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onServiceSuccess=function(p0){for(var _i=0,_a=_this.__onServiceSuccess;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._onStateChange=function(p0){for(var _i=0,_a=_this.__onStateChange;_i<_a.length;_i++){(0,_a[_i])(p0)}},this._queueActivated=!1,this._serverTimeout=0,this._synchronous=!1},Client.generateToken=function(){if(fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize(),0==arguments.length){var str=fm.liveswitch.NumberExtensions.toString(fm.liveswitch.DateTime.getUtcNow().getTicks());return fm.liveswitch.StringExtensions.substring(str,fm.liveswitch.StringExtensions.getLength(str)-12,8)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.getChannelForService=function(response,serviceArgs){if(fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize(),2==arguments.length)return fm.liveswitch.Global.equals(response,null)||fm.liveswitch.Global.equals(response.getChannel(),null)?serviceArgs.__channel:response.getChannel();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.getDataBytesForService=function(response){if(fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize(),1==arguments.length)return fm.liveswitch.Global.equals(response,null)||fm.liveswitch.Global.equals(response.getDataBytes(),null)?null:response.getDataBytes();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.getDataJsonForService=function(response){if(fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize(),1==arguments.length)return fm.liveswitch.Global.equals(response,null)||fm.liveswitch.Global.equals(response.getDataJson(),null)?null:response.getDataJson();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.getExtensions=function(response,methodArgs){if(fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize(),2==arguments.length)return fm.liveswitch.Global.equals(response,null)?methodArgs.getExtensions():response.getExtensions();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.getSubscriptionKey=function(channel,tag){if(fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize(),2==arguments.length)return fm.liveswitch.Global.equals(tag,null)?fm.liveswitch.StringExtensions.format("-1|{0}",channel):fm.liveswitch.StringExtensions.format("{0}|{1}{2}",fm.liveswitch.NumberExtensions.toString(fm.liveswitch.StringExtensions.getLength(tag)),tag,channel);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.getTimestamp=function(response){if(fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize(),1==arguments.length)return fm.liveswitch.Global.equals(response,null)?null:response.getTimestamp();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.addOnClientChannelReceive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onClientChannelReceive,value)},Client.prototype.addOnConnectFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onConnectFailure,value)},Client.prototype.addOnConnectSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onConnectSuccess,value)},Client.prototype.addOnDisconnectComplete=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onDisconnectComplete,value)},Client.prototype.addOnServerSubscribe=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onServerSubscribe,value)},Client.prototype.addOnServerUnsubscribe=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onServerUnsubscribe,value)},Client.prototype.addOnServiceFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onServiceFailure,value)},Client.prototype.addOnServiceSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onServiceSuccess,value)},Client.prototype.addOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.add(this.__onStateChange,value)},Client.prototype.addSubscribedChannels=function(tag,channels){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var dictionary=null,_var0=new fm.liveswitch.Holder(dictionary),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._subscribedChannels,tag,_var0);dictionary=_var0.getValue(),_var1||(dictionary={},this._subscribedChannels[tag]=dictionary);for(var _i=0,channels_4=channels;_i<channels_4.length;_i++){var str=channels_4[_i];fm.liveswitch.HashExtensions.containsKey(dictionary,str)||(dictionary[str]=new Object)}},Client.prototype.addSubscribedOnReceive=function(tag,channels,onReceive,dynamicProperties,reconnectAfter){if(5==arguments.length){reconnectAfter=fm.liveswitch.Global.toInt(arguments[4]);var dictionary=null,_var0=new fm.liveswitch.Holder(dictionary),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._subscribedOnReceives,tag,_var0);dictionary=_var0.getValue(),_var1||(dictionary={},this._subscribedOnReceives[tag]=dictionary);for(var _i=0,channels_5=channels;_i<channels_5.length;_i++){var str=channels_5[_i];dictionary[str]=onReceive,this._subscribedOnReceivesDynamicProperties[fm.liveswitch.signalling.Client.getSubscriptionKey(str,tag)]=dynamicProperties}return reconnectAfter=this.processPendingReceives(channels,reconnectAfter)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.addToQueue=function(request,url,synchronous,timeout,maxRetries){if(5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");timeout=fm.liveswitch.Global.toInt(arguments[3]),maxRetries=fm.liveswitch.Global.toInt(arguments[4]),url=fm.liveswitch.StringExtensions.nullCoalesce(url,_super.prototype.getRequestUrl.call(this));var key=fm.liveswitch.StringExtensions.format("{0}+{1}|{2}{3}",[fm.liveswitch.NumberExtensions.toString(timeout),fm.liveswitch.NumberExtensions.toString(maxRetries),synchronous?"1":"0",url]);fm.liveswitch.HashExtensions.containsKey(this._requestQueue,key)||(this._requestQueue[key]=new Array),fm.liveswitch.ArrayExtensions.add(this._requestQueue[key],request)},Client.prototype.checkSynchronous=function(synchronous){if(1==arguments.length)return null!=synchronous?synchronous:null!=this.getSynchronous()&&this.getSynchronous();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.clearSubscribedChannels=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.HashExtensions.clear(this._subscribedChannels)},Client.prototype.connect=function(){if(0==arguments.length)return this.connect(new fm.liveswitch.signalling.ConnectArgs);if(1==arguments.length){var connectArgs=arguments[0];if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.signalling.ClientState.Connected)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.signalling.ClientState.Connecting)){var error=fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.signalling.ClientState.Connecting)?"Client is already connecting.":"Client is already connected.",response=this.createFailureResponse(connectArgs,error);return this.raiseConnectFailure(connectArgs,response),this}return this.setDisconnectException(null),this.setState(fm.liveswitch.signalling.ClientState.Connecting),this.doConnect(connectArgs,0)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.createFailureResponse=function(requestArgs,error){if(2==arguments.length){var response=new fm.liveswitch.signalling.ClientResponse;response.setDynamicProperties(requestArgs.getDynamicProperties());var message=new fm.liveswitch.signalling.Message(fm.liveswitch.signalling.MetaChannels.getHandshake());return message.setExtensions(requestArgs.getExtensions()),message.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),message.setSuccessful(!1),message.setError(error),response.setMessage(message),response.setFailureSource(fm.liveswitch.FailureSource.Message),response.setException(new fm.liveswitch.Exception(error)),response}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.disconnect=function(){var _this=this;if(0==arguments.length)return this.disconnect(new fm.liveswitch.signalling.DisconnectArgs);if(1==arguments.length){var disconnectArgs_1=arguments[0],action=null;if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.signalling.ClientState.Disconnecting)||fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.signalling.ClientState.Disconnected)){var str=fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.signalling.ClientState.Disconnecting)?"Client is already disconnecting.":"Client is already disconnected.",response2=new fm.liveswitch.signalling.ClientResponse;response2.setDynamicProperties(disconnectArgs_1.getDynamicProperties());var message=new fm.liveswitch.signalling.Message(fm.liveswitch.signalling.MetaChannels.getHandshake());message.setExtensions(disconnectArgs_1.getExtensions()),message.setTimestamp(fm.liveswitch.DateTime.getUtcNow()),message.setSuccessful(!1),message.setError(str),response2.setMessage(message),response2.setFailureSource(fm.liveswitch.FailureSource.Message),response2.setException(new fm.liveswitch.Exception(str));var response=response2;return this.raiseDisconnectComplete(disconnectArgs_1,response),this}this.setState(fm.liveswitch.signalling.ClientState.Disconnecting);var request=new fm.liveswitch.signalling.ClientRequest,message2=new fm.liveswitch.signalling.Message(fm.liveswitch.signalling.MetaChannels.getDisconnect());return message2.setExtensions(disconnectArgs_1.getExtensions()),request.setMessage(message2),fm.liveswitch.Global.equals(action,null)&&(action=function(responseArgs){var timer=_this.__restreamBackoffTimer;fm.liveswitch.Global.equals(timer,null)||timer.stop(),_this.__webSocketOpened=!1,_this.setDisconnectException(null),_this.setState(fm.liveswitch.signalling.ClientState.Disconnected),_this.raiseDisconnectComplete(disconnectArgs_1,responseArgs)}),request.setCallback(action),this.addToQueue(request,disconnectArgs_1.getRequestUrl(),this.checkSynchronous(disconnectArgs_1.getSynchronous()),null!=disconnectArgs_1.getRequestTimeout()?disconnectArgs_1.getRequestTimeout():0,null!=disconnectArgs_1.getRequestMaxRetries()?disconnectArgs_1.getRequestMaxRetries():0),this.processQueue(!1),this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.doConnect=function(connectArgs,redirectCount){var _this=this;if(2==arguments.length){var action=null;if((redirectCount=fm.liveswitch.Global.toInt(arguments[1]))>10){var error="Too many redirects.",response=this.createFailureResponse(connectArgs,error);return this.raiseConnectFailure(connectArgs,response),this}var list=new Array;this.getDisableWebSockets()||fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.signalling.ConnectionType.WebSocket),fm.liveswitch.ArrayExtensions.add(list,fm.liveswitch.signalling.ConnectionType.LongPolling),this._supportedConnectionTypes=fm.liveswitch.ArrayExtensions.toArray(list);var request=new fm.liveswitch.signalling.ClientRequest,message=new fm.liveswitch.signalling.Message(fm.liveswitch.signalling.MetaChannels.getHandshake());return message.setClientId(this.getClientId()),message.setStreamId(this.getStreamId()),message.setAuthToken(this.getAuthToken()),message.setUserId(this._userId),message.setDeviceId(this._deviceId),message.setVersion(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__bayeuxVersion),message.setMinimumVersion(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__bayeuxMinimumVersion),message.setSupportedConnectionTypes(this._supportedConnectionTypes),message.setExtensions(connectArgs.getExtensions()),request.setMessage(message),fm.liveswitch.Global.equals(action,null)&&(action=function(responseArgs){if(fm.liveswitch.Global.equals(responseArgs.getException(),null)){_this.setClientId(responseArgs.getMessage().getClientId()),_this.setStreamId(responseArgs.getMessage().getStreamId()),_this.setAuthToken(responseArgs.getMessage().getAuthToken());var serverTimeout=responseArgs.getMessage().getServerTimeout();null!=serverTimeout?_this.setServerTimeout(serverTimeout):_this.setServerTimeout(25e3);for(var index=2147483647,_i=0,_a=responseArgs.getMessage().getSupportedConnectionTypes();_i<_a.length;_i++)for(var type=_a[_i],j=0;j<_this._supportedConnectionTypes.length;j++)if(fm.liveswitch.Global.equals(_this._supportedConnectionTypes[j],type)){j<index&&(index=j);break}index<0||index>_this._supportedConnectionTypes.length?(responseArgs.setFailureSource(fm.liveswitch.FailureSource.Message),responseArgs.setException(new fm.liveswitch.Exception("Could not negotiate a connection type with the server."))):_this._connectionType=_this._supportedConnectionTypes[index]}var flag=!1;fm.liveswitch.Global.equals(responseArgs.getRedirectUrl(),null)||(flag=!0,_this.setRequestUrl(responseArgs.getRedirectUrl())),fm.liveswitch.Global.equals(responseArgs.getStreamRedirectUrl(),null)||(flag=!0,_this.setStreamRequestUrl(responseArgs.getStreamRedirectUrl())),flag?(fm.liveswitch.Global.equals(_this.getRequestUrl(),_this.getStreamRequestUrl())?fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.debug(fm.liveswitch.StringExtensions.format("Client has been redirected to {0}.",_this.getRequestUrl())):fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.debug(fm.liveswitch.StringExtensions.format("Client has been redirected to {0} ({1})).",_this.getRequestUrl(),_this.getStreamRequestUrl())),_this.doConnect(connectArgs,redirectCount+1)):fm.liveswitch.Global.equals(responseArgs.getException(),null)?(_this.processQueue(!0),_this.__receivedMessages=!1,fm.liveswitch.Global.equals(_this._connectionType,fm.liveswitch.signalling.ConnectionType.WebSocket)&&!_this.getDisableWebSockets()&&_this.tryWebSocket()||_this.doLongPolling(),_this.setState(fm.liveswitch.signalling.ClientState.Connected),_this.raiseConnectSuccess(connectArgs,responseArgs)):(_this.setDisconnectException(responseArgs.getException()),_this.setState(fm.liveswitch.signalling.ClientState.Disconnected),_this.raiseConnectFailure(connectArgs,responseArgs))}),request.setCallback(action),this.send(request,connectArgs.getRequestUrl(),this.checkSynchronous(connectArgs.getSynchronous()),null!=connectArgs.getRequestTimeout()?connectArgs.getRequestTimeout():0,null!=connectArgs.getRequestMaxRetries()?connectArgs.getRequestMaxRetries():0),this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.doLongPolling=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.debug("Starting long-polling transport..."),this._connectionType=fm.liveswitch.signalling.ConnectionType.LongPolling,this._streamRequestTransfer=fm.liveswitch.signalling.MessageTransferFactory.getHttpMessageTransfer(),this.stream()},Client.prototype.doSendMany=function(synchronous,requestTransfer,requestArgs,state){var _this=this;if(4!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var callback=null,num=void 0;if(synchronous){fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.getIsVerboseEnabled()&&(num=requestArgs.getMessages().length,fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.verbose(fm.liveswitch.StringExtensions.format("Starting synchronous send for {0} messages...",fm.liveswitch.NumberExtensions.toString(num))));var responseArgs=requestTransfer.send(requestArgs);fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.getIsVerboseEnabled()&&(num=requestArgs.getMessages().length,fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.verbose(fm.liveswitch.StringExtensions.format("Finished synchronous send for {0} messages.",fm.liveswitch.NumberExtensions.toString(num)))),this.sendCallback(state,responseArgs)}else fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.getIsVerboseEnabled()&&(num=requestArgs.getMessages().length,fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.verbose(fm.liveswitch.StringExtensions.format("Starting asynchronous send on {0} for {1} messages...",this._requestTransfer instanceof fm.liveswitch.signalling.WebSocketMessageTransfer?"websocket":"http",fm.liveswitch.NumberExtensions.toString(num)))),fm.liveswitch.Global.equals(callback,null)&&(callback=function(responseArgs){if(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.getIsVerboseEnabled()){var length_51=requestArgs.getMessages().length,num2=fm.liveswitch.Global.equals(responseArgs.getMessages(),null)?0:responseArgs.getMessages().length;fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.verbose(fm.liveswitch.StringExtensions.format("Finished asynchronous send on {0} for {1} messages. Received {2} messages.",_this._requestTransfer instanceof fm.liveswitch.signalling.WebSocketMessageTransfer?"websocket":"http",fm.liveswitch.NumberExtensions.toString(length_51),fm.liveswitch.NumberExtensions.toString(num2)))}_this.sendCallback(state,responseArgs)}),requestTransfer.sendAsync(requestArgs,callback)},Client.prototype.endBatch=function(){if(0==arguments.length){var flag=!1;return this._batchCounter--,this._batchCounter<=0&&(this._batchCounter=0,flag=!0),flag&&this.processQueue(!1),this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getAuthToken=function(){if(0==arguments.length)return this._authToken;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getClientId=function(){if(0==arguments.length)return this._clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDisableWebSockets=function(){if(0==arguments.length)return this._disableWebSockets;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getDisconnectException=function(){if(0==arguments.length)return this._disconnectException;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getServerTimeout=function(){if(0==arguments.length)return this._serverTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getState=function(){if(0==arguments.length)return this.__state;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getStreamId=function(){if(0==arguments.length)return this._streamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getStreamRequestTimeout=function(){if(0==arguments.length)return _super.prototype.getRequestTimeout.call(this)+this.getServerTimeout();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getStreamRequestUrl=function(){if(0==arguments.length)return this.__streamRequestUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getSubscribedChannels=function(){if(0==arguments.length){for(var list=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getKeys(this._subscribedChannels);_i<_a.length;_i++)for(var str=_a[_i],_b=0,_c=fm.liveswitch.HashExtensions.getKeys(this._subscribedChannels[str]);_b<_c.length;_b++){var str2=_c[_b];fm.liveswitch.ArrayExtensions.add(list,str2)}return fm.liveswitch.ArrayExtensions.toArray(list)}if(1==arguments.length){var tag=arguments[0],dictionary=(list=new Array,null),_var0=new fm.liveswitch.Holder(dictionary),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._subscribedChannels,tag,_var0);if(dictionary=_var0.getValue(),_var1||(dictionary=null),!fm.liveswitch.Global.equals(dictionary,null))for(var _d=0,_e=fm.liveswitch.HashExtensions.getKeys(dictionary);_d<_e.length;_d++){str=_e[_d];fm.liveswitch.ArrayExtensions.add(list,str)}return fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getSynchronous=function(){if(0==arguments.length)return this._synchronous;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.getToken=function(){if(0==arguments.length)return this._token;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.inBatch=function(){if(0==arguments.length)return this._batchCounter>0;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.processAdvice=function(advice){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");null!=advice.getInterval()&&(this._lastInterval=advice.getInterval()),fm.liveswitch.Global.equals(advice.getReconnect(),fm.liveswitch.signalling.Reconnect.NotSet)||(this._lastReconnect=advice.getReconnect())},Client.prototype.processMaxRetries=function(maxRetries,isStream){if(2==arguments.length)return maxRetries=fm.liveswitch.Global.toInt(arguments[0]),isStream?0:fm.liveswitch.Global.equals(maxRetries,0)?_super.prototype.getRequestMaxRetries.call(this):maxRetries;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.processPendingReceives=function(channels,reconnectAfter){if(2==arguments.length){reconnectAfter=fm.liveswitch.Global.toInt(arguments[1]);for(var _i=0,channels_6=channels;_i<channels_6.length;_i++){var str=channels_6[_i],list=null,_var0=new fm.liveswitch.Holder(list),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._pendingReceives,str,_var0);if(list=_var0.getValue(),_var1&&fm.liveswitch.HashExtensions.remove(this._pendingReceives,str),!fm.liveswitch.Global.equals(list,null))for(var _a=0,list_13=list;_a<list_13.length;_a++){var message=list_13[_a];try{reconnectAfter=this.receiveMessage(message,reconnectAfter)}catch(exception){fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.error("Could not receive message.",exception)}}}return reconnectAfter}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.processQueue=function(activate){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(activate&&(this._queueActivated=!0),this._queueActivated&&!this.inBatch()){var requestQueue=this._requestQueue;this._requestQueue={};for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(requestQueue);_i<_a.length;_i++){var str=_a[_i],index=fm.liveswitch.StringExtensions.indexOf(str,"|",fm.liveswitch.StringComparison.InvariantCulture),str2=fm.liveswitch.StringExtensions.substring(str,0,index),str3=str.substring(index+1),length_52=fm.liveswitch.StringExtensions.indexOf(str2,"+",fm.liveswitch.StringComparison.InvariantCulture),s=fm.liveswitch.StringExtensions.substring(str2,0,length_52),str5=str2.substring(length_52+1),timeout=fm.liveswitch.ParseAssistant.parseIntegerValue(s),maxRetries=fm.liveswitch.ParseAssistant.parseIntegerValue(str5),synchronous=fm.liveswitch.Global.equals(fm.liveswitch.StringExtensions.substring(str3,0,1),"1"),url=str3.substring(1),requests=fm.liveswitch.ArrayExtensions.toArray(requestQueue[str]);this.sendMany(requests,url,synchronous,timeout,maxRetries)}}},Client.prototype.processRequestUrl=function(requestUrl){if(1==arguments.length){fm.liveswitch.StringExtensions.isNullOrEmpty(requestUrl)&&(requestUrl=_super.prototype.getRequestUrl.call(this));var flag=!1,str=null;if(fm.liveswitch.Global.equals(_super.prototype.getConcurrencyMode.call(this),fm.liveswitch.signalling.ConcurrencyMode.High)){var _var0=new fm.liveswitch.Holder(str),_var1=fm.liveswitch.HashExtensions.tryGetValue(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__requestUrlCache,requestUrl,_var0);str=_var0.getValue(),flag=_var1}if(!flag){if(str=requestUrl,str=fm.liveswitch.HttpTransfer.addQueryToUrl(fm.liveswitch.HttpTransfer.addQueryToUrl(fm.liveswitch.HttpTransfer.addQueryToUrl(str,"token",this.getToken()),"src",fm.liveswitch.HttpWebRequestTransfer.getPlatformCode()),"AspxAutoDetectCookieSupport","1"),!fm.liveswitch.Global.equals(_super.prototype.getConcurrencyMode.call(this),fm.liveswitch.signalling.ConcurrencyMode.High))return str;fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__requestUrlCache[requestUrl]=str}return str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.processServerAction=function(serverAction,reconnectAfter){if(2==arguments.length){if(reconnectAfter=fm.liveswitch.Global.toInt(arguments[1]),fm.liveswitch.Global.equals(serverAction.getBayeuxChannel(),fm.liveswitch.signalling.MetaChannels.getSubscribe())){this.addSubscribedChannels(serverAction.getTag(),serverAction.getChannels());var onReceive=null,_var0=new fm.liveswitch.Holder(onReceive);if(this.raiseServerSubscribe(serverAction,_var0),onReceive=_var0.getValue(),fm.liveswitch.Global.equals(onReceive,null))throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("The server subscribed the client to [{0}], but the client did not set ServerSubscribeArgs.OnReceive to handle incoming messages or ServerSubscribeArgs.OnPresence to handle incoming presence notifications.",fm.liveswitch.StringExtensions.join(", ",serverAction.getChannels())));return reconnectAfter=this.addSubscribedOnReceive(serverAction.getTag(),serverAction.getChannels(),onReceive,serverAction.getDynamicProperties(),reconnectAfter)}return fm.liveswitch.Global.equals(serverAction.getBayeuxChannel(),fm.liveswitch.signalling.MetaChannels.getUnsubscribe())&&(this.removeSubscribedChannels(serverAction.getTag(),serverAction.getChannels()),this.raiseServerUnsubscribe(serverAction),this.removeSubscribedOnReceive(serverAction.getTag(),serverAction.getChannels())),reconnectAfter}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.processTimeout=function(timeout,isStream){if(2==arguments.length)return timeout=fm.liveswitch.Global.toInt(arguments[0]),isStream?this.getStreamRequestTimeout():fm.liveswitch.Global.equals(timeout,0)?_super.prototype.getRequestTimeout.call(this):timeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.raiseAction=function(callback,args,source){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{callback(args)}catch(exception){_super.prototype.raiseUnhandledException.call(this,exception)||fm.liveswitch.Unhandled.logException(exception,source)}},Client.prototype.raiseClientChannelDelivery=function(onReceive,response,reconnectAfter){if(3==arguments.length){reconnectAfter=fm.liveswitch.Global.toInt(arguments[2]);var args2=new fm.liveswitch.signalling.SubscribeReceiveArgs(response.getBayeuxChannel(),response.__dataJson,response.__dataBytes,this._connectionType,reconnectAfter);args2.setExtensions(response.getExtensions()),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response)),args2.setClient(this);var args=args2;return fm.liveswitch.Global.equals(onReceive,null)||this.raiseAction(onReceive,args,"Client -> OnClientChannelReceive"),args.getReconnectAfter()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.raiseConnectFailure=function(connectArgs,response){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var args2=new fm.liveswitch.signalling.ConnectFailureArgs;args2.setException(response.getException()),args2.setExtensions(fm.liveswitch.signalling.Client.getExtensions(response.getMessage(),connectArgs)),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response.getMessage())),args2.setClient(this),args2.setDynamicProperties(connectArgs.getDynamicProperties());var args=args2,onConnectFailure=this._onConnectFailure;fm.liveswitch.Global.equals(onConnectFailure,null)||this.raiseAction(onConnectFailure,args,"Client -> OnConnectFailure"),fm.liveswitch.Global.equals(connectArgs.getOnFailure(),null)||this.raiseAction(connectArgs.getOnFailure(),args,"Client -> Connect -> OnFailure")},Client.prototype.raiseConnectSuccess=function(connectArgs,response){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var args2=new fm.liveswitch.signalling.ConnectSuccessArgs;args2.setExtensions(fm.liveswitch.signalling.Client.getExtensions(response.getMessage(),connectArgs)),args2.setConnectionType(this._connectionType),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response.getMessage())),args2.setClient(this),args2.setDynamicProperties(connectArgs.getDynamicProperties());var args=args2,onConnectSuccess=this._onConnectSuccess;fm.liveswitch.Global.equals(onConnectSuccess,null)||this.raiseAction(onConnectSuccess,args,"Client -> OnConnectSuccess"),fm.liveswitch.Global.equals(connectArgs.getOnSuccess(),null)||this.raiseAction(connectArgs.getOnSuccess(),args,"Client -> Connect -> OnSuccess")},Client.prototype.raiseDeviceChannelDelivery=function(onReceive,response,reconnectAfter){if(3==arguments.length){reconnectAfter=fm.liveswitch.Global.toInt(arguments[2]);var args2=new fm.liveswitch.signalling.SubscribeReceiveArgs(response.getBayeuxChannel(),response.__dataJson,response.__dataBytes,this._connectionType,reconnectAfter);args2.setExtensions(response.getExtensions()),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response)),args2.setClient(this);var args=args2;return fm.liveswitch.Global.equals(onReceive,null)||this.raiseAction(onReceive,args,"Client -> OnDeviceChannelReceive"),args.getReconnectAfter()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.raiseDisconnectComplete=function(disconnectArgs,response){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var args2=new fm.liveswitch.signalling.DisconnectCompleteArgs;args2.setException(response.getException()),args2.setExtensions(fm.liveswitch.signalling.Client.getExtensions(response.getMessage(),disconnectArgs)),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response.getMessage())),args2.setClient(this),args2.setDynamicProperties(disconnectArgs.getDynamicProperties());var args=args2,onDisconnectComplete=this._onDisconnectComplete;fm.liveswitch.Global.equals(onDisconnectComplete,null)||this.raiseAction(onDisconnectComplete,args,"Client -> OnDisconnectComplete"),fm.liveswitch.Global.equals(disconnectArgs.getOnComplete(),null)||this.raiseAction(disconnectArgs.getOnComplete(),args,"Client -> Disconnect -> OnComplete")},Client.prototype.raiseEvent=function(eventMethod,args,eventName){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(args.setClient(this),!fm.liveswitch.Global.equals(eventMethod,null))try{eventMethod(this,args)}catch(exception){_super.prototype.raiseUnhandledException.call(this,exception)||fm.liveswitch.Unhandled.logException(exception,fm.liveswitch.StringExtensions.format("Client -> {0}",eventName))}},Client.prototype.raiseFunction=function(callback,args,source){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{return callback(args)}catch(exception){return _super.prototype.raiseUnhandledException.call(this,exception)||fm.liveswitch.Unhandled.logException(exception,source),null}},Client.prototype.raiseSendException=function(state,exception,failureSource){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,_a=state.getRequests();_i<_a.length;_i++){var request=_a[_i],p=new fm.liveswitch.signalling.ClientResponse;p.setDynamicProperties(request.getDynamicProperties()),p.setException(exception),p.setFailureSource(failureSource),request.getCallback()(p)}},Client.prototype.raiseServerSubscribe=function(serverAction,onReceive){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onServerSubscribe=this._onServerSubscribe;if(fm.liveswitch.Global.equals(onServerSubscribe,null))onReceive.setValue(null);else{var args2=new fm.liveswitch.signalling.ServerSubscribeArgs;args2.__channels=serverAction.getChannels(),args2.setExtensions(serverAction.getExtensions()),args2.setTimestamp(serverAction.getTimestamp()),args2.setClient(this);var args=args2;this.raiseAction(onServerSubscribe,args,"Client -> OnServerSubscribe"),onReceive.setValue(args.getOnReceive())}},Client.prototype.raiseServerUnsubscribe=function(serverAction){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var onServerUnsubscribe=this._onServerUnsubscribe;if(!fm.liveswitch.Global.equals(onServerUnsubscribe,null)){var args=new fm.liveswitch.signalling.ServerUnsubscribeArgs;args.__channels=serverAction.getChannels(),args.setExtensions(serverAction.getExtensions()),args.setTimestamp(serverAction.getTimestamp()),args.setClient(this),this.raiseAction(onServerUnsubscribe,args,"Client -> OnServerUnsubscribe")}},Client.prototype.raiseServiceFailure=function(serviceArgs,response){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var args2=new fm.liveswitch.signalling.ServiceFailureArgs(fm.liveswitch.signalling.Client.getChannelForService(response.getMessage(),serviceArgs),fm.liveswitch.signalling.Client.getDataJsonForService(response.getMessage()),fm.liveswitch.signalling.Client.getDataBytesForService(response.getMessage()));args2.setException(response.getException()),args2.setExtensions(fm.liveswitch.signalling.Client.getExtensions(response.getMessage(),serviceArgs)),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response.getMessage())),args2.setClient(this),args2.setDynamicProperties(serviceArgs.getDynamicProperties()),args2.setSource(response.getFailureSource());var args=args2,onServiceFailure=this._onServiceFailure;fm.liveswitch.Global.equals(onServiceFailure,null)||this.raiseAction(onServiceFailure,args,"Client -> OnServiceFailure"),fm.liveswitch.Global.equals(serviceArgs.getOnFailure(),null)||this.raiseAction(serviceArgs.getOnFailure(),args,"Client -> Service -> OnFailure")},Client.prototype.raiseServiceSuccess=function(serviceArgs,response){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var args2=new fm.liveswitch.signalling.ServiceSuccessArgs(fm.liveswitch.signalling.Client.getChannelForService(response.getMessage(),serviceArgs),fm.liveswitch.signalling.Client.getDataJsonForService(response.getMessage()),fm.liveswitch.signalling.Client.getDataBytesForService(response.getMessage()));args2.setExtensions(fm.liveswitch.signalling.Client.getExtensions(response.getMessage(),serviceArgs)),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response.getMessage())),args2.setClient(this),args2.setDynamicProperties(serviceArgs.getDynamicProperties());var args=args2,onServiceSuccess=this._onServiceSuccess;fm.liveswitch.Global.equals(onServiceSuccess,null)||this.raiseAction(onServiceSuccess,args,"Client -> OnServiceSuccess"),fm.liveswitch.Global.equals(serviceArgs.getOnSuccess(),null)||this.raiseAction(serviceArgs.getOnSuccess(),args,"Client -> Service -> OnSuccess")},Client.prototype.raiseSubscribeReceive=function(onReceive,dynamicProperties,response,reconnectAfter){if(4==arguments.length){reconnectAfter=fm.liveswitch.Global.toInt(arguments[3]);var args2=new fm.liveswitch.signalling.SubscribeReceiveArgs(response.getBayeuxChannel(),response.__dataJson,response.__dataBytes,this._connectionType,reconnectAfter);args2.setExtensions(response.getExtensions()),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response)),args2.setClient(this),args2.setDynamicProperties(dynamicProperties);var args=args2;return fm.liveswitch.Global.equals(onReceive,null)||this.raiseAction(onReceive,args,"Client -> Subscribe -> OnReceive"),args.getReconnectAfter()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.raiseUserChannelDelivery=function(onReceive,response,reconnectAfter){if(3==arguments.length){reconnectAfter=fm.liveswitch.Global.toInt(arguments[2]);var args2=new fm.liveswitch.signalling.SubscribeReceiveArgs(response.getBayeuxChannel(),response.__dataJson,response.__dataBytes,this._connectionType,reconnectAfter);args2.setExtensions(response.getExtensions()),args2.setTimestamp(fm.liveswitch.signalling.Client.getTimestamp(response)),args2.setClient(this);var args=args2;return fm.liveswitch.Global.equals(onReceive,null)||this.raiseAction(onReceive,args,"Client -> OnUserChannelReceive"),args.getReconnectAfter()}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.receiveMessage=function(message,reconnectAfter){if(2==arguments.length){reconnectAfter=fm.liveswitch.Global.toInt(arguments[1]);var dataJson=void 0,dictionary2=void 0;if(fm.liveswitch.Global.equals(message,null))throw new fm.liveswitch.Exception("Signalling client could not process received message. Message was null.");var bayeuxChannel=message.getBayeuxChannel();if(fm.liveswitch.Global.equals(bayeuxChannel,null))throw dataJson=fm.liveswitch.StringExtensions.nullCoalesce(message.__dataJson,fm.liveswitch.StringExtensions.nullCoalesce(message.getDataJson(),"")),new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Signalling client could not process received message. BayeuxChannel was null. Message: {0}.",dataJson));if(fm.liveswitch.StringExtensions.startsWith(bayeuxChannel,fm.liveswitch.signalling.Reserved.getClientChannelPrefix())){if(fm.liveswitch.Global.equals(message.getTag(),fm.liveswitch.signalling.Extensible.getServerActionsExtensionName())){if(dataJson=message.getDataJson(),fm.liveswitch.Global.equals(dataJson,null))throw new fm.liveswitch.Exception("Signalling client could not process received message. Payload was null.");var serverAction=fm.liveswitch.signalling.Message.fromJson(dataJson);return reconnectAfter=this.processServerAction(serverAction,reconnectAfter)}var onClientChannelReceive=this._onClientChannelReceive;return fm.liveswitch.Global.equals(onClientChannelReceive,null)||(reconnectAfter=this.raiseClientChannelDelivery(onClientChannelReceive,message,reconnectAfter)),reconnectAfter}for(var list=new Array,list2=new Array,_i=0,_a=fm.liveswitch.HashExtensions.getKeys(this._subscribedOnReceives);_i<_a.length;_i++)for(var str3=_a[_i],dictionary=this._subscribedOnReceives[str3],_b=0,_c=fm.liveswitch.HashExtensions.getKeys(dictionary);_b<_c.length;_b++){var str4=_c[_b];if(fm.liveswitch.Global.equals(str4,message.getChannel())){fm.liveswitch.ArrayExtensions.add(list,dictionary[str4]),dictionary2=null;var _var0=new fm.liveswitch.Holder(dictionary2),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._subscribedOnReceivesDynamicProperties,fm.liveswitch.signalling.Client.getSubscriptionKey(str4,str3),_var0);dictionary2=_var0.getValue(),_var1||(dictionary2={}),fm.liveswitch.ArrayExtensions.add(list2,dictionary2)}}if(fm.liveswitch.Global.equals(fm.liveswitch.ArrayExtensions.getCount(list),0)){var list3=null,_var2=new fm.liveswitch.Holder(list3),_var3=fm.liveswitch.HashExtensions.tryGetValue(this._pendingReceives,message.getChannel(),_var2);return list3=_var2.getValue(),_var3||(list3=new Array,this._pendingReceives[message.getChannel()]=list3),fm.liveswitch.ArrayExtensions.add(list3,message),reconnectAfter}for(var i=0;i<fm.liveswitch.ArrayExtensions.getCount(list);i++){var onReceive=list[i];dictionary2=null,i<fm.liveswitch.ArrayExtensions.getCount(list2)&&(dictionary2=list2[i]),reconnectAfter=this.raiseSubscribeReceive(onReceive,dictionary2,message,reconnectAfter)}return reconnectAfter}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.removeOnClientChannelReceive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onClientChannelReceive,value)},Client.prototype.removeOnConnectFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onConnectFailure,value)},Client.prototype.removeOnConnectSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onConnectSuccess,value)},Client.prototype.removeOnDisconnectComplete=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onDisconnectComplete,value)},Client.prototype.removeOnServerSubscribe=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onServerSubscribe,value)},Client.prototype.removeOnServerUnsubscribe=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onServerUnsubscribe,value)},Client.prototype.removeOnServiceFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onServiceFailure,value)},Client.prototype.removeOnServiceSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onServiceSuccess,value)},Client.prototype.removeOnStateChange=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.ArrayExtensions.remove(this.__onStateChange,value)},Client.prototype.removeSubscribedChannels=function(tag,channels){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var dictionary=null,_var0=new fm.liveswitch.Holder(dictionary),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._subscribedChannels,tag,_var0);if(dictionary=_var0.getValue(),_var1){for(var _i=0,channels_7=channels;_i<channels_7.length;_i++){var str=channels_7[_i];fm.liveswitch.HashExtensions.remove(dictionary,str)}fm.liveswitch.Global.equals(fm.liveswitch.HashExtensions.getCount(dictionary),0)&&fm.liveswitch.HashExtensions.remove(this._subscribedChannels,tag)}},Client.prototype.removeSubscribedOnReceive=function(tag,channels){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var dictionary=null,_var0=new fm.liveswitch.Holder(dictionary),_var1=fm.liveswitch.HashExtensions.tryGetValue(this._subscribedOnReceives,tag,_var0);if(dictionary=_var0.getValue(),_var1){for(var _i=0,channels_8=channels;_i<channels_8.length;_i++){var str=channels_8[_i];fm.liveswitch.HashExtensions.remove(dictionary,str),fm.liveswitch.HashExtensions.remove(this._subscribedOnReceivesDynamicProperties,fm.liveswitch.signalling.Client.getSubscriptionKey(str,tag))}fm.liveswitch.Global.equals(fm.liveswitch.HashExtensions.getCount(dictionary),0)&&fm.liveswitch.HashExtensions.remove(this._subscribedOnReceives,tag)}},Client.prototype.restream=function(receivedMessages,reconnectAfter){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var callback=null;(reconnectAfter=fm.liveswitch.Global.toInt(arguments[1]))<this._lastInterval&&(reconnectAfter=this._lastInterval),this.__receivedMessages=receivedMessages,fm.liveswitch.Global.equals(_super.prototype.getConcurrencyMode.call(this),fm.liveswitch.signalling.ConcurrencyMode.Low)&&reconnectAfter>0?(fm.liveswitch.Global.equals(callback,null)&&(callback=function(state){_this.stream()}),this.__restreamBackoffTimer=new fm.liveswitch.TimeoutTimer(callback,null),this.__restreamBackoffTimer.start(reconnectAfter)):this.stream()},Client.prototype.send=function(request,url,synchronous,timeout,maxRetries){if(5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");timeout=fm.liveswitch.Global.toInt(arguments[3]),maxRetries=fm.liveswitch.Global.toInt(arguments[4]),this.sendMany([request],url,synchronous,timeout,maxRetries)},Client.prototype.sendCallback=function(state,responseArgs){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(responseArgs.getException(),null))if(fm.liveswitch.Global.equals(responseArgs.getMessages(),null))this.raiseSendException(state,new fm.liveswitch.Exception(_super.prototype.getInvalidResponseMessage.call(this,responseArgs)),fm.liveswitch.FailureSource.Message);else if(fm.liveswitch.Global.equals(responseArgs.getMessages().length,0))this.raiseSendException(state,new fm.liveswitch.Exception(_super.prototype.getEmptyResponseMessage.call(this,responseArgs)),fm.liveswitch.FailureSource.Message);else{for(var list=new Array,_i=0,_a=responseArgs.getMessages();_i<_a.length;_i++){var advice=(message=_a[_i]).getAdvice();if(fm.liveswitch.Global.equals(advice,null)||(this.processAdvice(advice),fm.liveswitch.Global.equals(this._connectionType,fm.liveswitch.signalling.ConnectionType.WebSocket)&&!fm.liveswitch.Global.equals(advice.getWebSocket(),null)&&this.processAdvice(advice.getWebSocket()),fm.liveswitch.Global.equals(this._connectionType,fm.liveswitch.signalling.ConnectionType.LongPolling)&&!fm.liveswitch.Global.equals(advice.getLongPolling(),null)&&this.processAdvice(advice.getLongPolling()),fm.liveswitch.Global.equals(this._connectionType,fm.liveswitch.signalling.ConnectionType.CallbackPolling)&&!fm.liveswitch.Global.equals(advice.getCallbackPolling(),null)&&this.processAdvice(advice.getCallbackPolling())),!state.getIsStream()||fm.liveswitch.Global.equals(message.getBayeuxChannel(),fm.liveswitch.signalling.MetaChannels.getConnect())){if(fm.liveswitch.StringExtensions.isNullOrEmpty(message.getId()))return void this.raiseSendException(state,new fm.liveswitch.Exception(message.getError()),fm.liveswitch.FailureSource.Message);var request=null,_var0=new fm.liveswitch.Holder(request),_var1=fm.liveswitch.HashExtensions.tryGetValue(state.getRequestMapping(),message.getId(),_var0);if(request=_var0.getValue(),!_var1)return fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.error("Unknown response message id."),void this.raiseSendException(state,new fm.liveswitch.Exception(message.getError()),fm.liveswitch.FailureSource.Message);var p=new fm.liveswitch.signalling.ClientResponse;p.setDynamicProperties(request.getDynamicProperties()),p.setMessage(message),p.setRedirectUrl(message.getSuccessful()?null:message.getRedirectUrl()),p.setStreamRedirectUrl(message.getSuccessful()?null:message.getStreamRedirectUrl()),p.setException(message.getSuccessful()?null:new fm.liveswitch.Exception(message.getError())),p.setFailureSource(message.getSuccessful()?fm.liveswitch.FailureSource.None:fm.liveswitch.FailureSource.Message),request.getCallback()(p)}else fm.liveswitch.ArrayExtensions.add(list,message)}if(fm.liveswitch.ArrayExtensions.getCount(list)>0){var response2=new fm.liveswitch.signalling.ClientResponse;response2.setDynamicProperties(state.getRequests()[0].getDynamicProperties()),response2.setMessages(fm.liveswitch.ArrayExtensions.toArray(list)),state.getRequests()[0].getCallback()(response2)}for(var _b=0,_c=responseArgs.getMessages();_b<_c.length;_b++){var message,serverActions=(message=_c[_b]).getServerActions();if(!fm.liveswitch.Global.equals(serverActions,null))for(var _d=0,serverActions_1=serverActions;_d<serverActions_1.length;_d++){var message2=serverActions_1[_d];this.processServerAction(message2,this._lastInterval)}}}else this.raiseSendException(state,responseArgs.getException(),fm.liveswitch.FailureSource.Network)},Client.prototype.sendMany=function(requests,url,synchronous,timeout,maxRetries){if(5!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");timeout=fm.liveswitch.Global.toInt(arguments[3]),maxRetries=fm.liveswitch.Global.toInt(arguments[4]);var isStream=!1;fm.liveswitch.Global.equals(requests.length,1)&&(isStream=fm.liveswitch.Global.equals(requests[0].getMessage().getBayeuxChannel(),fm.liveswitch.signalling.MetaChannels.getConnect()));for(var dictionary={},list=new Array,_i=0,requests_1=requests;_i<requests_1.length;_i++){var request=requests_1[_i];request.getMessage().isConnect()||(request.getMessage().setClientId(this.getClientId()),request.getMessage().setStreamId(this.getStreamId()),request.getMessage().setAuthToken(this.getAuthToken())),_super.prototype.getDisableBinary.call(this)&&request.getMessage().setDisableBinary(_super.prototype.getDisableBinary.call(this)),this._counter++,request.getMessage().setId(fm.liveswitch.NumberExtensions.toString(this._counter)),fm.liveswitch.ArrayExtensions.add(list,request.getMessage()),dictionary[request.getMessage().getId()]=request}var str=this.processRequestUrl(url);url=this.processRequestUrl(url);var requestTransfer=isStream?this._streamRequestTransfer:this._requestTransfer,args2=new fm.liveswitch.signalling.MessageRequestArgs(_super.prototype.createHeaders.call(this));args2.setMessages(fm.liveswitch.ArrayExtensions.toArray(list)),args2.setOnRequestCreated(this.internalOnRequestCreated.bind(this)),args2.setOnCreateHeaders(this.internalOnCreateHeaders.bind(this)),args2.setOnResponseReceived(this.internalOnResponseReceived.bind(this)),args2.setOnHttpRequestCreated(this.internalOnHttpRequestCreated.bind(this)),args2.setOnHttpResponseReceived(this.internalOnHttpResponseReceived.bind(this)),args2.setSender(this),args2.setTimeout(this.processTimeout(timeout,isStream)),args2.setMaxRetries(this.processMaxRetries(maxRetries,isStream)),args2.setUrl(url);var requestArgs=args2;requestArgs.setDynamicValue("frameUrl",str);var state2=new fm.liveswitch.signalling.ClientSendState;state2.setRequests(requests),state2.setRequestMapping(dictionary),state2.setIsStream(isStream);var state=state2;this.doSendMany(synchronous,requestTransfer,requestArgs,state)},Client.prototype.service=function(serviceArgs){var _this=this;if(1==arguments.length){var action=null;if(fm.liveswitch.StringExtensions.isNullOrEmpty(serviceArgs.getChannel()))return this.raiseServiceFailure(serviceArgs,this.createFailureResponse(serviceArgs,"Channel cannot be null.")),this;var request=new fm.liveswitch.signalling.ClientRequest,message=new fm.liveswitch.signalling.Message(fm.liveswitch.signalling.MetaChannels.convertChannelToServiced(serviceArgs.getChannel()));return message.setValidate(!1),message.setDataJson(serviceArgs.getDataJson()),message.setExtensions(serviceArgs.getExtensions()),request.setMessage(message),fm.liveswitch.Global.equals(action,null)&&(action=function(responseArgs){fm.liveswitch.Global.equals(responseArgs.getException(),null)?_this.raiseServiceSuccess(serviceArgs,responseArgs):_this.raiseServiceFailure(serviceArgs,responseArgs)}),request.setCallback(action),this.addToQueue(request,serviceArgs.getRequestUrl(),this.checkSynchronous(serviceArgs.getSynchronous()),null!=serviceArgs.getRequestTimeout()?serviceArgs.getRequestTimeout():0,null!=serviceArgs.getRequestMaxRetries()?serviceArgs.getRequestMaxRetries():0),this.processQueue(!1),this}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.setAuthToken=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._authToken=value},Client.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._clientId=value},Client.prototype.setDisableWebSockets=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disableWebSockets=value},Client.prototype.setDisconnectException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._disconnectException=value},Client.prototype.setServerTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._serverTimeout=fm.liveswitch.Global.toInt(value)},Client.prototype.setState=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(value,this.__state)){if(fm.liveswitch.Global.equals(value,fm.liveswitch.signalling.ClientState.Connecting))this._requestTransfer=fm.liveswitch.signalling.MessageTransferFactory.getHttpMessageTransfer();else if(fm.liveswitch.Global.equals(value,fm.liveswitch.signalling.ClientState.Disconnected)){this.clearSubscribedChannels();try{fm.liveswitch.Global.equals(this._requestTransfer,null)||(this._requestTransfer.shutdown(),this._requestTransfer=null),fm.liveswitch.Global.equals(this._streamRequestTransfer,null)||(this._streamRequestTransfer.shutdown(),this._streamRequestTransfer=null)}catch(exception1){}this._queueActivated=!1}this.__state=value;var onStateChange=this._onStateChange;fm.liveswitch.Global.equals(onStateChange,null)||onStateChange(this)}},Client.prototype.setStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._streamId=value},Client.prototype.setStreamRequestUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("Stream request URL cannot be null.");this.__streamRequestUrl=fm.liveswitch.HttpTransfer.replaceWildcards(value)},Client.prototype.setSynchronous=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._synchronous=value},Client.prototype.setToken=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._token=value},Client.prototype.startBatch=function(){if(0==arguments.length)return this._batchCounter++,this;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Client.prototype.stream=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var request2=new fm.liveswitch.signalling.ClientRequest,message=new fm.liveswitch.signalling.Message(fm.liveswitch.signalling.MetaChannels.getConnect());message.setConnectionType(this._connectionType),message.setAcknowledgement(this.__receivedMessages),request2.setMessage(message),request2.setCallback(this.streamCallback.bind(this));var request=request2;this.send(request,this.getStreamRequestUrl(),!1,0,0)},Client.prototype.streamCallback=function(response){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(this.getState(),fm.liveswitch.signalling.ClientState.Connected))if(fm.liveswitch.Global.equals(response.getException(),null))if(fm.liveswitch.Global.equals(response.getMessages().length,1)&&fm.liveswitch.Global.equals(response.getMessages()[0].getBayeuxChannel(),fm.liveswitch.signalling.MetaChannels.getConnect()))this.restream(!1,this._lastInterval);else{for(var lastInterval=this._lastInterval,_i=0,_a=response.getMessages();_i<_a.length;_i++){var message=_a[_i];try{lastInterval=this.receiveMessage(message,lastInterval)}catch(exception){fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.error("Could not receive message.",exception)}}this.restream(!0,lastInterval)}else fm.liveswitch.Global.equals(response.getFailureSource(),fm.liveswitch.FailureSource.Network)&&fm.liveswitch.Global.equals(this._lastReconnect,fm.liveswitch.signalling.Reconnect.Retry)?(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.info("Temporary network failure in transport.",response.getException()),this.restream(!1,this._lastInterval)):fm.liveswitch.Global.equals(response.getMessages(),null)?(this.setDisconnectException(response.getException()),this.setState(fm.liveswitch.signalling.ClientState.Disconnected)):fm.liveswitch.Global.equals(this._lastReconnect,fm.liveswitch.signalling.Reconnect.Retry)?this.restream(!1,this._lastInterval):(this.setDisconnectException(response.getException()),this.setState(fm.liveswitch.signalling.ClientState.Disconnected))},Client.prototype.tryWebSocket=function(){var _this=this;if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var action=null,action2=null,action3=null;fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.debug("Starting WebSocket transport...");try{var webSocketMessageTransfer=fm.liveswitch.signalling.MessageTransferFactory.getWebSocketMessageTransfer(this.processRequestUrl(this.getStreamRequestUrl()));return webSocketMessageTransfer.setHandshakeTimeout(_super.prototype.getRequestTimeout.call(this)),webSocketMessageTransfer.setSender(this),webSocketMessageTransfer.setStreamTimeout(this.getStreamRequestTimeout()),webSocketMessageTransfer.setOnRequestCreated(this.internalOnHttpRequestCreated.bind(this)),webSocketMessageTransfer.setOnResponseReceived(this.internalOnHttpResponseReceived.bind(this)),fm.liveswitch.Global.equals(action,null)&&(action=function(e){_this.__webSocketOpened=!0,_this.stream()}),webSocketMessageTransfer.setOnOpenSuccess(action),fm.liveswitch.Global.equals(action2,null)&&(action2=function(e){fm.liveswitch.Global.equals(_this.getState(),fm.liveswitch.signalling.ClientState.Disconnecting)||fm.liveswitch.Global.equals(_this.getState(),fm.liveswitch.signalling.ClientState.Disconnected)||(_this.__webSocketOpened?(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.info("Could not open WebSocket stream, but trying again due to previous success.",e.getException()),_this.tryWebSocket()||_this.doLongPolling()):(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.warn("Could not open WebSocket stream.",e.getException()),_this.doLongPolling()))}),webSocketMessageTransfer.setOnOpenFailure(action2),fm.liveswitch.Global.equals(action3,null)&&(action3=function(e){fm.liveswitch.Global.equals(_this.getState(),fm.liveswitch.signalling.ClientState.Disconnecting)||fm.liveswitch.Global.equals(_this.getState(),fm.liveswitch.signalling.ClientState.Disconnected)||(fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.info("Temporary network failure in WebSocket transport.",e.getException()),_this.tryWebSocket())}),webSocketMessageTransfer.setOnStreamFailure(action3),this._connectionType=fm.liveswitch.signalling.ConnectionType.WebSocket,this._streamRequestTransfer=webSocketMessageTransfer,webSocketMessageTransfer.open(_super.prototype.createHeaders.call(this)),!0}catch(exception){return fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log.error("Could not start WebSocket transport.",exception),!1}},Client.fmliveswitchsignallingClientInitialize=function(){fm.liveswitch.signalling.Client.__fmliveswitchsignallingClientInitialized||fm.liveswitch.signalling.Client.__fmliveswitchsignallingClientInitializing||(fm.liveswitch.signalling.Client.__fmliveswitchsignallingClientInitializing=!0,fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client___log=fm.liveswitch.Log.getLogger(new fm.liveswitch.Type("[fm.liveswitch.signalling.Client]")),fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__bayeuxVersion="1.0",fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__bayeuxMinimumVersion="1.0",fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__requestUrlCache={},fm.liveswitch.signalling.Client.fm_liveswitch_signalling_Client__requestUrlCacheLock=new Object,fm.liveswitch.signalling.Client.__fmliveswitchsignallingClientInitialized=!0,fm.liveswitch.signalling.Client.__fmliveswitchsignallingClientInitializing=!1)},Client.__fmliveswitchsignallingClientInitialized=!1,Client.__fmliveswitchsignallingClientInitializing=!1,Client}(fm.liveswitch.signalling.ClientBase);signalling.Client=Client}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ClientArgs=function(){function ClientArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return ClientArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ClientArgs]"},ClientArgs.prototype.getClient=function(){if(0==arguments.length)return this._client;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientArgs.prototype.setClient=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._client=value},ClientArgs}();signalling.ClientArgs=ClientArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ClientRequest=function(_super){function ClientRequest(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ClientRequest,_super),ClientRequest.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ClientRequest],"+_super.prototype.getTypeString.call(this)},ClientRequest.prototype.getCallback=function(){if(0==arguments.length)return this._callback;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientRequest.prototype.getMessage=function(){if(0==arguments.length)return this._message;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientRequest.prototype.setCallback=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._callback=value},ClientRequest.prototype.setMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._message=value},ClientRequest}(fm.liveswitch.Dynamic);signalling.ClientRequest=ClientRequest}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ClientResponse=function(_super){function ClientResponse(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).setFailureSource(fm.liveswitch.FailureSource.None),_this}return __extends(ClientResponse,_super),ClientResponse.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ClientResponse],"+_super.prototype.getTypeString.call(this)},ClientResponse.prototype.getErrorCode=function(){if(0==arguments.length)return fm.liveswitch.signalling.FailureArgs.getErrorCode(this.getException());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.getErrorMessage=function(){if(0==arguments.length)return fm.liveswitch.signalling.FailureArgs.getErrorMessage(this.getException());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.getFailureSource=function(){if(0==arguments.length)return this._failureSource;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.getMessage=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getMessages(),null)||fm.liveswitch.Global.equals(this.getMessages().length,0)?null:this.getMessages()[0];throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.getMessages=function(){if(0==arguments.length)return this._messages;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.getRedirectUrl=function(){if(0==arguments.length)return this._redirectUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.getStreamRedirectUrl=function(){if(0==arguments.length)return this._streamRedirectUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientResponse.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},ClientResponse.prototype.setFailureSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._failureSource=value},ClientResponse.prototype.setMessage=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setMessages([value])},ClientResponse.prototype.setMessages=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messages=value},ClientResponse.prototype.setRedirectUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._redirectUrl=value},ClientResponse.prototype.setStreamRedirectUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._streamRedirectUrl=value},ClientResponse}(fm.liveswitch.Dynamic);signalling.ClientResponse=ClientResponse}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ClientSendState=function(){function ClientSendState(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchsignallingClientSendStateInit()}return ClientSendState.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ClientSendState]"},ClientSendState.prototype.fmliveswitchsignallingClientSendStateInit=function(){this._isStream=!1},ClientSendState.prototype.getIsStream=function(){if(0==arguments.length)return this._isStream;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientSendState.prototype.getRequestMapping=function(){if(0==arguments.length)return this._requestMapping;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientSendState.prototype.getRequests=function(){if(0==arguments.length)return this._requests;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientSendState.prototype.setIsStream=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._isStream=value},ClientSendState.prototype.setRequestMapping=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestMapping=value},ClientSendState.prototype.setRequests=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requests=value},ClientSendState}();signalling.ClientSendState=ClientSendState}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ClientStateWrapper=function(){function ClientStateWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_68=__arguments[0];this._value=value_68}return ClientStateWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ClientStateWrapper]"},ClientStateWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.signalling.ClientState.New?"New":this._value==fm.liveswitch.signalling.ClientState.Connecting?"Connecting":this._value==fm.liveswitch.signalling.ClientState.Connected?"Connected":this._value==fm.liveswitch.signalling.ClientState.Disconnecting?"Disconnecting":this._value==fm.liveswitch.signalling.ClientState.Disconnected?"Disconnected":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ClientStateWrapper}();signalling.ClientStateWrapper=ClientStateWrapper}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Extensible=function(_super){function Extensible(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(Extensible,_super),Extensible.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Extensible],"+_super.prototype.getTypeString.call(this)},Extensible.getAcknowledgementExtensionName=function(){if(0==arguments.length)return"fm.ack";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getAuthTokenExtensionName=function(){if(0==arguments.length)return"fm.authToken";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getDeviceIdExtensionName=function(){if(0==arguments.length)return"fm.deviceId";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getDisableBinaryExtensionName=function(){if(0==arguments.length)return"fm.dbin";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getMetaExtensionName=function(){if(0==arguments.length)return"fm.meta";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getRemoteClientExtensionName=function(){if(0==arguments.length)return"fm.remoteClient";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getServerActionsExtensionName=function(){if(0==arguments.length)return"fm.server";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getServerTimeoutExtensionName=function(){if(0==arguments.length)return"fm.timeout";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getStreamIdExtensionName=function(){if(0==arguments.length)return"fm.streamId";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getTagExtensionName=function(){if(0==arguments.length)return"fm.tag";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.getUserIdExtensionName=function(){if(0==arguments.length)return"fm.userId";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.sharedGetChannel=function(channels){if(1==arguments.length)return fm.liveswitch.Global.equals(channels,null)||fm.liveswitch.Global.equals(channels.length,0)?null:channels[0];throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.sharedGetChannels=function(channels){if(1==arguments.length)return channels;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.sharedSetChannel=function(){if(1==arguments.length){var channel=arguments[0];return fm.liveswitch.signalling.Extensible.sharedSetChannel(channel,!0)}if(2==arguments.length){channel=arguments[0];var validate=arguments[1];if(fm.liveswitch.Global.equals(channel,null))return null;var error=null,_var0=new fm.liveswitch.Holder(error),_var1=fm.liveswitch.signalling.Extensible.validateChannel(channel,_var0);if(error=_var0.getValue(),validate&&!_var1)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Invalid channel. {0}",error));return[channel]}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.sharedSetChannels=function(){if(1==arguments.length){var channels=arguments[0];return fm.liveswitch.signalling.Extensible.sharedSetChannels(channels,!0)}if(2==arguments.length){channels=arguments[0];var validate=arguments[1];if(!fm.liveswitch.Global.equals(channels,null))for(var _i=0,channels_9=channels;_i<channels_9.length;_i++){var str=channels_9[_i],error=null,_var0=new fm.liveswitch.Holder(error),_var1=fm.liveswitch.signalling.Extensible.validateChannel(str,_var0);if(error=_var0.getValue(),validate&&!_var1)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Invalid channel. {0}",error))}return channels}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.validateChannel=function(channel,error){if(2==arguments.length)return fm.liveswitch.Global.equals(channel,null)?(error.setValue("Channel is null."),!1):fm.liveswitch.StringExtensions.startsWith(channel,"/",fm.liveswitch.StringComparison.Ordinal)?fm.liveswitch.StringExtensions.indexOf(channel,"*",fm.liveswitch.StringComparison.Ordinal)>=0?(error.setValue("Channel may not contain asterisks (*)."),!1):fm.liveswitch.signalling.MetaChannels.isReservedChannel(channel)?(error.setValue("Channel is reserved."),!1):(error.setValue(null),!0):(error.setValue("Channel must start with a forward-slash (/)."),!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.copyExtensions=function(extensible){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");for(var _i=0,_a=extensible.getExtensionNames();_i<_a.length;_i++){var str=_a[_i];this.setExtensionValueJson(str,extensible.getExtensionValueJson(str),!1)}},Extensible.prototype.getExtensionCount=function(){if(0==arguments.length)return this.getExtensions().getCount();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.getExtensionNames=function(){if(0==arguments.length)return this.getExtensions().getNames();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.getExtensions=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.__extensions,null)&&(this.__extensions=new fm.liveswitch.signalling.Extensions),this.__extensions;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.getExtensionValueJson=function(name){if(1==arguments.length)return this.getExtensions().getValueJson(name);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.getMetaJson=function(){if(0==arguments.length)return this.getExtensionValueJson(fm.liveswitch.signalling.Extensible.getMetaExtensionName());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.setExtensions=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(this.__extensions,null)&&(this.__extensions=new fm.liveswitch.signalling.Extensions),!fm.liveswitch.Global.equals(value,null))for(var _i=0,_a=value.getNames();_i<_a.length;_i++){var str=_a[_i];this.__extensions.setValueJson(str,value.getValueJson(str))}},Extensible.prototype.setExtensionValueJson=function(){if(2==arguments.length){var name_40=arguments[0],valueJson=arguments[1];this.getExtensions().setValueJson(name_40,valueJson),_super.prototype.setIsDirty.call(this,!0)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var name_41=arguments[0],validate=(valueJson=arguments[1],arguments[2]);this.getExtensions().setValueJson(name_41,valueJson,validate),_super.prototype.setIsDirty.call(this,!0)}},Extensible.prototype.setMetaJson=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.setExtensionValueJson(fm.liveswitch.signalling.Extensible.getMetaExtensionName(),value)},Extensible.prototype.getExtensionValue=function(name){if(1==arguments.length)return fm.liveswitch.Json.deserialize(this.getExtensionValueJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.getMeta=function(){if(0==arguments.length)return fm.liveswitch.Json.deserialize(this.getMetaJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensible.prototype.setExtensionValue=function(){if(2==arguments.length){arguments[arguments.length-1]=fm.liveswitch.Json.serialize(arguments[arguments.length-1]),this.setExtensionValueJson.apply(this,arguments)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");arguments[arguments.length-1]=fm.liveswitch.Json.serialize(arguments[arguments.length-1]),this.setExtensionValueJson.apply(this,arguments)}},Extensible.prototype.setMeta=function(meta){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");arguments[arguments.length-1]=fm.liveswitch.Json.serialize(arguments[arguments.length-1]),this.setMetaJson.apply(this,arguments)},Extensible}(fm.liveswitch.Dynamic);signalling.Extensible=Extensible}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var OutputArgs=function(_super){function OutputArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(OutputArgs,_super),OutputArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.OutputArgs],"+_super.prototype.getTypeString.call(this)},OutputArgs.prototype.getClient=function(){if(0==arguments.length)return this._client;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OutputArgs.prototype.getTimestamp=function(){if(0==arguments.length)return this.__timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},OutputArgs.prototype.setClient=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._client=value},OutputArgs.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__timestamp=null!=value?value:null},OutputArgs}(fm.liveswitch.signalling.Extensible);signalling.OutputArgs=OutputArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var CompleteArgs=function(_super){function CompleteArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(CompleteArgs,_super),CompleteArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.CompleteArgs],"+_super.prototype.getTypeString.call(this)},CompleteArgs}(fm.liveswitch.signalling.OutputArgs);signalling.CompleteArgs=CompleteArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ConcurrencyModeWrapper=function(){function ConcurrencyModeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_69=__arguments[0];this._value=value_69}return ConcurrencyModeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ConcurrencyModeWrapper]"},ConcurrencyModeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.signalling.ConcurrencyMode.Low?"Low":this._value==fm.liveswitch.signalling.ConcurrencyMode.High?"High":this._value==fm.liveswitch.signalling.ConcurrencyMode.Default?"Default":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConcurrencyModeWrapper}();signalling.ConcurrencyModeWrapper=ConcurrencyModeWrapper}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var InputArgs=function(_super){function InputArgs(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchsignallingInputArgsInit(),_this}return __extends(InputArgs,_super),InputArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.InputArgs],"+_super.prototype.getTypeString.call(this)},InputArgs.prototype.fmliveswitchsignallingInputArgsInit=function(){this._requestMaxRetries=0,this._requestTimeout=0,this._synchronous=!1},InputArgs.prototype.getRequestMaxRetries=function(){if(0==arguments.length)return this._requestMaxRetries;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InputArgs.prototype.getRequestTimeout=function(){if(0==arguments.length)return this._requestTimeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InputArgs.prototype.getRequestUrl=function(){if(0==arguments.length)return this._requestUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InputArgs.prototype.getSynchronous=function(){if(0==arguments.length)return this._synchronous;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},InputArgs.prototype.setRequestMaxRetries=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestMaxRetries=value},InputArgs.prototype.setRequestTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestTimeout=value},InputArgs.prototype.setRequestUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestUrl=value},InputArgs.prototype.setSynchronous=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._synchronous=value},InputArgs}(fm.liveswitch.signalling.Extensible);signalling.InputArgs=InputArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ConnectArgs=function(_super){function ConnectArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ConnectArgs,_super),ConnectArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ConnectArgs],"+_super.prototype.getTypeString.call(this)},ConnectArgs.prototype.getOnFailure=function(){if(0==arguments.length)return this._onFailure;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectArgs.prototype.getOnSuccess=function(){if(0==arguments.length)return this._onSuccess;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectArgs.prototype.setOnFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onFailure=value},ConnectArgs.prototype.setOnSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onSuccess=value},ConnectArgs}(fm.liveswitch.signalling.InputArgs);signalling.ConnectArgs=ConnectArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var FailureArgs=function(_super){function FailureArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(FailureArgs,_super),FailureArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.FailureArgs],"+_super.prototype.getTypeString.call(this)},FailureArgs.getErrorCode=function(exception){if(1==arguments.length){var intResult=-1;try{if(fm.liveswitch.Global.equals(exception,null)||fm.liveswitch.StringExtensions.isNullOrEmpty(exception.message))return intResult;if(fm.liveswitch.StringExtensions.indexOf(exception.message,"::",fm.liveswitch.StringComparison.InvariantCulture)<=-1)return intResult;var s=fm.liveswitch.Splitter.split(exception.message,"::")[0],_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(s,_var0);intResult=_var0.getValue(),_var1||(intResult=-1)}catch(obj1){}return intResult}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FailureArgs.getErrorMessage=function(exception){if(1==arguments.length){var message=null;try{if(fm.liveswitch.Global.equals(exception,null)||fm.liveswitch.StringExtensions.isNullOrEmpty(exception.message))return message;if(fm.liveswitch.StringExtensions.indexOf(exception.message,"::",fm.liveswitch.StringComparison.InvariantCulture)>-1)return fm.liveswitch.Splitter.split(exception.message,"::")[1];message=exception.message}catch(obj1){}return message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FailureArgs.prototype.getErrorCode=function(){if(0==arguments.length)return fm.liveswitch.signalling.FailureArgs.getErrorCode(this.getException());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FailureArgs.prototype.getErrorMessage=function(){if(0==arguments.length)return fm.liveswitch.signalling.FailureArgs.getErrorMessage(this.getException());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FailureArgs.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},FailureArgs.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},FailureArgs}(fm.liveswitch.signalling.OutputArgs);signalling.FailureArgs=FailureArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ConnectFailureArgs=function(_super){function ConnectFailureArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ConnectFailureArgs,_super),ConnectFailureArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ConnectFailureArgs],"+_super.prototype.getTypeString.call(this)},ConnectFailureArgs}(fm.liveswitch.signalling.FailureArgs);signalling.ConnectFailureArgs=ConnectFailureArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ConnectionTypeWrapper=function(){function ConnectionTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_70=__arguments[0];this._value=value_70}return ConnectionTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ConnectionTypeWrapper]"},ConnectionTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.signalling.ConnectionType.WebSocket?"WebSocket":this._value==fm.liveswitch.signalling.ConnectionType.LongPolling?"LongPolling":this._value==fm.liveswitch.signalling.ConnectionType.CallbackPolling?"CallbackPolling":this._value==fm.liveswitch.signalling.ConnectionType.IFrame?"IFrame":this._value==fm.liveswitch.signalling.ConnectionType.Flash?"Flash":this._value==fm.liveswitch.signalling.ConnectionType.NotSet?"NotSet":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectionTypeWrapper}();signalling.ConnectionTypeWrapper=ConnectionTypeWrapper}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var SuccessArgs=function(_super){function SuccessArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(SuccessArgs,_super),SuccessArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.SuccessArgs],"+_super.prototype.getTypeString.call(this)},SuccessArgs}(fm.liveswitch.signalling.OutputArgs);signalling.SuccessArgs=SuccessArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ConnectSuccessArgs=function(_super){function ConnectSuccessArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ConnectSuccessArgs,_super),ConnectSuccessArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ConnectSuccessArgs],"+_super.prototype.getTypeString.call(this)},ConnectSuccessArgs.prototype.getConnectionType=function(){if(0==arguments.length)return this._connectionType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ConnectSuccessArgs.prototype.setConnectionType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._connectionType=value},ConnectSuccessArgs}(fm.liveswitch.signalling.SuccessArgs);signalling.ConnectSuccessArgs=ConnectSuccessArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Defaults=function(){function Defaults(){fm.liveswitch.signalling.Defaults.fmliveswitchsignallingDefaultsInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Defaults.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Defaults]"},Defaults.getDomainKey=function(){if(fm.liveswitch.signalling.Defaults.fmliveswitchsignallingDefaultsInitialize(),0==arguments.length)return fm.liveswitch.signalling.Defaults.fm_liveswitch_signalling_Defaults___domainKey;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Defaults.getDomainName=function(){if(fm.liveswitch.signalling.Defaults.fmliveswitchsignallingDefaultsInitialize(),0==arguments.length)return fm.liveswitch.signalling.Defaults.fm_liveswitch_signalling_Defaults___domainName;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Defaults.fmliveswitchsignallingDefaultsInitialize=function(){fm.liveswitch.signalling.Defaults.__fmliveswitchsignallingDefaultsInitialized||fm.liveswitch.signalling.Defaults.__fmliveswitchsignallingDefaultsInitializing||(fm.liveswitch.signalling.Defaults.__fmliveswitchsignallingDefaultsInitializing=!0,fm.liveswitch.signalling.Defaults.fm_liveswitch_signalling_Defaults___domainKey="11111111-1111-1111-1111-111111111111",fm.liveswitch.signalling.Defaults.fm_liveswitch_signalling_Defaults___domainName="localhost",fm.liveswitch.signalling.Defaults.__fmliveswitchsignallingDefaultsInitialized=!0,fm.liveswitch.signalling.Defaults.__fmliveswitchsignallingDefaultsInitializing=!1)},Defaults.__fmliveswitchsignallingDefaultsInitialized=!1,Defaults.__fmliveswitchsignallingDefaultsInitializing=!1,Defaults}();signalling.Defaults=Defaults}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var DeferredStreamState=function(){function DeferredStreamState(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this.fmliveswitchsignallingDeferredStreamStateInit()}return DeferredStreamState.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.DeferredStreamState]"},DeferredStreamState.prototype.fmliveswitchsignallingDeferredStreamStateInit=function(){this._receivedMessages=!1},DeferredStreamState.prototype.getReceivedMessages=function(){if(0==arguments.length)return this._receivedMessages;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DeferredStreamState.prototype.setReceivedMessages=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._receivedMessages=value},DeferredStreamState}();signalling.DeferredStreamState=DeferredStreamState}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var DisconnectArgs=function(_super){function DisconnectArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(DisconnectArgs,_super),DisconnectArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.DisconnectArgs],"+_super.prototype.getTypeString.call(this)},DisconnectArgs.prototype.getOnComplete=function(){if(0==arguments.length)return this._onComplete;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DisconnectArgs.prototype.setOnComplete=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onComplete=value},DisconnectArgs}(fm.liveswitch.signalling.InputArgs);signalling.DisconnectArgs=DisconnectArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var DisconnectCompleteArgs=function(_super){function DisconnectCompleteArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(DisconnectCompleteArgs,_super),DisconnectCompleteArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.DisconnectCompleteArgs],"+_super.prototype.getTypeString.call(this)},DisconnectCompleteArgs.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},DisconnectCompleteArgs.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},DisconnectCompleteArgs}(fm.liveswitch.signalling.CompleteArgs);signalling.DisconnectCompleteArgs=DisconnectCompleteArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Extensions=function(_super){function Extensions(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).setExtensionJsons({}),_this}return __extends(Extensions,_super),Extensions.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Extensions],"+_super.prototype.getTypeString.call(this)},Extensions.fromJson=function(extensionsJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObjectFast(extensionsJson,(function(){return new fm.liveswitch.signalling.Extensions}),(function(obj,name,valueJson){obj.setValueJson(name,fm.liveswitch.JsonSerializer.deserializeRaw(valueJson),!1)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.toJson=function(extensions){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectFast(extensions,(function(obj,jsonObject){for(var _i=0,_a=obj.getNames();_i<_a.length;_i++){var str=_a[_i];jsonObject[str]=fm.liveswitch.JsonSerializer.serializeRaw(obj.getValueJson(str))}}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.prototype.getCount=function(){if(0==arguments.length)return fm.liveswitch.HashExtensions.getCount(this.getExtensionJsons());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.prototype.getExtensionJsons=function(){if(0==arguments.length)return this._extensionJsons;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.prototype.getNames=function(){if(0==arguments.length){var list=new Array;return fm.liveswitch.ArrayExtensions.addRange(list,fm.liveswitch.HashExtensions.getKeys(this.getExtensionJsons())),list}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.prototype.getValueJson=function(name){if(1==arguments.length)return fm.liveswitch.HashExtensions.containsKey(this.getExtensionJsons(),name)?this.getExtensionJsons()[name]:null;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.prototype.setExtensionJsons=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._extensionJsons=value},Extensions.prototype.setValueJson=function(){if(2==arguments.length){var name_44=arguments[0],valueJson=arguments[1];this.setValueJson(name_44,valueJson,!0)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var name_45=arguments[0],validate=(valueJson=arguments[1],arguments[2]);if(fm.liveswitch.Global.equals(valueJson,null))fm.liveswitch.HashExtensions.containsKey(this.getExtensionJsons(),name_45)&&fm.liveswitch.HashExtensions.remove(this.getExtensionJsons(),name_45);else{if(validate&&!fm.liveswitch.JsonSerializer.isValidJson(valueJson))throw new fm.liveswitch.Exception("The value is not valid JSON.");this.getExtensionJsons()[name_45]=valueJson}_super.prototype.setIsDirty.call(this,!0)}},Extensions.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.signalling.Extensions.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.prototype.getValue=function(name){if(1==arguments.length)return fm.liveswitch.Json.deserialize(this.getValueJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Extensions.prototype.setValue=function(){if(2==arguments.length){arguments[arguments.length-1]=fm.liveswitch.Json.serialize(arguments[arguments.length-1]),this.setValueJson.apply(this,arguments)}else{if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");arguments[arguments.length-1]=fm.liveswitch.Json.serialize(arguments[arguments.length-1]),this.setValueJson.apply(this,arguments)}},Extensions}(fm.liveswitch.Dynamic);signalling.Extensions=Extensions}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageTransfer=function(){function MessageTransfer(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");this._requestArgsKey="fm.liveswitch.signalling.messageTransfer.requestArgs"}return MessageTransfer.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageTransfer]"},MessageTransfer.raiseRequestCreated=function(requestArgs){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(requestArgs.getOnRequestCreated(),null)){var p=new fm.liveswitch.signalling.MessageRequestCreatedArgs;p.setRequests(requestArgs.getMessages()),p.setSender(requestArgs.getSender()),requestArgs.getOnRequestCreated()(p)}},MessageTransfer.raiseResponseReceived=function(responseArgs){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(responseArgs.getException(),null)&&!fm.liveswitch.Global.equals(responseArgs.getRequestArgs().getOnResponseReceived(),null)){var p=new fm.liveswitch.signalling.MessageResponseReceivedArgs;p.setResponses(responseArgs.getMessages()),p.setSender(responseArgs.getRequestArgs().getSender()),responseArgs.getRequestArgs().getOnResponseReceived()(p)}},MessageTransfer.prototype.httpResponseArgsToMessageResponseArgs=function(httpResponseArgs){if(1==arguments.length){var dynamicValue=httpResponseArgs.getRequestArgs().getDynamicValue(this._requestArgsKey),args3=new fm.liveswitch.signalling.MessageResponseArgs(dynamicValue);args3.setStatusCode(httpResponseArgs.getStatusCode()),args3.setTextContent(httpResponseArgs.getTextContent()),args3.setBinaryContent(httpResponseArgs.getBinaryContent()),args3.setException(httpResponseArgs.getException()),args3.setRetries(httpResponseArgs.getRetries()),args3.setHeaders(httpResponseArgs.getHeaders());var args2=args3;return fm.liveswitch.StringExtensions.isNullOrEmpty(httpResponseArgs.getTextContent())?(fm.liveswitch.Global.equals(httpResponseArgs.getBinaryContent(),null)||args2.setMessages(fm.liveswitch.signalling.Message.fromBinaryMultiple(httpResponseArgs.getBinaryContent())),args2):(args2.setMessages(fm.liveswitch.signalling.Message.fromJsonArray(httpResponseArgs.getTextContent())),args2)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransfer.prototype.messageRequestArgsToHttpRequestArgs=function(requestArgs){if(1==arguments.length){var args2=new fm.liveswitch.HttpRequestArgs;args2.setMethod(fm.liveswitch.HttpMethod.Post),args2.setOnRequestCreated(requestArgs.getOnHttpRequestCreated()),args2.setOnResponseReceived(requestArgs.getOnHttpResponseReceived()),args2.setSender(requestArgs.getSender()),args2.setTimeout(requestArgs.getTimeout()),args2.setMaxRetries(requestArgs.getMaxRetries()),args2.setUrl(requestArgs.getUrl()),args2.setDynamicProperties(requestArgs.getDynamicProperties());var args=args2;args.setDynamicValue(this._requestArgsKey,requestArgs);for(var _i=0,_a=requestArgs.getHeaders().getAllKeys();_i<_a.length;_i++){var str=_a[_i];args.getHeaders().set(str,requestArgs.getHeaders().get(str))}return args.setTextContent(fm.liveswitch.signalling.Message.toJsonArray(requestArgs.getMessages())),args.getHeaders().set("Content-Type","application/json"),requestArgs.getIsBinary()&&(args.setBinaryContent(fm.liveswitch.signalling.Message.toBinaryMultiple(requestArgs.getMessages())),args.getHeaders().set("Content-Type","application/octet-stream")),args}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransfer.prototype.send=function(requestArgs){if(1==arguments.length){var args=void 0;fm.liveswitch.signalling.MessageTransfer.raiseRequestCreated(requestArgs);try{args=this.sendMessages(requestArgs),fm.liveswitch.signalling.MessageTransfer.raiseResponseReceived(args)}catch(exception){var args2=new fm.liveswitch.signalling.MessageResponseArgs(requestArgs);args2.setException(exception),args=args2}return args}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransfer.prototype.sendAsync=function(requestArgs,callback){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var action=null;fm.liveswitch.signalling.MessageTransfer.raiseRequestCreated(requestArgs);try{fm.liveswitch.Global.equals(action,null)&&(action=function(responseArgs){fm.liveswitch.signalling.MessageTransfer.raiseResponseReceived(responseArgs),callback(responseArgs)}),this.sendMessagesAsync(requestArgs,action)}catch(exception){var p=new fm.liveswitch.signalling.MessageResponseArgs(requestArgs);p.setException(exception),callback(p)}},MessageTransfer}();signalling.MessageTransfer=MessageTransfer}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var HttpMessageTransfer=function(_super){function HttpMessageTransfer(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this)._httpTransfer=fm.liveswitch.HttpTransferFactory.getHttpTransfer(),_this}return __extends(HttpMessageTransfer,_super),HttpMessageTransfer.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.HttpMessageTransfer],"+_super.prototype.getTypeString.call(this)},HttpMessageTransfer.prototype.sendMessages=function(requestArgs){if(1==arguments.length){var args=_super.prototype.messageRequestArgsToHttpRequestArgs.call(this,requestArgs),httpResponseArgs=this._httpTransfer.send(args);return _super.prototype.httpResponseArgsToMessageResponseArgs.call(this,httpResponseArgs)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},HttpMessageTransfer.prototype.sendMessagesAsync=function(requestArgs,callback){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var args=_super.prototype.messageRequestArgsToHttpRequestArgs.call(this,requestArgs);this._httpTransfer.sendAsync(args,(function(httpResponseArgs){var p=_this.httpResponseArgsToMessageResponseArgs(httpResponseArgs);callback(p)}))},HttpMessageTransfer.prototype.shutdown=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{this._httpTransfer.shutdown()}catch(exception1){}},HttpMessageTransfer}(fm.liveswitch.signalling.MessageTransfer);signalling.HttpMessageTransfer=HttpMessageTransfer}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageBase=function(_super){function MessageBase(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return(_this=_super.call(this)||this).fmliveswitchsignallingMessageBaseInit(),_this.setValidate(!0),_this}return __extends(MessageBase,_super),MessageBase.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageBase],"+_super.prototype.getTypeString.call(this)},MessageBase.prototype.fmliveswitchsignallingMessageBaseInit=function(){this.__successful=!1,this._validate=!1},MessageBase.deserializeTimestamp=function(timestampJson){if(1==arguments.length){var str=fm.liveswitch.JsonSerializer.deserializeString(timestampJson),utcNow=fm.liveswitch.DateTime.getUtcNow();if(!fm.liveswitch.StringExtensions.isNullOrEmpty(str)){var strArray=fm.liveswitch.StringExtensions.split(str,[84]);if(!fm.liveswitch.Global.equals(strArray.length,2))return utcNow;var str2=strArray[0],str3=strArray[1];if(strArray=fm.liveswitch.StringExtensions.split(str2,[45]),!fm.liveswitch.Global.equals(strArray.length,3))return utcNow;var s=strArray[0],str5=strArray[1],str6=strArray[2];if(strArray=fm.liveswitch.StringExtensions.split(str3,[58]),!fm.liveswitch.Global.equals(strArray.length,3))return utcNow;var str7=strArray[0],str8=strArray[1];if(strArray=fm.liveswitch.StringExtensions.split(strArray[2],[46]),!fm.liveswitch.Global.equals(strArray.length,2))return utcNow;var str10=strArray[0],intResult=0,num2=0,num3=0,num4=0,num5=0,num6=0,_var0=new fm.liveswitch.Holder(intResult),_var1=fm.liveswitch.ParseAssistant.tryParseIntegerValue(s,_var0);intResult=_var0.getValue();var _var2=new fm.liveswitch.Holder(num2),_var3=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str5,_var2);num2=_var2.getValue();var _var4=new fm.liveswitch.Holder(num3),_var5=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str6,_var4);num3=_var4.getValue();var _var6=new fm.liveswitch.Holder(num4),_var7=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str7,_var6);num4=_var6.getValue();var _var8=new fm.liveswitch.Holder(num5),_var9=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str8,_var8);num5=_var8.getValue();var _var10=new fm.liveswitch.Holder(num6),_var11=fm.liveswitch.ParseAssistant.tryParseIntegerValue(str10,_var10);num6=_var10.getValue(),_var1&&_var3&&_var5&&_var7&&_var9&&_var11&&(utcNow=new fm.liveswitch.DateTime(intResult,num2,num3,num4,num5,num6))}return utcNow}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.serializeTimestamp=function(timestamp){if(1==arguments.length){var str=null;if(null!=timestamp){for(var str2=fm.liveswitch.NumberExtensions.toString(timestamp.getYear()),str3=fm.liveswitch.NumberExtensions.toString(timestamp.getMonth()),str4=fm.liveswitch.NumberExtensions.toString(timestamp.getDay()),str5=fm.liveswitch.NumberExtensions.toString(timestamp.getHour()),str6=fm.liveswitch.NumberExtensions.toString(timestamp.getMinute()),str7=fm.liveswitch.NumberExtensions.toString(timestamp.getSecond());fm.liveswitch.StringExtensions.getLength(str2)<4;)str2=fm.liveswitch.StringExtensions.concat("0",str2);for(;fm.liveswitch.StringExtensions.getLength(str3)<2;)str3=fm.liveswitch.StringExtensions.concat("0",str3);for(;fm.liveswitch.StringExtensions.getLength(str4)<2;)str4=fm.liveswitch.StringExtensions.concat("0",str4);for(;fm.liveswitch.StringExtensions.getLength(str5)<2;)str5=fm.liveswitch.StringExtensions.concat("0",str5);for(;fm.liveswitch.StringExtensions.getLength(str6)<2;)str6=fm.liveswitch.StringExtensions.concat("0",str6);for(;fm.liveswitch.StringExtensions.getLength(str7)<2;)str7=fm.liveswitch.StringExtensions.concat("0",str7);str=fm.liveswitch.StringExtensions.format("{0}-{1}-{2}T{3}:{4}:{5}.00",[str2,str3,str4,str5,str6,str7])}return fm.liveswitch.JsonSerializer.serializeString(str)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getDataBytes=function(){if(0==arguments.length){var decoded=this.__dataBytes,valueJson=this.__dataJson;if(!fm.liveswitch.Global.equals(decoded,null))return decoded;if(!fm.liveswitch.Global.equals(valueJson,null)){var _var0=new fm.liveswitch.Holder(decoded),_var1=fm.liveswitch.Base64.tryDecode(fm.liveswitch.JsonSerializer.deserializeString(valueJson),_var0);return decoded=_var0.getValue(),_var1||(decoded=null),this.__dataBytes=decoded,decoded}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getDataJson=function(){if(0==arguments.length){var str=this.__dataJson,b=this.__dataBytes;return fm.liveswitch.Global.equals(str,null)?fm.liveswitch.Global.equals(b,null)?null:(str=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.Base64.encode(b)),this.__dataJson=str,str):str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getError=function(){if(0==arguments.length)return this.__error;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getIsBinary=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataBytes(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getRedirectUrl=function(){if(0==arguments.length)return this.__redirectUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getStreamRedirectUrl=function(){if(0==arguments.length)return this.__streamRedirectUrl;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getSuccessful=function(){if(0==arguments.length)return this.__successful;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getTimestamp=function(){if(0==arguments.length)return this.__timestamp;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.getValidate=function(){if(0==arguments.length)return this._validate;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.setDataBytes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__dataJson=null,this.__dataBytes=value,_super.prototype.setIsDirty.call(this,!0)},MessageBase.prototype.setDataJson=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(this.getValidate()&&!fm.liveswitch.Global.equals(value,null)&&!fm.liveswitch.JsonSerializer.isValidJson(value))throw new fm.liveswitch.Exception("The value is not valid JSON.");this.__dataJson=value,this.__dataBytes=null,_super.prototype.setIsDirty.call(this,!0)},MessageBase.prototype.setError=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__error=value,_super.prototype.setIsDirty.call(this,!0)},MessageBase.prototype.setRedirectUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__redirectUrl=value,_super.prototype.setIsDirty.call(this,!0)},MessageBase.prototype.setStreamRedirectUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__streamRedirectUrl=value,_super.prototype.setIsDirty.call(this,!0)},MessageBase.prototype.setSuccessful=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__successful=value,_super.prototype.setIsDirty.call(this,!0)},MessageBase.prototype.setTimestamp=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__timestamp=value,_super.prototype.setIsDirty.call(this,!0)},MessageBase.prototype.setValidate=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._validate=value},MessageBase.prototype.getData=function(){if(0==arguments.length)return fm.liveswitch.Json.deserialize(this.getDataJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageBase.prototype.setData=function(data){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");arguments[arguments.length-1]=fm.liveswitch.Json.serialize(arguments[arguments.length-1]),this.setDataJson.apply(this,arguments)},MessageBase}(fm.liveswitch.signalling.Extensible);signalling.MessageBase=MessageBase}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Message=function(_super){function Message(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this)._toJsonNoDataLock=new Object,_this.__connectionType=fm.liveswitch.signalling.ConnectionType.NotSet;else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var bayeuxChannel=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this)._toJsonNoDataLock=new Object,_this.__connectionType=fm.liveswitch.signalling.ConnectionType.NotSet,_super.prototype.setValidate.call(_this,!1),_this.setBayeuxChannel(bayeuxChannel),_super.prototype.setValidate.call(_this,!0)}return _this}return __extends(Message,_super),Message.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Message],"+_super.prototype.getTypeString.call(this)},Message.bytesToInt=function(bytes,index){if(2==arguments.length)return index=fm.liveswitch.Global.toInt(arguments[1]),bytes.length<index+4?-1:fm.liveswitch.Binary.fromBytes32(bytes,index,!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.deserializeConnectionType=function(connectionTypeJson){if(1==arguments.length){var _var0=fm.liveswitch.JsonSerializer.deserializeString(connectionTypeJson);return"long-polling"==_var0?fm.liveswitch.signalling.ConnectionType.LongPolling:"callback-polling"==_var0?fm.liveswitch.signalling.ConnectionType.CallbackPolling:"websocket"==_var0?fm.liveswitch.signalling.ConnectionType.WebSocket:"iframe"==_var0?fm.liveswitch.signalling.ConnectionType.IFrame:"flash"==_var0?fm.liveswitch.signalling.ConnectionType.Flash:fm.liveswitch.signalling.ConnectionType.NotSet}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.deserializeConnectionTypeArray=function(connectionTypesJson){if(1==arguments.length){if(fm.liveswitch.StringExtensions.isNullOrEmpty(connectionTypesJson)||fm.liveswitch.Global.equals(connectionTypesJson,"null")||fm.liveswitch.StringExtensions.getLength(connectionTypesJson)<2||!fm.liveswitch.Global.equals(connectionTypesJson.charCodeAt(0),91)||!fm.liveswitch.Global.equals(connectionTypesJson.charCodeAt(fm.liveswitch.StringExtensions.getLength(connectionTypesJson)-1),93))return null;connectionTypesJson=fm.liveswitch.StringExtensions.substring(connectionTypesJson,1,fm.liveswitch.StringExtensions.getLength(connectionTypesJson)-2);for(var strArray=fm.liveswitch.StringExtensions.split(connectionTypesJson,[44]),typeArray=new Array(strArray.length),i=0;i<strArray.length;i++)typeArray[i]=fm.liveswitch.signalling.Message.deserializeConnectionType(strArray[i]);return typeArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.deserializeRemoteClientTable=function(remoteClientsJson){if(1==arguments.length){var dictionary=fm.liveswitch.JsonSerializer.deserializeObject(remoteClientsJson,(function(){return{}}),(function(remoteClient,name,valueJson){remoteClient[name]=fm.liveswitch.signalling.RemoteClient.fromJsonArray(valueJson)}));return fm.liveswitch.Global.equals(dictionary,null)?null:dictionary}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.fromBinary=function(){if(1==arguments.length){var bytes=arguments[0];return fm.liveswitch.signalling.Message.fromBinary(bytes,0)}if(2==arguments.length){bytes=arguments[0];var offset=fm.liveswitch.Global.toInt(arguments[1]),count=fm.liveswitch.signalling.Message.bytesToInt(bytes,offset);if(count<0)return null;offset+=4;var num2=fm.liveswitch.signalling.Message.bytesToInt(bytes,offset);if(num2<0)return null;offset+=4;var input=fm.liveswitch.BitAssistant.subArray(bytes,offset,count);offset+=count;var buffer2=fm.liveswitch.BitAssistant.subArray(bytes,offset,num2);offset+=num2;var message=fm.liveswitch.signalling.Message.fromJson(fm.liveswitch.Utf8.decode(input,0,input.length));return message.setDataBytes(buffer2),message}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.fromBinaryMultiple=function(bytes){if(1==arguments.length){var index=0,num2=fm.liveswitch.signalling.Message.bytesToInt(bytes,index);if(num2<0)return new Array(0);index+=4;for(var messageArray=new Array(num2),i=0;i<num2;i++){var num4=fm.liveswitch.signalling.Message.bytesToInt(bytes,index);if(num4<0)return new Array(0);index+=4;var message=fm.liveswitch.signalling.Message.fromBinary(bytes,index);if(fm.liveswitch.Global.equals(message,null))return new Array(0);index+=num4,messageArray[i]=message}return messageArray}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.fromJson=function(messageJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObjectFast(messageJson,(function(){return new fm.liveswitch.signalling.Message}),(function(obj,name,valueJson){obj.setValidate(!1);var _var0=name;do{if("advice"==_var0){obj.setAdvice(fm.liveswitch.signalling.Advice.fromJson(valueJson));break}if("channel"==_var0){obj.setBayeuxChannel(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("clientId"==_var0){obj.setClientId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("connectionType"==_var0){obj.setConnectionType(fm.liveswitch.signalling.Message.deserializeConnectionType(valueJson));break}if("data"==_var0){obj.setDataJson(fm.liveswitch.JsonSerializer.deserializeRaw(valueJson));break}if("error"==_var0){obj.setError(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("redirectUrl"==_var0){obj.setRedirectUrl(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("streamRedirectUrl"==_var0){obj.setStreamRedirectUrl(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("ext"==_var0){obj.setExtensions(fm.liveswitch.signalling.Extensions.fromJson(valueJson));break}if("id"==_var0){obj.setId(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("minimumVersion"==_var0){obj.setMinimumVersion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}if("subscription"==_var0){if(!fm.liveswitch.StringExtensions.startsWith(valueJson,"[")){var str=fm.liveswitch.JsonSerializer.deserializeString(valueJson);fm.liveswitch.StringExtensions.isNullOrEmpty(str)||obj.setChannels([str]);break}obj.setChannels(fm.liveswitch.JsonSerializer.deserializeStringArray(valueJson));break}if("successful"==_var0){var nullable=fm.liveswitch.JsonSerializer.deserializeBoolean(valueJson);obj.setSuccessful(fm.liveswitch.Global.equals(nullable,!0));break}if("supportedConnectionTypes"==_var0){obj.setSupportedConnectionTypes(fm.liveswitch.signalling.Message.deserializeConnectionTypeArray(valueJson));break}if("timestamp"==_var0){obj.setTimestamp(fm.liveswitch.signalling.MessageBase.deserializeTimestamp(valueJson));break}if("version"==_var0){obj.setVersion(fm.liveswitch.JsonSerializer.deserializeString(valueJson));break}}while(0);obj.setValidate(!0)}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.fromJsonArray=function(messagesJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(messagesJson,fm.liveswitch.signalling.Message.fromJson.bind(fm.liveswitch.signalling.Message));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.intToBytes=function(i){if(1==arguments.length)return i=fm.liveswitch.Global.toInt(arguments[0]),fm.liveswitch.Binary.toBytes32(i,!1);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.serializeConnectionType=function(connectionType){if(1==arguments.length){var str=null,_var0=connectionType;do{if(_var0==fm.liveswitch.signalling.ConnectionType.WebSocket){str="websocket";break}if(_var0==fm.liveswitch.signalling.ConnectionType.LongPolling){str="long-polling";break}if(_var0==fm.liveswitch.signalling.ConnectionType.CallbackPolling){str="callback-polling";break}if(_var0==fm.liveswitch.signalling.ConnectionType.IFrame){str="iframe";break}if(_var0==fm.liveswitch.signalling.ConnectionType.Flash){str="flash";break}}while(0);return fm.liveswitch.JsonSerializer.serializeString(str)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.serializeConnectionTypeArray=function(connectionTypes){if(1==arguments.length){for(var strArray=new Array(connectionTypes.length),i=0;i<connectionTypes.length;i++)strArray[i]=fm.liveswitch.signalling.Message.serializeConnectionType(connectionTypes[i]);return fm.liveswitch.StringExtensions.concat("[",fm.liveswitch.StringExtensions.join(",",strArray),"]")}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.serializeRemoteClientTable=function(remoteClients){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObject(remoteClients,(function(rc,jsonObject){for(var _i=0,_a=fm.liveswitch.HashExtensions.getKeys(remoteClients);_i<_a.length;_i++){var str=_a[_i];jsonObject[str]=fm.liveswitch.signalling.RemoteClient.toJsonArray(remoteClients[str])}}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.toBinary=function(message){if(1==arguments.length){var dataBytes=null,dataJson=null,_var0=new fm.liveswitch.Holder(dataBytes),_var1=new fm.liveswitch.Holder(dataJson),_var2=message.toJsonNoData(_var0,_var1);dataBytes=_var0.getValue(),dataJson=_var1.getValue();var input=_var2;if(fm.liveswitch.Global.equals(dataBytes,null)){if(fm.liveswitch.Global.equals(dataJson,null))throw new fm.liveswitch.Exception("Message data bytes cannot be null.");throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Message data bytes cannot be null (JSON: {0}).",dataJson))}if(fm.liveswitch.Global.equals(input,null))throw new fm.liveswitch.Exception("Message JSON cannot be null.");var source=fm.liveswitch.Utf8.encode(input),destination=new Uint8Array(8+source.length+dataBytes.length),destinationIndex=0;return fm.liveswitch.BitAssistant.copy(fm.liveswitch.signalling.Message.intToBytes(source.length),0,destination,destinationIndex,4),destinationIndex+=4,fm.liveswitch.BitAssistant.copy(fm.liveswitch.signalling.Message.intToBytes(dataBytes.length),0,destination,destinationIndex,4),destinationIndex+=4,fm.liveswitch.BitAssistant.copy(source,0,destination,destinationIndex,source.length),destinationIndex+=source.length,fm.liveswitch.BitAssistant.copy(dataBytes,0,destination,destinationIndex,dataBytes.length),destinationIndex+=dataBytes.length,destination}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.toBinaryMultiple=function(messages){if(1==arguments.length){for(var num=4,list=new Array,_i=0,messages_1=messages;_i<messages_1.length;_i++){var message=messages_1[_i],item=fm.liveswitch.signalling.Message.toBinary(message);fm.liveswitch.ArrayExtensions.add(list,item),num+=4+item.length}var destination=new Uint8Array(num),destinationIndex=0;fm.liveswitch.BitAssistant.copy(fm.liveswitch.signalling.Message.intToBytes(fm.liveswitch.ArrayExtensions.getCount(list)),0,destination,destinationIndex,4),destinationIndex+=4;for(var _a=0,list_14=list;_a<list_14.length;_a++){var buffer=list_14[_a];fm.liveswitch.BitAssistant.copy(fm.liveswitch.signalling.Message.intToBytes(buffer.length),0,destination,destinationIndex,4),destinationIndex+=4,fm.liveswitch.BitAssistant.copy(buffer,0,destination,destinationIndex,buffer.length),destinationIndex+=buffer.length}return destination}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.toJson=function(message){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectFast(message,(function(obj,jsonObject){fm.liveswitch.Global.equals(obj.getClientId(),null)||(jsonObject.clientId=fm.liveswitch.JsonSerializer.serializeString(obj.getClientId())),null!=obj.getTimestamp()&&(jsonObject.timestamp=fm.liveswitch.signalling.MessageBase.serializeTimestamp(obj.getTimestamp())),fm.liveswitch.Global.equals(obj.getAdvice(),null)||(jsonObject.advice=fm.liveswitch.signalling.Advice.toJson(obj.getAdvice())),fm.liveswitch.Global.equals(obj.getBayeuxChannel(),null)||(jsonObject.channel=fm.liveswitch.JsonSerializer.serializeString(obj.getBayeuxChannel())),fm.liveswitch.Global.equals(obj.getConnectionType(),fm.liveswitch.signalling.ConnectionType.NotSet)||(jsonObject.connectionType=fm.liveswitch.signalling.Message.serializeConnectionType(obj.getConnectionType())),fm.liveswitch.Global.equals(obj.getDataJson(),null)||(jsonObject.data=fm.liveswitch.JsonSerializer.serializeRaw(obj.getDataJson())),fm.liveswitch.Global.equals(obj.getError(),null)||(jsonObject.error=fm.liveswitch.JsonSerializer.serializeString(obj.getError())),fm.liveswitch.Global.equals(obj.getRedirectUrl(),null)||(jsonObject.redirectUrl=fm.liveswitch.JsonSerializer.serializeString(obj.getRedirectUrl())),fm.liveswitch.Global.equals(obj.getStreamRedirectUrl(),null)||(jsonObject.streamRedirectUrl=fm.liveswitch.JsonSerializer.serializeString(obj.getStreamRedirectUrl())),obj.getExtensions().getCount()>0&&(jsonObject.ext=fm.liveswitch.signalling.Extensions.toJson(obj.getExtensions())),fm.liveswitch.Global.equals(obj.getId(),null)||(jsonObject.id=fm.liveswitch.JsonSerializer.serializeString(obj.getId())),fm.liveswitch.Global.equals(obj.getMinimumVersion(),null)||(jsonObject.minimumVersion=fm.liveswitch.JsonSerializer.serializeString(obj.getMinimumVersion())),fm.liveswitch.Global.equals(obj.getChannels(),null)||!fm.liveswitch.Global.equals(obj.getType(),fm.liveswitch.signalling.MessageType.Subscribe)&&!fm.liveswitch.Global.equals(obj.getType(),fm.liveswitch.signalling.MessageType.Unsubscribe)||(jsonObject.subscription=fm.liveswitch.JsonSerializer.serializeStringArray(obj.getChannels())),obj.getSuccessful()&&(jsonObject.successful=fm.liveswitch.JsonSerializer.serializeBoolean(obj.getSuccessful())),fm.liveswitch.Global.equals(obj.getSupportedConnectionTypes(),null)||(jsonObject.supportedConnectionTypes=fm.liveswitch.signalling.Message.serializeConnectionTypeArray(obj.getSupportedConnectionTypes())),fm.liveswitch.Global.equals(obj.getVersion(),null)||(jsonObject.version=fm.liveswitch.JsonSerializer.serializeString(obj.getVersion()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.toJsonArray=function(messages){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(messages,fm.liveswitch.signalling.Message.toJson.bind(fm.liveswitch.signalling.Message));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getAcknowledgement=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeBoolean(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getAcknowledgementExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getAdvice=function(){if(0==arguments.length)return this.__advice;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getAuthToken=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getAuthTokenExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getBayeuxChannel=function(){if(0==arguments.length)return this.__bayeuxChannel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getChannel=function(){if(0==arguments.length)return fm.liveswitch.signalling.Extensible.sharedGetChannel(this.__channels);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getChannels=function(){if(0==arguments.length)return fm.liveswitch.signalling.Extensible.sharedGetChannels(this.__channels);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getClientId=function(){if(0==arguments.length)return this.__clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getConnectionType=function(){if(0==arguments.length)return this.__connectionType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getDeviceId=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getDeviceIdExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getDisableBinary=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeBoolean(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getDisableBinaryExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getId=function(){if(0==arguments.length)return this.__id;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getMinimumVersion=function(){if(0==arguments.length)return this.__minimumVersion;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getRemoteClient=function(){if(0==arguments.length)return fm.liveswitch.signalling.RemoteClient.fromJson(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getRemoteClientExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getServerActions=function(){if(0==arguments.length){var extensionValueJson=_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getServerActionsExtensionName());if(!fm.liveswitch.StringExtensions.isNullOrEmpty(extensionValueJson)){var messageArray=fm.liveswitch.signalling.Message.fromJsonArray(extensionValueJson);if(!fm.liveswitch.Global.equals(messageArray,null))return messageArray}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getServerTimeout=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeInteger(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getServerTimeoutExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getStreamId=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getStreamIdExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getSupportedConnectionTypes=function(){if(0==arguments.length)return this.__supportedConnectionTypes;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.nullCoalesce(fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName())),fm.liveswitch.StringExtensions.empty);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getType=function(){if(0==arguments.length)return fm.liveswitch.signalling.MetaChannels.getMessageType(this.getBayeuxChannel());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getUserId=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getUserIdExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.getVersion=function(){if(0==arguments.length)return this.__version;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isBind=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Bind);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isConnect=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Connect);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isDisconnect=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Disconnect);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isPublish=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Publish);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isService=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Service);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isStream=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Stream);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isSubscribe=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Subscribe);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isSubscribingTo=function(channel){if(1==arguments.length){if(fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Subscribe)){if(fm.liveswitch.Global.equals(this.getChannels(),null))return!1;for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var str=_a[_i];if(fm.liveswitch.Global.equals(str,channel))return!0}}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isUnbind=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Unbind);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isUnsubscribe=function(){if(0==arguments.length)return fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Unsubscribe);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.isUnsubscribingFrom=function(channel){if(1==arguments.length){if(fm.liveswitch.Global.equals(this.getType(),fm.liveswitch.signalling.MessageType.Unsubscribe)){if(fm.liveswitch.Global.equals(this.getChannels(),null))return!1;for(var _i=0,_a=this.getChannels();_i<_a.length;_i++){var str=_a[_i];if(fm.liveswitch.Global.equals(str,channel))return!0}}return!1}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.setAcknowledgement=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getAcknowledgementExtensionName(),fm.liveswitch.JsonSerializer.serializeBoolean(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setAdvice=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__advice=value,_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setAuthToken=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getAuthTokenExtensionName(),fm.liveswitch.JsonSerializer.serializeString(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setBayeuxChannel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__bayeuxChannel=value,fm.liveswitch.signalling.MetaChannels.isServiceChannel(value)?this.setChannel(fm.liveswitch.signalling.MetaChannels.convertChannelFromServiced(value)):fm.liveswitch.signalling.MetaChannels.isMetaChannel(value)||this.setChannel(value),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setChannel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__channels=fm.liveswitch.signalling.Extensible.sharedSetChannel(value,_super.prototype.getValidate.call(this)),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setChannels=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__channels=fm.liveswitch.signalling.Extensible.sharedSetChannels(value,_super.prototype.getValidate.call(this)),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setClientId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__clientId=value,_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setConnectionType=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__connectionType=value,_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setDeviceId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getDeviceIdExtensionName(),fm.liveswitch.JsonSerializer.serializeString(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setDisableBinary=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getDisableBinaryExtensionName(),fm.liveswitch.JsonSerializer.serializeBoolean(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__id=value,_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setMinimumVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__minimumVersion=value,_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setRemoteClient=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getRemoteClientExtensionName(),fm.liveswitch.signalling.RemoteClient.toJson(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setServerActions=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getServerActionsExtensionName(),fm.liveswitch.signalling.Message.toJsonArray(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setServerTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getServerTimeoutExtensionName(),fm.liveswitch.JsonSerializer.serializeInteger(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setStreamId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getStreamIdExtensionName(),fm.liveswitch.JsonSerializer.serializeString(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setSupportedConnectionTypes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__supportedConnectionTypes=value,_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName(),fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.StringExtensions.nullCoalesce(value,fm.liveswitch.StringExtensions.empty)),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setUserId=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getUserIdExtensionName(),fm.liveswitch.JsonSerializer.serializeString(value),!1),_super.prototype.setIsDirty.call(this,!0)},Message.prototype.setVersion=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__version=value,_super.prototype.setIsDirty.call(this,!0)},Message.prototype.toBinary=function(){if(0==arguments.length)return fm.liveswitch.signalling.Message.toBinary(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.signalling.Message.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message.prototype.toJsonNoData=function(dataBytes,dataJson){if(2==arguments.length){var str=void 0;return _super.prototype.getIsBinary.call(this)?(dataBytes.setValue(_super.prototype.getDataBytes.call(this)),dataJson.setValue(null),_super.prototype.setDataBytes.call(this,null),str=this.toJson(),_super.prototype.setDataBytes.call(this,dataBytes.getValue()),str):(dataBytes.setValue(null),dataJson.setValue(_super.prototype.getDataJson.call(this)),_super.prototype.setDataJson.call(this,null),str=this.toJson(),_super.prototype.setDataJson.call(this,dataJson.getValue()),str)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Message}(fm.liveswitch.signalling.MessageBase);signalling.Message=Message}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageRequestArgs=function(_super){function MessageRequestArgs(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)(_this=_super.call(this)||this).fmliveswitchsignallingMessageRequestArgsInit(),_this.setTimeout(15e3);else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var headers=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this).fmliveswitchsignallingMessageRequestArgsInit(),_this.setTimeout(15e3),_this.setHeaders(headers)}return _this}return __extends(MessageRequestArgs,_super),MessageRequestArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageRequestArgs],"+_super.prototype.getTypeString.call(this)},MessageRequestArgs.prototype.fmliveswitchsignallingMessageRequestArgsInit=function(){this._maxRetries=0,this._timeout=0},MessageRequestArgs.prototype.getHeaders=function(){if(0==arguments.length)return this._headers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getIsBinary=function(){if(0==arguments.length){for(var _i=0,_a=this.getMessages();_i<_a.length;_i++){var message=_a[_i];if(fm.liveswitch.Global.equals(message.getDisableBinary(),!0)||!message.getIsBinary())return!1}return!0}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getMaxRetries=function(){if(0==arguments.length)return this._maxRetries;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getMessages=function(){if(0==arguments.length)return this._messages;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getOnCreateHeaders=function(){if(0==arguments.length)return this._onCreateHeaders;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getOnHttpRequestCreated=function(){if(0==arguments.length)return this._onHttpRequestCreated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getOnHttpResponseReceived=function(){if(0==arguments.length)return this._onHttpResponseReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getOnRequestCreated=function(){if(0==arguments.length)return this._onRequestCreated;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getOnResponseReceived=function(){if(0==arguments.length)return this._onResponseReceived;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getTimeout=function(){if(0==arguments.length)return this._timeout;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.getUrl=function(){if(0==arguments.length)return this._url;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestArgs.prototype.setHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._headers=value},MessageRequestArgs.prototype.setMaxRetries=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._maxRetries=fm.liveswitch.Global.toInt(value)},MessageRequestArgs.prototype.setMessages=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messages=value},MessageRequestArgs.prototype.setOnCreateHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onCreateHeaders=value},MessageRequestArgs.prototype.setOnHttpRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onHttpRequestCreated=value},MessageRequestArgs.prototype.setOnHttpResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onHttpResponseReceived=value},MessageRequestArgs.prototype.setOnRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onRequestCreated=value},MessageRequestArgs.prototype.setOnResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onResponseReceived=value},MessageRequestArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},MessageRequestArgs.prototype.setTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._timeout=fm.liveswitch.Global.toInt(value)},MessageRequestArgs.prototype.setUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._url=value},MessageRequestArgs}(fm.liveswitch.Dynamic);signalling.MessageRequestArgs=MessageRequestArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageRequestCreatedArgs=function(){function MessageRequestCreatedArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return MessageRequestCreatedArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageRequestCreatedArgs]"},MessageRequestCreatedArgs.prototype.getRequests=function(){if(0==arguments.length)return this._requests;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestCreatedArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageRequestCreatedArgs.prototype.setRequests=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requests=value},MessageRequestCreatedArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},MessageRequestCreatedArgs}();signalling.MessageRequestCreatedArgs=MessageRequestCreatedArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageResponseArgs=function(_super){function MessageResponseArgs(requestArgs){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var requestArgs_1=__arguments[0];return(_this=_super.call(this)||this).fmliveswitchsignallingMessageResponseArgsInit(),_this.setRequestArgs(requestArgs_1),_this}return __extends(MessageResponseArgs,_super),MessageResponseArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageResponseArgs],"+_super.prototype.getTypeString.call(this)},MessageResponseArgs.prototype.fmliveswitchsignallingMessageResponseArgsInit=function(){this._retries=0,this._statusCode=0},MessageResponseArgs.prototype.getBinaryContent=function(){if(0==arguments.length)return this._binaryContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.getException=function(){if(0==arguments.length)return this._exception;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.getHeaders=function(){if(0==arguments.length)return this._headers;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.getMessages=function(){if(0==arguments.length)return this._messages;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.getRequestArgs=function(){if(0==arguments.length)return this._requestArgs;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.getRetries=function(){if(0==arguments.length)return this._retries;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.getStatusCode=function(){if(0==arguments.length)return this._statusCode;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.getTextContent=function(){if(0==arguments.length)return this._textContent;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseArgs.prototype.setBinaryContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._binaryContent=value},MessageResponseArgs.prototype.setException=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._exception=value},MessageResponseArgs.prototype.setHeaders=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._headers=value},MessageResponseArgs.prototype.setMessages=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._messages=value},MessageResponseArgs.prototype.setRequestArgs=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._requestArgs=value},MessageResponseArgs.prototype.setRetries=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._retries=fm.liveswitch.Global.toInt(value)},MessageResponseArgs.prototype.setStatusCode=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._statusCode=fm.liveswitch.Global.toInt(value)},MessageResponseArgs.prototype.setTextContent=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._textContent=value},MessageResponseArgs}(fm.liveswitch.Dynamic);signalling.MessageResponseArgs=MessageResponseArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageResponseReceivedArgs=function(){function MessageResponseReceivedArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return MessageResponseReceivedArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageResponseReceivedArgs]"},MessageResponseReceivedArgs.prototype.getResponses=function(){if(0==arguments.length)return this._responses;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseReceivedArgs.prototype.getSender=function(){if(0==arguments.length)return this._sender;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageResponseReceivedArgs.prototype.setResponses=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._responses=value},MessageResponseReceivedArgs.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._sender=value},MessageResponseReceivedArgs}();signalling.MessageResponseReceivedArgs=MessageResponseReceivedArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageTransferFactory=function(){function MessageTransferFactory(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return MessageTransferFactory.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageTransferFactory]"},MessageTransferFactory.defaultCreateHttpMessageTransfer=function(){if(0==arguments.length)return new fm.liveswitch.signalling.HttpMessageTransfer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransferFactory.defaultCreateWebSocketMessageTransfer=function(requestUrl){if(1==arguments.length)return new fm.liveswitch.signalling.WebSocketMessageTransfer(requestUrl);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransferFactory.getCreateHttpMessageTransfer=function(){if(0==arguments.length)return fm.liveswitch.signalling.MessageTransferFactory.fm_liveswitch_signalling_MessageTransferFactory__createHttpMessageTransfer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransferFactory.getCreateWebSocketMessageTransfer=function(){if(0==arguments.length)return fm.liveswitch.signalling.MessageTransferFactory.fm_liveswitch_signalling_MessageTransferFactory__createWebSocketMessageTransfer;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransferFactory.getHttpMessageTransfer=function(){if(0==arguments.length){fm.liveswitch.Global.equals(fm.liveswitch.signalling.MessageTransferFactory.getCreateHttpMessageTransfer(),null)&&fm.liveswitch.signalling.MessageTransferFactory.setCreateHttpMessageTransfer(fm.liveswitch.signalling.MessageTransferFactory.defaultCreateHttpMessageTransfer.bind(fm.liveswitch.signalling.MessageTransferFactory));var transfer=fm.liveswitch.signalling.MessageTransferFactory.getCreateHttpMessageTransfer()();return fm.liveswitch.Global.equals(transfer,null)&&(transfer=fm.liveswitch.signalling.MessageTransferFactory.defaultCreateHttpMessageTransfer()),transfer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransferFactory.getWebSocketMessageTransfer=function(requestUrl){if(1==arguments.length){fm.liveswitch.Global.equals(fm.liveswitch.signalling.MessageTransferFactory.getCreateWebSocketMessageTransfer(),null)&&fm.liveswitch.signalling.MessageTransferFactory.setCreateWebSocketMessageTransfer(fm.liveswitch.signalling.MessageTransferFactory.defaultCreateWebSocketMessageTransfer.bind(fm.liveswitch.signalling.MessageTransferFactory));var transfer=fm.liveswitch.signalling.MessageTransferFactory.getCreateWebSocketMessageTransfer()(requestUrl);return fm.liveswitch.Global.equals(transfer,null)&&(transfer=fm.liveswitch.signalling.MessageTransferFactory.defaultCreateWebSocketMessageTransfer(requestUrl)),transfer}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTransferFactory.setCreateHttpMessageTransfer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.signalling.MessageTransferFactory.fm_liveswitch_signalling_MessageTransferFactory__createHttpMessageTransfer=value},MessageTransferFactory.setCreateWebSocketMessageTransfer=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.signalling.MessageTransferFactory.fm_liveswitch_signalling_MessageTransferFactory__createWebSocketMessageTransfer=value},MessageTransferFactory}();signalling.MessageTransferFactory=MessageTransferFactory}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MessageTypeWrapper=function(){function MessageTypeWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_71=__arguments[0];this._value=value_71}return MessageTypeWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MessageTypeWrapper]"},MessageTypeWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.signalling.MessageType.Connect?"Connect":this._value==fm.liveswitch.signalling.MessageType.Disconnect?"Disconnect":this._value==fm.liveswitch.signalling.MessageType.Bind?"Bind":this._value==fm.liveswitch.signalling.MessageType.Unbind?"Unbind":this._value==fm.liveswitch.signalling.MessageType.Subscribe?"Subscribe":this._value==fm.liveswitch.signalling.MessageType.Unsubscribe?"Unsubscribe":this._value==fm.liveswitch.signalling.MessageType.Publish?"Publish":this._value==fm.liveswitch.signalling.MessageType.Service?"Service":this._value==fm.liveswitch.signalling.MessageType.Stream?"Stream":this._value==fm.liveswitch.signalling.MessageType.Unknown?"Unknown":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MessageTypeWrapper}();signalling.MessageTypeWrapper=MessageTypeWrapper}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var MetaChannels=function(){function MetaChannels(){}return MetaChannels.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.MetaChannels]"},MetaChannels.convertChannelFromServiced=function(channel){if(1==arguments.length)return fm.liveswitch.signalling.MetaChannels.isServiceChannel(channel)?channel.substring(fm.liveswitch.StringExtensions.getLength(fm.liveswitch.signalling.MetaChannels.getServicePrefix())-1):channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.convertChannelToServiced=function(channel){if(1==arguments.length)return fm.liveswitch.Global.equals(channel,null)||fm.liveswitch.StringExtensions.getLength(channel)<1?fm.liveswitch.signalling.MetaChannels.getServicePrefix():fm.liveswitch.StringExtensions.concat(fm.liveswitch.signalling.MetaChannels.getServicePrefix(),channel.substring(1));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getBind=function(){if(0==arguments.length)return"/meta/bind";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getConnect=function(){if(0==arguments.length)return"/meta/connect";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getDisconnect=function(){if(0==arguments.length)return"/meta/disconnect";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getHandshake=function(){if(0==arguments.length)return"/meta/handshake";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getMessageType=function(bayeuxChannel){if(1==arguments.length)return fm.liveswitch.Global.equals(bayeuxChannel,fm.liveswitch.signalling.MetaChannels.getHandshake())?fm.liveswitch.signalling.MessageType.Connect:fm.liveswitch.Global.equals(bayeuxChannel,fm.liveswitch.signalling.MetaChannels.getConnect())?fm.liveswitch.signalling.MessageType.Stream:fm.liveswitch.Global.equals(bayeuxChannel,fm.liveswitch.signalling.MetaChannels.getDisconnect())?fm.liveswitch.signalling.MessageType.Disconnect:fm.liveswitch.Global.equals(bayeuxChannel,fm.liveswitch.signalling.MetaChannels.getBind())?fm.liveswitch.signalling.MessageType.Bind:fm.liveswitch.Global.equals(bayeuxChannel,fm.liveswitch.signalling.MetaChannels.getUnbind())?fm.liveswitch.signalling.MessageType.Unbind:fm.liveswitch.Global.equals(bayeuxChannel,fm.liveswitch.signalling.MetaChannels.getSubscribe())?fm.liveswitch.signalling.MessageType.Subscribe:fm.liveswitch.Global.equals(bayeuxChannel,fm.liveswitch.signalling.MetaChannels.getUnsubscribe())?fm.liveswitch.signalling.MessageType.Unsubscribe:fm.liveswitch.signalling.MetaChannels.isServiceChannel(bayeuxChannel)?fm.liveswitch.signalling.MessageType.Service:fm.liveswitch.signalling.MetaChannels.isMetaChannel(bayeuxChannel)?fm.liveswitch.signalling.MessageType.Unknown:fm.liveswitch.signalling.MessageType.Publish;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getMetaPrefix=function(){if(0==arguments.length)return"/meta/";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getServicePrefix=function(){if(0==arguments.length)return"/service/";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getSubscribe=function(){if(0==arguments.length)return"/meta/subscribe";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getUnbind=function(){if(0==arguments.length)return"/meta/unbind";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.getUnsubscribe=function(){if(0==arguments.length)return"/meta/unsubscribe";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.isMetaChannel=function(channel){if(1==arguments.length)return!fm.liveswitch.Global.equals(channel,null)&&fm.liveswitch.StringExtensions.startsWith(channel,fm.liveswitch.signalling.MetaChannels.getMetaPrefix(),fm.liveswitch.StringComparison.Ordinal);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.isReservedChannel=function(channel){if(1==arguments.length)return fm.liveswitch.signalling.MetaChannels.isMetaChannel(channel)||fm.liveswitch.signalling.MetaChannels.isServiceChannel(channel);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels.isServiceChannel=function(channel){if(1==arguments.length)return!fm.liveswitch.Global.equals(channel,null)&&fm.liveswitch.StringExtensions.startsWith(channel,fm.liveswitch.signalling.MetaChannels.getServicePrefix(),fm.liveswitch.StringComparison.Ordinal);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},MetaChannels}();signalling.MetaChannels=MetaChannels}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ReconnectWrapper=function(){function ReconnectWrapper(value){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var value_72=__arguments[0];this._value=value_72}return ReconnectWrapper.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ReconnectWrapper]"},ReconnectWrapper.prototype.toString=function(){if(0==arguments.length)return this._value==fm.liveswitch.signalling.Reconnect.Retry?"Retry":this._value==fm.liveswitch.signalling.Reconnect.Handshake?"Handshake":this._value==fm.liveswitch.signalling.Reconnect.None?"None":this._value==fm.liveswitch.signalling.Reconnect.NotSet?"NotSet":"";throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ReconnectWrapper}();signalling.ReconnectWrapper=ReconnectWrapper}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var RemoteClient=function(_super){function RemoteClient(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length){(__arguments=new Array(2))[0]=null,__arguments[1]=null;var clientId=__arguments[0],streamId=__arguments[1];(_this=_super.call(this)||this).__clientId=clientId,_this.__streamId=streamId}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");clientId=__arguments[0],streamId=__arguments[1];(_this=_super.call(this)||this).__clientId=clientId,_this.__streamId=streamId}return _this}return __extends(RemoteClient,_super),RemoteClient.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.RemoteClient],"+_super.prototype.getTypeString.call(this)},RemoteClient.createRemoteClient=function(){if(0==arguments.length)return new fm.liveswitch.signalling.RemoteClient;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.deserializeRemoteClient=function(remoteClientJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObjectFast(remoteClientJson,fm.liveswitch.signalling.RemoteClient.createRemoteClient.bind(fm.liveswitch.signalling.RemoteClient),fm.liveswitch.signalling.RemoteClient.deserializeRemoteClientCallback.bind(fm.liveswitch.signalling.RemoteClient));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.deserializeRemoteClientArray=function(remoteClientsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(remoteClientsJson,fm.liveswitch.signalling.RemoteClient.fromJson.bind(fm.liveswitch.signalling.RemoteClient));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.deserializeRemoteClientCallback=function(remoteClient,name,valueJson){if(3!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"clientId")?remoteClient.__clientId=fm.liveswitch.JsonSerializer.deserializeString(valueJson):fm.liveswitch.Global.equals(str,"streamId")&&(remoteClient.__streamId=fm.liveswitch.JsonSerializer.deserializeString(valueJson)))},RemoteClient.fromJson=function(remoteClientJson){if(1==arguments.length)return fm.liveswitch.signalling.RemoteClient.deserializeRemoteClient(remoteClientJson);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.fromJsonArray=function(remoteClientsJson){if(1==arguments.length)return fm.liveswitch.signalling.RemoteClient.deserializeRemoteClientArray(remoteClientsJson);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.serializeRemoteClient=function(remoteClient){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectFast(remoteClient,fm.liveswitch.signalling.RemoteClient.serializeRemoteClientCallback.bind(fm.liveswitch.signalling.RemoteClient));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.serializeRemoteClientArray=function(remoteClients){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(remoteClients,fm.liveswitch.signalling.RemoteClient.toJson.bind(fm.liveswitch.signalling.RemoteClient));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.serializeRemoteClientCallback=function(remoteClient,jsonObject){if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");fm.liveswitch.Global.equals(remoteClient.getClientId(),null)||(jsonObject.clientId=fm.liveswitch.JsonSerializer.serializeString(remoteClient.getClientId())),fm.liveswitch.Global.equals(remoteClient.getStreamId(),null)||(jsonObject.streamId=fm.liveswitch.JsonSerializer.serializeString(remoteClient.getStreamId()))},RemoteClient.toJson=function(remoteClient){if(1==arguments.length)return fm.liveswitch.signalling.RemoteClient.serializeRemoteClient(remoteClient);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.toJsonArray=function(remoteClients){if(1==arguments.length)return fm.liveswitch.signalling.RemoteClient.serializeRemoteClientArray(remoteClients);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.prototype.getClientId=function(){if(0==arguments.length)return this.__clientId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.prototype.getStreamId=function(){if(0==arguments.length)return this.__streamId;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.signalling.RemoteClient.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},RemoteClient}(fm.liveswitch.Serializable);signalling.RemoteClient=RemoteClient}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Reserved=function(){function Reserved(){fm.liveswitch.signalling.Reserved.fmliveswitchsignallingReservedInitialize();for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.")}return Reserved.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Reserved]"},Reserved.getClientChannel=function(clientId){if(fm.liveswitch.signalling.Reserved.fmliveswitchsignallingReservedInitialize(),1==arguments.length)return fm.liveswitch.StringExtensions.format("{0}/{1}",fm.liveswitch.signalling.Reserved.getClientChannelPrefix(),clientId);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Reserved.getClientChannelPrefix=function(){if(fm.liveswitch.signalling.Reserved.fmliveswitchsignallingReservedInitialize(),0==arguments.length)return fm.liveswitch.signalling.Reserved.fm_liveswitch_signalling_Reserved___clientChannelPrefix;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Reserved.fmliveswitchsignallingReservedInitialize=function(){fm.liveswitch.signalling.Reserved.__fmliveswitchsignallingReservedInitialized||fm.liveswitch.signalling.Reserved.__fmliveswitchsignallingReservedInitializing||(fm.liveswitch.signalling.Reserved.__fmliveswitchsignallingReservedInitializing=!0,fm.liveswitch.signalling.Reserved.fm_liveswitch_signalling_Reserved___clientChannelPrefix="/fm/client",fm.liveswitch.signalling.Reserved.__fmliveswitchsignallingReservedInitialized=!0,fm.liveswitch.signalling.Reserved.__fmliveswitchsignallingReservedInitializing=!1)},Reserved.__fmliveswitchsignallingReservedInitialized=!1,Reserved.__fmliveswitchsignallingReservedInitializing=!1,Reserved}();signalling.Reserved=Reserved}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ServerArgs=function(_super){function ServerArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ServerArgs,_super),ServerArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ServerArgs],"+_super.prototype.getTypeString.call(this)},ServerArgs}(fm.liveswitch.signalling.OutputArgs);signalling.ServerArgs=ServerArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ServerSubscribeArgs=function(_super){function ServerSubscribeArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ServerSubscribeArgs,_super),ServerSubscribeArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ServerSubscribeArgs],"+_super.prototype.getTypeString.call(this)},ServerSubscribeArgs.prototype.getChannel=function(){if(0==arguments.length)return fm.liveswitch.signalling.Extensible.sharedGetChannel(this.__channels);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerSubscribeArgs.prototype.getChannels=function(){if(0==arguments.length)return fm.liveswitch.signalling.Extensible.sharedGetChannels(this.__channels);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerSubscribeArgs.prototype.getOnReceive=function(){if(0==arguments.length)return this._onReceive;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerSubscribeArgs.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.nullCoalesce(fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName())),fm.liveswitch.StringExtensions.empty);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerSubscribeArgs.prototype.setOnReceive=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onReceive=value},ServerSubscribeArgs}(fm.liveswitch.signalling.SuccessArgs);signalling.ServerSubscribeArgs=ServerSubscribeArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ServerUnsubscribeArgs=function(_super){function ServerUnsubscribeArgs(){for(var __arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");return _super.call(this)||this}return __extends(ServerUnsubscribeArgs,_super),ServerUnsubscribeArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ServerUnsubscribeArgs],"+_super.prototype.getTypeString.call(this)},ServerUnsubscribeArgs.prototype.getChannel=function(){if(0==arguments.length)return fm.liveswitch.signalling.Extensible.sharedGetChannel(this.__channels);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerUnsubscribeArgs.prototype.getChannels=function(){if(0==arguments.length)return fm.liveswitch.signalling.Extensible.sharedGetChannels(this.__channels);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerUnsubscribeArgs.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.nullCoalesce(fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName())),fm.liveswitch.StringExtensions.empty);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServerUnsubscribeArgs}(fm.liveswitch.signalling.SuccessArgs);signalling.ServerUnsubscribeArgs=ServerUnsubscribeArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ServiceArgs=function(_super){function ServiceArgs(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else if(2==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isUint8Array(arguments[1]))){var channel=__arguments[0],dataBytes=__arguments[1];(__arguments=new Array(3))[0]=channel,__arguments[1]=dataBytes,__arguments[2]=null;var channel_3=__arguments[0],dataBytes_1=__arguments[1],tag=__arguments[2];(_this=_super.call(this)||this).setChannel(channel_3),_this.setDataBytes(dataBytes_1),_this.setTag(tag)}else if(3==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isUint8Array(arguments[1]))){channel=__arguments[0],dataBytes=__arguments[1],tag=__arguments[2];(_this=_super.call(this)||this).setChannel(channel),_this.setDataBytes(dataBytes),_this.setTag(tag)}else if(2==__arguments.length&&(fm.liveswitch.Util.isNullOrUndefined(arguments[1])||fm.liveswitch.Util.isString(arguments[1]))){channel=__arguments[0];var dataJson=__arguments[1];(__arguments=new Array(3))[0]=channel,__arguments[1]=dataJson,__arguments[2]=null;var channel_4=__arguments[0],dataJson_1=__arguments[1];tag=__arguments[2];(_this=_super.call(this)||this).setChannel(channel_4),_this.setDataJson(dataJson_1),_this.setTag(tag)}else{if(3!=__arguments.length||!fm.liveswitch.Util.isNullOrUndefined(arguments[1])&&!fm.liveswitch.Util.isString(arguments[1]))throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");channel=__arguments[0],dataJson=__arguments[1],tag=__arguments[2];(_this=_super.call(this)||this).setChannel(channel),_this.setDataJson(dataJson),_this.setTag(tag)}return _this}return __extends(ServiceArgs,_super),ServiceArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ServiceArgs],"+_super.prototype.getTypeString.call(this)},ServiceArgs.prototype.getChannel=function(){if(0==arguments.length)return this.__channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.getDataBytes=function(){if(0==arguments.length){var decoded=this.__dataBytes,valueJson=this.__dataJson;if(!fm.liveswitch.Global.equals(decoded,null))return decoded;if(!fm.liveswitch.Global.equals(valueJson,null)){var _var0=new fm.liveswitch.Holder(decoded),_var1=fm.liveswitch.Base64.tryDecode(fm.liveswitch.JsonSerializer.deserializeString(valueJson),_var0);return decoded=_var0.getValue(),_var1||(decoded=null),this.__dataBytes=decoded,decoded}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.getDataJson=function(){if(0==arguments.length){var str=this.__dataJson,b=this.__dataBytes;return fm.liveswitch.Global.equals(str,null)?fm.liveswitch.Global.equals(b,null)?null:(str=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.Base64.encode(b)),this.__dataJson=str,str):str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.getIsBinary=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataBytes(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.getOnFailure=function(){if(0==arguments.length)return this._onFailure;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.getOnSuccess=function(){if(0==arguments.length)return this._onSuccess;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.setChannel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var error=null,_var0=new fm.liveswitch.Holder(error),_var1=fm.liveswitch.signalling.Extensible.validateChannel(value,_var0);if(error=_var0.getValue(),!_var1)throw new fm.liveswitch.Exception(fm.liveswitch.StringExtensions.format("Invalid channel. {0}",error));this.__channel=value},ServiceArgs.prototype.setDataBytes=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__dataJson=null,this.__dataBytes=value},ServiceArgs.prototype.setDataJson=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(!fm.liveswitch.Global.equals(value,null)&&!fm.liveswitch.JsonSerializer.isValidJson(value))throw new fm.liveswitch.Exception("The value is not valid JSON.");this.__dataJson=value,this.__dataBytes=null},ServiceArgs.prototype.setOnFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onFailure=value},ServiceArgs.prototype.setOnSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._onSuccess=value},ServiceArgs.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");_super.prototype.setExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName(),fm.liveswitch.JsonSerializer.serializeString(value),!1)},ServiceArgs.prototype.getData=function(){if(0==arguments.length)return fm.liveswitch.Json.deserialize(this.getDataJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceArgs.prototype.setData=function(data){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");arguments[arguments.length-1]=fm.liveswitch.Json.serialize(arguments[arguments.length-1]),this.setDataJson.apply(this,arguments)},ServiceArgs}(fm.liveswitch.signalling.InputArgs);signalling.ServiceArgs=ServiceArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ServiceFailureArgs=function(_super){function ServiceFailureArgs(channel,dataJson,dataBytes){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var channel_5=__arguments[0],dataJson_2=__arguments[1],dataBytes_2=__arguments[2];return(_this=_super.call(this)||this).__channel=channel_5,_this.__dataJson=dataJson_2,_this.__dataBytes=dataBytes_2,_this}return __extends(ServiceFailureArgs,_super),ServiceFailureArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ServiceFailureArgs],"+_super.prototype.getTypeString.call(this)},ServiceFailureArgs.prototype.getChannel=function(){if(0==arguments.length)return this.__channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceFailureArgs.prototype.getDataBytes=function(){if(0==arguments.length){var decoded=this.__dataBytes,valueJson=this.__dataJson;if(!fm.liveswitch.Global.equals(decoded,null))return decoded;if(!fm.liveswitch.Global.equals(valueJson,null)){var _var0=new fm.liveswitch.Holder(decoded),_var1=fm.liveswitch.Base64.tryDecode(fm.liveswitch.JsonSerializer.deserializeString(valueJson),_var0);return decoded=_var0.getValue(),_var1||(decoded=null),this.__dataBytes=decoded,decoded}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceFailureArgs.prototype.getDataJson=function(){if(0==arguments.length){var str=this.__dataJson,b=this.__dataBytes;return fm.liveswitch.Global.equals(str,null)?fm.liveswitch.Global.equals(b,null)?null:(str=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.Base64.encode(b)),this.__dataJson=str,str):str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceFailureArgs.prototype.getIsBinary=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataBytes(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceFailureArgs.prototype.getSource=function(){if(0==arguments.length)return this._source;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceFailureArgs.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceFailureArgs.prototype.setSource=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._source=value},ServiceFailureArgs.prototype.getData=function(){if(0==arguments.length)return fm.liveswitch.Json.deserialize(this.getDataJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceFailureArgs}(fm.liveswitch.signalling.FailureArgs);signalling.ServiceFailureArgs=ServiceFailureArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var ServiceSuccessArgs=function(_super){function ServiceSuccessArgs(channel,dataJson,dataBytes){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(3!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var channel_6=__arguments[0],dataJson_3=__arguments[1],dataBytes_3=__arguments[2];return(_this=_super.call(this)||this).__channel=channel_6,_this.__dataJson=dataJson_3,_this.__dataBytes=dataBytes_3,_this}return __extends(ServiceSuccessArgs,_super),ServiceSuccessArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.ServiceSuccessArgs],"+_super.prototype.getTypeString.call(this)},ServiceSuccessArgs.prototype.getChannel=function(){if(0==arguments.length)return this.__channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceSuccessArgs.prototype.getDataBytes=function(){if(0==arguments.length){var decoded=this.__dataBytes,valueJson=this.__dataJson;if(!fm.liveswitch.Global.equals(decoded,null))return decoded;if(!fm.liveswitch.Global.equals(valueJson,null)){var _var0=new fm.liveswitch.Holder(decoded),_var1=fm.liveswitch.Base64.tryDecode(fm.liveswitch.JsonSerializer.deserializeString(valueJson),_var0);return decoded=_var0.getValue(),_var1||(decoded=null),this.__dataBytes=decoded,decoded}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceSuccessArgs.prototype.getDataJson=function(){if(0==arguments.length){var str=this.__dataJson,b=this.__dataBytes;return fm.liveswitch.Global.equals(str,null)?fm.liveswitch.Global.equals(b,null)?null:(str=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.Base64.encode(b)),this.__dataJson=str,str):str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceSuccessArgs.prototype.getIsBinary=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataBytes(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceSuccessArgs.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceSuccessArgs.prototype.getData=function(){if(0==arguments.length)return fm.liveswitch.Json.deserialize(this.getDataJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},ServiceSuccessArgs}(fm.liveswitch.signalling.SuccessArgs);signalling.ServiceSuccessArgs=ServiceSuccessArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var SubscribeReceiveArgs=function(_super){function SubscribeReceiveArgs(channel,dataJson,dataBytes,connectionType,reconnectAfter){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(5!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var channel_7=__arguments[0],dataJson_4=__arguments[1],dataBytes_4=__arguments[2],connectionType_2=__arguments[3],reconnectAfter_1=__arguments[4];return(_this=_super.call(this)||this).fmliveswitchsignallingSubscribeReceiveArgsInit(),_this.__channel=channel_7,_this.__dataJson=dataJson_4,_this.__dataBytes=dataBytes_4,_this.__connectionType=connectionType_2,_this.setReconnectAfter(reconnectAfter_1),_this}return __extends(SubscribeReceiveArgs,_super),SubscribeReceiveArgs.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.SubscribeReceiveArgs],"+_super.prototype.getTypeString.call(this)},SubscribeReceiveArgs.prototype.fmliveswitchsignallingSubscribeReceiveArgsInit=function(){this._reconnectAfter=0},SubscribeReceiveArgs.prototype.getChannel=function(){if(0==arguments.length)return this.__channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getConnectionType=function(){if(0==arguments.length)return this.__connectionType;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getDataBytes=function(){if(0==arguments.length){var decoded=this.__dataBytes,valueJson=this.__dataJson;if(!fm.liveswitch.Global.equals(decoded,null))return decoded;if(!fm.liveswitch.Global.equals(valueJson,null)){var _var0=new fm.liveswitch.Holder(decoded),_var1=fm.liveswitch.Base64.tryDecode(fm.liveswitch.JsonSerializer.deserializeString(valueJson),_var0);return decoded=_var0.getValue(),_var1||(decoded=null),this.__dataBytes=decoded,decoded}return null}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getDataJson=function(){if(0==arguments.length){var str=this.__dataJson,b=this.__dataBytes;return fm.liveswitch.Global.equals(str,null)?fm.liveswitch.Global.equals(b,null)?null:(str=fm.liveswitch.JsonSerializer.serializeString(fm.liveswitch.Base64.encode(b)),this.__dataJson=str,str):str}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getIsBinary=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getDataBytes(),null);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getReconnectAfter=function(){if(0==arguments.length)return this._reconnectAfter;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getRemoteClient=function(){if(0==arguments.length)return fm.liveswitch.signalling.RemoteClient.fromJson(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getRemoteClientExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.JsonSerializer.deserializeString(_super.prototype.getExtensionValueJson.call(this,fm.liveswitch.signalling.Extensible.getTagExtensionName()));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.getWasSentByMe=function(){if(0==arguments.length)return!fm.liveswitch.Global.equals(this.getRemoteClient(),null)&&!fm.liveswitch.Global.equals(_super.prototype.getClient.call(this),null)&&fm.liveswitch.Global.equals(this.getRemoteClient().getClientId(),_super.prototype.getClient.call(this).getClientId());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs.prototype.setReconnectAfter=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._reconnectAfter=fm.liveswitch.Global.toInt(value)},SubscribeReceiveArgs.prototype.getData=function(){if(0==arguments.length)return fm.liveswitch.Json.deserialize(this.getDataJson.apply(this,arguments));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},SubscribeReceiveArgs}(fm.liveswitch.signalling.SuccessArgs);signalling.SubscribeReceiveArgs=SubscribeReceiveArgs}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var Subscription=function(_super){function Subscription(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(1==__arguments.length){var channel=__arguments[0];(_this=_super.call(this)||this).setChannel(channel)}else{if(2!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");channel=__arguments[0];var tag=__arguments[1];(_this=_super.call(this)||this).setChannel(channel),_this.setTag(tag)}return _this}return __extends(Subscription,_super),Subscription.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.Subscription],"+_super.prototype.getTypeString.call(this)},Subscription.fromJson=function(subscriptionJson){if(1==arguments.length)return fm.liveswitch.JsonSerializer.deserializeObjectFast(subscriptionJson,(function(){return new fm.liveswitch.signalling.Subscription("/")}),(function(obj,name,valueJson){var str=name;fm.liveswitch.Global.equals(str,null)||(fm.liveswitch.Global.equals(str,"channel")?obj.setChannel(fm.liveswitch.JsonSerializer.deserializeString(valueJson)):fm.liveswitch.Global.equals(str,"tag")&&obj.setTag(fm.liveswitch.JsonSerializer.deserializeString(valueJson)))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription.fromJsonArray=function(subscriptionsJson){if(1==arguments.length){var list=fm.liveswitch.JsonSerializer.deserializeObjectArray(subscriptionsJson,fm.liveswitch.signalling.Subscription.fromJson.bind(fm.liveswitch.signalling.Subscription));return fm.liveswitch.Global.equals(list,null)?null:fm.liveswitch.ArrayExtensions.toArray(list)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription.toJson=function(subscription){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectFast(subscription,(function(obj,jsonObject){jsonObject.channel=fm.liveswitch.JsonSerializer.serializeString(obj.getChannel()),fm.liveswitch.Global.equals(subscription.getTag(),null)||(jsonObject.tag=fm.liveswitch.JsonSerializer.serializeString(obj.getTag()))}));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription.toJsonArray=function(subscriptions){if(1==arguments.length)return fm.liveswitch.JsonSerializer.serializeObjectArray(subscriptions,fm.liveswitch.signalling.Subscription.toJson.bind(fm.liveswitch.signalling.Subscription));throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription.prototype.duplicate=function(){if(0==arguments.length)return new fm.liveswitch.signalling.Subscription(this.getChannel(),this.getTag());throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription.prototype.getChannel=function(){if(0==arguments.length)return this.__channel;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription.prototype.getTag=function(){if(0==arguments.length)return fm.liveswitch.StringExtensions.nullCoalesce(this.__tag,fm.liveswitch.StringExtensions.empty);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription.prototype.setChannel=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");if(fm.liveswitch.Global.equals(value,null))throw new fm.liveswitch.Exception("channel cannot be null.");this.__channel=value,_super.prototype.setIsDirty.call(this,!0)},Subscription.prototype.setTag=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this.__tag=fm.liveswitch.StringExtensions.nullCoalesce(value,fm.liveswitch.StringExtensions.empty),_super.prototype.setIsDirty.call(this,!0)},Subscription.prototype.toJson=function(){if(0==arguments.length)return fm.liveswitch.signalling.Subscription.toJson(this);throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},Subscription}(fm.liveswitch.Dynamic);signalling.Subscription=Subscription}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(signalling){var WebSocketMessageTransfer=function(_super){function WebSocketMessageTransfer(){for(var _this=this,__arguments=new Array(arguments.length),__argumentIndex=0;__argumentIndex<__arguments.length;++__argumentIndex)__arguments[__argumentIndex]=arguments[__argumentIndex];if(0==__arguments.length)_this=_super.call(this)||this;else{if(1!=__arguments.length)throw new fm.liveswitch.Exception("Constructor overload does not exist with specified parameter count/type combination.");var url=__arguments[0];__arguments=new Array(0),(_this=_super.call(this)||this).setUrl(url),_this._webSocketTransfer=fm.liveswitch.WebSocketTransferFactory.getWebSocketTransfer(_this.getUrl())}return _this}return __extends(WebSocketMessageTransfer,_super),WebSocketMessageTransfer.prototype.getTypeString=function(){return"[fm.liveswitch.signalling.WebSocketMessageTransfer],"+_super.prototype.getTypeString.call(this)},WebSocketMessageTransfer.prototype.getHandshakeTimeout=function(){if(0==arguments.length)return this._webSocketTransfer.getHandshakeTimeout();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getOnOpenFailure=function(){if(0==arguments.length)return this._webSocketTransfer.getOnOpenFailure();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getOnOpenSuccess=function(){if(0==arguments.length)return this._webSocketTransfer.getOnOpenSuccess();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getOnRequestCreated=function(){if(0==arguments.length)return this._webSocketTransfer.getOnRequestCreated();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getOnResponseReceived=function(){if(0==arguments.length)return this._webSocketTransfer.getOnResponseReceived();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getOnStreamFailure=function(){if(0==arguments.length)return this._webSocketTransfer.getOnStreamFailure();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getSender=function(){if(0==arguments.length)return this._webSocketTransfer.getSender();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getStreamTimeout=function(){if(0==arguments.length)return this._webSocketTransfer.getHandshakeTimeout();throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.getUrl=function(){if(0==arguments.length)return this._url;throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.open=function(headers){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocketTransfer.open(headers)},WebSocketMessageTransfer.prototype.sendMessages=function(requestArgs){if(1==arguments.length){var args=_super.prototype.messageRequestArgsToHttpRequestArgs.call(this,requestArgs),httpResponseArgs=this._webSocketTransfer.send(args);return _super.prototype.httpResponseArgsToMessageResponseArgs.call(this,httpResponseArgs)}throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.")},WebSocketMessageTransfer.prototype.sendMessagesAsync=function(requestArgs,callback){var _this=this;if(2!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");var args=_super.prototype.messageRequestArgsToHttpRequestArgs.call(this,requestArgs);this._webSocketTransfer.sendAsync(args,(function(httpResponseArgs){var p=_this.httpResponseArgsToMessageResponseArgs(httpResponseArgs);callback(p)}))},WebSocketMessageTransfer.prototype.setHandshakeTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._webSocketTransfer.setHandshakeTimeout(value)},WebSocketMessageTransfer.prototype.setOnOpenFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocketTransfer.setOnOpenFailure(value)},WebSocketMessageTransfer.prototype.setOnOpenSuccess=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocketTransfer.setOnOpenSuccess(value)},WebSocketMessageTransfer.prototype.setOnRequestCreated=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocketTransfer.setOnRequestCreated(value)},WebSocketMessageTransfer.prototype.setOnResponseReceived=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocketTransfer.setOnResponseReceived(value)},WebSocketMessageTransfer.prototype.setOnStreamFailure=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocketTransfer.setOnStreamFailure(value)},WebSocketMessageTransfer.prototype.setSender=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._webSocketTransfer.setSender(value)},WebSocketMessageTransfer.prototype.setStreamTimeout=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");value=fm.liveswitch.Global.toInt(arguments[0]),this._webSocketTransfer.setHandshakeTimeout(value)},WebSocketMessageTransfer.prototype.setUrl=function(value){if(1!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");this._url=value},WebSocketMessageTransfer.prototype.shutdown=function(){if(0!=arguments.length)throw new fm.liveswitch.Exception("Method overload does not exist with specified parameter count/type combination.");try{this._webSocketTransfer.shutdown()}catch(exception1){}},WebSocketMessageTransfer}(fm.liveswitch.signalling.MessageTransfer);signalling.WebSocketMessageTransfer=WebSocketMessageTransfer}(liveswitch.signalling||(liveswitch.signalling={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){var ConnectionUtility=function(){function ConnectionUtility(){}return ConnectionUtility.prototype.getTypeString=function(){return"[fm.liveswitch.ConnectionUtility]"},ConnectionUtility.createConnection=function(sharedLock,type,audioStream,videoStream,dataStream){var streams=[];return null!=audioStream&&(type!=fm.liveswitch.ConnectionType.getSfu()&&type!=fm.liveswitch.ConnectionType.getMcu()||audioStream.setDiscardDtmfTones(!0),streams.push(audioStream)),null!=videoStream&&streams.push(videoStream),null!=dataStream&&streams.push(dataStream),new fm.liveswitch.Connection(streams)},ConnectionUtility}();liveswitch.ConnectionUtility=ConnectionUtility}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.Binary.fmliveswitchBinaryInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.Constants.fmliveswitchConstantsInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.DataBuffer.fmliveswitchDataBufferInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.UnixTimestamp.fmliveswitchUnixTimestampInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.HttpTransfer.fmliveswitchHttpTransferInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.JsonChecker.fmliveswitchJsonCheckerInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.LockedRandomizer.fmliveswitchLockedRandomizerInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.Log.fmliveswitchLogInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.LogConfiguration.fmliveswitchLogConfigurationInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.DataBufferPool.fmliveswitchDataBufferPoolInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.WebSocketBase.fmliveswitchWebSocketBaseInitialize()}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.sdp||(liveswitch.sdp={}),fm.liveswitch.sdp.Attribute.fmliveswitchsdpAttributeInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.EncodingInfo.fmliveswitchEncodingInfoInitialize()}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.sdp||(liveswitch.sdp={}),fm.liveswitch.sdp.Media.fmliveswitchsdpMediaInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){!function(sdp){sdp.rtp||(sdp.rtp={}),fm.liveswitch.sdp.rtp.MapAttribute.fmliveswitchsdprtpMapAttributeInitialize()}(liveswitch.sdp||(liveswitch.sdp={}))}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.VideoFormat.fmliveswitchVideoFormatInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.DataMessage.fmliveswitchDataMessageInitialize()}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.datamessageheader||(liveswitch.datamessageheader={}),fm.liveswitch.datamessageheader.DeliveryAttemptsElement.fmliveswitchdatamessageheaderDeliveryAttemptsElementInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.datamessageheader||(liveswitch.datamessageheader={}),fm.liveswitch.datamessageheader.ConnectionIdElement.fmliveswitchdatamessageheaderConnectionIdElementInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.datamessageheader||(liveswitch.datamessageheader={}),fm.liveswitch.datamessageheader.TimeToLiveElement.fmliveswitchdatamessageheaderTimeToLiveElementInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.datamessageheader||(liveswitch.datamessageheader={}),fm.liveswitch.datamessageheader.UnknownElement.fmliveswitchdatamessageheaderUnknownElementInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.WebRtcLocalMediaBase.fmliveswitchWebRtcLocalMediaBaseInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.VideoBuffer.fmliveswitchVideoBufferInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.Channel.fmliveswitchChannelInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.Client.fmliveswitchClientInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.ManagedConnection.fmliveswitchManagedConnectionInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.ServerConnection.fmliveswitchServerConnectionInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.PeerConnection.fmliveswitchPeerConnectionInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.SendQueue.fmliveswitchSendQueueInitialize()}(fm||(fm={})),function(fm){fm.liveswitch||(fm.liveswitch={}),fm.liveswitch.Token.fmliveswitchTokenInitialize()}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.signalling||(liveswitch.signalling={}),fm.liveswitch.signalling.ClientBase.fmliveswitchsignallingClientBaseInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.signalling||(liveswitch.signalling={}),fm.liveswitch.signalling.Client.fmliveswitchsignallingClientInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.signalling||(liveswitch.signalling={}),fm.liveswitch.signalling.Defaults.fmliveswitchsignallingDefaultsInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),function(fm){!function(liveswitch){liveswitch.signalling||(liveswitch.signalling={}),fm.liveswitch.signalling.Reserved.fmliveswitchsignallingReservedInitialize()}(fm.liveswitch||(fm.liveswitch={}))}(fm||(fm={})),fm.liveswitch}));